; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/mpqapi.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0O@NJFP@Video?5Player?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06EMML@Diablo?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HJML@MPQ?5free?5list?5error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@KDGC@Out?5of?5free?5block?5entries?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CP@GNPA@Hash?5collision?5between?5?$CC?$CFs?$CC?5and?5@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BOFB@Out?5of?5hash?5space?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@POLH@?$CIblock?5table?$CJ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JOBG@?$CIhash?5table?$CJ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT @mpqapi_set_hidden@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_store_creation_time@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_reg_load_modification_time@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_xor_buf@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_update_multi_creation_time@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_reg_store_modification_time@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_remove_hash_entry@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_free_block@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_new_block@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_get_hash_index_of_path@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_get_hash_index@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_remove_hash_entries@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_write_file@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_add_file@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_write_file_contents@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_find_free_block@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_rename@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_has_file@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_open_archive@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_parse_archive_header@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_close_archive@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_store_modified_time@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mpqapi_flush_and_close@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mpqapi_write_header
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mpqapi_write_block_table
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mpqapi_write_hash_table
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _mpqapi_can_seek
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_sghArchive
_DATA	SEGMENT
COMM	_mpq_buf:BYTE:01000H
COMM	_save_archive_modified:BYTE
COMM	_save_archive_open:BYTE
COMM	_sgdwMpqOffset:DWORD
COMM	_sgpHashTbl:DWORD
COMM	_sgpBlockTbl:DWORD
_sghArchive DD	0ffffffffH
_DATA	ENDS
PUBLIC	@mpqapi_set_hidden@8
EXTRN	__imp__GetLastError@0:NEAR
EXTRN	__imp__SetFileAttributesA@8:NEAR
EXTRN	__imp__GetFileAttributesA@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_set_hidden@8
_TEXT	SEGMENT
@mpqapi_set_hidden@8 PROC NEAR				; COMDAT
; _pszArchive$ = ecx
; _hidden$ = edx
; File Source/mpqapi.cpp
; Line 19
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, edx
; Line 23
	push	edi
	call	DWORD PTR __imp__GetFileAttributesA@4
; Line 24
	cmp	eax, -1
	jne	SHORT $L84995
; Line 25
	call	DWORD PTR __imp__GetLastError@0
	dec	eax
	dec	eax
	neg	eax
	sbb	eax, eax
	inc	eax
	jmp	SHORT $L84997
$L84995:
; Line 26
	neg	esi
	sbb	esi, esi
	and	esi, 6
; Line 27
	cmp	eax, esi
	jne	SHORT $L84996
; Line 28
	xor	eax, eax
	inc	eax
	jmp	SHORT $L84997
$L84996:
; Line 30
	push	esi
	push	edi
	call	DWORD PTR __imp__SetFileAttributesA@8
$L84997:
	pop	edi
	pop	esi
; Line 31
	ret	0
@mpqapi_set_hidden@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_store_creation_time@8
PUBLIC	@mpqapi_reg_load_modification_time@8
PUBLIC	@mpqapi_reg_store_modification_time@8
EXTRN	__imp__FindFirstFileA@8:NEAR
EXTRN	_gbMaxPlayers:BYTE
EXTRN	__imp__FindClose@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_store_creation_time@8
_TEXT	SEGMENT
_FindFileData$ = -480
_dst$ = -160
@mpqapi_store_creation_time@8 PROC NEAR			; COMDAT
; _pszArchive$ = ecx
; _dwChar$ = edx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 480				; 000001e0H
; Line 44
	cmp	BYTE PTR _gbMaxPlayers, 1
	push	ebx
	push	esi
	mov	esi, edx
	mov	ebx, ecx
	je	SHORT $L85011
; Line 45
	mov	edx, 160				; 000000a0H
	lea	ecx, DWORD PTR _dst$[ebp]
	call	@mpqapi_reg_load_modification_time@8
; Line 46
	lea	eax, DWORD PTR _FindFileData$[ebp]
	push	eax
	push	ebx
	call	DWORD PTR __imp__FindFirstFileA@8
; Line 47
	cmp	eax, -1
	je	SHORT $L85011
; Line 48
	push	eax
	call	DWORD PTR __imp__FindClose@4
; Line 50
	mov	ecx, DWORD PTR _FindFileData$[ebp+4]
; Line 52
	mov	edx, 160				; 000000a0H
	shl	esi, 4
	mov	eax, esi
	mov	DWORD PTR _dst$[ebp+eax], ecx
	mov	ecx, DWORD PTR _FindFileData$[ebp+8]
	mov	DWORD PTR _dst$[ebp+eax+4], ecx
	lea	ecx, DWORD PTR _dst$[ebp]
	call	@mpqapi_reg_store_modification_time@8
$L85011:
	pop	esi
	pop	ebx
; Line 55
	leave
	ret	0
@mpqapi_store_creation_time@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_xor_buf@4
PUBLIC	??_C@_0O@NJFP@Video?5Player?5?$AA@		; `string'
PUBLIC	??_C@_06EMML@Diablo?$AA@			; `string'
EXTRN	_SRegLoadData@24:NEAR
EXTRN	_memset:NEAR
;	COMDAT ??_C@_0O@NJFP@Video?5Player?5?$AA@
_DATA	SEGMENT
??_C@_0O@NJFP@Video?5Player?5?$AA@ DB 'Video Player ', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_06EMML@Diablo?$AA@
_DATA	SEGMENT
??_C@_06EMML@Diablo?$AA@ DB 'Diablo', 00H		; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @mpqapi_reg_load_modification_time@8
_TEXT	SEGMENT
_nbytes_read$ = -4
@mpqapi_reg_load_modification_time@8 PROC NEAR		; COMDAT
; _dst$ = ecx
; _size$ = edx
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, edx
	push	edi
	mov	edi, ecx
; Line 68
	push	esi
	push	0
	push	edi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 69
	lea	eax, DWORD PTR _nbytes_read$[ebp]
	push	eax
	push	esi
	push	edi
	push	0
	push	OFFSET FLAT:??_C@_0O@NJFP@Video?5Player?5?$AA@ ; `string'
	push	OFFSET FLAT:??_C@_06EMML@Diablo?$AA@	; `string'
	call	_SRegLoadData@24
	test	eax, eax
	je	SHORT $L85027
	cmp	DWORD PTR _nbytes_read$[ebp], esi
	jne	SHORT $L85027
; Line 71
	cmp	esi, 8
	jb	SHORT $L85033
; Line 72
	shr	esi, 3
$L85031:
; Line 74
	mov	ecx, edi
; Line 75
	add	edi, 8
; Line 76
	call	@mpqapi_xor_buf@4
; Line 77
	dec	esi
; Line 78
	jne	SHORT $L85031
$L85033:
; Line 80
	mov	al, 1
	jmp	SHORT $L85018
$L85027:
; Line 70
	xor	al, al
$L85018:
	pop	edi
	pop	esi
; Line 81
	leave
	ret	0
@mpqapi_reg_load_modification_time@8 ENDP
_TEXT	ENDS
EXTRN	__rotl:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_xor_buf@4
_TEXT	SEGMENT
@mpqapi_xor_buf@4 PROC NEAR				; COMDAT
; _pbData$ = ecx
; Line 84
	push	esi
	push	edi
; Line 89
	push	8
	mov	eax, 252141995				; 0f0761abH
; Line 90
	mov	esi, ecx
	pop	edi
$L85040:
; Line 93
	xor	BYTE PTR [esi], al
; Line 95
	push	1
	push	eax
	inc	esi
	call	__rotl
	pop	ecx
; Line 97
	dec	edi
	pop	ecx
	jne	SHORT $L85040
	pop	edi
	pop	esi
; Line 98
	ret	0
@mpqapi_xor_buf@4 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_update_multi_creation_time@4
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_update_multi_creation_time@4
_TEXT	SEGMENT
@mpqapi_update_multi_creation_time@4 PROC NEAR		; COMDAT
; _dwChar$ = ecx
; Line 102
	ret	0
@mpqapi_update_multi_creation_time@4 ENDP
_TEXT	ENDS
EXTRN	_SRegSaveData@20:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_reg_store_modification_time@8
_TEXT	SEGMENT
@mpqapi_reg_store_modification_time@8 PROC NEAR		; COMDAT
; _pbData$ = ecx
; _dwLen$ = edx
; Line 105
	push	ebx
	push	ebp
	mov	ebx, edx
	mov	ebp, ecx
	push	edi
; Line 115
	cmp	ebx, 8
	mov	edi, ebp
	jb	SHORT $L85061
	push	esi
; Line 116
	mov	esi, ebx
	shr	esi, 3
$L85059:
; Line 118
	mov	ecx, edi
; Line 119
	add	edi, 8
; Line 120
	call	@mpqapi_xor_buf@4
; Line 121
	dec	esi
; Line 122
	jne	SHORT $L85059
	pop	esi
$L85061:
; Line 124
	push	ebx
	push	ebp
	push	0
	push	OFFSET FLAT:??_C@_0O@NJFP@Video?5Player?5?$AA@ ; `string'
	push	OFFSET FLAT:??_C@_06EMML@Diablo?$AA@	; `string'
	call	_SRegSaveData@20
	pop	edi
	pop	ebp
	pop	ebx
; Line 125
	ret	0
@mpqapi_reg_store_modification_time@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_remove_hash_entry@4
PUBLIC	@mpqapi_free_block@8
PUBLIC	@mpqapi_get_hash_index_of_path@4
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_remove_hash_entry@4
_TEXT	SEGMENT
@mpqapi_remove_hash_entry@4 PROC NEAR			; COMDAT
; _pszName$ = ecx
; Line 135
	call	@mpqapi_get_hash_index_of_path@4
; Line 136
	cmp	eax, -1
	je	SHORT $L85071
; Line 137
	shl	eax, 4
	add	eax, DWORD PTR _sgpHashTbl
	push	esi
	push	edi
; Line 142
	push	16					; 00000010H
	mov	ecx, eax
	push	0
	mov	eax, DWORD PTR [ecx+12]
	shl	eax, 4
	add	eax, DWORD PTR _sgpBlockTbl
	mov	DWORD PTR [ecx+12], -2			; fffffffeH
	push	eax
	mov	esi, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+4]
	call	_memset
	add	esp, 12					; 0000000cH
; Line 143
	mov	edx, edi
	mov	ecx, esi
	call	@mpqapi_free_block@8
; Line 144
	mov	BYTE PTR _save_archive_modified, 1
	pop	edi
	pop	esi
$L85071:
; Line 146
	ret	0
@mpqapi_remove_hash_entry@4 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_new_block@4
PUBLIC	??_C@_0BE@HJML@MPQ?5free?5list?5error?$AA@	; `string'
EXTRN	_TermMsg:NEAR
;	COMDAT ??_C@_0BE@HJML@MPQ?5free?5list?5error?$AA@
_DATA	SEGMENT
??_C@_0BE@HJML@MPQ?5free?5list?5error?$AA@ DB 'MPQ free list error', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @mpqapi_free_block@8
_TEXT	SEGMENT
@mpqapi_free_block@8 PROC NEAR				; COMDAT
; _block_offset$ = ecx
; _block_size$ = edx
; Line 150
	push	ebx
	push	esi
	push	edi
; Line 160
	mov	esi, edx
; Line 161
	mov	edi, ecx
	xor	ebx, ebx
	push	ebp
$LABEL_2$85085:
; Line 163
	mov	eax, DWORD PTR _sgpBlockTbl
; Line 164
	mov	edx, 2048				; 00000800H
$L85087:
; Line 166
	mov	ecx, edx
	dec	edx
; Line 167
	cmp	ecx, ebx
	je	SHORT $L85488
; Line 169
	mov	ecx, DWORD PTR [eax]
; Line 170
	cmp	ecx, ebx
	je	SHORT $L85093
	cmp	DWORD PTR [eax+12], ebx
	jne	SHORT $L85093
	cmp	DWORD PTR [eax+8], ebx
	jne	SHORT $L85093
; Line 171
	mov	ebp, DWORD PTR [eax+4]
	add	ebp, ecx
	cmp	ebp, edi
	je	SHORT $L85489
; Line 178
	lea	ebp, DWORD PTR [edi+esi]
	cmp	ebp, ecx
	je	SHORT $LABEL_11$85092
$L85093:
; Line 181
	add	eax, 16					; 00000010H
; Line 182
	jmp	SHORT $L85087
$L85489:
; Line 172
	mov	edi, DWORD PTR [eax]
$LABEL_11$85092:
; Line 174
	add	esi, DWORD PTR [eax+4]
; Line 175
	push	16					; 00000010H
	push	ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 176
	jmp	SHORT $LABEL_2$85085
$L85488:
; Line 183
	mov	eax, DWORD PTR _sgdwMpqOffset
	lea	ebp, DWORD PTR [edi+esi]
	cmp	ebp, eax
	sete	cl
; Line 184
	cmp	ebp, eax
	jle	SHORT $L85094
; Line 185
	push	OFFSET FLAT:??_C@_0BE@HJML@MPQ?5free?5list?5error?$AA@ ; `string'
	call	_TermMsg
; Line 186
	cmp	ebp, DWORD PTR _sgdwMpqOffset
	pop	ecx
	sete	cl
$L85094:
; Line 188
	cmp	cl, bl
	pop	ebp
	je	SHORT $L85096
; Line 189
	mov	DWORD PTR _sgdwMpqOffset, edi
; Line 190
	jmp	SHORT $L85097
$L85096:
; Line 191
	xor	ecx, ecx
	call	@mpqapi_new_block@4
; Line 192
	mov	DWORD PTR [eax], edi
; Line 193
	mov	DWORD PTR [eax+4], esi
; Line 194
	mov	DWORD PTR [eax+8], ebx
; Line 195
	mov	DWORD PTR [eax+12], ebx
$L85097:
	pop	edi
	pop	esi
	pop	ebx
; Line 197
	ret	0
@mpqapi_free_block@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BK@KDGC@Out?5of?5free?5block?5entries?$AA@ ; `string'
;	COMDAT ??_C@_0BK@KDGC@Out?5of?5free?5block?5entries?$AA@
_DATA	SEGMENT
??_C@_0BK@KDGC@Out?5of?5free?5block?5entries?$AA@ DB 'Out of free block e'
	DB	'ntries', 00H				; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @mpqapi_new_block@4
_TEXT	SEGMENT
@mpqapi_new_block@4 PROC NEAR				; COMDAT
; _block_index$ = ecx
; Line 204
	mov	eax, DWORD PTR _sgpBlockTbl
; Line 205
	xor	edx, edx
$L85104:
; Line 206
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L85106
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $L85106
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L85106
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $L85105
$L85106:
; Line 207
	inc	edx
; Line 208
	add	eax, 16					; 00000010H
; Line 209
	cmp	edx, 2048				; 00000800H
	jb	SHORT $L85104
; Line 210
	push	OFFSET FLAT:??_C@_0BK@KDGC@Out?5of?5free?5block?5entries?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
; Line 211
	xor	eax, eax
$L85100:
; Line 217
	ret	0
$L85105:
; Line 214
	test	ecx, ecx
	je	SHORT $L85100
; Line 215
	mov	DWORD PTR [ecx], edx
; Line 217
	ret	0
@mpqapi_new_block@4 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_get_hash_index@16
EXTRN	@Hash@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_get_hash_index_of_path@4
_TEXT	SEGMENT
@mpqapi_get_hash_index_of_path@4 PROC NEAR		; COMDAT
; _pszName$ = ecx
; Line 220
	push	ebx
	push	esi
	push	edi
; Line 227
	push	2
	pop	edx
	mov	esi, ecx
	call	@Hash@8
; Line 228
	xor	edx, edx
	mov	ecx, esi
	inc	edx
	mov	edi, eax
	call	@Hash@8
; Line 229
	xor	edx, edx
	mov	ecx, esi
	mov	ebx, eax
	call	@Hash@8
; Line 230
	mov	edx, ebx
	mov	ecx, eax
	push	0
	push	edi
	call	@mpqapi_get_hash_index@16
	pop	edi
	pop	esi
	pop	ebx
; Line 231
	ret	0
@mpqapi_get_hash_index_of_path@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @mpqapi_get_hash_index@16
_TEXT	SEGMENT
_hash_a$ = -12
_hash_b$ = 8
_locale$ = 12
_v5$ = -4
_v6$ = -8
@mpqapi_get_hash_index@16 PROC NEAR			; COMDAT
; _index$ = ecx
; _hash_a$ = edx
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; Line 247
	mov	edi, DWORD PTR _sgpHashTbl
	mov	DWORD PTR _hash_a$[ebp], edx
	mov	ebx, 2047				; 000007ffH
	mov	DWORD PTR _v5$[ebp], 2048		; 00000800H
; Line 248
	jmp	SHORT $L85511
$L85133:
; Line 251
	mov	edx, DWORD PTR _v5$[ebp]
	dec	DWORD PTR _v5$[ebp]
; Line 252
	test	edx, edx
	mov	DWORD PTR _v6$[ebp], edx
	je	SHORT $L85506
; Line 254
	mov	edx, DWORD PTR _hash_a$[ebp]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $L85138
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _hash_b$[ebp]
	jne	SHORT $L85138
	mov	ecx, DWORD PTR [ecx+8]
	cmp	ecx, DWORD PTR _locale$[ebp]
	jne	SHORT $L85138
	cmp	esi, -2					; fffffffeH
	jne	SHORT $L85125
$L85138:
; Line 256
	lea	ecx, DWORD PTR [eax+1]
$L85511:
	and	ecx, ebx
	mov	eax, ecx
	shl	ecx, 4
	add	ecx, edi
	mov	esi, DWORD PTR [ecx+12]
	cmp	esi, -1
	jne	SHORT $L85133
$L85506:
; Line 253
	or	eax, -1
$L85125:
	pop	edi
	pop	esi
	pop	ebx
; Line 259
	leave
	ret	8
@mpqapi_get_hash_index@16 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_remove_hash_entries@4
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_remove_hash_entries@4
_TEXT	SEGMENT
_v5$ = -260
@mpqapi_remove_hash_entries@4 PROC NEAR			; COMDAT
; _fnGetName$ = ecx
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	esi
; Line 272
	lea	eax, DWORD PTR _v5$[ebp]
	push	edi
	xor	esi, esi
	push	eax
	mov	edi, ecx
	inc	esi
	push	0
	jmp	SHORT $L85517
$L85151:
; Line 273
	lea	ecx, DWORD PTR _v5$[ebp]
	call	@mpqapi_remove_hash_entry@4
	lea	ecx, DWORD PTR _v5$[ebp]
; Line 274
	mov	eax, esi
	push	ecx
	inc	esi
	push	eax
$L85517:
	call	edi
	test	eax, eax
	jne	SHORT $L85151
	pop	edi
	pop	esi
; Line 276
	leave
	ret	0
@mpqapi_remove_hash_entries@4 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_write_file@12
PUBLIC	@mpqapi_add_file@12
PUBLIC	@mpqapi_write_file_contents@16
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_write_file@12
_TEXT	SEGMENT
_dwLen$ = 8
@mpqapi_write_file@12 PROC NEAR				; COMDAT
; _pszName$ = ecx
; _pbData$ = edx
; Line 279
	push	esi
	push	edi
	mov	edi, edx
	mov	esi, ecx
; Line 286
	mov	BYTE PTR _save_archive_modified, 1
; Line 287
	call	@mpqapi_remove_hash_entry@4
; Line 288
	xor	edx, edx
	mov	ecx, esi
	push	0
	call	@mpqapi_add_file@12
; Line 289
	mov	edx, edi
	mov	ecx, esi
	push	eax
	push	DWORD PTR _dwLen$[esp+8]
	call	@mpqapi_write_file_contents@16
	test	al, al
	je	SHORT $L85164
; Line 290
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85160
$L85164:
; Line 291
	mov	ecx, esi
	call	@mpqapi_remove_hash_entry@4
; Line 292
	xor	eax, eax
$L85160:
	pop	edi
	pop	esi
; Line 293
	ret	4
@mpqapi_write_file@12 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CP@GNPA@Hash?5collision?5between?5?$CC?$CFs?$CC?5and?5@ ; `string'
PUBLIC	??_C@_0BC@BOFB@Out?5of?5hash?5space?$AA@	; `string'
;	COMDAT ??_C@_0CP@GNPA@Hash?5collision?5between?5?$CC?$CFs?$CC?5and?5@
_DATA	SEGMENT
??_C@_0CP@GNPA@Hash?5collision?5between?5?$CC?$CFs?$CC?5and?5@ DB 'Hash c'
	DB	'ollision between "%s" and existing file', 0aH, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BOFB@Out?5of?5hash?5space?$AA@
_DATA	SEGMENT
??_C@_0BC@BOFB@Out?5of?5hash?5space?$AA@ DB 'Out of hash space', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @mpqapi_add_file@12
_TEXT	SEGMENT
_pBlk$ = -8
_block_index$ = 8
_v11$ = -12
_v12$ = -4
@mpqapi_add_file@12 PROC NEAR				; COMDAT
; _pszName$ = ecx
; _pBlk$ = edx
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	DWORD PTR _pBlk$[ebp], edx
; Line 308
	mov	DWORD PTR _v12$[ebp], edx
	push	edi
; Line 310
	xor	edx, edx
	mov	edi, ecx
	call	@Hash@8
; Line 311
	xor	edx, edx
	mov	ecx, edi
	inc	edx
	mov	esi, eax
	call	@Hash@8
; Line 312
	mov	ecx, edi
	mov	ebx, eax
	push	2
	pop	edx
	call	@Hash@8
; Line 313
	mov	edx, ebx
	mov	ecx, esi
	push	0
	push	eax
	mov	DWORD PTR _v11$[ebp], eax
	call	@mpqapi_get_hash_index@16
	cmp	eax, -1
	je	SHORT $L85181
; Line 314
	push	edi
	push	OFFSET FLAT:??_C@_0CP@GNPA@Hash?5collision?5between?5?$CC?$CFs?$CC?5and?5@ ; `string'
	call	_TermMsg
	pop	ecx
	pop	ecx
$L85181:
; Line 316
	mov	eax, 2047				; 000007ffH
	mov	edx, 2048				; 00000800H
	and	esi, eax
$L85184:
; Line 319
	mov	edi, DWORD PTR _sgpHashTbl
	mov	ecx, esi
	shl	ecx, 4
	dec	edx
	mov	ecx, DWORD PTR [ecx+edi+12]
; Line 320
	cmp	ecx, -1
	je	SHORT $L85187
	cmp	ecx, -2					; fffffffeH
	je	SHORT $L85187
; Line 322
	inc	esi
	and	esi, eax
; Line 323
	test	edx, edx
	jne	SHORT $L85184
; Line 324
	or	edx, -1
$L85187:
; Line 328
	test	edx, edx
	jge	SHORT $L85189
; Line 329
	push	OFFSET FLAT:??_C@_0BC@BOFB@Out?5of?5hash?5space?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85189:
; Line 330
	cmp	DWORD PTR _pBlk$[ebp], 0
	jne	SHORT $L85191
; Line 331
	lea	ecx, DWORD PTR _block_index$[ebp]
	call	@mpqapi_new_block@4
	mov	DWORD PTR _v12$[ebp], eax
$L85191:
; Line 333
	mov	ecx, DWORD PTR _sgpHashTbl
; Line 334
	mov	edx, DWORD PTR _v11$[ebp]
	shl	esi, 4
	mov	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+ecx], ebx
	mov	ecx, DWORD PTR _sgpHashTbl
	pop	ebx
	mov	DWORD PTR [eax+ecx+4], edx
; Line 335
	mov	ecx, DWORD PTR _sgpHashTbl
	and	DWORD PTR [eax+ecx+8], 0
; Line 336
	mov	edx, DWORD PTR _sgpHashTbl
	mov	ecx, DWORD PTR _block_index$[ebp]
	mov	DWORD PTR [eax+edx+12], ecx
; Line 337
	mov	eax, DWORD PTR _v12$[ebp]
; Line 338
	leave
	ret	4
@mpqapi_add_file@12 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_find_free_block@8
EXTRN	@PkwareCompress@8:NEAR
EXTRN	__imp__WriteFile@20:NEAR
EXTRN	__imp__SetFilePointer@16:NEAR
EXTRN	@DiabloAllocPtr@4:NEAR
EXTRN	@mem_free_dbg@4:NEAR
EXTRN	_memcpy:NEAR
EXTRN	_strchr:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_write_file_contents@16
_TEXT	SEGMENT
_dwLen$ = 8
_pBlk$ = 12
_v8$ = -4
_v9$ = -24
_v17$ = -16
_v18$ = -12
_nNumberOfBytesToWrite$ = -8
@mpqapi_write_file_contents@16 PROC NEAR		; COMDAT
; _pszName$ = ecx
; _pbData$ = edx
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	esi, ecx
; Line 360
	push	58					; 0000003aH
	push	esi
	mov	DWORD PTR _v17$[ebp], edx
	call	_strchr
; Line 361
	xor	ebx, ebx
	jmp	SHORT $L85548
$L85217:
; Line 363
	lea	esi, DWORD PTR [eax+1]
; Line 364
	push	58					; 0000003aH
	push	esi
	call	_strchr
$L85548:
	pop	ecx
	test	eax, eax
	pop	ecx
	jne	SHORT $L85217
$L85220:
; Line 367
	push	92					; 0000005cH
	push	esi
	call	_strchr
	pop	ecx
; Line 368
	test	eax, eax
	pop	ecx
	je	SHORT $L85533
; Line 370
	lea	esi, DWORD PTR [eax+1]
; Line 366
	jmp	SHORT $L85220
$L85533:
; Line 372
	push	3
	mov	ecx, esi
	pop	edx
	call	@Hash@8
; Line 373
	mov	eax, DWORD PTR _dwLen$[ebp]
; Line 374
	mov	esi, DWORD PTR _pBlk$[ebp]
	mov	DWORD PTR _v8$[ebp], eax
	mov	DWORD PTR _v9$[ebp], esi
; Line 375
	lea	ecx, DWORD PTR [eax+4095]
; Line 377
	lea	edx, DWORD PTR [esi+4]
	shr	ecx, 12					; 0000000cH
	mov	DWORD PTR -20+[ebp], edx
	lea	edi, DWORD PTR [ecx*4+4]
	mov	DWORD PTR _nNumberOfBytesToWrite$[ebp], edi
	lea	ecx, DWORD PTR [edi+eax]
	call	@mpqapi_find_free_block@8
; Line 379
	mov	ecx, DWORD PTR _v8$[ebp]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+8], ecx
; Line 380
	mov	DWORD PTR [esi+12], -2147483392		; 80000100H
; Line 381
	xor	esi, esi
	push	esi
	push	esi
	push	eax
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
; Line 382
	je	$L85246
; Line 385
	cmp	DWORD PTR _v8$[ebp], esi
	mov	DWORD PTR _pBlk$[ebp], esi
	mov	DWORD PTR _v18$[ebp], esi
	je	$L85229
	mov	esi, OFFSET FLAT:_mpq_buf
$L85228:
; Line 386
	xor	eax, eax
$L85230:
; Line 388
	add	BYTE PTR _mpq_buf[eax], -86		; ffffffaaH
	inc	eax
; Line 389
	cmp	eax, 4096				; 00001000H
	jl	SHORT $L85230
; Line 390
	mov	ecx, DWORD PTR _v8$[ebp]
; Line 391
	mov	eax, 4096				; 00001000H
	cmp	ecx, eax
	mov	DWORD PTR _dwLen$[ebp], ecx
	jb	SHORT $L85233
; Line 392
	mov	DWORD PTR _dwLen$[ebp], eax
$L85233:
; Line 393
	push	DWORD PTR _dwLen$[ebp]
	push	DWORD PTR _v17$[ebp]
	push	esi
	call	_memcpy
; Line 394
	mov	edx, DWORD PTR _dwLen$[ebp]
	add	esp, 12					; 0000000cH
	add	DWORD PTR _v17$[ebp], edx
; Line 395
	mov	ecx, esi
	call	@PkwareCompress@8
; Line 396
	cmp	DWORD PTR _v18$[ebp], 0
	mov	DWORD PTR _dwLen$[ebp], eax
	jne	SHORT $L85234
; Line 398
	mov	ecx, edi
	mov	DWORD PTR _nNumberOfBytesToWrite$[ebp], edi
	call	@DiabloAllocPtr@4
	mov	DWORD PTR _pBlk$[ebp], eax
; Line 399
	push	DWORD PTR _nNumberOfBytesToWrite$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 400
	lea	eax, DWORD PTR _nNumberOfBytesToWrite$[ebp]
	push	0
	push	eax
	push	DWORD PTR _nNumberOfBytesToWrite$[ebp]
	push	DWORD PTR _pBlk$[ebp]
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	$LABEL_25$85237
; Line 402
	add	ebx, DWORD PTR _nNumberOfBytesToWrite$[ebp]
$L85234:
; Line 404
	mov	eax, DWORD PTR _pBlk$[ebp]
	mov	ecx, DWORD PTR _v18$[ebp]
; Line 405
	push	0
	mov	DWORD PTR [eax+ecx*4], ebx
	lea	eax, DWORD PTR _dwLen$[ebp]
	push	eax
	push	DWORD PTR _dwLen$[ebp]
	push	esi
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	$LABEL_25$85237
; Line 407
	inc	DWORD PTR _v18$[ebp]
; Line 408
	mov	eax, 4096				; 00001000H
	cmp	DWORD PTR _v8$[ebp], eax
	ja	SHORT $L85240
; Line 409
	and	DWORD PTR _v8$[ebp], 0
; Line 410
	jmp	SHORT $L85241
$L85240:
; Line 411
	sub	DWORD PTR _v8$[ebp], eax
$L85241:
; Line 412
	add	ebx, DWORD PTR _dwLen$[ebp]
	cmp	DWORD PTR _v8$[ebp], 0
	jne	$L85228
$L85229:
; Line 414
	mov	esi, DWORD PTR _pBlk$[ebp]
	mov	eax, DWORD PTR _v18$[ebp]
; Line 417
	mov	edi, DWORD PTR __imp__SetFilePointer@16
	push	1
	mov	DWORD PTR [esi+eax*4], ebx
	mov	eax, ebx
	neg	eax
	push	0
	push	eax
	push	DWORD PTR _sghArchive
	call	edi
	cmp	eax, -1
	je	SHORT $LABEL_25$85237
	lea	eax, DWORD PTR _nNumberOfBytesToWrite$[ebp]
	push	0
	push	eax
	push	DWORD PTR _nNumberOfBytesToWrite$[ebp]
	push	esi
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	SHORT $LABEL_25$85237
	mov	eax, ebx
	push	1
	sub	eax, DWORD PTR _nNumberOfBytesToWrite$[ebp]
	push	0
	push	eax
	push	DWORD PTR _sghArchive
	call	edi
	cmp	eax, -1
	je	SHORT $LABEL_25$85237
; Line 423
	mov	ecx, esi
	call	@mem_free_dbg@4
; Line 424
	mov	ecx, DWORD PTR -20+[ebp]
	mov	eax, DWORD PTR [ecx]
; Line 425
	cmp	ebx, eax
	jae	SHORT $L85248
; Line 426
	sub	eax, ebx
; Line 427
	cmp	eax, 1024				; 00000400H
	jb	SHORT $L85248
; Line 429
	mov	DWORD PTR [ecx], ebx
	mov	ecx, DWORD PTR _v9$[ebp]
; Line 430
	mov	edx, eax
	mov	ecx, DWORD PTR [ecx]
	add	ecx, ebx
	call	@mpqapi_free_block@8
$L85248:
; Line 433
	mov	al, 1
	jmp	SHORT $L85200
$LABEL_25$85237:
; Line 419
	mov	ecx, DWORD PTR _pBlk$[ebp]
	test	ecx, ecx
	je	SHORT $L85246
; Line 420
	call	@mem_free_dbg@4
$L85246:
; Line 421
	xor	al, al
$L85200:
	pop	edi
	pop	esi
	pop	ebx
; Line 434
	leave
	ret	8
@mpqapi_write_file_contents@16 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @mpqapi_find_free_block@8
_TEXT	SEGMENT
@mpqapi_find_free_block@8 PROC NEAR			; COMDAT
; _size$ = ecx
; _block_size$ = edx
; Line 444
	mov	eax, DWORD PTR _sgpBlockTbl
	push	esi
	mov	esi, ecx
; Line 445
	mov	ecx, 2048				; 00000800H
$L85260:
; Line 447
	dec	ecx
; Line 448
	cmp	DWORD PTR [eax], 0
	je	SHORT $L85264
; Line 449
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $L85264
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $L85264
	cmp	DWORD PTR [eax+4], esi
	jae	SHORT $L85261
$L85264:
; Line 452
	add	eax, 16					; 00000010H
; Line 453
	test	ecx, ecx
	jne	SHORT $L85260
; Line 454
	mov	DWORD PTR [edx], esi
; Line 455
	mov	eax, DWORD PTR _sgdwMpqOffset
; Line 456
	add	DWORD PTR _sgdwMpqOffset, esi
	pop	esi
; Line 468
	ret	0
$L85261:
	push	edi
; Line 460
	mov	edi, DWORD PTR [eax]
; Line 461
	mov	DWORD PTR [edx], esi
; Line 463
	mov	edx, DWORD PTR [eax+4]
	add	DWORD PTR [eax], esi
	cmp	edx, esi
	sete	cl
; Line 464
	sub	edx, esi
; Line 465
	test	cl, cl
	mov	DWORD PTR [eax+4], edx
	je	SHORT $L85266
; Line 466
	push	16					; 00000010H
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$L85266:
; Line 467
	mov	eax, edi
	pop	edi
	pop	esi
; Line 468
	ret	0
@mpqapi_find_free_block@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_rename@8
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_rename@8
_TEXT	SEGMENT
@mpqapi_rename@8 PROC NEAR				; COMDAT
; _pszOld$ = ecx
; _pszNew$ = edx
; Line 471
	push	esi
	mov	esi, edx
; Line 479
	call	@mpqapi_get_hash_index_of_path@4
; Line 480
	cmp	eax, -1
	je	SHORT $L85277
; Line 481
	shl	eax, 4
	add	eax, DWORD PTR _sgpHashTbl
; Line 482
	mov	ecx, DWORD PTR [eax+12]
; Line 483
	mov	edx, ecx
; Line 485
	push	ecx
	shl	edx, 4
	add	edx, DWORD PTR _sgpBlockTbl
	mov	ecx, esi
	mov	DWORD PTR [eax+12], -2			; fffffffeH
	call	@mpqapi_add_file@12
; Line 486
	mov	BYTE PTR _save_archive_modified, 1
$L85277:
	pop	esi
; Line 488
	ret	0
@mpqapi_rename@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_has_file@4
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_has_file@4
_TEXT	SEGMENT
@mpqapi_has_file@4 PROC NEAR				; COMDAT
; _pszName$ = ecx
; Line 493
	call	@mpqapi_get_hash_index_of_path@4
	xor	ecx, ecx
	cmp	eax, -1
	setne	cl
	mov	eax, ecx
; Line 494
	ret	0
@mpqapi_has_file@4 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_open_archive@12
PUBLIC	@mpqapi_parse_archive_header@8
PUBLIC	@mpqapi_close_archive@12
PUBLIC	??_C@_0O@POLH@?$CIblock?5table?$CJ?$AA@		; `string'
PUBLIC	??_C@_0N@JOBG@?$CIhash?5table?$CJ?$AA@		; `string'
EXTRN	@Decrypt@12:NEAR
EXTRN	_InitHash:NEAR
EXTRN	__imp__CreateFileA@28:NEAR
EXTRN	__imp__ReadFile@20:NEAR
;	COMDAT ??_C@_0O@POLH@?$CIblock?5table?$CJ?$AA@
_DATA	SEGMENT
??_C@_0O@POLH@?$CIblock?5table?$CJ?$AA@ DB '(block table)', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@JOBG@?$CIhash?5table?$CJ?$AA@
_DATA	SEGMENT
??_C@_0N@JOBG@?$CIhash?5table?$CJ?$AA@ DB '(hash table)', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @mpqapi_open_archive@12
_TEXT	SEGMENT
_pszArchive$ = -112
_dwChar$ = 8
_dwTemp$ = -108
_fhdr$ = -104
@mpqapi_open_archive@12 PROC NEAR			; COMDAT
; _pszArchive$ = ecx
; _hidden$ = edx
; Line 497
	sub	esp, 112				; 00000070H
	push	ebx
	push	ebp
	push	esi
	mov	ebp, ecx
	push	edi
	mov	esi, edx
	mov	DWORD PTR _pszArchive$[esp+128], ebp
; Line 510
	call	_InitHash
; Line 511
	mov	edx, esi
	mov	ecx, ebp
	call	@mpqapi_set_hidden@8
	test	eax, eax
; Line 512
	je	$L85566
; Line 513
	mov	al, 1
	cmp	al, BYTE PTR _gbMaxPlayers
	sbb	edi, edi
; Line 514
	xor	ebx, ebx
	and	edi, -2147483648			; 80000000H
; Line 515
	push	ebx
	push	edi
	push	3
	push	ebx
	push	ebx
	push	-1073741824				; c0000000H
	push	ebp
	mov	ebp, DWORD PTR __imp__CreateFileA@28
	mov	BYTE PTR _save_archive_open, bl
	call	ebp
; Line 516
	cmp	eax, -1
	mov	DWORD PTR _sghArchive, eax
	jne	SHORT $L85301
; Line 517
	neg	esi
	sbb	esi, esi
	push	ebx
	and	esi, 6
	or	esi, edi
	push	esi
	push	2
	push	ebx
	push	ebx
	push	-1073741824				; c0000000H
	push	DWORD PTR _pszArchive$[esp+152]
	call	ebp
; Line 518
	cmp	eax, -1
	mov	DWORD PTR _sghArchive, eax
; Line 519
	je	$L85566
; Line 520
	mov	BYTE PTR _save_archive_open, 1
; Line 521
	mov	BYTE PTR _save_archive_modified, 1
$L85301:
; Line 523
	cmp	DWORD PTR _sgpBlockTbl, ebx
	je	SHORT $L85307
	cmp	DWORD PTR _sgpHashTbl, ebx
	jne	$L85318
$L85307:
; Line 524
	push	104					; 00000068H
	lea	eax, DWORD PTR _fhdr$[esp+132]
	push	ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 525
	mov	edx, OFFSET FLAT:_sgdwMpqOffset
	lea	ecx, DWORD PTR _fhdr$[esp+128]
	call	@mpqapi_parse_archive_header@8
	test	al, al
	je	$LABEL_15$85309
; Line 530
	mov	esi, 32768				; 00008000H
	mov	ecx, esi
	call	@DiabloAllocPtr@4
	mov	DWORD PTR _sgpBlockTbl, eax
; Line 531
	push	esi
	push	ebx
	push	eax
	call	_memset
; Line 532
	mov	edi, DWORD PTR __imp__SetFilePointer@16
	mov	ebp, DWORD PTR __imp__ReadFile@20
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR _fhdr$[esp+156], ebx
	je	SHORT $L85311
; Line 534
	push	ebx
	push	ebx
	push	104					; 00000068H
	push	DWORD PTR _sghArchive
	call	edi
	cmp	eax, -1
	je	$LABEL_15$85309
	lea	eax, DWORD PTR _dwTemp$[esp+128]
	push	ebx
	push	eax
	push	esi
	push	DWORD PTR _sgpBlockTbl
	push	DWORD PTR _sghArchive
	call	ebp
	test	eax, eax
	je	$LABEL_15$85309
; Line 537
	push	3
	mov	ecx, OFFSET FLAT:??_C@_0O@POLH@?$CIblock?5table?$CJ?$AA@ ; `string'
	pop	edx
	call	@Hash@8
; Line 538
	mov	ecx, DWORD PTR _sgpBlockTbl
	mov	edx, esi
	push	eax
	call	@Decrypt@12
$L85311:
; Line 540
	mov	ecx, esi
	call	@DiabloAllocPtr@4
	mov	DWORD PTR _sgpHashTbl, eax
; Line 541
	push	esi
	push	255					; 000000ffH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 542
	cmp	DWORD PTR _fhdr$[esp+152], ebx
	je	SHORT $L85318
; Line 544
	push	ebx
	push	ebx
	push	32872					; 00008068H
	push	DWORD PTR _sghArchive
	call	edi
	cmp	eax, -1
	je	SHORT $LABEL_15$85309
	lea	eax, DWORD PTR _dwTemp$[esp+128]
	push	ebx
	push	eax
	push	esi
	push	DWORD PTR _sgpHashTbl
	push	DWORD PTR _sghArchive
	call	ebp
	test	eax, eax
	je	SHORT $LABEL_15$85309
; Line 547
	push	3
	mov	ecx, OFFSET FLAT:??_C@_0N@JOBG@?$CIhash?5table?$CJ?$AA@ ; `string'
	pop	edx
	call	@Hash@8
; Line 548
	mov	ecx, DWORD PTR _sgpHashTbl
	mov	edx, esi
	push	eax
	call	@Decrypt@12
$L85318:
; Line 551
	xor	eax, eax
	inc	eax
$L85287:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 552
	add	esp, 112				; 00000070H
	ret	4
$LABEL_15$85309:
; Line 527
	push	DWORD PTR _dwChar$[esp+124]
	mov	ecx, DWORD PTR _pszArchive$[esp+132]
	xor	edx, edx
	inc	edx
	call	@mpqapi_close_archive@12
$L85566:
; Line 528
	xor	eax, eax
	jmp	SHORT $L85287
@mpqapi_open_archive@12 ENDP
_TEXT	ENDS
EXTRN	__imp__GetFileSize@8:NEAR
EXTRN	__imp__SetEndOfFile@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_parse_archive_header@8
_TEXT	SEGMENT
_NumberOfBytesRead$ = -4
@mpqapi_parse_archive_header@8 PROC NEAR		; COMDAT
; _pHdr$ = ecx
; _pdwNextFileStart$ = edx
; Line 558
	push	ecx
	push	ebx
	push	ebp
	push	esi
; Line 567
	xor	ebp, ebp
	push	edi
	push	ebp
	push	DWORD PTR _sghArchive
	mov	ebx, edx
	mov	esi, ecx
	call	DWORD PTR __imp__GetFileSize@8
	mov	edi, eax
; Line 582
	cmp	edi, -1
	mov	DWORD PTR [ebx], edi
	je	SHORT $L85336
	cmp	edi, 104				; 00000068H
	jb	SHORT $L85336
	lea	eax, DWORD PTR _NumberOfBytesRead$[esp+20]
	push	ebp
	push	eax
	push	104					; 00000068H
	push	esi
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__ReadFile@20
	test	eax, eax
	je	SHORT $L85336
	cmp	DWORD PTR _NumberOfBytesRead$[esp+20], 104 ; 00000068H
	jne	SHORT $L85336
	cmp	DWORD PTR [esi], 441536589		; 1a51504dH
	jne	SHORT $L85336
	cmp	DWORD PTR [esi+4], 32			; 00000020H
	jne	SHORT $L85336
	cmp	WORD PTR [esi+12], bp
	ja	SHORT $L85336
	cmp	WORD PTR [esi+14], 3
	jne	SHORT $L85336
	cmp	DWORD PTR [esi+8], edi
	jne	SHORT $L85336
	cmp	DWORD PTR [esi+16], 32872		; 00008068H
	jne	SHORT $L85336
	cmp	DWORD PTR [esi+20], 104			; 00000068H
	jne	SHORT $L85336
	mov	eax, 2048				; 00000800H
	cmp	DWORD PTR [esi+24], eax
	jne	SHORT $L85336
	cmp	DWORD PTR [esi+28], eax
	je	SHORT $L85335
$L85336:
; Line 583
	push	ebp
	push	ebp
	push	ebp
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
	je	SHORT $L85339
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetEndOfFile@4
	test	eax, eax
	je	SHORT $L85339
; Line 585
	push	104					; 00000068H
	push	ebp
	push	esi
	call	_memset
; Line 586
	mov	DWORD PTR [esi], 441536589		; 1a51504dH
; Line 587
	mov	DWORD PTR [esi+4], 32			; 00000020H
; Line 588
	mov	WORD PTR [esi+14], 3
; Line 589
	mov	WORD PTR [esi+12], bp
; Line 590
	mov	DWORD PTR [ebx], 65640			; 00010068H
	add	esp, 12					; 0000000cH
; Line 591
	mov	BYTE PTR _save_archive_modified, 1
; Line 592
	mov	BYTE PTR _save_archive_open, 1
$L85335:
; Line 594
	mov	al, 1
	jmp	SHORT $L85328
$L85339:
; Line 584
	xor	al, al
$L85328:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 595
	pop	ecx
	ret	0
@mpqapi_parse_archive_header@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_store_modified_time@8
EXTRN	__imp__CloseHandle@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_close_archive@12
_TEXT	SEGMENT
_dwChar$ = 8
@mpqapi_close_archive@12 PROC NEAR			; COMDAT
; _pszArchive$ = ecx
; _bFree$ = edx
; Line 600
	push	ebx
; Line 606
	xor	ebx, ebx
	push	esi
	cmp	edx, ebx
	mov	esi, ecx
	je	SHORT $L85350
; Line 607
	mov	ecx, DWORD PTR _sgpBlockTbl
; Line 608
	mov	DWORD PTR _sgpBlockTbl, ebx
; Line 609
	call	@mem_free_dbg@4
; Line 610
	mov	ecx, DWORD PTR _sgpHashTbl
; Line 611
	mov	DWORD PTR _sgpHashTbl, ebx
; Line 612
	call	@mem_free_dbg@4
$L85350:
; Line 614
	mov	eax, DWORD PTR _sghArchive
	cmp	eax, -1
	je	SHORT $L85352
; Line 615
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 616
	or	DWORD PTR _sghArchive, -1
$L85352:
; Line 618
	cmp	BYTE PTR _save_archive_modified, bl
	je	SHORT $L85354
; Line 620
	mov	edx, DWORD PTR _dwChar$[esp+4]
	mov	ecx, esi
	mov	BYTE PTR _save_archive_modified, bl
	call	@mpqapi_store_modified_time@8
$L85354:
; Line 622
	cmp	BYTE PTR _save_archive_open, bl
	je	SHORT $L85355
; Line 624
	mov	edx, DWORD PTR _dwChar$[esp+4]
	mov	ecx, esi
	mov	BYTE PTR _save_archive_open, bl
	call	@mpqapi_store_creation_time@8
$L85355:
	pop	esi
	pop	ebx
; Line 626
	ret	4
@mpqapi_close_archive@12 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @mpqapi_store_modified_time@8
_TEXT	SEGMENT
_FindFileData$ = -480
_dst$ = -160
@mpqapi_store_modified_time@8 PROC NEAR			; COMDAT
; _pszArchive$ = ecx
; _dwChar$ = edx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 480				; 000001e0H
; Line 641
	cmp	BYTE PTR _gbMaxPlayers, 1
	push	ebx
	push	esi
	mov	esi, edx
	mov	ebx, ecx
	je	SHORT $L85369
; Line 642
	mov	edx, 160				; 000000a0H
	lea	ecx, DWORD PTR _dst$[ebp]
	call	@mpqapi_reg_load_modification_time@8
; Line 643
	lea	eax, DWORD PTR _FindFileData$[ebp]
	push	eax
	push	ebx
	call	DWORD PTR __imp__FindFirstFileA@8
; Line 644
	cmp	eax, -1
	je	SHORT $L85369
; Line 645
	push	eax
	call	DWORD PTR __imp__FindClose@4
; Line 647
	mov	ecx, DWORD PTR _FindFileData$[ebp+20]
; Line 649
	mov	edx, 160				; 000000a0H
	shl	esi, 4
	mov	eax, esi
	mov	DWORD PTR _dst$[ebp+eax+8], ecx
	mov	ecx, DWORD PTR _FindFileData$[ebp+24]
	mov	DWORD PTR _dst$[ebp+eax+12], ecx
	lea	ecx, DWORD PTR _dst$[ebp]
	call	@mpqapi_reg_store_modification_time@8
$L85369:
	pop	esi
	pop	ebx
; Line 652
	leave
	ret	0
@mpqapi_store_modified_time@8 ENDP
_TEXT	ENDS
PUBLIC	@mpqapi_flush_and_close@12
PUBLIC	_mpqapi_write_header
PUBLIC	_mpqapi_write_block_table
PUBLIC	_mpqapi_write_hash_table
PUBLIC	_mpqapi_can_seek
; Function compile flags: /Ogsy
;	COMDAT @mpqapi_flush_and_close@12
_TEXT	SEGMENT
_dwChar$ = 8
@mpqapi_flush_and_close@12 PROC NEAR			; COMDAT
; _pszArchive$ = ecx
; _bFree$ = edx
; Line 657
	cmp	DWORD PTR _sghArchive, -1
	push	esi
	push	edi
	mov	esi, edx
	mov	edi, ecx
	je	SHORT $L85384
; Line 658
	cmp	BYTE PTR _save_archive_modified, 0
	je	SHORT $L85384
; Line 659
	call	_mpqapi_can_seek
	test	al, al
	je	SHORT $L85384
; Line 660
	call	_mpqapi_write_header
	test	al, al
	je	SHORT $L85384
; Line 661
	call	_mpqapi_write_block_table
	test	al, al
	je	SHORT $L85384
; Line 662
	call	_mpqapi_write_hash_table
$L85384:
; Line 667
	push	DWORD PTR _dwChar$[esp+4]
	mov	edx, esi
	mov	ecx, edi
	call	@mpqapi_close_archive@12
	pop	edi
	pop	esi
; Line 668
	ret	4
@mpqapi_flush_and_close@12 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _mpqapi_write_header
_TEXT	SEGMENT
_fhdr$ = -108
_NumberOfBytesWritten$ = -4
_mpqapi_write_header PROC NEAR				; COMDAT
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
; Line 677
	push	104					; 00000068H
	xor	ebx, ebx
	pop	esi
	lea	eax, DWORD PTR _fhdr$[ebp]
	push	esi
	push	ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 678
	mov	DWORD PTR _fhdr$[ebp], 441536589	; 1a51504dH
; Line 679
	mov	DWORD PTR _fhdr$[ebp+4], 32		; 00000020H
; Line 680
	push	ebx
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__GetFileSize@8
; Line 687
	push	ebx
	push	ebx
	push	ebx
	mov	DWORD PTR _fhdr$[ebp+8], eax
	push	DWORD PTR _sghArchive
	mov	eax, 2048				; 00000800H
	mov	WORD PTR _fhdr$[ebp+12], bx
	mov	WORD PTR _fhdr$[ebp+14], 3
	mov	DWORD PTR _fhdr$[ebp+16], 32872		; 00008068H
	mov	DWORD PTR _fhdr$[ebp+20], esi
	mov	DWORD PTR _fhdr$[ebp+24], eax
	mov	DWORD PTR _fhdr$[ebp+28], eax
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
	je	SHORT $L85390
	lea	eax, DWORD PTR _NumberOfBytesWritten$[ebp]
	push	ebx
	push	eax
	lea	eax, DWORD PTR _fhdr$[ebp]
	push	esi
	push	eax
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	SHORT $L85390
; Line 688
	cmp	DWORD PTR _NumberOfBytesWritten$[ebp], esi
	sete	al
; Line 689
	jmp	SHORT $L85391
$L85390:
; Line 690
	xor	al, al
$L85391:
	pop	esi
	pop	ebx
; Line 692
	leave
	ret	0
_mpqapi_write_header ENDP
_TEXT	ENDS
EXTRN	@Encrypt@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT _mpqapi_write_block_table
_TEXT	SEGMENT
_NumberOfBytesWritten$ = -4
_mpqapi_write_block_table PROC NEAR			; COMDAT
; Line 695
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
; Line 701
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	104					; 00000068H
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
	jne	SHORT $L85398
; Line 702
	xor	al, al
	jmp	SHORT $L85392
$L85398:
	push	esi
	push	edi
; Line 703
	push	3
	mov	edi, OFFSET FLAT:??_C@_0O@POLH@?$CIblock?5table?$CJ?$AA@ ; `string'
	pop	edx
	mov	ecx, edi
	call	@Hash@8
; Line 704
	mov	ecx, DWORD PTR _sgpBlockTbl
	mov	esi, 32768				; 00008000H
	push	eax
	mov	edx, esi
	call	@Encrypt@12
; Line 705
	lea	eax, DWORD PTR _NumberOfBytesWritten$[ebp]
	push	ebx
	push	eax
	push	esi
	push	DWORD PTR _sgpBlockTbl
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__WriteFile@20
; Line 706
	push	3
	mov	ecx, edi
	pop	edx
	mov	ebx, eax
	call	@Hash@8
; Line 707
	mov	ecx, DWORD PTR _sgpBlockTbl
	push	eax
	mov	edx, esi
	call	@Decrypt@12
; Line 708
	test	ebx, ebx
	je	SHORT $L85583
	cmp	DWORD PTR _NumberOfBytesWritten$[ebp], esi
	jne	SHORT $L85583
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85584
$L85583:
	xor	eax, eax
$L85584:
	pop	edi
	pop	esi
$L85392:
	pop	ebx
; Line 709
	leave
	ret	0
_mpqapi_write_block_table ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _mpqapi_write_hash_table
_TEXT	SEGMENT
_NumberOfBytesWritten$ = -4
_mpqapi_write_hash_table PROC NEAR			; COMDAT
; Line 712
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
; Line 718
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	32872					; 00008068H
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
	jne	SHORT $L85405
; Line 719
	xor	al, al
	jmp	SHORT $L85399
$L85405:
	push	esi
	push	edi
; Line 720
	push	3
	mov	edi, OFFSET FLAT:??_C@_0N@JOBG@?$CIhash?5table?$CJ?$AA@ ; `string'
	pop	edx
	mov	ecx, edi
	call	@Hash@8
; Line 721
	mov	ecx, DWORD PTR _sgpHashTbl
	mov	esi, 32768				; 00008000H
	push	eax
	mov	edx, esi
	call	@Encrypt@12
; Line 722
	lea	eax, DWORD PTR _NumberOfBytesWritten$[ebp]
	push	ebx
	push	eax
	push	esi
	push	DWORD PTR _sgpHashTbl
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__WriteFile@20
; Line 723
	push	3
	mov	ecx, edi
	pop	edx
	mov	ebx, eax
	call	@Hash@8
; Line 724
	mov	ecx, DWORD PTR _sgpHashTbl
	push	eax
	mov	edx, esi
	call	@Decrypt@12
; Line 725
	test	ebx, ebx
	je	SHORT $L85587
	cmp	DWORD PTR _NumberOfBytesWritten$[ebp], esi
	jne	SHORT $L85587
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85588
$L85587:
	xor	eax, eax
$L85588:
	pop	edi
	pop	esi
$L85399:
	pop	ebx
; Line 726
	leave
	ret	0
_mpqapi_write_hash_table ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _mpqapi_can_seek
_TEXT	SEGMENT
_mpqapi_can_seek PROC NEAR				; COMDAT
; Line 732
	push	0
	push	0
	push	DWORD PTR _sgdwMpqOffset
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
	jne	SHORT $L85409
; Line 733
	xor	al, al
; Line 737
	ret	0
$L85409:
; Line 735
	push	DWORD PTR _sghArchive
	call	DWORD PTR __imp__SetEndOfFile@4
; Line 737
	ret	0
_mpqapi_can_seek ENDP
_TEXT	ENDS
END
