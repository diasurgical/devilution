; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/lighting.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@EAIB@PlrGFX?2Infra?4TRN?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NKDM@PlrGFX?2Stone?4TRN?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _qmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetLightFX@32
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DoLighting@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DoUnLight@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DoUnVision@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DoVision@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FreeLightTable
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitLightTable
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _MakeLightTable
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitLightMax
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitLighting
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddLight@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddUnLight@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ChangeLightRadius@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ChangeLightXY@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ChangeLightOff@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ChangeLight@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ProcessLightList
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SavePreLighting
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitVision
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddVision@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ChangeVisionRadius@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ChangeVisionXY@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ProcessVisionList
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _lighting_color_cycling
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_CrawlTable
PUBLIC	_pCrawlTable
PUBLIC	_vCrawlTable
PUBLIC	_byte_49463C
PUBLIC	_RadiusAdj
_DATA	SEGMENT
COMM	_VisionList:BYTE:0680H
COMM	_lightactive:BYTE:020H
COMM	_LightList:BYTE:0680H
COMM	_numlights:DWORD
COMM	_dung_map_radius:BYTE:0800H
COMM	_dovision:DWORD
COMM	_numvision:DWORD
COMM	_lightmax:BYTE
COMM	_dolighting:DWORD
COMM	_dung_map_rgba:BYTE:04000H
COMM	_visionid:DWORD
COMM	_pLightTbl:DWORD
COMM	_lightflag:DWORD
_CrawlTable DB	01H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	010H
	DB	00H
	DB	02H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	02H
	DB	01H
	DB	02H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	01H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	02H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	02H
	DB	00H
	DB	018H
	DB	00H
	DB	03H
	DB	00H
	DB	0fdH
	DB	0ffH
	DB	03H
	DB	01H
	DB	03H
	DB	0ffH
	DB	0fdH
	DB	01H
	DB	0fdH
	DB	0feH
	DB	03H
	DB	02H
	DB	03H
	DB	0feH
	DB	0fdH
	DB	02H
	DB	0fdH
	DB	0feH
	DB	02H
	DB	02H
	DB	02H
	DB	0feH
	DB	0feH
	DB	02H
	DB	0feH
	DB	0fdH
	DB	02H
	DB	03H
	DB	02H
	DB	0fdH
	DB	0feH
	DB	03H
	DB	0feH
	DB	0fdH
	DB	01H
	DB	03H
	DB	01H
	DB	0fdH
	DB	0ffH
	DB	03H
	DB	0ffH
	DB	0fdH
	DB	00H
	DB	03H
	DB	00H
	DB	020H
	DB	00H
	DB	04H
	DB	00H
	DB	0fcH
	DB	0ffH
	DB	04H
	DB	01H
	DB	04H
	DB	0ffH
	DB	0fcH
	DB	01H
	DB	0fcH
	DB	0feH
	DB	04H
	DB	02H
	DB	04H
	DB	0feH
	DB	0fcH
	DB	02H
	DB	0fcH
	DB	0fdH
	DB	04H
	DB	03H
	DB	04H
	DB	0fdH
	DB	0fcH
	DB	03H
	DB	0fcH
	DB	0fdH
	DB	03H
	DB	03H
	DB	03H
	DB	0fdH
	DB	0fdH
	DB	03H
	DB	0fdH
	DB	0fcH
	DB	03H
	DB	04H
	DB	03H
	DB	0fcH
	DB	0fdH
	DB	04H
	DB	0fdH
	DB	0fcH
	DB	02H
	DB	04H
	DB	02H
	DB	0fcH
	DB	0feH
	DB	04H
	DB	0feH
	DB	0fcH
	DB	01H
	DB	04H
	DB	01H
	DB	0fcH
	DB	0ffH
	DB	04H
	DB	0ffH
	DB	0fcH
	DB	00H
	DB	04H
	DB	00H
	DB	028H
	DB	00H
	DB	05H
	DB	00H
	DB	0fbH
	DB	0ffH
	DB	05H
	DB	01H
	DB	05H
	DB	0ffH
	DB	0fbH
	DB	01H
	DB	0fbH
	DB	0feH
	DB	05H
	DB	02H
	DB	05H
	DB	0feH
	DB	0fbH
	DB	02H
	DB	0fbH
	DB	0fdH
	DB	05H
	DB	03H
	DB	05H
	DB	0fdH
	DB	0fbH
	DB	03H
	DB	0fbH
	DB	0fcH
	DB	05H
	DB	04H
	DB	05H
	DB	0fcH
	DB	0fbH
	DB	04H
	DB	0fbH
	DB	0fcH
	DB	04H
	DB	04H
	DB	04H
	DB	0fcH
	DB	0fcH
	DB	04H
	DB	0fcH
	DB	0fbH
	DB	04H
	DB	05H
	DB	04H
	DB	0fbH
	DB	0fcH
	DB	05H
	DB	0fcH
	DB	0fbH
	DB	03H
	DB	05H
	DB	03H
	DB	0fbH
	DB	0fdH
	DB	05H
	DB	0fdH
	DB	0fbH
	DB	02H
	DB	05H
	DB	02H
	DB	0fbH
	DB	0feH
	DB	05H
	DB	0feH
	DB	0fbH
	DB	01H
	DB	05H
	DB	01H
	DB	0fbH
	DB	0ffH
	DB	05H
	DB	0ffH
	DB	0fbH
	DB	00H
	DB	05H
	DB	00H
	DB	030H
	DB	00H
	DB	06H
	DB	00H
	DB	0faH
	DB	0ffH
	DB	06H
	DB	01H
	DB	06H
	DB	0ffH
	DB	0faH
	DB	01H
	DB	0faH
	DB	0feH
	DB	06H
	DB	02H
	DB	06H
	DB	0feH
	DB	0faH
	DB	02H
	DB	0faH
	DB	0fdH
	DB	06H
	DB	03H
	DB	06H
	DB	0fdH
	DB	0faH
	DB	03H
	DB	0faH
	DB	0fcH
	DB	06H
	DB	04H
	DB	06H
	DB	0fcH
	DB	0faH
	DB	04H
	DB	0faH
	DB	0fbH
	DB	06H
	DB	05H
	DB	06H
	DB	0fbH
	DB	0faH
	DB	05H
	DB	0faH
	DB	0fbH
	DB	05H
	DB	05H
	DB	05H
	DB	0fbH
	DB	0fbH
	DB	05H
	DB	0fbH
	DB	0faH
	DB	05H
	DB	06H
	DB	05H
	DB	0faH
	DB	0fbH
	DB	06H
	DB	0fbH
	DB	0faH
	DB	04H
	DB	06H
	DB	04H
	DB	0faH
	DB	0fcH
	DB	06H
	DB	0fcH
	DB	0faH
	DB	03H
	DB	06H
	DB	03H
	DB	0faH
	DB	0fdH
	DB	06H
	DB	0fdH
	DB	0faH
	DB	02H
	DB	06H
	DB	02H
	DB	0faH
	DB	0feH
	DB	06H
	DB	0feH
	DB	0faH
	DB	01H
	DB	06H
	DB	01H
	DB	0faH
	DB	0ffH
	DB	06H
	DB	0ffH
	DB	0faH
	DB	00H
	DB	06H
	DB	00H
	DB	038H
	DB	00H
	DB	07H
	DB	00H
	DB	0f9H
	DB	0ffH
	DB	07H
	DB	01H
	DB	07H
	DB	0ffH
	DB	0f9H
	DB	01H
	DB	0f9H
	DB	0feH
	DB	07H
	DB	02H
	DB	07H
	DB	0feH
	DB	0f9H
	DB	02H
	DB	0f9H
	DB	0fdH
	DB	07H
	DB	03H
	DB	07H
	DB	0fdH
	DB	0f9H
	DB	03H
	DB	0f9H
	DB	0fcH
	DB	07H
	DB	04H
	DB	07H
	DB	0fcH
	DB	0f9H
	DB	04H
	DB	0f9H
	DB	0fbH
	DB	07H
	DB	05H
	DB	07H
	DB	0fbH
	DB	0f9H
	DB	05H
	DB	0f9H
	DB	0faH
	DB	07H
	DB	06H
	DB	07H
	DB	0faH
	DB	0f9H
	DB	06H
	DB	0f9H
	DB	0faH
	DB	06H
	DB	06H
	DB	06H
	DB	0faH
	DB	0faH
	DB	06H
	DB	0faH
	DB	0f9H
	DB	06H
	DB	07H
	DB	06H
	DB	0f9H
	DB	0faH
	DB	07H
	DB	0faH
	DB	0f9H
	DB	05H
	DB	07H
	DB	05H
	DB	0f9H
	DB	0fbH
	DB	07H
	DB	0fbH
	DB	0f9H
	DB	04H
	DB	07H
	DB	04H
	DB	0f9H
	DB	0fcH
	DB	07H
	DB	0fcH
	DB	0f9H
	DB	03H
	DB	07H
	DB	03H
	DB	0f9H
	DB	0fdH
	DB	07H
	DB	0fdH
	DB	0f9H
	DB	02H
	DB	07H
	DB	02H
	DB	0f9H
	DB	0feH
	DB	07H
	DB	0feH
	DB	0f9H
	DB	01H
	DB	07H
	DB	01H
	DB	0f9H
	DB	0ffH
	DB	07H
	DB	0ffH
	DB	0f9H
	DB	00H
	DB	07H
	DB	00H
	DB	040H
	DB	00H
	DB	08H
	DB	00H
	DB	0f8H
	DB	0ffH
	DB	08H
	DB	01H
	DB	08H
	DB	0ffH
	DB	0f8H
	DB	01H
	DB	0f8H
	DB	0feH
	DB	08H
	DB	02H
	DB	08H
	DB	0feH
	DB	0f8H
	DB	02H
	DB	0f8H
	DB	0fdH
	DB	08H
	DB	03H
	DB	08H
	DB	0fdH
	DB	0f8H
	DB	03H
	DB	0f8H
	DB	0fcH
	DB	08H
	DB	04H
	DB	08H
	DB	0fcH
	DB	0f8H
	DB	04H
	DB	0f8H
	DB	0fbH
	DB	08H
	DB	05H
	DB	08H
	DB	0fbH
	DB	0f8H
	DB	05H
	DB	0f8H
	DB	0faH
	DB	08H
	DB	06H
	DB	08H
	DB	0faH
	DB	0f8H
	DB	06H
	DB	0f8H
	DB	0f9H
	DB	08H
	DB	07H
	DB	08H
	DB	0f9H
	DB	0f8H
	DB	07H
	DB	0f8H
	DB	0f9H
	DB	07H
	DB	07H
	DB	07H
	DB	0f9H
	DB	0f9H
	DB	07H
	DB	0f9H
	DB	0f8H
	DB	07H
	DB	08H
	DB	07H
	DB	0f8H
	DB	0f9H
	DB	08H
	DB	0f9H
	DB	0f8H
	DB	06H
	DB	08H
	DB	06H
	DB	0f8H
	DB	0faH
	DB	08H
	DB	0faH
	DB	0f8H
	DB	05H
	DB	08H
	DB	05H
	DB	0f8H
	DB	0fbH
	DB	08H
	DB	0fbH
	DB	0f8H
	DB	04H
	DB	08H
	DB	04H
	DB	0f8H
	DB	0fcH
	DB	08H
	DB	0fcH
	DB	0f8H
	DB	03H
	DB	08H
	DB	03H
	DB	0f8H
	DB	0fdH
	DB	08H
	DB	0fdH
	DB	0f8H
	DB	02H
	DB	08H
	DB	02H
	DB	0f8H
	DB	0feH
	DB	08H
	DB	0feH
	DB	0f8H
	DB	01H
	DB	08H
	DB	01H
	DB	0f8H
	DB	0ffH
	DB	08H
	DB	0ffH
	DB	0f8H
	DB	00H
	DB	08H
	DB	00H
	DB	048H
	DB	00H
	DB	09H
	DB	00H
	DB	0f7H
	DB	0ffH
	DB	09H
	DB	01H
	DB	09H
	DB	0ffH
	DB	0f7H
	DB	01H
	DB	0f7H
	DB	0feH
	DB	09H
	DB	02H
	DB	09H
	DB	0feH
	DB	0f7H
	DB	02H
	DB	0f7H
	DB	0fdH
	DB	09H
	DB	03H
	DB	09H
	DB	0fdH
	DB	0f7H
	DB	03H
	DB	0f7H
	DB	0fcH
	DB	09H
	DB	04H
	DB	09H
	DB	0fcH
	DB	0f7H
	DB	04H
	DB	0f7H
	DB	0fbH
	DB	09H
	DB	05H
	DB	09H
	DB	0fbH
	DB	0f7H
	DB	05H
	DB	0f7H
	DB	0faH
	DB	09H
	DB	06H
	DB	09H
	DB	0faH
	DB	0f7H
	DB	06H
	DB	0f7H
	DB	0f9H
	DB	09H
	DB	07H
	DB	09H
	DB	0f9H
	DB	0f7H
	DB	07H
	DB	0f7H
	DB	0f8H
	DB	09H
	DB	08H
	DB	09H
	DB	0f8H
	DB	0f7H
	DB	08H
	DB	0f7H
	DB	0f8H
	DB	08H
	DB	08H
	DB	08H
	DB	0f8H
	DB	0f8H
	DB	08H
	DB	0f8H
	DB	0f7H
	DB	08H
	DB	09H
	DB	08H
	DB	0f7H
	DB	0f8H
	DB	09H
	DB	0f8H
	DB	0f7H
	DB	07H
	DB	09H
	DB	07H
	DB	0f7H
	DB	0f9H
	DB	09H
	DB	0f9H
	DB	0f7H
	DB	06H
	DB	09H
	DB	06H
	DB	0f7H
	DB	0faH
	DB	09H
	DB	0faH
	DB	0f7H
	DB	05H
	DB	09H
	DB	05H
	DB	0f7H
	DB	0fbH
	DB	09H
	DB	0fbH
	DB	0f7H
	DB	04H
	DB	09H
	DB	04H
	DB	0f7H
	DB	0fcH
	DB	09H
	DB	0fcH
	DB	0f7H
	DB	03H
	DB	09H
	DB	03H
	DB	0f7H
	DB	0fdH
	DB	09H
	DB	0fdH
	DB	0f7H
	DB	02H
	DB	09H
	DB	02H
	DB	0f7H
	DB	0feH
	DB	09H
	DB	0feH
	DB	0f7H
	DB	01H
	DB	09H
	DB	01H
	DB	0f7H
	DB	0ffH
	DB	09H
	DB	0ffH
	DB	0f7H
	DB	00H
	DB	09H
	DB	00H
	DB	050H
	DB	00H
	DB	0aH
	DB	00H
	DB	0f6H
	DB	0ffH
	DB	0aH
	DB	01H
	DB	0aH
	DB	0ffH
	DB	0f6H
	DB	01H
	DB	0f6H
	DB	0feH
	DB	0aH
	DB	02H
	DB	0aH
	DB	0feH
	DB	0f6H
	DB	02H
	DB	0f6H
	DB	0fdH
	DB	0aH
	DB	03H
	DB	0aH
	DB	0fdH
	DB	0f6H
	DB	03H
	DB	0f6H
	DB	0fcH
	DB	0aH
	DB	04H
	DB	0aH
	DB	0fcH
	DB	0f6H
	DB	04H
	DB	0f6H
	DB	0fbH
	DB	0aH
	DB	05H
	DB	0aH
	DB	0fbH
	DB	0f6H
	DB	05H
	DB	0f6H
	DB	0faH
	DB	0aH
	DB	06H
	DB	0aH
	DB	0faH
	DB	0f6H
	DB	06H
	DB	0f6H
	DB	0f9H
	DB	0aH
	DB	07H
	DB	0aH
	DB	0f9H
	DB	0f6H
	DB	07H
	DB	0f6H
	DB	0f8H
	DB	0aH
	DB	08H
	DB	0aH
	DB	0f8H
	DB	0f6H
	DB	08H
	DB	0f6H
	DB	0f7H
	DB	0aH
	DB	09H
	DB	0aH
	DB	0f7H
	DB	0f6H
	DB	09H
	DB	0f6H
	DB	0f7H
	DB	09H
	DB	09H
	DB	09H
	DB	0f7H
	DB	0f7H
	DB	09H
	DB	0f7H
	DB	0f6H
	DB	09H
	DB	0aH
	DB	09H
	DB	0f6H
	DB	0f7H
	DB	0aH
	DB	0f7H
	DB	0f6H
	DB	08H
	DB	0aH
	DB	08H
	DB	0f6H
	DB	0f8H
	DB	0aH
	DB	0f8H
	DB	0f6H
	DB	07H
	DB	0aH
	DB	07H
	DB	0f6H
	DB	0f9H
	DB	0aH
	DB	0f9H
	DB	0f6H
	DB	06H
	DB	0aH
	DB	06H
	DB	0f6H
	DB	0faH
	DB	0aH
	DB	0faH
	DB	0f6H
	DB	05H
	DB	0aH
	DB	05H
	DB	0f6H
	DB	0fbH
	DB	0aH
	DB	0fbH
	DB	0f6H
	DB	04H
	DB	0aH
	DB	04H
	DB	0f6H
	DB	0fcH
	DB	0aH
	DB	0fcH
	DB	0f6H
	DB	03H
	DB	0aH
	DB	03H
	DB	0f6H
	DB	0fdH
	DB	0aH
	DB	0fdH
	DB	0f6H
	DB	02H
	DB	0aH
	DB	02H
	DB	0f6H
	DB	0feH
	DB	0aH
	DB	0feH
	DB	0f6H
	DB	01H
	DB	0aH
	DB	01H
	DB	0f6H
	DB	0ffH
	DB	0aH
	DB	0ffH
	DB	0f6H
	DB	00H
	DB	0aH
	DB	00H
	DB	058H
	DB	00H
	DB	0bH
	DB	00H
	DB	0f5H
	DB	0ffH
	DB	0bH
	DB	01H
	DB	0bH
	DB	0ffH
	DB	0f5H
	DB	01H
	DB	0f5H
	DB	0feH
	DB	0bH
	DB	02H
	DB	0bH
	DB	0feH
	DB	0f5H
	DB	02H
	DB	0f5H
	DB	0fdH
	DB	0bH
	DB	03H
	DB	0bH
	DB	0fdH
	DB	0f5H
	DB	03H
	DB	0f5H
	DB	0fcH
	DB	0bH
	DB	04H
	DB	0bH
	DB	0fcH
	DB	0f5H
	DB	04H
	DB	0f5H
	DB	0fbH
	DB	0bH
	DB	05H
	DB	0bH
	DB	0fbH
	DB	0f5H
	DB	05H
	DB	0f5H
	DB	0faH
	DB	0bH
	DB	06H
	DB	0bH
	DB	0faH
	DB	0f5H
	DB	06H
	DB	0f5H
	DB	0f9H
	DB	0bH
	DB	07H
	DB	0bH
	DB	0f9H
	DB	0f5H
	DB	07H
	DB	0f5H
	DB	0f8H
	DB	0bH
	DB	08H
	DB	0bH
	DB	0f8H
	DB	0f5H
	DB	08H
	DB	0f5H
	DB	0f7H
	DB	0bH
	DB	09H
	DB	0bH
	DB	0f7H
	DB	0f5H
	DB	09H
	DB	0f5H
	DB	0f6H
	DB	0bH
	DB	0aH
	DB	0bH
	DB	0f6H
	DB	0f5H
	DB	0aH
	DB	0f5H
	DB	0f6H
	DB	0aH
	DB	0aH
	DB	0aH
	DB	0f6H
	DB	0f6H
	DB	0aH
	DB	0f6H
	DB	0f5H
	DB	0aH
	DB	0bH
	DB	0aH
	DB	0f5H
	DB	0f6H
	DB	0bH
	DB	0f6H
	DB	0f5H
	DB	09H
	DB	0bH
	DB	09H
	DB	0f5H
	DB	0f7H
	DB	0bH
	DB	0f7H
	DB	0f5H
	DB	08H
	DB	0bH
	DB	08H
	DB	0f5H
	DB	0f8H
	DB	0bH
	DB	0f8H
	DB	0f5H
	DB	07H
	DB	0bH
	DB	07H
	DB	0f5H
	DB	0f9H
	DB	0bH
	DB	0f9H
	DB	0f5H
	DB	06H
	DB	0bH
	DB	06H
	DB	0f5H
	DB	0faH
	DB	0bH
	DB	0faH
	DB	0f5H
	DB	05H
	DB	0bH
	DB	05H
	DB	0f5H
	DB	0fbH
	DB	0bH
	DB	0fbH
	DB	0f5H
	DB	04H
	DB	0bH
	DB	04H
	DB	0f5H
	DB	0fcH
	DB	0bH
	DB	0fcH
	DB	0f5H
	DB	03H
	DB	0bH
	DB	03H
	DB	0f5H
	DB	0fdH
	DB	0bH
	DB	0fdH
	DB	0f5H
	DB	02H
	DB	0bH
	DB	02H
	DB	0f5H
	DB	0feH
	DB	0bH
	DB	0feH
	DB	0f5H
	DB	01H
	DB	0bH
	DB	01H
	DB	0f5H
	DB	0ffH
	DB	0bH
	DB	0ffH
	DB	0f5H
	DB	00H
	DB	0bH
	DB	00H
	DB	060H
	DB	00H
	DB	0cH
	DB	00H
	DB	0f4H
	DB	0ffH
	DB	0cH
	DB	01H
	DB	0cH
	DB	0ffH
	DB	0f4H
	DB	01H
	DB	0f4H
	DB	0feH
	DB	0cH
	DB	02H
	DB	0cH
	DB	0feH
	DB	0f4H
	DB	02H
	DB	0f4H
	DB	0fdH
	DB	0cH
	DB	03H
	DB	0cH
	DB	0fdH
	DB	0f4H
	DB	03H
	DB	0f4H
	DB	0fcH
	DB	0cH
	DB	04H
	DB	0cH
	DB	0fcH
	DB	0f4H
	DB	04H
	DB	0f4H
	DB	0fbH
	DB	0cH
	DB	05H
	DB	0cH
	DB	0fbH
	DB	0f4H
	DB	05H
	DB	0f4H
	DB	0faH
	DB	0cH
	DB	06H
	DB	0cH
	DB	0faH
	DB	0f4H
	DB	06H
	DB	0f4H
	DB	0f9H
	DB	0cH
	DB	07H
	DB	0cH
	DB	0f9H
	DB	0f4H
	DB	07H
	DB	0f4H
	DB	0f8H
	DB	0cH
	DB	08H
	DB	0cH
	DB	0f8H
	DB	0f4H
	DB	08H
	DB	0f4H
	DB	0f7H
	DB	0cH
	DB	09H
	DB	0cH
	DB	0f7H
	DB	0f4H
	DB	09H
	DB	0f4H
	DB	0f6H
	DB	0cH
	DB	0aH
	DB	0cH
	DB	0f6H
	DB	0f4H
	DB	0aH
	DB	0f4H
	DB	0f5H
	DB	0cH
	DB	0bH
	DB	0cH
	DB	0f5H
	DB	0f4H
	DB	0bH
	DB	0f4H
	DB	0f5H
	DB	0bH
	DB	0bH
	DB	0bH
	DB	0f5H
	DB	0f5H
	DB	0bH
	DB	0f5H
	DB	0f4H
	DB	0bH
	DB	0cH
	DB	0bH
	DB	0f4H
	DB	0f5H
	DB	0cH
	DB	0f5H
	DB	0f4H
	DB	0aH
	DB	0cH
	DB	0aH
	DB	0f4H
	DB	0f6H
	DB	0cH
	DB	0f6H
	DB	0f4H
	DB	09H
	DB	0cH
	DB	09H
	DB	0f4H
	DB	0f7H
	DB	0cH
	DB	0f7H
	DB	0f4H
	DB	08H
	DB	0cH
	DB	08H
	DB	0f4H
	DB	0f8H
	DB	0cH
	DB	0f8H
	DB	0f4H
	DB	07H
	DB	0cH
	DB	07H
	DB	0f4H
	DB	0f9H
	DB	0cH
	DB	0f9H
	DB	0f4H
	DB	06H
	DB	0cH
	DB	06H
	DB	0f4H
	DB	0faH
	DB	0cH
	DB	0faH
	DB	0f4H
	DB	05H
	DB	0cH
	DB	05H
	DB	0f4H
	DB	0fbH
	DB	0cH
	DB	0fbH
	DB	0f4H
	DB	04H
	DB	0cH
	DB	04H
	DB	0f4H
	DB	0fcH
	DB	0cH
	DB	0fcH
	DB	0f4H
	DB	03H
	DB	0cH
	DB	03H
	DB	0f4H
	DB	0fdH
	DB	0cH
	DB	0fdH
	DB	0f4H
	DB	02H
	DB	0cH
	DB	02H
	DB	0f4H
	DB	0feH
	DB	0cH
	DB	0feH
	DB	0f4H
	DB	01H
	DB	0cH
	DB	01H
	DB	0f4H
	DB	0ffH
	DB	0cH
	DB	0ffH
	DB	0f4H
	DB	00H
	DB	0cH
	DB	00H
	DB	068H
	DB	00H
	DB	0dH
	DB	00H
	DB	0f3H
	DB	0ffH
	DB	0dH
	DB	01H
	DB	0dH
	DB	0ffH
	DB	0f3H
	DB	01H
	DB	0f3H
	DB	0feH
	DB	0dH
	DB	02H
	DB	0dH
	DB	0feH
	DB	0f3H
	DB	02H
	DB	0f3H
	DB	0fdH
	DB	0dH
	DB	03H
	DB	0dH
	DB	0fdH
	DB	0f3H
	DB	03H
	DB	0f3H
	DB	0fcH
	DB	0dH
	DB	04H
	DB	0dH
	DB	0fcH
	DB	0f3H
	DB	04H
	DB	0f3H
	DB	0fbH
	DB	0dH
	DB	05H
	DB	0dH
	DB	0fbH
	DB	0f3H
	DB	05H
	DB	0f3H
	DB	0faH
	DB	0dH
	DB	06H
	DB	0dH
	DB	0faH
	DB	0f3H
	DB	06H
	DB	0f3H
	DB	0f9H
	DB	0dH
	DB	07H
	DB	0dH
	DB	0f9H
	DB	0f3H
	DB	07H
	DB	0f3H
	DB	0f8H
	DB	0dH
	DB	08H
	DB	0dH
	DB	0f8H
	DB	0f3H
	DB	08H
	DB	0f3H
	DB	0f7H
	DB	0dH
	DB	09H
	DB	0dH
	DB	0f7H
	DB	0f3H
	DB	09H
	DB	0f3H
	DB	0f6H
	DB	0dH
	DB	0aH
	DB	0dH
	DB	0f6H
	DB	0f3H
	DB	0aH
	DB	0f3H
	DB	0f5H
	DB	0dH
	DB	0bH
	DB	0dH
	DB	0f5H
	DB	0f3H
	DB	0bH
	DB	0f3H
	DB	0f4H
	DB	0dH
	DB	0cH
	DB	0dH
	DB	0f4H
	DB	0f3H
	DB	0cH
	DB	0f3H
	DB	0f4H
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0f4H
	DB	0f4H
	DB	0cH
	DB	0f4H
	DB	0f3H
	DB	0cH
	DB	0dH
	DB	0cH
	DB	0f3H
	DB	0f4H
	DB	0dH
	DB	0f4H
	DB	0f3H
	DB	0bH
	DB	0dH
	DB	0bH
	DB	0f3H
	DB	0f5H
	DB	0dH
	DB	0f5H
	DB	0f3H
	DB	0aH
	DB	0dH
	DB	0aH
	DB	0f3H
	DB	0f6H
	DB	0dH
	DB	0f6H
	DB	0f3H
	DB	09H
	DB	0dH
	DB	09H
	DB	0f3H
	DB	0f7H
	DB	0dH
	DB	0f7H
	DB	0f3H
	DB	08H
	DB	0dH
	DB	08H
	DB	0f3H
	DB	0f8H
	DB	0dH
	DB	0f8H
	DB	0f3H
	DB	07H
	DB	0dH
	DB	07H
	DB	0f3H
	DB	0f9H
	DB	0dH
	DB	0f9H
	DB	0f3H
	DB	06H
	DB	0dH
	DB	06H
	DB	0f3H
	DB	0faH
	DB	0dH
	DB	0faH
	DB	0f3H
	DB	05H
	DB	0dH
	DB	05H
	DB	0f3H
	DB	0fbH
	DB	0dH
	DB	0fbH
	DB	0f3H
	DB	04H
	DB	0dH
	DB	04H
	DB	0f3H
	DB	0fcH
	DB	0dH
	DB	0fcH
	DB	0f3H
	DB	03H
	DB	0dH
	DB	03H
	DB	0f3H
	DB	0fdH
	DB	0dH
	DB	0fdH
	DB	0f3H
	DB	02H
	DB	0dH
	DB	02H
	DB	0f3H
	DB	0feH
	DB	0dH
	DB	0feH
	DB	0f3H
	DB	01H
	DB	0dH
	DB	01H
	DB	0f3H
	DB	0ffH
	DB	0dH
	DB	0ffH
	DB	0f3H
	DB	00H
	DB	0dH
	DB	00H
	DB	070H
	DB	00H
	DB	0eH
	DB	00H
	DB	0f2H
	DB	0ffH
	DB	0eH
	DB	01H
	DB	0eH
	DB	0ffH
	DB	0f2H
	DB	01H
	DB	0f2H
	DB	0feH
	DB	0eH
	DB	02H
	DB	0eH
	DB	0feH
	DB	0f2H
	DB	02H
	DB	0f2H
	DB	0fdH
	DB	0eH
	DB	03H
	DB	0eH
	DB	0fdH
	DB	0f2H
	DB	03H
	DB	0f2H
	DB	0fcH
	DB	0eH
	DB	04H
	DB	0eH
	DB	0fcH
	DB	0f2H
	DB	04H
	DB	0f2H
	DB	0fbH
	DB	0eH
	DB	05H
	DB	0eH
	DB	0fbH
	DB	0f2H
	DB	05H
	DB	0f2H
	DB	0faH
	DB	0eH
	DB	06H
	DB	0eH
	DB	0faH
	DB	0f2H
	DB	06H
	DB	0f2H
	DB	0f9H
	DB	0eH
	DB	07H
	DB	0eH
	DB	0f9H
	DB	0f2H
	DB	07H
	DB	0f2H
	DB	0f8H
	DB	0eH
	DB	08H
	DB	0eH
	DB	0f8H
	DB	0f2H
	DB	08H
	DB	0f2H
	DB	0f7H
	DB	0eH
	DB	09H
	DB	0eH
	DB	0f7H
	DB	0f2H
	DB	09H
	DB	0f2H
	DB	0f6H
	DB	0eH
	DB	0aH
	DB	0eH
	DB	0f6H
	DB	0f2H
	DB	0aH
	DB	0f2H
	DB	0f5H
	DB	0eH
	DB	0bH
	DB	0eH
	DB	0f5H
	DB	0f2H
	DB	0bH
	DB	0f2H
	DB	0f4H
	DB	0eH
	DB	0cH
	DB	0eH
	DB	0f4H
	DB	0f2H
	DB	0cH
	DB	0f2H
	DB	0f3H
	DB	0eH
	DB	0dH
	DB	0eH
	DB	0f3H
	DB	0f2H
	DB	0dH
	DB	0f2H
	DB	0f3H
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0f3H
	DB	0f3H
	DB	0dH
	DB	0f3H
	DB	0f2H
	DB	0dH
	DB	0eH
	DB	0dH
	DB	0f2H
	DB	0f3H
	DB	0eH
	DB	0f3H
	DB	0f2H
	DB	0cH
	DB	0eH
	DB	0cH
	DB	0f2H
	DB	0f4H
	DB	0eH
	DB	0f4H
	DB	0f2H
	DB	0bH
	DB	0eH
	DB	0bH
	DB	0f2H
	DB	0f5H
	DB	0eH
	DB	0f5H
	DB	0f2H
	DB	0aH
	DB	0eH
	DB	0aH
	DB	0f2H
	DB	0f6H
	DB	0eH
	DB	0f6H
	DB	0f2H
	DB	09H
	DB	0eH
	DB	09H
	DB	0f2H
	DB	0f7H
	DB	0eH
	DB	0f7H
	DB	0f2H
	DB	08H
	DB	0eH
	DB	08H
	DB	0f2H
	DB	0f8H
	DB	0eH
	DB	0f8H
	DB	0f2H
	DB	07H
	DB	0eH
	DB	07H
	DB	0f2H
	DB	0f9H
	DB	0eH
	DB	0f9H
	DB	0f2H
	DB	06H
	DB	0eH
	DB	06H
	DB	0f2H
	DB	0faH
	DB	0eH
	DB	0faH
	DB	0f2H
	DB	05H
	DB	0eH
	DB	05H
	DB	0f2H
	DB	0fbH
	DB	0eH
	DB	0fbH
	DB	0f2H
	DB	04H
	DB	0eH
	DB	04H
	DB	0f2H
	DB	0fcH
	DB	0eH
	DB	0fcH
	DB	0f2H
	DB	03H
	DB	0eH
	DB	03H
	DB	0f2H
	DB	0fdH
	DB	0eH
	DB	0fdH
	DB	0f2H
	DB	02H
	DB	0eH
	DB	02H
	DB	0f2H
	DB	0feH
	DB	0eH
	DB	0feH
	DB	0f2H
	DB	01H
	DB	0eH
	DB	01H
	DB	0f2H
	DB	0ffH
	DB	0eH
	DB	0ffH
	DB	0f2H
	DB	00H
	DB	0eH
	DB	00H
	DB	078H
	DB	00H
	DB	0fH
	DB	00H
	DB	0f1H
	DB	0ffH
	DB	0fH
	DB	01H
	DB	0fH
	DB	0ffH
	DB	0f1H
	DB	01H
	DB	0f1H
	DB	0feH
	DB	0fH
	DB	02H
	DB	0fH
	DB	0feH
	DB	0f1H
	DB	02H
	DB	0f1H
	DB	0fdH
	DB	0fH
	DB	03H
	DB	0fH
	DB	0fdH
	DB	0f1H
	DB	03H
	DB	0f1H
	DB	0fcH
	DB	0fH
	DB	04H
	DB	0fH
	DB	0fcH
	DB	0f1H
	DB	04H
	DB	0f1H
	DB	0fbH
	DB	0fH
	DB	05H
	DB	0fH
	DB	0fbH
	DB	0f1H
	DB	05H
	DB	0f1H
	DB	0faH
	DB	0fH
	DB	06H
	DB	0fH
	DB	0faH
	DB	0f1H
	DB	06H
	DB	0f1H
	DB	0f9H
	DB	0fH
	DB	07H
	DB	0fH
	DB	0f9H
	DB	0f1H
	DB	07H
	DB	0f1H
	DB	0f8H
	DB	0fH
	DB	08H
	DB	0fH
	DB	0f8H
	DB	0f1H
	DB	08H
	DB	0f1H
	DB	0f7H
	DB	0fH
	DB	09H
	DB	0fH
	DB	0f7H
	DB	0f1H
	DB	09H
	DB	0f1H
	DB	0f6H
	DB	0fH
	DB	0aH
	DB	0fH
	DB	0f6H
	DB	0f1H
	DB	0aH
	DB	0f1H
	DB	0f5H
	DB	0fH
	DB	0bH
	DB	0fH
	DB	0f5H
	DB	0f1H
	DB	0bH
	DB	0f1H
	DB	0f4H
	DB	0fH
	DB	0cH
	DB	0fH
	DB	0f4H
	DB	0f1H
	DB	0cH
	DB	0f1H
	DB	0f3H
	DB	0fH
	DB	0dH
	DB	0fH
	DB	0f3H
	DB	0f1H
	DB	0dH
	DB	0f1H
	DB	0f2H
	DB	0fH
	DB	0eH
	DB	0fH
	DB	0f2H
	DB	0f1H
	DB	0eH
	DB	0f1H
	DB	0f2H
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0f2H
	DB	0f2H
	DB	0eH
	DB	0f2H
	DB	0f1H
	DB	0eH
	DB	0fH
	DB	0eH
	DB	0f1H
	DB	0f2H
	DB	0fH
	DB	0f2H
	DB	0f1H
	DB	0dH
	DB	0fH
	DB	0dH
	DB	0f1H
	DB	0f3H
	DB	0fH
	DB	0f3H
	DB	0f1H
	DB	0cH
	DB	0fH
	DB	0cH
	DB	0f1H
	DB	0f4H
	DB	0fH
	DB	0f4H
	DB	0f1H
	DB	0bH
	DB	0fH
	DB	0bH
	DB	0f1H
	DB	0f5H
	DB	0fH
	DB	0f5H
	DB	0f1H
	DB	0aH
	DB	0fH
	DB	0aH
	DB	0f1H
	DB	0f6H
	DB	0fH
	DB	0f6H
	DB	0f1H
	DB	09H
	DB	0fH
	DB	09H
	DB	0f1H
	DB	0f7H
	DB	0fH
	DB	0f7H
	DB	0f1H
	DB	08H
	DB	0fH
	DB	08H
	DB	0f1H
	DB	0f8H
	DB	0fH
	DB	0f8H
	DB	0f1H
	DB	07H
	DB	0fH
	DB	07H
	DB	0f1H
	DB	0f9H
	DB	0fH
	DB	0f9H
	DB	0f1H
	DB	06H
	DB	0fH
	DB	06H
	DB	0f1H
	DB	0faH
	DB	0fH
	DB	0faH
	DB	0f1H
	DB	05H
	DB	0fH
	DB	05H
	DB	0f1H
	DB	0fbH
	DB	0fH
	DB	0fbH
	DB	0f1H
	DB	04H
	DB	0fH
	DB	04H
	DB	0f1H
	DB	0fcH
	DB	0fH
	DB	0fcH
	DB	0f1H
	DB	03H
	DB	0fH
	DB	03H
	DB	0f1H
	DB	0fdH
	DB	0fH
	DB	0fdH
	DB	0f1H
	DB	02H
	DB	0fH
	DB	02H
	DB	0f1H
	DB	0feH
	DB	0fH
	DB	0feH
	DB	0f1H
	DB	01H
	DB	0fH
	DB	01H
	DB	0f1H
	DB	0ffH
	DB	0fH
	DB	0ffH
	DB	0f1H
	DB	00H
	DB	0fH
	DB	00H
	DB	080H
	DB	00H
	DB	010H
	DB	00H
	DB	0f0H
	DB	0ffH
	DB	010H
	DB	01H
	DB	010H
	DB	0ffH
	DB	0f0H
	DB	01H
	DB	0f0H
	DB	0feH
	DB	010H
	DB	02H
	DB	010H
	DB	0feH
	DB	0f0H
	DB	02H
	DB	0f0H
	DB	0fdH
	DB	010H
	DB	03H
	DB	010H
	DB	0fdH
	DB	0f0H
	DB	03H
	DB	0f0H
	DB	0fcH
	DB	010H
	DB	04H
	DB	010H
	DB	0fcH
	DB	0f0H
	DB	04H
	DB	0f0H
	DB	0fbH
	DB	010H
	DB	05H
	DB	010H
	DB	0fbH
	DB	0f0H
	DB	05H
	DB	0f0H
	DB	0faH
	DB	010H
	DB	06H
	DB	010H
	DB	0faH
	DB	0f0H
	DB	06H
	DB	0f0H
	DB	0f9H
	DB	010H
	DB	07H
	DB	010H
	DB	0f9H
	DB	0f0H
	DB	07H
	DB	0f0H
	DB	0f8H
	DB	010H
	DB	08H
	DB	010H
	DB	0f8H
	DB	0f0H
	DB	08H
	DB	0f0H
	DB	0f7H
	DB	010H
	DB	09H
	DB	010H
	DB	0f7H
	DB	0f0H
	DB	09H
	DB	0f0H
	DB	0f6H
	DB	010H
	DB	0aH
	DB	010H
	DB	0f6H
	DB	0f0H
	DB	0aH
	DB	0f0H
	DB	0f5H
	DB	010H
	DB	0bH
	DB	010H
	DB	0f5H
	DB	0f0H
	DB	0bH
	DB	0f0H
	DB	0f4H
	DB	010H
	DB	0cH
	DB	010H
	DB	0f4H
	DB	0f0H
	DB	0cH
	DB	0f0H
	DB	0f3H
	DB	010H
	DB	0dH
	DB	010H
	DB	0f3H
	DB	0f0H
	DB	0dH
	DB	0f0H
	DB	0f2H
	DB	010H
	DB	0eH
	DB	010H
	DB	0f2H
	DB	0f0H
	DB	0eH
	DB	0f0H
	DB	0f1H
	DB	010H
	DB	0fH
	DB	010H
	DB	0f1H
	DB	0f0H
	DB	0fH
	DB	0f0H
	DB	0f1H
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0f1H
	DB	0f1H
	DB	0fH
	DB	0f1H
	DB	0f0H
	DB	0fH
	DB	010H
	DB	0fH
	DB	0f0H
	DB	0f1H
	DB	010H
	DB	0f1H
	DB	0f0H
	DB	0eH
	DB	010H
	DB	0eH
	DB	0f0H
	DB	0f2H
	DB	010H
	DB	0f2H
	DB	0f0H
	DB	0dH
	DB	010H
	DB	0dH
	DB	0f0H
	DB	0f3H
	DB	010H
	DB	0f3H
	DB	0f0H
	DB	0cH
	DB	010H
	DB	0cH
	DB	0f0H
	DB	0f4H
	DB	010H
	DB	0f4H
	DB	0f0H
	DB	0bH
	DB	010H
	DB	0bH
	DB	0f0H
	DB	0f5H
	DB	010H
	DB	0f5H
	DB	0f0H
	DB	0aH
	DB	010H
	DB	0aH
	DB	0f0H
	DB	0f6H
	DB	010H
	DB	0f6H
	DB	0f0H
	DB	09H
	DB	010H
	DB	09H
	DB	0f0H
	DB	0f7H
	DB	010H
	DB	0f7H
	DB	0f0H
	DB	08H
	DB	010H
	DB	08H
	DB	0f0H
	DB	0f8H
	DB	010H
	DB	0f8H
	DB	0f0H
	DB	07H
	DB	010H
	DB	07H
	DB	0f0H
	DB	0f9H
	DB	010H
	DB	0f9H
	DB	0f0H
	DB	06H
	DB	010H
	DB	06H
	DB	0f0H
	DB	0faH
	DB	010H
	DB	0faH
	DB	0f0H
	DB	05H
	DB	010H
	DB	05H
	DB	0f0H
	DB	0fbH
	DB	010H
	DB	0fbH
	DB	0f0H
	DB	04H
	DB	010H
	DB	04H
	DB	0f0H
	DB	0fcH
	DB	010H
	DB	0fcH
	DB	0f0H
	DB	03H
	DB	010H
	DB	03H
	DB	0f0H
	DB	0fdH
	DB	010H
	DB	0fdH
	DB	0f0H
	DB	02H
	DB	010H
	DB	02H
	DB	0f0H
	DB	0feH
	DB	010H
	DB	0feH
	DB	0f0H
	DB	01H
	DB	010H
	DB	01H
	DB	0f0H
	DB	0ffH
	DB	010H
	DB	0ffH
	DB	0f0H
	DB	00H
	DB	010H
	DB	00H
	DB	088H
	DB	00H
	DB	011H
	DB	00H
	DB	0efH
	DB	0ffH
	DB	011H
	DB	01H
	DB	011H
	DB	0ffH
	DB	0efH
	DB	01H
	DB	0efH
	DB	0feH
	DB	011H
	DB	02H
	DB	011H
	DB	0feH
	DB	0efH
	DB	02H
	DB	0efH
	DB	0fdH
	DB	011H
	DB	03H
	DB	011H
	DB	0fdH
	DB	0efH
	DB	03H
	DB	0efH
	DB	0fcH
	DB	011H
	DB	04H
	DB	011H
	DB	0fcH
	DB	0efH
	DB	04H
	DB	0efH
	DB	0fbH
	DB	011H
	DB	05H
	DB	011H
	DB	0fbH
	DB	0efH
	DB	05H
	DB	0efH
	DB	0faH
	DB	011H
	DB	06H
	DB	011H
	DB	0faH
	DB	0efH
	DB	06H
	DB	0efH
	DB	0f9H
	DB	011H
	DB	07H
	DB	011H
	DB	0f9H
	DB	0efH
	DB	07H
	DB	0efH
	DB	0f8H
	DB	011H
	DB	08H
	DB	011H
	DB	0f8H
	DB	0efH
	DB	08H
	DB	0efH
	DB	0f7H
	DB	011H
	DB	09H
	DB	011H
	DB	0f7H
	DB	0efH
	DB	09H
	DB	0efH
	DB	0f6H
	DB	011H
	DB	0aH
	DB	011H
	DB	0f6H
	DB	0efH
	DB	0aH
	DB	0efH
	DB	0f5H
	DB	011H
	DB	0bH
	DB	011H
	DB	0f5H
	DB	0efH
	DB	0bH
	DB	0efH
	DB	0f4H
	DB	011H
	DB	0cH
	DB	011H
	DB	0f4H
	DB	0efH
	DB	0cH
	DB	0efH
	DB	0f3H
	DB	011H
	DB	0dH
	DB	011H
	DB	0f3H
	DB	0efH
	DB	0dH
	DB	0efH
	DB	0f2H
	DB	011H
	DB	0eH
	DB	011H
	DB	0f2H
	DB	0efH
	DB	0eH
	DB	0efH
	DB	0f1H
	DB	011H
	DB	0fH
	DB	011H
	DB	0f1H
	DB	0efH
	DB	0fH
	DB	0efH
	DB	0f0H
	DB	011H
	DB	010H
	DB	011H
	DB	0f0H
	DB	0efH
	DB	010H
	DB	0efH
	DB	0f0H
	DB	010H
	DB	010H
	DB	010H
	DB	0f0H
	DB	0f0H
	DB	010H
	DB	0f0H
	DB	0efH
	DB	010H
	DB	011H
	DB	010H
	DB	0efH
	DB	0f0H
	DB	011H
	DB	0f0H
	DB	0efH
	DB	0fH
	DB	011H
	DB	0fH
	DB	0efH
	DB	0f1H
	DB	011H
	DB	0f1H
	DB	0efH
	DB	0eH
	DB	011H
	DB	0eH
	DB	0efH
	DB	0f2H
	DB	011H
	DB	0f2H
	DB	0efH
	DB	0dH
	DB	011H
	DB	0dH
	DB	0efH
	DB	0f3H
	DB	011H
	DB	0f3H
	DB	0efH
	DB	0cH
	DB	011H
	DB	0cH
	DB	0efH
	DB	0f4H
	DB	011H
	DB	0f4H
	DB	0efH
	DB	0bH
	DB	011H
	DB	0bH
	DB	0efH
	DB	0f5H
	DB	011H
	DB	0f5H
	DB	0efH
	DB	0aH
	DB	011H
	DB	0aH
	DB	0efH
	DB	0f6H
	DB	011H
	DB	0f6H
	DB	0efH
	DB	09H
	DB	011H
	DB	09H
	DB	0efH
	DB	0f7H
	DB	011H
	DB	0f7H
	DB	0efH
	DB	08H
	DB	011H
	DB	08H
	DB	0efH
	DB	0f8H
	DB	011H
	DB	0f8H
	DB	0efH
	DB	07H
	DB	011H
	DB	07H
	DB	0efH
	DB	0f9H
	DB	011H
	DB	0f9H
	DB	0efH
	DB	06H
	DB	011H
	DB	06H
	DB	0efH
	DB	0faH
	DB	011H
	DB	0faH
	DB	0efH
	DB	05H
	DB	011H
	DB	05H
	DB	0efH
	DB	0fbH
	DB	011H
	DB	0fbH
	DB	0efH
	DB	04H
	DB	011H
	DB	04H
	DB	0efH
	DB	0fcH
	DB	011H
	DB	0fcH
	DB	0efH
	DB	03H
	DB	011H
	DB	03H
	DB	0efH
	DB	0fdH
	DB	011H
	DB	0fdH
	DB	0efH
	DB	02H
	DB	011H
	DB	02H
	DB	0efH
	DB	0feH
	DB	011H
	DB	0feH
	DB	0efH
	DB	01H
	DB	011H
	DB	01H
	DB	0efH
	DB	0ffH
	DB	011H
	DB	0ffH
	DB	0efH
	DB	00H
	DB	011H
	DB	00H
	DB	090H
	DB	00H
	DB	012H
	DB	00H
	DB	0eeH
	DB	0ffH
	DB	012H
	DB	01H
	DB	012H
	DB	0ffH
	DB	0eeH
	DB	01H
	DB	0eeH
	DB	0feH
	DB	012H
	DB	02H
	DB	012H
	DB	0feH
	DB	0eeH
	DB	02H
	DB	0eeH
	DB	0fdH
	DB	012H
	DB	03H
	DB	012H
	DB	0fdH
	DB	0eeH
	DB	03H
	DB	0eeH
	DB	0fcH
	DB	012H
	DB	04H
	DB	012H
	DB	0fcH
	DB	0eeH
	DB	04H
	DB	0eeH
	DB	0fbH
	DB	012H
	DB	05H
	DB	012H
	DB	0fbH
	DB	0eeH
	DB	05H
	DB	0eeH
	DB	0faH
	DB	012H
	DB	06H
	DB	012H
	DB	0faH
	DB	0eeH
	DB	06H
	DB	0eeH
	DB	0f9H
	DB	012H
	DB	07H
	DB	012H
	DB	0f9H
	DB	0eeH
	DB	07H
	DB	0eeH
	DB	0f8H
	DB	012H
	DB	08H
	DB	012H
	DB	0f8H
	DB	0eeH
	DB	08H
	DB	0eeH
	DB	0f7H
	DB	012H
	DB	09H
	DB	012H
	DB	0f7H
	DB	0eeH
	DB	09H
	DB	0eeH
	DB	0f6H
	DB	012H
	DB	0aH
	DB	012H
	DB	0f6H
	DB	0eeH
	DB	0aH
	DB	0eeH
	DB	0f5H
	DB	012H
	DB	0bH
	DB	012H
	DB	0f5H
	DB	0eeH
	DB	0bH
	DB	0eeH
	DB	0f4H
	DB	012H
	DB	0cH
	DB	012H
	DB	0f4H
	DB	0eeH
	DB	0cH
	DB	0eeH
	DB	0f3H
	DB	012H
	DB	0dH
	DB	012H
	DB	0f3H
	DB	0eeH
	DB	0dH
	DB	0eeH
	DB	0f2H
	DB	012H
	DB	0eH
	DB	012H
	DB	0f2H
	DB	0eeH
	DB	0eH
	DB	0eeH
	DB	0f1H
	DB	012H
	DB	0fH
	DB	012H
	DB	0f1H
	DB	0eeH
	DB	0fH
	DB	0eeH
	DB	0f0H
	DB	012H
	DB	010H
	DB	012H
	DB	0f0H
	DB	0eeH
	DB	010H
	DB	0eeH
	DB	0efH
	DB	012H
	DB	011H
	DB	012H
	DB	0efH
	DB	0eeH
	DB	011H
	DB	0eeH
	DB	0efH
	DB	011H
	DB	011H
	DB	011H
	DB	0efH
	DB	0efH
	DB	011H
	DB	0efH
	DB	0eeH
	DB	011H
	DB	012H
	DB	011H
	DB	0eeH
	DB	0efH
	DB	012H
	DB	0efH
	DB	0eeH
	DB	010H
	DB	012H
	DB	010H
	DB	0eeH
	DB	0f0H
	DB	012H
	DB	0f0H
	DB	0eeH
	DB	0fH
	DB	012H
	DB	0fH
	DB	0eeH
	DB	0f1H
	DB	012H
	DB	0f1H
	DB	0eeH
	DB	0eH
	DB	012H
	DB	0eH
	DB	0eeH
	DB	0f2H
	DB	012H
	DB	0f2H
	DB	0eeH
	DB	0dH
	DB	012H
	DB	0dH
	DB	0eeH
	DB	0f3H
	DB	012H
	DB	0f3H
	DB	0eeH
	DB	0cH
	DB	012H
	DB	0cH
	DB	0eeH
	DB	0f4H
	DB	012H
	DB	0f4H
	DB	0eeH
	DB	0bH
	DB	012H
	DB	0bH
	DB	0eeH
	DB	0f5H
	DB	012H
	DB	0f5H
	DB	0eeH
	DB	0aH
	DB	012H
	DB	0aH
	DB	0eeH
	DB	0f6H
	DB	012H
	DB	0f6H
	DB	0eeH
	DB	09H
	DB	012H
	DB	09H
	DB	0eeH
	DB	0f7H
	DB	012H
	DB	0f7H
	DB	0eeH
	DB	08H
	DB	012H
	DB	08H
	DB	0eeH
	DB	0f8H
	DB	012H
	DB	0f8H
	DB	0eeH
	DB	07H
	DB	012H
	DB	07H
	DB	0eeH
	DB	0f9H
	DB	012H
	DB	0f9H
	DB	0eeH
	DB	06H
	DB	012H
	DB	06H
	DB	0eeH
	DB	0faH
	DB	012H
	DB	0faH
	DB	0eeH
	DB	05H
	DB	012H
	DB	05H
	DB	0eeH
	DB	0fbH
	DB	012H
	DB	0fbH
	DB	0eeH
	DB	04H
	DB	012H
	DB	04H
	DB	0eeH
	DB	0fcH
	DB	012H
	DB	0fcH
	DB	0eeH
	DB	03H
	DB	012H
	DB	03H
	DB	0eeH
	DB	0fdH
	DB	012H
	DB	0fdH
	DB	0eeH
	DB	02H
	DB	012H
	DB	02H
	DB	0eeH
	DB	0feH
	DB	012H
	DB	0feH
	DB	0eeH
	DB	01H
	DB	012H
	DB	01H
	DB	0eeH
	DB	0ffH
	DB	012H
	DB	0ffH
	DB	0eeH
	DB	00H
	DB	012H
	DB	00H
	ORG $+3
_pCrawlTable DD	FLAT:_CrawlTable
	DD	FLAT:_CrawlTable+3
	DD	FLAT:_CrawlTable+12
	DD	FLAT:_CrawlTable+45
	DD	FLAT:_CrawlTable+94
	DD	FLAT:_CrawlTable+159
	DD	FLAT:_CrawlTable+240
	DD	FLAT:_CrawlTable+337
	DD	FLAT:_CrawlTable+450
	DD	FLAT:_CrawlTable+579
	DD	FLAT:_CrawlTable+724
	DD	FLAT:_CrawlTable+885
	DD	FLAT:_CrawlTable+1062
	DD	FLAT:_CrawlTable+1255
	DD	FLAT:_CrawlTable+1464
	DD	FLAT:_CrawlTable+1689
	DD	FLAT:_CrawlTable+1930
	DD	FLAT:_CrawlTable+2187
	DD	FLAT:_CrawlTable+2460
	ORG $+4
_vCrawlTable DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	04H
	DB	00H
	DB	05H
	DB	00H
	DB	06H
	DB	00H
	DB	07H
	DB	00H
	DB	08H
	DB	00H
	DB	09H
	DB	00H
	DB	0aH
	DB	00H
	DB	0bH
	DB	00H
	DB	0cH
	DB	00H
	DB	0dH
	DB	00H
	DB	0eH
	DB	00H
	DB	0fH
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	04H
	DB	00H
	DB	05H
	DB	00H
	DB	06H
	DB	00H
	DB	07H
	DB	00H
	DB	08H
	DB	01H
	DB	09H
	DB	01H
	DB	0aH
	DB	01H
	DB	0bH
	DB	01H
	DB	0cH
	DB	01H
	DB	0dH
	DB	01H
	DB	0eH
	DB	01H
	DB	0fH
	DB	01H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	04H
	DB	01H
	DB	05H
	DB	01H
	DB	06H
	DB	01H
	DB	07H
	DB	01H
	DB	08H
	DB	01H
	DB	09H
	DB	01H
	DB	0aH
	DB	01H
	DB	0bH
	DB	01H
	DB	0cH
	DB	02H
	DB	0dH
	DB	02H
	DB	0eH
	DB	02H
	DB	0fH
	DB	02H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	05H
	DB	01H
	DB	06H
	DB	01H
	DB	07H
	DB	01H
	DB	08H
	DB	02H
	DB	09H
	DB	02H
	DB	0aH
	DB	02H
	DB	0bH
	DB	02H
	DB	0cH
	DB	02H
	DB	0dH
	DB	03H
	DB	0eH
	DB	03H
	DB	0fH
	DB	03H
	DB	01H
	DB	00H
	DB	02H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	05H
	DB	01H
	DB	06H
	DB	02H
	DB	07H
	DB	02H
	DB	08H
	DB	02H
	DB	09H
	DB	03H
	DB	0aH
	DB	03H
	DB	0bH
	DB	03H
	DB	0cH
	DB	03H
	DB	0dH
	DB	04H
	DB	0eH
	DB	04H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	05H
	DB	02H
	DB	06H
	DB	02H
	DB	07H
	DB	03H
	DB	08H
	DB	03H
	DB	09H
	DB	03H
	DB	0aH
	DB	04H
	DB	0bH
	DB	04H
	DB	0cH
	DB	04H
	DB	0dH
	DB	05H
	DB	0eH
	DB	05H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	02H
	DB	05H
	DB	02H
	DB	06H
	DB	03H
	DB	07H
	DB	03H
	DB	08H
	DB	03H
	DB	09H
	DB	04H
	DB	0aH
	DB	04H
	DB	0bH
	DB	05H
	DB	0cH
	DB	05H
	DB	0dH
	DB	06H
	DB	0eH
	DB	06H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	03H
	DB	02H
	DB	04H
	DB	02H
	DB	05H
	DB	03H
	DB	06H
	DB	03H
	DB	07H
	DB	04H
	DB	08H
	DB	04H
	DB	09H
	DB	05H
	DB	0aH
	DB	05H
	DB	0bH
	DB	06H
	DB	0cH
	DB	06H
	DB	0dH
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	03H
	DB	02H
	DB	04H
	DB	02H
	DB	05H
	DB	03H
	DB	06H
	DB	04H
	DB	07H
	DB	04H
	DB	08H
	DB	05H
	DB	09H
	DB	06H
	DB	0aH
	DB	06H
	DB	0bH
	DB	07H
	DB	0cH
	DB	07H
	DB	0cH
	DB	08H
	DB	0dH
	DB	08H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	04H
	DB	03H
	DB	05H
	DB	04H
	DB	06H
	DB	05H
	DB	07H
	DB	05H
	DB	08H
	DB	06H
	DB	09H
	DB	07H
	DB	0aH
	DB	07H
	DB	0aH
	DB	08H
	DB	0bH
	DB	08H
	DB	0cH
	DB	09H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	07H
	DB	06H
	DB	08H
	DB	07H
	DB	09H
	DB	08H
	DB	0aH
	DB	09H
	DB	0bH
	DB	09H
	DB	0bH
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	08H
	DB	08H
	DB	09H
	DB	09H
	DB	0aH
	DB	0aH
	DB	0bH
	DB	0bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	08H
	DB	08H
	DB	09H
	DB	09H
	DB	0aH
	DB	09H
	DB	0bH
	DB	0aH
	DB	0bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	05H
	DB	07H
	DB	06H
	DB	08H
	DB	07H
	DB	09H
	DB	07H
	DB	0aH
	DB	08H
	DB	0aH
	DB	08H
	DB	0bH
	DB	09H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	04H
	DB	03H
	DB	05H
	DB	04H
	DB	06H
	DB	04H
	DB	07H
	DB	05H
	DB	08H
	DB	06H
	DB	09H
	DB	06H
	DB	0aH
	DB	07H
	DB	0bH
	DB	07H
	DB	0cH
	DB	08H
	DB	0cH
	DB	08H
	DB	0dH
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	02H
	DB	04H
	DB	03H
	DB	05H
	DB	03H
	DB	06H
	DB	04H
	DB	07H
	DB	04H
	DB	08H
	DB	05H
	DB	09H
	DB	05H
	DB	0aH
	DB	06H
	DB	0bH
	DB	06H
	DB	0cH
	DB	07H
	DB	0dH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	03H
	DB	02H
	DB	04H
	DB	02H
	DB	05H
	DB	03H
	DB	06H
	DB	03H
	DB	07H
	DB	03H
	DB	08H
	DB	04H
	DB	09H
	DB	04H
	DB	0aH
	DB	05H
	DB	0bH
	DB	05H
	DB	0cH
	DB	06H
	DB	0dH
	DB	06H
	DB	0eH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	02H
	DB	05H
	DB	02H
	DB	06H
	DB	03H
	DB	07H
	DB	03H
	DB	08H
	DB	03H
	DB	09H
	DB	04H
	DB	0aH
	DB	04H
	DB	0bH
	DB	04H
	DB	0cH
	DB	05H
	DB	0dH
	DB	05H
	DB	0eH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	05H
	DB	02H
	DB	06H
	DB	02H
	DB	07H
	DB	02H
	DB	08H
	DB	03H
	DB	09H
	DB	03H
	DB	0aH
	DB	03H
	DB	0bH
	DB	03H
	DB	0cH
	DB	04H
	DB	0dH
	DB	04H
	DB	0eH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	05H
	DB	01H
	DB	06H
	DB	01H
	DB	07H
	DB	02H
	DB	08H
	DB	02H
	DB	09H
	DB	02H
	DB	0aH
	DB	02H
	DB	0bH
	DB	02H
	DB	0cH
	DB	03H
	DB	0dH
	DB	03H
	DB	0eH
	DB	03H
	DB	0fH
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	05H
	DB	01H
	DB	06H
	DB	01H
	DB	07H
	DB	01H
	DB	08H
	DB	01H
	DB	09H
	DB	01H
	DB	0aH
	DB	01H
	DB	0bH
	DB	02H
	DB	0cH
	DB	02H
	DB	0dH
	DB	02H
	DB	0eH
	DB	02H
	DB	0fH
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	04H
	DB	00H
	DB	05H
	DB	00H
	DB	06H
	DB	00H
	DB	07H
	DB	01H
	DB	08H
	DB	01H
	DB	09H
	DB	01H
	DB	0aH
	DB	01H
	DB	0bH
	DB	01H
	DB	0cH
	DB	01H
	DB	0dH
	DB	01H
	DB	0eH
	DB	01H
	DB	0fH
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	04H
	DB	00H
	DB	05H
	DB	00H
	DB	06H
	DB	00H
	DB	07H
	DB	00H
	DB	08H
	DB	00H
	DB	09H
	DB	00H
	DB	0aH
	DB	00H
	DB	0bH
	DB	00H
	DB	0cH
	DB	00H
	DB	0dH
	DB	00H
	DB	0eH
	DB	00H
	DB	0fH
	ORG $+6
_byte_49463C DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	01H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
_RadiusAdj DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	04H
	DB	03H
	DB	02H
	DB	02H
	DB	02H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	@SetLightFX@32
; Function compile flags: /Ogsy
;	COMDAT @SetLightFX@32
_TEXT	SEGMENT
_y$ = -4
_s_r$ = 8
_s_g$ = 12
_s_b$ = 16
_d_r$ = 20
_d_g$ = 24
_d_b$ = 28
_s_ra$ = 8
@SetLightFX@32 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; File Source/lighting.cpp
; Line 455
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 461
	mov	eax, DWORD PTR _d_g$[ebp]
	push	ebx
	push	esi
; Line 466
	mov	esi, DWORD PTR _s_g$[ebp]
	and	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _d_b$[ebp]
	push	edi
	push	7
	and	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _s_r$[ebp]
	pop	edi
	mov	DWORD PTR _y$[ebp], edx
	sub	edi, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
; Line 469
	mov	ebx, DWORD PTR _d_r$[ebp]
	push	7
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR _s_b$[ebp]
	mov	DWORD PTR [esi], edx
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR _s_ra$[ebp], edx
	pop	edx
	sub	edx, DWORD PTR [ebx]
	mov	DWORD PTR [edi], edx
; Line 470
	mov	edx, DWORD PTR _s_ra$[ebp]
	mov	DWORD PTR [ebx], edx
; Line 471
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edi]
; Line 472
	mov	edx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [esi]
	sub	eax, DWORD PTR [ebx]
; Line 473
	xor	esi, esi
	inc	esi
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jge	SHORT $L85014
; Line 474
	add	eax, 8
	mov	DWORD PTR [ecx], eax
; Line 475
	mov	eax, DWORD PTR _d_g$[ebp]
	mov	DWORD PTR [eax], esi
$L85014:
; Line 477
	mov	eax, DWORD PTR [edx]
	test	eax, eax
	jge	SHORT $L85015
; Line 478
	add	eax, 8
	mov	DWORD PTR [edx], eax
; Line 479
	mov	eax, DWORD PTR _d_b$[ebp]
	mov	DWORD PTR [eax], esi
$L85015:
	pop	edi
	pop	esi
	pop	ebx
; Line 481
	leave
	ret	24					; 00000018H
@SetLightFX@32 ENDP
_TEXT	ENDS
PUBLIC	@DoLighting@16
EXTRN	_dTransVal:BYTE
; Function compile flags: /Ogsy
;	COMDAT @DoLighting@16
_TEXT	SEGMENT
_nRadius$ = 8
_Lnum$ = 12
_v4$ = -28
_v8$ = -28
_v9$ = -44
_v13$ = -76
_v20$ = -76
_v27$ = -76
_v29$ = -52
_v32$ = -72
_s_r$ = -68
_s_g$ = -64
_s_b$ = -60
_d_r$ = -56
_v43$ = -40
_v44$ = -36
_v46$ = -4
_v47$ = -52
_v48$ = -32
_d_g$ = -24
_d_b$ = -20
_v51$ = -16
_v52$ = -48
_y$ = -12
_x$ = -8
_v55$ = 12
_Lnuma$ = -72
_Lnumb$ = -72
_Lnumc$ = -72
_Lnumd$ = -48
@DoLighting@16 PROC NEAR				; COMDAT
; _nXPos$ = ecx
; _nYPos$ = edx
; Line 484
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
; Line 548
	xor	ebx, ebx
	xor	eax, eax
	xor	esi, esi
; Line 554
	cmp	DWORD PTR _Lnum$[ebp], ebx
	push	edi
	mov	DWORD PTR _v4$[ebp], edx
	mov	edi, ecx
	mov	DWORD PTR _v48$[ebp], edx
	mov	DWORD PTR _v52$[ebp], ecx
	mov	DWORD PTR _x$[ebp], ebx
	mov	DWORD PTR _y$[ebp], ebx
	mov	DWORD PTR _s_b$[ebp], ebx
	mov	DWORD PTR _d_r$[ebp], ebx
	mov	DWORD PTR _d_g$[ebp], ebx
	mov	DWORD PTR _d_b$[ebp], ebx
	jl	SHORT $L85683
; Line 555
	mov	eax, DWORD PTR _Lnum$[ebp]
	imul	eax, 52					; 00000034H
	mov	esi, DWORD PTR _LightList[eax+44]
; Line 556
	mov	eax, DWORD PTR _LightList[eax+40]
; Line 559
	test	eax, eax
	mov	DWORD PTR _x$[ebp], eax
	mov	DWORD PTR _y$[ebp], esi
	jge	SHORT $L85081
; Line 560
	add	eax, 8
; Line 561
	lea	edi, DWORD PTR [ecx-1]
; Line 562
	mov	DWORD PTR _x$[ebp], eax
; Line 563
	mov	DWORD PTR _v52$[ebp], edi
$L85081:
; Line 565
	test	esi, esi
	jge	SHORT $L85683
; Line 566
	add	esi, 8
; Line 567
	lea	ebx, DWORD PTR [edx-1]
; Line 568
	mov	DWORD PTR _y$[ebp], esi
; Line 569
	mov	DWORD PTR _v48$[ebp], ebx
	jmp	SHORT $L85082
$L85683:
	mov	ebx, DWORD PTR _v4$[ebp]
$L85082:
; Line 574
	push	15					; 0000000fH
; Line 575
	lea	edx, DWORD PTR [edi-15]
	pop	ecx
	mov	DWORD PTR _s_r$[ebp], eax
	test	edx, edx
	mov	DWORD PTR _s_g$[ebp], esi
	mov	DWORD PTR _v8$[ebp], ecx
	jl	SHORT $L85085
; Line 576
	mov	DWORD PTR _v44$[ebp], ecx
; Line 577
	jmp	SHORT $L85086
$L85085:
; Line 578
	lea	edx, DWORD PTR [edi+1]
	mov	DWORD PTR _v44$[ebp], edx
$L85086:
; Line 579
	lea	edx, DWORD PTR [edi+15]
	cmp	edx, 112				; 00000070H
	jg	SHORT $L85087
; Line 580
	mov	DWORD PTR _v46$[ebp], ecx
; Line 581
	jmp	SHORT $L85088
$L85087:
; Line 582
	push	112					; 00000070H
	pop	edx
	sub	edx, edi
	mov	DWORD PTR _v46$[ebp], edx
$L85088:
; Line 583
	lea	edx, DWORD PTR [ebx-15]
	test	edx, edx
; Line 585
	jge	SHORT $L85698
; Line 586
	lea	ecx, DWORD PTR [ebx+1]
$L85698:
; Line 587
	push	112					; 00000070H
	mov	DWORD PTR _v43$[ebp], ecx
	lea	ecx, DWORD PTR [ebx+15]
	pop	edx
	cmp	ecx, edx
	jle	SHORT $L85091
; Line 588
	mov	ecx, edx
	sub	ecx, ebx
	mov	DWORD PTR _v8$[ebp], ecx
$L85091:
; Line 590
	test	edi, edi
	jl	SHORT $L85092
	cmp	edi, edx
	jge	SHORT $L85092
	test	ebx, ebx
	jl	SHORT $L85092
	cmp	ebx, edx
	jge	SHORT $L85092
; Line 591
	mov	ecx, edi
	imul	ecx, 112				; 00000070H
	and	BYTE PTR _dTransVal[ecx+ebx], 0
$L85092:
; Line 592
	and	DWORD PTR _v55$[ebp], 0
; Line 594
	cmp	DWORD PTR _v43$[ebp], 0
	lea	eax, DWORD PTR [eax+esi*8]
	mov	DWORD PTR _v51$[ebp], eax
	jle	$L85096
; Line 595
	mov	DWORD PTR _v47$[ebp], ebx
$L85094:
; Line 597
	xor	edx, edx
	inc	edx
; Line 598
	cmp	DWORD PTR _v46$[ebp], edx
	mov	DWORD PTR _Lnuma$[ebp], edx
	jle	SHORT $L85097
; Line 601
	mov	ecx, DWORD PTR _v51$[ebp]
	lea	eax, DWORD PTR [edi+1]
	shl	ecx, 4
	add	ecx, DWORD PTR _v55$[ebp]
	mov	DWORD PTR _v9$[ebp], eax
	imul	eax, 112				; 00000070H
	shl	ecx, 4
	add	ecx, OFFSET FLAT:_dung_map_rgba
$L85098:
; Line 603
	movzx	edx, BYTE PTR [ecx+edx]
; Line 604
	cmp	edx, 128				; 00000080H
	jge	SHORT $L85107
; Line 605
	mov	esi, DWORD PTR _nRadius$[ebp]
	shl	esi, 7
; Line 606
	cmp	DWORD PTR _v9$[ebp], 0
	movzx	edx, BYTE PTR _dung_map_radius[esi+edx]
	mov	DWORD PTR _v13$[ebp], edx
	jl	SHORT $L85107
	cmp	DWORD PTR _v9$[ebp], 112		; 00000070H
	jge	SHORT $L85107
	mov	esi, DWORD PTR _v47$[ebp]
	test	esi, esi
	jl	SHORT $L85107
	cmp	esi, 112				; 00000070H
	jge	SHORT $L85107
; Line 607
	lea	esi, DWORD PTR _dTransVal[eax+esi]
; Line 611
	mov	edi, DWORD PTR _v52$[ebp]
; Line 612
	movsx	ebx, BYTE PTR [esi]
	sub	edx, ebx
	jns	SHORT $L85107
; Line 613
	mov	dl, BYTE PTR _v13$[ebp]
	mov	BYTE PTR [esi], dl
$L85107:
; Line 616
	mov	edx, DWORD PTR _Lnuma$[ebp]
; Line 617
	add	eax, 112				; 00000070H
	inc	edx
; Line 618
	inc	DWORD PTR _v9$[ebp]
; Line 619
	cmp	edx, DWORD PTR _v46$[ebp]
	mov	DWORD PTR _Lnuma$[ebp], edx
	jl	SHORT $L85098
; Line 620
	mov	ebx, DWORD PTR _v48$[ebp]
$L85097:
; Line 622
	inc	DWORD PTR _v55$[ebp]
; Line 623
	inc	DWORD PTR _v47$[ebp]
; Line 624
	mov	eax, DWORD PTR _v55$[ebp]
	cmp	eax, DWORD PTR _v43$[ebp]
	jl	$L85094
$L85096:
; Line 626
	lea	eax, DWORD PTR _d_b$[ebp]
	lea	edx, DWORD PTR _y$[ebp]
	push	eax
	lea	eax, DWORD PTR _d_g$[ebp]
	push	eax
	lea	eax, DWORD PTR _d_r$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_b$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_g$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_r$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	call	@SetLightFX@32
; Line 628
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	xor	esi, esi
; Line 629
	cmp	DWORD PTR _v8$[ebp], esi
	lea	eax, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR _v51$[ebp], eax
	jle	$L85111
; Line 630
	mov	eax, edi
	imul	eax, 112				; 00000070H
	lea	eax, DWORD PTR _dTransVal[eax]
	mov	DWORD PTR 12+[ebp], eax
$L85109:
; Line 632
	xor	eax, eax
	inc	eax
; Line 633
	cmp	DWORD PTR _v46$[ebp], eax
	mov	DWORD PTR _Lnumb$[ebp], eax
	jle	SHORT $L85112
; Line 635
	mov	edx, DWORD PTR _v51$[ebp]
	lea	ecx, DWORD PTR [ebx-1]
	mov	ebx, DWORD PTR _d_g$[ebp]
	shl	edx, 4
	add	edx, esi
	add	edx, DWORD PTR _d_b$[ebp]
	shl	edx, 4
	lea	edx, DWORD PTR _dung_map_rgba[edx+ebx]
	mov	DWORD PTR _v20$[ebp], edx
$L85113:
; Line 637
	mov	edx, DWORD PTR _v20$[ebp]
	movzx	eax, BYTE PTR [edx+eax]
; Line 638
	cmp	eax, 128				; 00000080H
	jge	SHORT $L85122
; Line 639
	mov	edx, DWORD PTR _nRadius$[ebp]
	shl	edx, 7
	movzx	edx, BYTE PTR _dung_map_radius[edx+eax]
; Line 640
	lea	eax, DWORD PTR [esi+edi]
	test	eax, eax
	jl	SHORT $L85122
	cmp	eax, 112				; 00000070H
	jge	SHORT $L85122
	test	ecx, ecx
	jl	SHORT $L85122
	cmp	ecx, 112				; 00000070H
	jge	SHORT $L85122
; Line 646
	mov	eax, DWORD PTR 12+[ebp]
	mov	edi, DWORD PTR _v52$[ebp]
	mov	ebx, edx
	movsx	eax, BYTE PTR [eax+ecx]
	sub	ebx, eax
	jns	SHORT $L85122
; Line 647
	mov	eax, DWORD PTR 12+[ebp]
	mov	BYTE PTR [eax+ecx], dl
$L85122:
; Line 650
	mov	eax, DWORD PTR _Lnumb$[ebp]
	inc	eax
; Line 651
	dec	ecx
; Line 652
	cmp	eax, DWORD PTR _v46$[ebp]
	mov	DWORD PTR _Lnumb$[ebp], eax
	jl	SHORT $L85113
; Line 653
	mov	ebx, DWORD PTR _v48$[ebp]
$L85112:
; Line 655
	add	DWORD PTR 12+[ebp], 112			; 00000070H
; Line 656
	inc	esi
; Line 657
	cmp	esi, DWORD PTR _v8$[ebp]
	jl	$L85109
$L85111:
; Line 659
	lea	eax, DWORD PTR _d_b$[ebp]
	lea	edx, DWORD PTR _y$[ebp]
	push	eax
	lea	eax, DWORD PTR _d_g$[ebp]
	push	eax
	lea	eax, DWORD PTR _d_r$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_b$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_g$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_r$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	call	@SetLightFX@32
; Line 661
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	and	DWORD PTR _v55$[ebp], 0
; Line 662
	cmp	DWORD PTR _v8$[ebp], 0
	lea	eax, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR _v51$[ebp], eax
	jle	$L85126
; Line 663
	mov	DWORD PTR _v46$[ebp], ebx
$L85124:
; Line 665
	xor	ecx, ecx
	inc	ecx
; Line 666
	cmp	DWORD PTR _v44$[ebp], ecx
	mov	DWORD PTR _Lnumc$[ebp], ecx
	jle	$L85127
; Line 669
	mov	edx, DWORD PTR _v51$[ebp]
	mov	eax, edi
	imul	eax, 112				; 00000070H
	shl	edx, 4
	add	edx, DWORD PTR _v55$[ebp]
	mov	ebx, DWORD PTR _d_g$[ebp]
	sub	eax, 112				; 00000070H
	lea	esi, DWORD PTR [edi-1]
	add	edx, DWORD PTR _d_b$[ebp]
	shl	edx, 4
	lea	edx, DWORD PTR _dung_map_rgba[edx+ebx]
	mov	DWORD PTR _v27$[ebp], edx
$L85128:
; Line 671
	mov	edx, DWORD PTR _v27$[ebp]
	movzx	ecx, BYTE PTR [edx+ecx]
; Line 672
	cmp	ecx, 128				; 00000080H
	jge	SHORT $L85137
; Line 673
	mov	edx, DWORD PTR _nRadius$[ebp]
	shl	edx, 7
; Line 674
	test	esi, esi
	movzx	edx, BYTE PTR _dung_map_radius[edx+ecx]
	mov	DWORD PTR _v29$[ebp], edx
	jl	SHORT $L85137
	cmp	esi, 112				; 00000070H
	jge	SHORT $L85137
	cmp	DWORD PTR _v46$[ebp], 0
	jl	SHORT $L85137
	cmp	DWORD PTR _v46$[ebp], 112		; 00000070H
	jge	SHORT $L85137
; Line 675
	mov	ecx, DWORD PTR _v46$[ebp]
; Line 679
	mov	edi, DWORD PTR _v52$[ebp]
	lea	ecx, DWORD PTR _dTransVal[eax+ecx]
; Line 680
	movsx	ebx, BYTE PTR [ecx]
	sub	edx, ebx
	jns	SHORT $L85137
; Line 681
	mov	dl, BYTE PTR _v29$[ebp]
	mov	BYTE PTR [ecx], dl
$L85137:
; Line 684
	mov	ecx, DWORD PTR _Lnumc$[ebp]
; Line 685
	sub	eax, 112				; 00000070H
	inc	ecx
; Line 686
	dec	esi
; Line 687
	cmp	ecx, DWORD PTR _v44$[ebp]
	mov	DWORD PTR _Lnumc$[ebp], ecx
	jl	SHORT $L85128
; Line 688
	mov	ebx, DWORD PTR _v48$[ebp]
$L85127:
; Line 690
	inc	DWORD PTR _v55$[ebp]
; Line 691
	dec	DWORD PTR _v46$[ebp]
; Line 692
	mov	eax, DWORD PTR _v55$[ebp]
	cmp	eax, DWORD PTR _v8$[ebp]
	jl	$L85124
$L85126:
; Line 694
	lea	eax, DWORD PTR _d_b$[ebp]
	lea	edx, DWORD PTR _y$[ebp]
	push	eax
	lea	eax, DWORD PTR _d_g$[ebp]
	push	eax
	lea	eax, DWORD PTR _d_r$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_b$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_g$[ebp]
	push	eax
	lea	eax, DWORD PTR _s_r$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	call	@SetLightFX@32
; Line 696
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	and	DWORD PTR _v55$[ebp], 0
; Line 697
	cmp	DWORD PTR _v43$[ebp], 0
	lea	eax, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR _v51$[ebp], eax
	jle	$L85142
; Line 698
	mov	DWORD PTR _Lnumd$[ebp], edi
; Line 699
	imul	edi, 112				; 00000070H
	lea	edi, DWORD PTR _dTransVal[edi]
$L85140:
; Line 701
	xor	ecx, ecx
	inc	ecx
; Line 702
	cmp	DWORD PTR _v44$[ebp], ecx
	mov	DWORD PTR _v32$[ebp], ecx
	jle	SHORT $L85146
; Line 704
	mov	edx, DWORD PTR _v51$[ebp]
	mov	esi, DWORD PTR _d_g$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _v55$[ebp]
	lea	eax, DWORD PTR [ebx+1]
	add	edx, DWORD PTR _d_b$[ebp]
	shl	edx, 4
	lea	edx, DWORD PTR _dung_map_rgba[edx+esi]
$L85144:
; Line 706
	movzx	ecx, BYTE PTR [edx+ecx]
; Line 707
	cmp	ecx, 128				; 00000080H
	jge	SHORT $L85154
; Line 708
	mov	esi, DWORD PTR _nRadius$[ebp]
	shl	esi, 7
; Line 709
	cmp	DWORD PTR _Lnumd$[ebp], 0
	movzx	ecx, BYTE PTR _dung_map_radius[esi+ecx]
	jl	SHORT $L85154
	cmp	DWORD PTR _Lnumd$[ebp], 112		; 00000070H
	jge	SHORT $L85154
	test	eax, eax
	jl	SHORT $L85154
	cmp	eax, 112				; 00000070H
	jge	SHORT $L85154
; Line 714
	mov	esi, DWORD PTR _v48$[ebp]
	mov	ebx, ecx
	mov	DWORD PTR _v4$[ebp], esi
; Line 715
	movsx	esi, BYTE PTR [edi+eax]
	sub	ebx, esi
; Line 716
	mov	ebx, DWORD PTR _v4$[ebp]
	jns	SHORT $L85154
	mov	BYTE PTR [edi+eax], cl
$L85154:
; Line 719
	mov	ecx, DWORD PTR _v32$[ebp]
	inc	ecx
; Line 720
	inc	eax
; Line 721
	cmp	ecx, DWORD PTR _v44$[ebp]
	mov	DWORD PTR _v32$[ebp], ecx
	jl	SHORT $L85144
$L85146:
; Line 723
	inc	DWORD PTR _v55$[ebp]
; Line 724
	dec	DWORD PTR _Lnumd$[ebp]
; Line 726
	mov	eax, DWORD PTR _v55$[ebp]
	sub	edi, 112				; 00000070H
	cmp	eax, DWORD PTR _v43$[ebp]
	jl	$L85140
$L85142:
	pop	edi
	pop	esi
	pop	ebx
; Line 728
	leave
	ret	8
@DoLighting@16 ENDP
_TEXT	ENDS
PUBLIC	@DoUnLight@12
EXTRN	_dTransVal2:BYTE
; Function compile flags: /Ogsy
;	COMDAT @DoUnLight@12
_TEXT	SEGMENT
_nRadius$ = 8
_radius_block$ = 8
@DoUnLight@12 PROC NEAR					; COMDAT
; _nXPos$ = ecx
; _nYPos$ = edx
; Line 731
	push	ebp
	mov	ebp, esp
; Line 740
	mov	eax, DWORD PTR _nRadius$[ebp]
	push	ebx
	push	esi
; Line 742
	mov	esi, ecx
	lea	ebx, DWORD PTR [edx+eax+1]
	sub	edx, eax
	sub	esi, eax
	dec	edx
	dec	esi
; Line 743
	lea	ecx, DWORD PTR [ecx+eax+1]
; Line 744
	test	edx, edx
	jge	SHORT $L85170
; Line 745
	xor	edx, edx
$L85170:
; Line 746
	push	112					; 00000070H
	pop	eax
	cmp	ebx, eax
	jle	SHORT $L85171
; Line 747
	mov	ebx, eax
$L85171:
; Line 748
	test	esi, esi
	jge	SHORT $L85172
; Line 749
	xor	esi, esi
$L85172:
; Line 750
	cmp	ecx, eax
	jle	SHORT $L85173
; Line 751
	mov	ecx, eax
$L85173:
; Line 752
	cmp	edx, ebx
	mov	DWORD PTR _radius_block$[ebp], edx
	jge	SHORT $L85176
	push	edi
$L85174:
; Line 754
	cmp	esi, ecx
	mov	edi, esi
	jge	SHORT $L85180
; Line 755
	mov	eax, esi
	imul	eax, 112				; 00000070H
	add	eax, DWORD PTR _radius_block$[ebp]
$L85178:
; Line 757
	test	edi, edi
	jl	SHORT $L85181
	cmp	edi, 112				; 00000070H
	jge	SHORT $L85181
	cmp	DWORD PTR _radius_block$[ebp], 0
	jl	SHORT $L85181
	cmp	DWORD PTR _radius_block$[ebp], 112	; 00000070H
	jge	SHORT $L85181
; Line 758
	mov	dl, BYTE PTR _dTransVal2[eax]
	mov	BYTE PTR _dTransVal[eax], dl
$L85181:
; Line 759
	inc	edi
; Line 761
	add	eax, 112				; 00000070H
	cmp	edi, ecx
	jl	SHORT $L85178
$L85180:
; Line 752
	inc	DWORD PTR _radius_block$[ebp]
	cmp	DWORD PTR _radius_block$[ebp], ebx
	jl	SHORT $L85174
	pop	edi
$L85176:
	pop	esi
	pop	ebx
; Line 764
	pop	ebp
	ret	4
@DoUnLight@12 ENDP
_TEXT	ENDS
PUBLIC	@DoUnVision@12
EXTRN	_dFlags:BYTE
; Function compile flags: /Ogsy
;	COMDAT @DoUnVision@12
_TEXT	SEGMENT
_nRadius$ = 8
@DoUnVision@12 PROC NEAR				; COMDAT
; _nXPos$ = ecx
; _nYPos$ = edx
; Line 767
	push	esi
; Line 776
	mov	esi, DWORD PTR _nRadius$[esp]
	push	edi
; Line 778
	mov	eax, ecx
	lea	edi, DWORD PTR [edx+esi+1]
	sub	edx, esi
	sub	eax, esi
	dec	edx
	dec	eax
; Line 779
	lea	esi, DWORD PTR [ecx+esi+1]
; Line 780
	test	edx, edx
	jge	SHORT $L85196
; Line 781
	xor	edx, edx
$L85196:
; Line 782
	cmp	edi, 112				; 00000070H
	jle	SHORT $L85197
; Line 783
	push	112					; 00000070H
	pop	edi
$L85197:
; Line 784
	test	eax, eax
	jge	SHORT $L85198
; Line 785
	xor	eax, eax
$L85198:
; Line 786
	cmp	esi, 112				; 00000070H
	jle	SHORT $L85199
; Line 787
	push	112					; 00000070H
	pop	esi
$L85199:
; Line 788
	cmp	eax, esi
	jge	SHORT $L85203
; Line 789
	mov	ecx, eax
	imul	ecx, 112				; 00000070H
	add	ecx, OFFSET FLAT:_dFlags
; Line 790
	sub	esi, eax
$L85201:
; Line 792
	cmp	edx, edi
	mov	eax, edx
	jge	SHORT $L85206
$L85204:
; Line 793
	and	BYTE PTR [eax+ecx], -67			; ffffffbdH
	inc	eax
	cmp	eax, edi
	jl	SHORT $L85204
$L85206:
; Line 794
	add	ecx, 112				; 00000070H
; Line 795
	dec	esi
; Line 796
	jne	SHORT $L85201
$L85203:
	pop	edi
	pop	esi
; Line 798
	ret	4
@DoUnVision@12 ENDP
_TEXT	ENDS
PUBLIC	@DoVision@20
EXTRN	_nBlockTable:BYTE
EXTRN	@SetAutomapView@8:NEAR
EXTRN	_dPiece:BYTE
EXTRN	_dung_map:BYTE
EXTRN	_TransList:BYTE
; Function compile flags: /Ogsy
;	COMDAT @DoVision@20
_TEXT	SEGMENT
_nXPos$ = -8
_nYPos$ = -12
_nRadius$ = 8
_doautomap$ = 12
_visible$ = 16
_v9$ = -40
_i$ = -52
_v19$ = -48
_v21$ = -36
_v23$ = -32
_v24$ = -28
_v25$ = -24
_v26$ = -20
_v27$ = -16
_v30$ = -1
_v31$ = -1
@DoVision@20 PROC NEAR					; COMDAT
; _nXPos$ = ecx
; _nYPos$ = edx
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
	mov	edi, edx
	mov	DWORD PTR _nXPos$[ebp], ebx
; Line 832
	test	ebx, ebx
	mov	DWORD PTR _nYPos$[ebp], edi
	jl	SHORT $L85245
	cmp	ebx, 112				; 00000070H
	jg	SHORT $L85245
	test	edi, edi
	jl	SHORT $L85245
	cmp	edi, 112				; 00000070H
	jg	SHORT $L85245
; Line 833
	cmp	BYTE PTR _doautomap$[ebp], 0
	je	SHORT $L85246
; Line 834
	mov	eax, ebx
	imul	eax, 112				; 00000070H
	lea	esi, DWORD PTR _dFlags[eax+edi]
; Line 835
	cmp	BYTE PTR [esi], 0
	jl	SHORT $L85247
; Line 836
	mov	edx, ebx
	call	@SetAutomapView@8
$L85247:
; Line 840
	or	BYTE PTR [esi], -128			; ffffff80H
$L85246:
; Line 842
	cmp	DWORD PTR _visible$[ebp], 0
	je	SHORT $L85248
; Line 843
	mov	eax, ebx
	imul	eax, 112				; 00000070H
	lea	eax, DWORD PTR _dFlags[eax+edi]
	or	BYTE PTR [eax], 64			; 00000040H
$L85248:
; Line 844
	imul	ebx, 112				; 00000070H
	lea	eax, DWORD PTR _dFlags[ebx+edi]
	or	BYTE PTR [eax], 2
$L85245:
; Line 847
	movzx	esi, BYTE PTR _doautomap$[ebp]
	and	DWORD PTR _v27$[ebp], 0
; Line 848
	mov	edi, esi
$L85249:
; Line 851
	mov	ecx, OFFSET FLAT:_vCrawlTable+1
	mov	DWORD PTR -44+[ebp], OFFSET FLAT:_RadiusAdj
; Line 852
	mov	DWORD PTR _v19$[ebp], ecx
$L85252:
; Line 856
	mov	edx, DWORD PTR -44+[ebp]
	xor	eax, eax
	mov	DWORD PTR _v9$[ebp], eax
	mov	DWORD PTR _v21$[ebp], eax
	movzx	ebx, BYTE PTR [edx]
	mov	edx, DWORD PTR _nRadius$[ebp]
	sub	edx, ebx
	xor	ebx, ebx
	add	edx, edx
	cmp	edx, ebx
	mov	DWORD PTR _i$[ebp], edx
	jle	$L85717
	jmp	SHORT $L85255
$L85727:
	xor	ebx, ebx
$L85255:
; Line 857
	cmp	DWORD PTR _v21$[ebp], ebx
	jne	$L85717
; Line 863
	mov	edx, DWORD PTR _v27$[ebp]
	mov	DWORD PTR _v26$[ebp], ebx
	cmp	edx, ebx
	mov	DWORD PTR _v24$[ebp], ebx
	mov	DWORD PTR _v25$[ebp], ebx
	mov	DWORD PTR _v23$[ebp], ebx
	je	$L85259
; Line 864
	dec	edx
	je	SHORT $L85264
	dec	edx
	je	SHORT $L85268
	dec	edx
	jne	$L85278
; Line 886
	movzx	edx, BYTE PTR [eax+ecx-1]
; Line 887
	mov	esi, DWORD PTR _nXPos$[ebp]
; Line 888
	mov	bl, BYTE PTR [eax+ecx]
	movzx	edi, dl
	sub	esi, edi
; Line 889
	movzx	edi, bl
	add	edi, DWORD PTR _nYPos$[ebp]
; Line 890
	test	dl, dl
	je	$L85278
; Line 891
	test	bl, bl
	je	$L85278
; Line 892
	or	DWORD PTR _v25$[ebp], -1
; Line 893
	mov	DWORD PTR _v24$[ebp], 1
; Line 896
	jmp	$L85278
$L85268:
; Line 876
	movzx	edx, BYTE PTR [eax+ecx-1]
; Line 877
	mov	bl, BYTE PTR [eax+ecx]
; Line 879
	mov	edi, DWORD PTR _nYPos$[ebp]
	mov	BYTE PTR _v30$[ebp], bl
	movzx	esi, dl
	add	esi, DWORD PTR _nXPos$[ebp]
	movzx	ebx, bl
	sub	edi, ebx
; Line 880
	test	dl, dl
	je	SHORT $L85278
	cmp	BYTE PTR _v30$[ebp], 0
	je	SHORT $L85278
; Line 881
	or	DWORD PTR _v26$[ebp], -1
; Line 882
	mov	DWORD PTR _v23$[ebp], 1
; Line 884
	jmp	SHORT $L85278
$L85264:
; Line 866
	movzx	edx, BYTE PTR [eax+ecx-1]
; Line 868
	mov	bl, BYTE PTR [eax+ecx]
	mov	esi, DWORD PTR _nXPos$[ebp]
	movzx	edi, dl
	mov	BYTE PTR _v31$[ebp], bl
	sub	esi, edi
; Line 869
	mov	edi, DWORD PTR _nYPos$[ebp]
	movzx	ebx, bl
	sub	edi, ebx
; Line 870
	test	dl, dl
	je	SHORT $L85278
	cmp	BYTE PTR _v31$[ebp], 0
	je	SHORT $L85278
; Line 871
	xor	edx, edx
	inc	edx
	mov	DWORD PTR _v25$[ebp], edx
; Line 872
	mov	DWORD PTR _v24$[ebp], edx
; Line 898
	jmp	SHORT $L85278
$L85259:
; Line 899
	mov	bl, BYTE PTR [eax+ecx-1]
; Line 900
	mov	dl, BYTE PTR [eax+ecx]
; Line 901
	movzx	esi, bl
	add	esi, DWORD PTR _nXPos$[ebp]
; Line 902
	movzx	edi, dl
	add	edi, DWORD PTR _nYPos$[ebp]
; Line 903
	test	bl, bl
	je	SHORT $L85278
	test	dl, dl
	je	SHORT $L85278
; Line 904
	or	DWORD PTR _v26$[ebp], -1
; Line 905
	or	DWORD PTR _v23$[ebp], -1
$L85278:
; Line 908
	test	esi, esi
	jl	$L85256
	cmp	esi, 112				; 00000070H
	jg	$L85256
	test	edi, edi
	jl	$L85256
	cmp	edi, 112				; 00000070H
	jg	$L85256
; Line 909
	mov	eax, esi
	imul	eax, 112				; 00000070H
	lea	ebx, DWORD PTR [eax+edi]
; Line 910
	mov	eax, DWORD PTR _dPiece[ebx*4]
	movzx	eax, BYTE PTR _nBlockTable[eax]
	mov	DWORD PTR _v21$[ebp], eax
; Line 912
	mov	eax, DWORD PTR _v26$[ebp]
	add	eax, esi
	imul	eax, 112				; 00000070H
	add	eax, DWORD PTR _v25$[ebp]
	add	eax, edi
	mov	eax, DWORD PTR _dPiece[eax*4]
	cmp	BYTE PTR _nBlockTable[eax], 0
	je	SHORT $L85282
	mov	eax, DWORD PTR _v24$[ebp]
	add	eax, esi
	imul	eax, 112				; 00000070H
	add	eax, DWORD PTR _v23$[ebp]
	add	eax, edi
	mov	eax, DWORD PTR _dPiece[eax*4]
	cmp	BYTE PTR _nBlockTable[eax], 0
	jne	SHORT $L85721
$L85282:
; Line 914
	cmp	BYTE PTR _doautomap$[ebp], 0
	mov	eax, ebx
	je	SHORT $L85283
; Line 915
	cmp	BYTE PTR _dFlags[ebx], 0
	jl	SHORT $L85284
; Line 916
	mov	edx, edi
	mov	ecx, esi
	call	@SetAutomapView@8
; Line 918
	mov	ecx, DWORD PTR _v19$[ebp]
	mov	eax, ebx
$L85284:
; Line 920
	or	BYTE PTR _dFlags[eax], -128		; ffffff80H
$L85283:
; Line 922
	cmp	DWORD PTR _visible$[ebp], 0
	je	SHORT $L85285
; Line 923
	or	BYTE PTR _dFlags[eax], 64		; 00000040H
$L85285:
; Line 924
	or	BYTE PTR _dFlags[eax], 2
; Line 925
	cmp	DWORD PTR _v21$[ebp], 0
	jne	SHORT $L85721
; Line 926
	movsx	eax, BYTE PTR _dung_map[eax]
; Line 927
	test	eax, eax
	je	SHORT $L85721
; Line 928
	mov	BYTE PTR _TransList[eax], 1
$L85721:
	mov	eax, DWORD PTR _v9$[ebp]
$L85256:
; Line 856
	inc	eax
	inc	eax
	cmp	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _v9$[ebp], eax
	jl	$L85727
$L85717:
; Line 933
	inc	DWORD PTR -44+[ebp]
; Line 934
	add	ecx, 30					; 0000001eH
; Line 936
	cmp	ecx, OFFSET FLAT:_vCrawlTable+691
	mov	DWORD PTR _v19$[ebp], ecx
	jl	$L85252
; Line 937
	inc	DWORD PTR _v27$[ebp]
; Line 938
	cmp	DWORD PTR _v27$[ebp], 4
	jl	$L85249
	pop	edi
	pop	esi
	pop	ebx
; Line 939
	leave
	ret	12					; 0000000cH
@DoVision@20 ENDP
_TEXT	ENDS
PUBLIC	_FreeLightTable
EXTRN	@mem_free_dbg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _FreeLightTable
_TEXT	SEGMENT
_FreeLightTable PROC NEAR				; COMDAT
; Line 945
	mov	ecx, DWORD PTR _pLightTbl
; Line 946
	and	DWORD PTR _pLightTbl, 0
; Line 947
	jmp	@mem_free_dbg@4
_FreeLightTable ENDP
_TEXT	ENDS
PUBLIC	_InitLightTable
EXTRN	@DiabloAllocPtr@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _InitLightTable
_TEXT	SEGMENT
_InitLightTable PROC NEAR				; COMDAT
; Line 952
	mov	ecx, 6912				; 00001b00H
	call	@DiabloAllocPtr@4
	mov	DWORD PTR _pLightTbl, eax
; Line 953
	ret	0
_InitLightTable ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@EAIB@PlrGFX?2Infra?4TRN?$AA@		; `string'
PUBLIC	??_C@_0BB@NKDM@PlrGFX?2Stone?4TRN?$AA@		; `string'
PUBLIC	_MakeLightTable
PUBLIC	__real@402e000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@bfe0000000000000
EXTRN	_light4flag:DWORD
EXTRN	__ftol:NEAR
EXTRN	__fltused:NEAR
EXTRN	@LoadFileInMem@8:NEAR
EXTRN	_sqrt:NEAR
EXTRN	_memset:NEAR
EXTRN	_leveltype:BYTE
;	COMDAT ??_C@_0BB@EAIB@PlrGFX?2Infra?4TRN?$AA@
_DATA	SEGMENT
??_C@_0BB@EAIB@PlrGFX?2Infra?4TRN?$AA@ DB 'PlrGFX\Infra.TRN', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NKDM@PlrGFX?2Stone?4TRN?$AA@
_DATA	SEGMENT
??_C@_0BB@NKDM@PlrGFX?2Stone?4TRN?$AA@ DB 'PlrGFX\Stone.TRN', 00H ; `string'
_DATA	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
; Function compile flags: /Ogsy
CONST	ENDS
;	COMDAT _MakeLightTable
_TEXT	SEGMENT
_v49$ = -12
_v50$ = -16
_v51$ = -4
_v52$ = -8
_v14$ = -16
_v38$ = -20
_v45$ = -44
_v47$ = -24
_MakeLightTable PROC NEAR				; COMDAT
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
; Line 1011
	and	DWORD PTR _v51$[ebp], 0
	push	ebx
	push	esi
	push	edi
; Line 1013
	mov	edi, DWORD PTR _light4flag
	mov	esi, DWORD PTR _pLightTbl
	neg	edi
	sbb	edi, edi
	and	edi, -12				; fffffff4H
	add	edi, 15					; 0000000fH
; Line 1015
	test	edi, edi
	jle	$L85351
; Line 1016
	mov	DWORD PTR _v49$[ebp], edi
$L85349:
; Line 1018
	and	BYTE PTR [esi], 0
	inc	esi
; Line 1019
	xor	edx, edx
$L85352:
; Line 1021
	mov	al, dl
	shl	al, 4
	mov	cl, al
; Line 1022
	add	al, BYTE PTR _v51$[ebp]
	add	cl, 15					; 0000000fH
; Line 1023
	xor	ebx, ebx
$L85355:
; Line 1025
	test	ebx, ebx
	jne	SHORT $L85359
	test	edx, edx
	je	SHORT $L85358
$L85359:
; Line 1026
	mov	BYTE PTR [esi], al
	inc	esi
$L85358:
; Line 1027
	cmp	al, cl
	jb	SHORT $L85360
; Line 1028
	xor	cl, cl
; Line 1029
	xor	al, al
; Line 1030
	jmp	SHORT $L85361
$L85360:
; Line 1031
	inc	al
$L85361:
; Line 1033
	inc	ebx
; Line 1034
	cmp	ebx, 16					; 00000010H
	jl	SHORT $L85355
; Line 1035
	inc	edx
; Line 1036
	cmp	edx, 8
	jl	SHORT $L85352
; Line 1038
	mov	edx, DWORD PTR _v51$[ebp]
	mov	DWORD PTR _v52$[ebp], 16		; 00000010H
	sar	edx, 1
$L85362:
; Line 1041
	mov	al, BYTE PTR _v52$[ebp]
	push	8
	shl	al, 3
	mov	cl, al
	pop	ebx
	add	cl, dl
; Line 1042
	add	al, 7
$L85365:
; Line 1044
	mov	BYTE PTR [esi], cl
	inc	esi
; Line 1045
	cmp	cl, al
	jb	SHORT $L85368
; Line 1046
	xor	al, al
; Line 1047
	xor	cl, cl
; Line 1048
	jmp	SHORT $L85369
$L85368:
; Line 1049
	inc	cl
$L85369:
; Line 1052
	dec	ebx
	jne	SHORT $L85365
; Line 1053
	inc	DWORD PTR _v52$[ebp]
; Line 1054
	cmp	DWORD PTR _v52$[ebp], 20		; 00000014H
	jl	SHORT $L85362
; Line 1055
	push	10					; 0000000aH
	pop	edx
$L85370:
; Line 1058
	mov	al, dl
	push	16					; 00000010H
	shl	al, 4
	mov	cl, al
	pop	ebx
	add	cl, BYTE PTR _v51$[ebp]
; Line 1059
	add	al, 15					; 0000000fH
$L85373:
; Line 1061
	mov	BYTE PTR [esi], cl
	inc	esi
; Line 1062
	cmp	cl, al
; Line 1065
	jae	SHORT $L85786
; Line 1066
	inc	cl
; Line 1068
	cmp	cl, 255					; 000000ffH
	jne	SHORT $L85379
$L85786:
; Line 1069
	xor	al, al
; Line 1070
	xor	cl, cl
$L85379:
; Line 1073
	dec	ebx
	jne	SHORT $L85373
; Line 1074
	inc	edx
; Line 1075
	cmp	edx, 16					; 00000010H
	jl	SHORT $L85370
; Line 1076
	cmp	DWORD PTR _light4flag, 0
	je	SHORT $L85380
; Line 1077
	add	DWORD PTR _v51$[ebp], 5
; Line 1078
	jmp	SHORT $L85381
$L85380:
; Line 1079
	inc	DWORD PTR _v51$[ebp]
$L85381:
; Line 1080
	dec	DWORD PTR _v49$[ebp]
; Line 1081
	jne	$L85349
$L85351:
; Line 1083
	mov	ebx, 256				; 00000100H
	push	ebx
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1084
	add	esi, ebx
; Line 1085
	cmp	BYTE PTR _leveltype, 4
	jne	$L85382
; Line 1086
	mov	ecx, DWORD PTR _pLightTbl
; Line 1087
	test	edi, edi
	jle	$L85386
; Line 1088
	mov	DWORD PTR _v14$[ebp], edi
$L85384:
; Line 1093
	mov	ebx, DWORD PTR _v14$[ebp]
	and	DWORD PTR _v52$[ebp], 0
	and	BYTE PTR _v45$[ebp], 0
; Line 1095
	mov	eax, edi
	xor	esi, esi
	mov	DWORD PTR _v51$[ebp], ebx
	cdq
	inc	esi
	idiv	ebx
	mov	DWORD PTR -20+[ebp], eax
	mov	DWORD PTR -24+[ebp], edx
; Line 1097
	mov	al, 1
$L85388:
; Line 1101
	mov	edx, DWORD PTR _v51$[ebp]
; Line 1102
	mov	ebx, DWORD PTR _v14$[ebp]
	add	edx, DWORD PTR -24+[ebp]
	mov	BYTE PTR _v45$[ebp+esi], al
	cmp	edx, ebx
	mov	DWORD PTR _v51$[ebp], edx
	jle	SHORT $L85391
	cmp	esi, 15					; 0000000fH
	jge	SHORT $L85391
; Line 1103
	inc	esi
; Line 1104
	sub	DWORD PTR _v51$[ebp], ebx
; Line 1105
	mov	BYTE PTR _v45$[ebp+esi], al
$L85391:
; Line 1107
	inc	DWORD PTR _v52$[ebp]
	mov	edx, DWORD PTR _v52$[ebp]
	cmp	edx, DWORD PTR -20+[ebp]
	jne	SHORT $L85393
; Line 1108
	inc	al
; Line 1109
	and	DWORD PTR _v52$[ebp], 0
$L85393:
; Line 1111
	inc	esi
; Line 1112
	cmp	esi, 16					; 00000010H
	jl	SHORT $L85388
; Line 1115
	mov	eax, DWORD PTR _v45$[ebp+1]
	and	BYTE PTR [ecx], 0
	mov	DWORD PTR [ecx+1], eax
; Line 1116
	mov	eax, DWORD PTR _v45$[ebp+5]
	mov	DWORD PTR [ecx+5], eax
; Line 1117
	mov	eax, DWORD PTR _v45$[ebp+9]
	mov	DWORD PTR [ecx+9], eax
; Line 1118
	mov	ax, WORD PTR _v45$[ebp+13]
	mov	WORD PTR [ecx+13], ax
; Line 1119
	mov	al, BYTE PTR _v45$[ebp+15]
; Line 1120
	push	15					; 0000000fH
	mov	BYTE PTR [ecx+15], al
	pop	edx
; Line 1121
	lea	eax, DWORD PTR [ecx+16]
$L85405:
; Line 1123
	mov	cl, BYTE PTR _v45$[ebp+edx]
	mov	BYTE PTR [eax], cl
	inc	eax
	dec	edx
; Line 1124
	test	edx, edx
	jg	SHORT $L85405
; Line 1127
	dec	DWORD PTR _v14$[ebp]
	mov	BYTE PTR [eax], 1
	lea	ecx, DWORD PTR [eax+225]
; Line 1129
	jne	$L85384
	mov	ebx, 256				; 00000100H
$L85386:
; Line 1131
	and	BYTE PTR [ecx], 0
; Line 1132
	lea	esi, DWORD PTR [ecx+1]
; Line 1133
	push	28					; 0000001cH
	push	1
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1135
	mov	WORD PTR [esi+28], 257			; 00000101H
; Line 1136
	mov	BYTE PTR [esi+30], 1
; Line 1137
	add	esi, 255				; 000000ffH
$L85382:
; Line 1139
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BB@EAIB@PlrGFX?2Infra?4TRN?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	edi, eax
; Line 1140
	xor	edx, edx
$L85413:
; Line 1142
	mov	al, BYTE PTR [edx+edi]
	mov	BYTE PTR [esi], al
	inc	esi
	inc	edx
; Line 1143
	cmp	edx, ebx
	jl	SHORT $L85413
; Line 1144
	mov	ecx, edi
	call	@mem_free_dbg@4
; Line 1145
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BB@NKDM@PlrGFX?2Stone?4TRN?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	edi, eax
; Line 1146
	xor	edx, edx
$L85417:
; Line 1148
	mov	al, BYTE PTR [edx+edi]
	mov	BYTE PTR [esi], al
	inc	esi
	inc	edx
; Line 1149
	cmp	edx, ebx
	jl	SHORT $L85417
; Line 1150
	mov	ecx, edi
	call	@mem_free_dbg@4
; Line 1151
	xor	ecx, ecx
$L85420:
; Line 1153
	mov	al, -30					; ffffffe2H
$L85423:
; Line 1155
	test	ecx, ecx
	jne	SHORT $L85427
	cmp	al, -30					; ffffffe2H
	jne	SHORT $L85427
; Line 1158
	and	BYTE PTR [esi], cl
	jmp	SHORT $L85428
$L85427:
; Line 1156
	mov	BYTE PTR [esi], al
$L85428:
; Line 1159
	inc	esi
; Line 1160
	inc	al
; Line 1161
	cmp	al, 239					; 000000efH
	jb	SHORT $L85423
; Line 1162
	and	BYTE PTR [esi], 0
; Line 1163
	lea	eax, DWORD PTR [esi+1]
; Line 1168
	push	8
	and	BYTE PTR [eax], 0
	inc	eax
	pop	edi
	and	BYTE PTR [eax], 0
	inc	ecx
	cmp	ecx, edi
	lea	esi, DWORD PTR [eax+1]
	jl	SHORT $L85420
; Line 1169
	push	4
	pop	edx
$L85432:
; Line 1171
	mov	al, -32					; ffffffe0H
	mov	ecx, edi
$L85435:
; Line 1174
	mov	BYTE PTR [esi], al
	inc	esi
; Line 1175
	add	al, 2
; Line 1177
	dec	ecx
	jne	SHORT $L85435
; Line 1179
	dec	edx
	jne	SHORT $L85432
; Line 1180
	push	6
	pop	ecx
$L85438:
; Line 1182
	mov	al, -32					; ffffffe0H
$L85441:
; Line 1184
	mov	BYTE PTR [esi], al
	inc	esi
	inc	al
; Line 1185
	cmp	al, 239					; 000000efH
	jb	SHORT $L85441
; Line 1186
	and	BYTE PTR [esi], 0
	inc	esi
; Line 1188
	dec	ecx
	jne	SHORT $L85438
; Line 1191
	mov	DWORD PTR _v52$[ebp], edi
	xor	eax, eax
	mov	DWORD PTR _v51$[ebp], OFFSET FLAT:_dung_map_radius
	mov	edi, 128				; 00000080H
$L85446:
; Line 1193
	xor	esi, esi
; Line 1195
	inc	eax
	mov	DWORD PTR _v49$[ebp], esi
	mov	DWORD PTR _v50$[ebp], eax
$L85449:
; Line 1197
	cmp	esi, DWORD PTR _v52$[ebp]
	jg	SHORT $L85452
; Line 1198
	fild	DWORD PTR _v49$[ebp]
	fmul	QWORD PTR __real@402e000000000000
	fild	DWORD PTR _v50$[ebp]
	fmul	QWORD PTR __real@4020000000000000
	fdivp	ST(1), ST(0)
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol
	mov	ecx, DWORD PTR _v51$[ebp]
	mov	BYTE PTR [esi+ecx], al
; Line 1199
	jmp	SHORT $L85457
$L85452:
; Line 1200
	mov	eax, DWORD PTR _v51$[ebp]
	mov	BYTE PTR [esi+eax], 15			; 0000000fH
$L85457:
; Line 1201
	inc	esi
; Line 1202
	cmp	esi, edi
	mov	DWORD PTR _v49$[ebp], esi
	jl	SHORT $L85449
; Line 1203
	add	DWORD PTR _v52$[ebp], 8
; Line 1204
	add	DWORD PTR _v51$[ebp], edi
; Line 1206
	cmp	DWORD PTR _v52$[ebp], 136		; 00000088H
	mov	eax, DWORD PTR _v50$[ebp]
	jl	SHORT $L85446
; Line 1207
	and	DWORD PTR _v49$[ebp], 0
; Line 1208
	mov	edi, OFFSET FLAT:_dung_map_rgba
$L85459:
; Line 1210
	and	DWORD PTR _v52$[ebp], 0
$L85462:
; Line 1213
	mov	eax, DWORD PTR _v49$[ebp]
; Line 1214
	mov	DWORD PTR _v47$[ebp], 16		; 00000010H
	mov	DWORD PTR _v50$[ebp], eax
$L85465:
; Line 1217
	mov	esi, DWORD PTR _v50$[ebp]
; Line 1218
	mov	eax, DWORD PTR _v52$[ebp]
	and	DWORD PTR _v38$[ebp], 0
	imul	esi, esi
	mov	DWORD PTR _v51$[ebp], eax
$L85468:
; Line 1220
	mov	eax, DWORD PTR _v51$[ebp]
; Line 1221
	push	ecx
	imul	eax, eax
	add	eax, esi
	push	ecx
; Line 1222
	mov	DWORD PTR -28+[ebp], eax
	fild	DWORD PTR -28+[ebp]
	fstp	QWORD PTR [esp]
	call	_sqrt
	pop	ecx
	pop	ecx
	call	__ftol
	movzx	eax, al
	mov	DWORD PTR -28+[ebp], eax
	fild	DWORD PTR -28+[ebp]
; Line 1223
	fcom	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $L85475
; Line 1224
	fld	QWORD PTR __real@3fe0000000000000
; Line 1225
	jmp	SHORT $L85476
$L85475:
; Line 1226
	fld	QWORD PTR __real@bfe0000000000000
$L85476:
; Line 1228
	add	DWORD PTR _v51$[ebp], 8
; Line 1229
	fadd	ST(0), ST(1)
	call	__ftol
	mov	ecx, DWORD PTR _v38$[ebp]
	inc	DWORD PTR _v38$[ebp]
; Line 1230
	cmp	DWORD PTR _v38$[ebp], 16		; 00000010H
	fstp	ST(0)
	mov	BYTE PTR [ecx+edi], al
	jl	SHORT $L85468
; Line 1231
	add	DWORD PTR _v50$[ebp], 8
; Line 1233
	mov	ecx, DWORD PTR _v47$[ebp]
	xor	eax, eax
	add	edi, 16					; 00000010H
	dec	DWORD PTR _v47$[ebp]
	inc	eax
	cmp	ecx, eax
	je	SHORT $L85740
	xor	al, al
$L85740:
; Line 1235
	test	al, al
	je	$L85465
; Line 1236
	dec	DWORD PTR _v52$[ebp]
; Line 1238
	cmp	DWORD PTR _v52$[ebp], -8		; fffffff8H
	jg	$L85462
; Line 1239
	dec	DWORD PTR _v49$[ebp]
; Line 1240
	cmp	edi, OFFSET FLAT:_dung_map_rgba+16384
	jl	$L85459
	pop	edi
	pop	esi
	pop	ebx
; Line 1241
	leave
	ret	0
_MakeLightTable ENDP
_TEXT	ENDS
PUBLIC	_InitLightMax
; Function compile flags: /Ogsy
;	COMDAT _InitLightMax
_TEXT	SEGMENT
_InitLightMax PROC NEAR					; COMDAT
; Line 1266
	cmp	DWORD PTR _light4flag, 0
	setne	al
	dec	al
	and	al, 12					; 0000000cH
	add	al, 3
	mov	BYTE PTR _lightmax, al
; Line 1267
	ret	0
_InitLightMax ENDP
_TEXT	ENDS
PUBLIC	_InitLighting
; Function compile flags: /Ogsy
;	COMDAT _InitLighting
_TEXT	SEGMENT
_InitLighting PROC NEAR					; COMDAT
; Line 1275
	xor	eax, eax
; Line 1276
	mov	DWORD PTR _numlights, eax
; Line 1277
	mov	DWORD PTR _dolighting, eax
; Line 1278
	mov	DWORD PTR _lightflag, eax
$L85485:
; Line 1280
	mov	BYTE PTR _lightactive[eax], al
; Line 1281
	inc	eax
; Line 1282
	cmp	eax, 32					; 00000020H
	jl	SHORT $L85485
; Line 1283
	ret	0
_InitLighting ENDP
_TEXT	ENDS
PUBLIC	@AddLight@12
; Function compile flags: /Ogsy
;	COMDAT @AddLight@12
_TEXT	SEGMENT
_r$ = 8
@AddLight@12 PROC NEAR					; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 1288
	push	esi
	push	edi
; Line 1292
	xor	edi, edi
	or	eax, -1
	cmp	DWORD PTR _lightflag, edi
	jne	SHORT $L85496
	mov	esi, DWORD PTR _numlights
	cmp	esi, 32					; 00000020H
	jge	SHORT $L85496
; Line 1293
	movsx	eax, BYTE PTR _lightactive[esi]
	inc	esi
; Line 1294
	mov	DWORD PTR _dolighting, 1
	mov	DWORD PTR _numlights, esi
; Line 1295
	mov	esi, eax
	imul	esi, 52					; 00000034H
	mov	DWORD PTR _LightList[esi], ecx
; Line 1297
	mov	ecx, DWORD PTR _r$[esp+4]
	mov	DWORD PTR _LightList[esi+4], edx
	mov	DWORD PTR _LightList[esi+8], ecx
; Line 1298
	mov	DWORD PTR _LightList[esi+40], edi
; Line 1299
	mov	DWORD PTR _LightList[esi+44], edi
; Line 1300
	mov	DWORD PTR _LightList[esi+16], edi
; Line 1301
	mov	DWORD PTR _LightList[esi+20], edi
$L85496:
	pop	edi
	pop	esi
; Line 1304
	ret	4
@AddLight@12 ENDP
_TEXT	ENDS
PUBLIC	@AddUnLight@4
; Function compile flags: /Ogsy
;	COMDAT @AddUnLight@4
_TEXT	SEGMENT
@AddUnLight@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 1310
	cmp	DWORD PTR _lightflag, 0
	jne	SHORT $L85500
	cmp	ecx, -1
	je	SHORT $L85500
; Line 1311
	imul	ecx, 52					; 00000034H
	xor	eax, eax
	inc	eax
	mov	DWORD PTR _LightList[ecx+16], eax
; Line 1312
	mov	DWORD PTR _dolighting, eax
$L85500:
; Line 1314
	ret	0
@AddUnLight@4 ENDP
_TEXT	ENDS
PUBLIC	@ChangeLightRadius@8
; Function compile flags: /Ogsy
;	COMDAT @ChangeLightRadius@8
_TEXT	SEGMENT
@ChangeLightRadius@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _r$ = edx
; Line 1320
	cmp	DWORD PTR _lightflag, 0
	mov	eax, ecx
	jne	SHORT $L85506
	cmp	eax, -1
	je	SHORT $L85506
; Line 1321
	imul	eax, 52					; 00000034H
	push	esi
	push	edi
	mov	ecx, DWORD PTR _LightList[eax]
; Line 1323
	xor	esi, esi
	mov	DWORD PTR _LightList[eax+28], ecx
	mov	ecx, DWORD PTR _LightList[eax+4]
	mov	DWORD PTR _LightList[eax+32], ecx
; Line 1324
	lea	ecx, DWORD PTR _LightList[eax+8]
	inc	esi
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR _LightList[eax+20], esi
	mov	DWORD PTR _LightList[eax+36], edi
; Line 1325
	mov	DWORD PTR _dolighting, esi
	pop	edi
; Line 1326
	mov	DWORD PTR [ecx], edx
	pop	esi
$L85506:
; Line 1328
	ret	0
@ChangeLightRadius@8 ENDP
_TEXT	ENDS
PUBLIC	@ChangeLightXY@12
; Function compile flags: /Ogsy
;	COMDAT @ChangeLightXY@12
_TEXT	SEGMENT
_y$ = 8
@ChangeLightXY@12 PROC NEAR				; COMDAT
; _i$ = ecx
; _x$ = edx
; Line 1334
	cmp	DWORD PTR _lightflag, 0
	mov	eax, ecx
	jne	SHORT $L85514
	cmp	eax, -1
	je	SHORT $L85514
; Line 1335
	imul	eax, 52					; 00000034H
	push	esi
	mov	ecx, DWORD PTR _LightList[eax]
; Line 1341
	mov	DWORD PTR _LightList[eax], edx
	mov	DWORD PTR _LightList[eax+28], ecx
	xor	ecx, ecx
	inc	ecx
	mov	DWORD PTR _LightList[eax+20], ecx
	mov	DWORD PTR _dolighting, ecx
	lea	ecx, DWORD PTR _LightList[eax+4]
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR _LightList[eax+32], esi
	mov	esi, DWORD PTR _LightList[eax+8]
	mov	DWORD PTR _LightList[eax+36], esi
	mov	esi, DWORD PTR _y$[esp]
	mov	DWORD PTR [ecx], esi
	pop	esi
$L85514:
; Line 1343
	ret	4
@ChangeLightXY@12 ENDP
_TEXT	ENDS
PUBLIC	@ChangeLightOff@12
; Function compile flags: /Ogsy
;	COMDAT @ChangeLightOff@12
_TEXT	SEGMENT
_y$ = 8
@ChangeLightOff@12 PROC NEAR				; COMDAT
; _i$ = ecx
; _x$ = edx
; Line 1349
	cmp	DWORD PTR _lightflag, 0
	mov	eax, ecx
	jne	SHORT $L85522
	cmp	eax, -1
	je	SHORT $L85522
; Line 1350
	imul	eax, 52					; 00000034H
; Line 1351
	mov	ecx, DWORD PTR _LightList[eax]
	mov	DWORD PTR _LightList[eax+40], edx
	mov	DWORD PTR _LightList[eax+28], ecx
; Line 1352
	mov	ecx, DWORD PTR _LightList[eax+4]
; Line 1355
	mov	edx, DWORD PTR _y$[esp-4]
	mov	DWORD PTR _LightList[eax+32], ecx
	mov	ecx, DWORD PTR _LightList[eax+8]
	mov	DWORD PTR _LightList[eax+44], edx
	mov	DWORD PTR _LightList[eax+36], ecx
	xor	ecx, ecx
	inc	ecx
	mov	DWORD PTR _LightList[eax+20], ecx
; Line 1356
	mov	DWORD PTR _dolighting, ecx
$L85522:
; Line 1358
	ret	4
@ChangeLightOff@12 ENDP
_TEXT	ENDS
PUBLIC	@ChangeLight@16
; Function compile flags: /Ogsy
;	COMDAT @ChangeLight@16
_TEXT	SEGMENT
_y$ = 8
_r$ = 12
@ChangeLight@16 PROC NEAR				; COMDAT
; _i$ = ecx
; _x$ = edx
; Line 1364
	cmp	DWORD PTR _lightflag, 0
	mov	eax, ecx
	jne	SHORT $L85532
	cmp	eax, -1
	je	SHORT $L85532
; Line 1365
	imul	eax, 52					; 00000034H
	push	esi
	push	edi
	mov	ecx, DWORD PTR _LightList[eax]
; Line 1369
	mov	DWORD PTR _LightList[eax], edx
	mov	DWORD PTR _LightList[eax+28], ecx
	lea	ecx, DWORD PTR _LightList[eax+4]
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR _LightList[eax+32], esi
	lea	esi, DWORD PTR _LightList[eax+8]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR _LightList[eax+36], edi
	xor	edi, edi
	inc	edi
	mov	DWORD PTR _LightList[eax+20], edi
; Line 1370
	mov	eax, DWORD PTR _y$[esp+4]
	mov	DWORD PTR [ecx], eax
; Line 1371
	mov	eax, DWORD PTR _r$[esp+4]
; Line 1372
	mov	DWORD PTR _dolighting, edi
	mov	DWORD PTR [esi], eax
	pop	edi
	pop	esi
$L85532:
; Line 1374
	ret	8
@ChangeLight@16 ENDP
_TEXT	ENDS
PUBLIC	_ProcessLightList
; Function compile flags: /Ogsy
;	COMDAT _ProcessLightList
_TEXT	SEGMENT
_v0$ = -4
_ProcessLightList PROC NEAR				; COMDAT
; Line 1379
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1389
	xor	ecx, ecx
; Line 1390
	cmp	DWORD PTR _lightflag, ecx
	mov	DWORD PTR _v0$[ebp], ecx
	jne	$L85542
; Line 1391
	cmp	DWORD PTR _dolighting, ecx
	push	ebx
	push	esi
	push	edi
	je	$L85557
; Line 1392
	mov	eax, DWORD PTR _numlights
; Line 1393
	cmp	eax, ecx
	mov	edi, eax
	jle	SHORT $L85547
$L85545:
; Line 1395
	mov	eax, DWORD PTR _v0$[ebp]
	movzx	esi, BYTE PTR _lightactive[eax]
; Line 1396
	imul	esi, 52					; 00000034H
	cmp	DWORD PTR _LightList[esi+16], 0
	je	SHORT $L85549
; Line 1397
	push	DWORD PTR _LightList[esi+8]
	mov	edx, DWORD PTR _LightList[esi+4]
	mov	ecx, DWORD PTR _LightList[esi]
	call	@DoUnLight@12
$L85549:
; Line 1398
	lea	ebx, DWORD PTR _LightList[esi+20]
	cmp	DWORD PTR [ebx], 0
	je	SHORT $L85550
; Line 1399
	push	DWORD PTR _LightList[esi+36]
	mov	edx, DWORD PTR _LightList[esi+32]
	mov	ecx, DWORD PTR _LightList[esi+28]
	call	@DoUnLight@12
; Line 1400
	and	DWORD PTR [ebx], 0
$L85550:
; Line 1402
	inc	DWORD PTR _v0$[ebp]
; Line 1403
	cmp	DWORD PTR _v0$[ebp], edi
	jl	SHORT $L85545
$L85547:
; Line 1405
	xor	esi, esi
	test	edi, edi
	jle	SHORT $L85553
$L85551:
; Line 1406
	movzx	ecx, BYTE PTR _lightactive[esi]
	mov	eax, ecx
; Line 1407
	imul	eax, 52					; 00000034H
	cmp	DWORD PTR _LightList[eax+16], 0
	jne	SHORT $L85552
; Line 1412
	mov	edx, DWORD PTR _LightList[eax+4]
	push	ecx
	push	DWORD PTR _LightList[eax+8]
	mov	ecx, DWORD PTR _LightList[eax]
	call	@DoLighting@16
$L85552:
	inc	esi
	cmp	esi, edi
	jl	SHORT $L85551
$L85553:
; Line 1414
	xor	esi, esi
; Line 1415
	test	edi, edi
	jle	SHORT $L85557
$L85558:
; Line 1417
	lea	ecx, DWORD PTR _lightactive[esi]
	mov	dl, BYTE PTR [ecx]
; Line 1418
	movzx	eax, dl
	imul	eax, 52					; 00000034H
	cmp	DWORD PTR _LightList[eax+16], 0
	je	SHORT $L85561
; Line 1419
	dec	edi
; Line 1425
	lea	eax, DWORD PTR _lightactive[edi]
	mov	bl, BYTE PTR [eax]
	mov	BYTE PTR [eax], dl
	mov	BYTE PTR [ecx], bl
	jmp	SHORT $L85559
$L85561:
; Line 1423
	inc	esi
$L85559:
; Line 1425
	cmp	esi, edi
	jl	SHORT $L85558
; Line 1426
	mov	DWORD PTR _numlights, edi
$L85557:
; Line 1429
	and	DWORD PTR _dolighting, 0
	pop	edi
	pop	esi
	pop	ebx
$L85542:
; Line 1431
	leave
	ret	0
_ProcessLightList ENDP
_TEXT	ENDS
PUBLIC	_SavePreLighting
EXTRN	_memcpy:NEAR
; Function compile flags: /Ogsy
;	COMDAT _SavePreLighting
_TEXT	SEGMENT
_SavePreLighting PROC NEAR				; COMDAT
; Line 1437
	push	12544					; 00003100H
	push	OFFSET FLAT:_dTransVal
	push	OFFSET FLAT:_dTransVal2
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1438
	ret	0
_SavePreLighting ENDP
_TEXT	ENDS
PUBLIC	_InitVision
EXTRN	_TransVal:BYTE
; Function compile flags: /Ogsy
;	COMDAT _InitVision
_TEXT	SEGMENT
_InitVision PROC NEAR					; COMDAT
; Line 1445
	mov	al, BYTE PTR _TransVal
	xor	ecx, ecx
	cmp	al, cl
	mov	DWORD PTR _numvision, ecx
	mov	DWORD PTR _dovision, ecx
	mov	DWORD PTR _visionid, 1
	jle	SHORT $L85565
; Line 1446
	movsx	eax, al
	push	eax
	push	ecx
	push	OFFSET FLAT:_TransList
	call	_memset
	add	esp, 12					; 0000000cH
$L85565:
; Line 1447
	ret	0
_InitVision ENDP
_TEXT	ENDS
PUBLIC	@AddVision@16
; Function compile flags: /Ogsy
;	COMDAT @AddVision@16
_TEXT	SEGMENT
_r$ = 8
_mine$ = 12
@AddVision@16 PROC NEAR					; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 1457
	cmp	DWORD PTR _numvision, 32		; 00000020H
	mov	eax, DWORD PTR _r$[esp-4]
	jge	SHORT $L85577
	push	esi
; Line 1460
	mov	esi, DWORD PTR _numvision
	imul	esi, 52					; 00000034H
	mov	DWORD PTR _dovision, 1
; Line 1462
	mov	DWORD PTR _VisionList[esi+8], eax
; Line 1463
	mov	eax, DWORD PTR _visionid
	inc	DWORD PTR _visionid
	mov	DWORD PTR _VisionList[esi], ecx
	mov	DWORD PTR _VisionList[esi+4], edx
; Line 1465
	xor	ecx, ecx
; Line 1466
	inc	DWORD PTR _numvision
; Line 1468
	xor	edx, edx
	cmp	DWORD PTR _mine$[esp], ecx
	mov	DWORD PTR _VisionList[esi+12], eax
	mov	DWORD PTR _VisionList[esi+16], ecx
	mov	DWORD PTR _VisionList[esi+20], ecx
	setne	dl
	mov	DWORD PTR _VisionList[esi+48], edx
	pop	esi
$L85577:
; Line 1471
	ret	8
@AddVision@16 ENDP
_TEXT	ENDS
PUBLIC	@ChangeVisionRadius@8
; Function compile flags: /Ogsy
;	COMDAT @ChangeVisionRadius@8
_TEXT	SEGMENT
@ChangeVisionRadius@8 PROC NEAR				; COMDAT
; _id$ = ecx
; _r$ = edx
; Line 1475
	push	esi
; Line 1478
	mov	esi, DWORD PTR _numvision
	test	esi, esi
	jle	SHORT $L85587
	push	ebx
	push	edi
; Line 1479
	xor	edi, edi
	mov	eax, OFFSET FLAT:_VisionList+20
	inc	edi
$L85585:
; Line 1480
	cmp	DWORD PTR [eax-8], ecx
	jne	SHORT $L85586
; Line 1482
	mov	ebx, DWORD PTR [eax-20]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+8], ebx
; Line 1483
	mov	ebx, DWORD PTR [eax-16]
	mov	DWORD PTR [eax+12], ebx
; Line 1484
	mov	ebx, DWORD PTR [eax-12]
	mov	DWORD PTR [eax+16], ebx
; Line 1485
	mov	DWORD PTR [eax-12], edx
; Line 1486
	mov	DWORD PTR _dovision, edi
$L85586:
	add	eax, 52					; 00000034H
	dec	esi
	jne	SHORT $L85585
	pop	edi
	pop	ebx
$L85587:
	pop	esi
; Line 1490
	ret	0
@ChangeVisionRadius@8 ENDP
_TEXT	ENDS
PUBLIC	@ChangeVisionXY@12
; Function compile flags: /Ogsy
;	COMDAT @ChangeVisionXY@12
_TEXT	SEGMENT
_y$ = 8
@ChangeVisionXY@12 PROC NEAR				; COMDAT
; _id$ = ecx
; _x$ = edx
; Line 1494
	push	esi
; Line 1497
	mov	esi, DWORD PTR _numvision
	test	esi, esi
	jle	SHORT $L85600
	push	ebx
	push	edi
; Line 1498
	xor	edi, edi
	mov	eax, OFFSET FLAT:_VisionList+20
	inc	edi
$L85598:
; Line 1499
	cmp	DWORD PTR [eax-8], ecx
	jne	SHORT $L85599
; Line 1501
	mov	ebx, DWORD PTR [eax-20]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+8], ebx
; Line 1502
	mov	ebx, DWORD PTR [eax-16]
	mov	DWORD PTR [eax+12], ebx
; Line 1503
	mov	ebx, DWORD PTR [eax-12]
	mov	DWORD PTR [eax+16], ebx
; Line 1505
	mov	ebx, DWORD PTR _y$[esp+8]
	mov	DWORD PTR [eax-20], edx
	mov	DWORD PTR [eax-16], ebx
; Line 1506
	mov	DWORD PTR _dovision, edi
$L85599:
	add	eax, 52					; 00000034H
	dec	esi
	jne	SHORT $L85598
	pop	edi
	pop	ebx
$L85600:
	pop	esi
; Line 1510
	ret	4
@ChangeVisionXY@12 ENDP
_TEXT	ENDS
PUBLIC	_ProcessVisionList
; Function compile flags: /Ogsy
;	COMDAT _ProcessVisionList
_TEXT	SEGMENT
_i$ = -4
_ProcessVisionList PROC NEAR				; COMDAT
; Line 1514
	push	ecx
	push	ebx
; Line 1518
	xor	ebx, ebx
	cmp	DWORD PTR _dovision, ebx
	push	ebp
	push	esi
	push	edi
	je	$L85618
; Line 1519
	mov	eax, DWORD PTR _numvision
	xor	edi, edi
	cmp	eax, ebx
	jle	SHORT $L85608
	mov	esi, OFFSET FLAT:_VisionList+8
$L85606:
; Line 1520
	cmp	DWORD PTR [esi+8], ebx
	je	SHORT $L85609
; Line 1521
	push	DWORD PTR [esi]
	mov	edx, DWORD PTR [esi-4]
	mov	ecx, DWORD PTR [esi-8]
	call	@DoUnVision@12
	mov	eax, DWORD PTR _numvision
$L85609:
; Line 1522
	cmp	DWORD PTR [esi+12], ebx
	je	SHORT $L85607
; Line 1523
	push	DWORD PTR [esi+28]
	mov	edx, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi+20]
	call	@DoUnVision@12
; Line 1524
	mov	eax, DWORD PTR _numvision
	mov	DWORD PTR [esi+12], ebx
$L85607:
	inc	edi
	add	esi, 52					; 00000034H
	cmp	edi, eax
	jl	SHORT $L85606
$L85608:
; Line 1528
	mov	cl, BYTE PTR _TransVal
	cmp	cl, bl
	jle	SHORT $L85611
; Line 1529
	movsx	eax, cl
	push	eax
	push	ebx
	push	OFFSET FLAT:_TransList
	call	_memset
	mov	eax, DWORD PTR _numvision
	add	esp, 12					; 0000000cH
$L85611:
; Line 1531
	xor	edi, edi
	cmp	eax, ebx
	jle	SHORT $L85616
	mov	esi, OFFSET FLAT:_VisionList+48
$L85612:
; Line 1532
	cmp	DWORD PTR [esi-32], ebx
	jne	SHORT $L85613
; Line 1533
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi-44]
	and	eax, 1
	mov	ecx, DWORD PTR [esi-48]
	push	eax
	mov	al, BYTE PTR [esi]
	and	al, 1
	push	eax
	push	DWORD PTR [esi-40]
	call	@DoVision@20
	mov	eax, DWORD PTR _numvision
$L85613:
	inc	edi
	add	esi, 52					; 00000034H
	cmp	edi, eax
	jl	SHORT $L85612
$L85616:
; Line 1537
	xor	dl, dl
; Line 1538
	cmp	eax, ebx
	jle	SHORT $L85871
; Line 1540
	mov	ecx, eax
	mov	edi, OFFSET FLAT:_VisionList
	imul	ecx, 52					; 00000034H
	mov	DWORD PTR _i$[esp+20], ebx
	add	ecx, edi
$L85620:
; Line 1541
	cmp	DWORD PTR [edi+16], ebx
	je	SHORT $L85621
; Line 1542
	dec	eax
	sub	ecx, 52					; 00000034H
; Line 1543
	cmp	eax, ebx
	jle	SHORT $L85847
	cmp	DWORD PTR _i$[esp+20], eax
	je	SHORT $L85847
; Line 1544
	mov	ebp, ecx
	push	52					; 00000034H
	mov	esi, edi
	sub	ebp, edi
	pop	edx
$L85846:
	mov	bl, BYTE PTR [esi+ebp]
	mov	BYTE PTR [esi], bl
	inc	esi
	dec	edx
	jne	SHORT $L85846
	xor	ebx, ebx
$L85847:
; Line 1545
	mov	dl, 1
$L85621:
; Line 1540
	inc	DWORD PTR _i$[esp+20]
	add	edi, 52					; 00000034H
	cmp	DWORD PTR _i$[esp+20], eax
	jl	SHORT $L85620
; Line 1548
	cmp	dl, bl
	jne	SHORT $L85616
$L85871:
; Line 1542
	mov	DWORD PTR _numvision, eax
$L85618:
	pop	edi
	pop	esi
; Line 1551
	mov	DWORD PTR _dovision, ebx
	pop	ebp
	pop	ebx
; Line 1552
	pop	ecx
	ret	0
_ProcessVisionList ENDP
_TEXT	ENDS
PUBLIC	_lighting_color_cycling
; Function compile flags: /Ogsy
;	COMDAT _lighting_color_cycling
_TEXT	SEGMENT
_v1$ = -4
_lighting_color_cycling PROC NEAR			; COMDAT
; Line 1557
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1565
	cmp	BYTE PTR _leveltype, 4
	jne	SHORT $L85637
; Line 1567
	mov	ecx, DWORD PTR _light4flag
	mov	eax, DWORD PTR _pLightTbl
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -12				; fffffff4H
	add	ecx, 16					; 00000010H
	test	ecx, ecx
	jle	SHORT $L85637
	push	ebx
	push	esi
	push	edi
; Line 1568
	mov	DWORD PTR _v1$[ebp], ecx
$L85635:
; Line 1570
	inc	eax
; Line 1574
	push	30					; 0000001eH
	pop	ebx
	mov	edi, eax
	mov	dl, BYTE PTR [eax]
	lea	esi, DWORD PTR [eax+1]
	add	eax, ebx
; Line 1575
	sub	esi, edi
$L85879:
	mov	cl, BYTE PTR [esi+edi]
	mov	BYTE PTR [edi], cl
	inc	edi
	dec	ebx
	jne	SHORT $L85879
; Line 1576
	mov	BYTE PTR [eax], dl
; Line 1577
	add	eax, 225				; 000000e1H
; Line 1578
	dec	DWORD PTR _v1$[ebp]
; Line 1579
	jne	SHORT $L85635
	pop	edi
	pop	esi
	pop	ebx
$L85637:
; Line 1582
	leave
	ret	0
_lighting_color_cycling ENDP
_TEXT	ENDS
END
