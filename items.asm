; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/items.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_03GMHJ@Tin?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05LCHN@Brass?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06ODEI@Bronze?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04OOGD@Iron?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05DCMA@Steel?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FDOO@Silver?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IKOF@Gold?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08EGEN@Platinum?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07GNDG@Mithril?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IENK@Meteoric?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05EFIN@Weird?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07CJID@Strange?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NODE@Useless?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IKEC@Bent?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04BDFF@Weak?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FAHP@Jagged?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06HHAB@Deadly?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05BBBE@Heavy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07ECGL@Vicious?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06NJIC@Brutal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07LHOJ@Massive?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06CJBK@Savage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NMGL@Ruthless?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DDBE@Merciless?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06ICAM@Clumsy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KEFJ@Dull?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MMAL@Sharp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MEAC@Fine?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09EAE@Warrior?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MBML@Soldier?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IECP@Lord?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08JAPA@Knight?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NFNG@Master?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@NCDE@Champion?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06LAFC@King?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@BMID@Vulnerable?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06DCIE@Rusted?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06BEKF@Strong?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05PNKF@Grand?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07EDJP@Valiant?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08HMNP@Glorious?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07EIDE@Blessed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07EPFC@Saintly?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JECP@Awesome?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KHMI@Holy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05PIBE@Godly?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03GOGG@Red?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07FEBH@Crimson?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06LALG@Garnet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04EFIE@Ruby?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KPAE@Blue?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FBBK@Azure?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MIIL@Lapis?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06PPMI@Cobalt?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08JPLJ@Sapphire?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05CGP@White?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05OBHK@Pearl?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05KNIO@Ivory?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NPPL@Crystal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07DLIP@Diamond?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05HFPD@Topaz?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05JGOH@Amber?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04HDGO@Jade?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FHBF@Obsidian?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07BHJH@Emerald?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MJBJ@Hyena?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06BIDB@Frog?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08LPHF@Spider?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HHEO@Raven?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07ONOH@Snake?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09EOEE@Serpent?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07GMNG@Drake?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08EMKB@Dragon?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06MNOF@Wyrm?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07IDMF@Hydra?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07KOJG@Angel?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@ELNE@Arch?9Angel?8s?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DDEK@Plentiful?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09KCHB@Bountiful?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07LGEK@Flaming?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09NPLP@Lightning?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07PDKP@quality?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MOG@maiming?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NJAO@slaying?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CCDC@gore?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HFLF@carnage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09OFBO@slaughter?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LOGM@pain?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MNGI@tears?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06HECL@health?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CCCL@protection?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CIHJ@absorption?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@BONB@deflection?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JNDF@osmosis?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JBCL@frailty?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08GLJO@weakness?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08GOPF@strength?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05JKNA@might?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05EBLP@power?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06BGKJ@giants?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06MLAM@titans?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09HGHO@paralysis?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07GEAH@atrophy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09KIDC@dexterity?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MIHE@skill?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08JPJB@accuracy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09PIJM@precision?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@FGCJ@perfection?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NOGA@the?5fool?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08OHBO@dyslexia?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FKHP@magic?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08DFGD@the?5mind?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IKPP@brilliance?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07OPMD@sorcery?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08CDF@wizardry?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NPOJ@illness?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MEBM@disease?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MHIB@vitality?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MMEM@zest?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03HFDI@vim?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05OHOH@vigor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LLCA@life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07PKPN@trouble?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07BMMA@the?5pit?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JDNN@the?5sky?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MOCI@the?5moon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DDFF@the?5stars?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@JHLN@the?5heavens?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@NFBJ@the?5zodiac?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@CODE@the?5vulture?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@BBCA@the?5jackal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07FIMG@the?5fox?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@NLHK@the?5jaguar?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09GJD@the?5eagle?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08JEHK@the?5wolf?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09NBBI@the?5tiger?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08HAN@the?5lion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EH@the?5mammoth?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09KHDJ@the?5whale?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09CAOA@fragility?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@BMJN@brittleness?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@MKAO@sturdiness?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NGPJ@craftsmanship?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09HDHE@structure?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IEEH@the?5ages?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08COBO@the?5dark?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09JEAL@the?5night?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05DKPF@light?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08LADN@radiance?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05GIBP@flame?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04OLBH@fire?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07DBMH@burning?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MKBB@shock?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09JGLK@lightning?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MGNA@thunder?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04OMAH@many?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06BAKF@plenty?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06KMDP@thorns?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@EHKO@corruption?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07CPIM@thieves?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08LPKB@the?5bear?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07CMND@the?5bat?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08PJJE@vampires?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09BGIL@the?5leech?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05BDIK@blood?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08HKMC@piercing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@DPAO@puncturing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07ECIM@bashing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLAK@readiness?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09JHNE@swiftness?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05PHJK@speed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05HPHA@haste?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07DMNA@balance?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09LMMN@stability?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JFPI@harmony?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08PCBE@blocking?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LEFE@The?5Butcher?8s?5Cleaver?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@GGAG@The?5Undead?5Crown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@EFCF@Empyrean?5Band?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JIIN@Optic?5Amulet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@PEHI@Ring?5of?5Truth?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@HLFM@Harlequin?5Crest?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@FKOJ@Veil?5of?5Steel?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@JENP@Arkaine?8s?5Valor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@OAIC@Griswold?8s?5Edge?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@NHHH@Lightforge?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@HFEC@The?5Rift?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKAD@The?5Needler?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@DFMJ@The?5Celestial?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@MMFL@Deadly?5Hunter?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@PFNB@Bow?5of?5the?5Dead?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@HEMC@The?5Blackoak?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09IEMI@Flamedart?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@IPLI@Fleshstinger?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09ICMO@Windforce?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09PCNB@Eaglehorn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@ION@Gonnagal?8s?5Dirk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@LMFG@The?5Defender?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NPMJ@Gryphons?5Claw?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@NGHN@Black?5Razor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@COHM@Gibbous?5Moon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09IIDA@Ice?5Shank?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@JCLM@The?5Executioner?8s?5Blade?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FDHB@The?5Bonesaw?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@EBEF@Shadowhawk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EGMF@Wizardspike?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@HCN@Lightsabre?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EDLD@The?5Falcon?8s?5Talon?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HJHJ@Inferno?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@BAAM@Doombringer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IGFJ@The?5Grizzly?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@OANG@The?5Grandfather?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@CBIO@The?5Mangler?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@KEIA@Sharp?5Beak?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@ENI@BloodSlayer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@DEFA@The?5Celestial?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@LGGM@Wicked?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@POLL@Stonecleaver?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CMJN@Aguinara?8s?5Hatchet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@DLHM@Hellslayer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CIE@Messerschmidt?8s?5Reaver?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09NILJ@Crackrust?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FNJO@Hammer?5of?5Jholm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NP@Civerb?8s?5Cudgel?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JEIK@The?5Celestial?5Star?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@HPLN@Baranar?8s?5Star?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KBLF@Gnarled?5Root?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NKML@The?5Cranium?5Basher?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@ECOI@Schaefer?8s?5Hammer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IHNE@Dreamflange?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@DJNB@Staff?5of?5Shadows?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DCFI@Immolator?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@MMBM@Storm?5Spire?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09GLO@Gleamsong?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@BMCJ@Thundercall?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@OIKA@The?5Protector?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@KOJF@Naj?8s?5Puzzler?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07KPBO@Mindcry?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@LFDG@Rod?5of?5Onan?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@BGBO@Helm?5of?5Sprits?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@DNKB@Thinking?5Cap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@OMOB@OverLord?8s?5Helm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JHCM@Fool?8s?5Crest?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@EJBH@Gotterdamerung?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NECM@Royal?5Circlet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@NIAH@Torn?5Flesh?5of?5Souls?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@OMOA@The?5Gladiator?8s?5Bane?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@MCAH@The?5Rainbow?5Cloak?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@IDGC@Leather?5of?5Aut?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@GEEJ@Wisdom?8s?5Wrap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@IGGO@Sparking?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EIPI@Scavenger?5Carapace?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IJGD@Nightscape?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJEO@Naj?8s?5Light?5Plate?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@LMDJ@Demonspike?5Coat?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@BCBJ@The?5Deflector?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FMDN@Split?5Skull?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@MNCP@Dragon?8s?5Breach?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@JLBF@Blackoak?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@MBNB@Holy?5Defender?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@CHNE@Stormshield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JICK@Bramble?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@GFAH@Ring?5of?5Regha?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@MJLO@The?5Bleeder?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@GNLC@Constricting?5Ring?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@BKHB@Ring?5of?5Engagement?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@HOBP@Short?5Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MMEF@Buckler?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NPLD@Club?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09HMDM@Short?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@FKFF@Short?5Staff?5of?5Charged?5Bolt?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07DFGK@Cleaver?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@CAJC@Magic?5Rock?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@NAPI@Tavern?5Sign?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@DFFP@Golden?5Elixir?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@FHBG@Anvil?5of?5Fury?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@DIJL@Black?5Mushroom?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05LNNG@Brain?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FMMF@Fungal?5Tome?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FAA@Spectral?5Elixir?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@BAA@Blood?5Stone?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@DLLL@Map?5of?5the?5Stars?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05BPMN@Heart?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@OFPF@Potion?5of?5Healing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PEDF@Potion?5of?5Mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@HKHI@Scroll?5of?5Identify?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@BCKO@Scroll?5of?5Town?5Portal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FJIN@Potion?5of?5Full?5Healing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EKIO@Potion?5of?5Full?5Mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@IAKD@Staff?5of?5Lazarus?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@KOIM@Scroll?5of?5Resurrect?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03EEJM@Cap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09CIHH@Skull?5Cap?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04JAHM@Helm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09PBMM@Full?5Helm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MJDD@Crown?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@FPDC@Great?5Helm?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04EMKP@Cape?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04GBCC@Rags?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05HEPD@Cloak?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04HOC@Robe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@JGBG@Quilted?5Armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05KFDN@Armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CGFJ@Leather?5Armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@GHHI@Hard?5Leather?5Armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@EIMI@Studded?5Leather?5Armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09GPFE@Ring?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04IOKL@Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@EEOL@Chain?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@GLHE@Scale?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@CMJK@Breast?5Plate?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05GHGI@Plate?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@LJKD@Splint?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@DLHM@Plate?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@EEOC@Field?5Plate?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JKHF@Gothic?5Plate?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NADG@Full?5Plate?5Mail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06GBHM@Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@GPPF@Small?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@BAHM@Large?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@BCJC@Kite?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@MEKF@Tower?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@KMIB@Gothic?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@MDNB@Potion?5of?5Rejuvenation?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@HDFP@Potion?5of?5Full?5Rejuvenation?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JMEN@Elixir?5of?5Strength?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@EHL@Elixir?5of?5Magic?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@FLMA@Elixir?5of?5Dexterity?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@DFDJ@Elixir?5of?5Vitality?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BGMN@Scroll?5of?5Healing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EOEK@Scroll?5of?5Lightning?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@KGPH@Scroll?5of?5Fire?5Wall?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FHNN@Scroll?5of?5Inferno?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FPKC@Scroll?5of?5Flash?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LPBB@Scroll?5of?5Infravision?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@GABE@Scroll?5of?5Phasing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@HMH@Scroll?5of?5Mana?5Shield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@KPLE@Scroll?5of?5Flame?5Wave?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FLEO@Scroll?5of?5Fireball?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@DOBJ@Scroll?5of?5Stone?5Curse?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@ECBO@Scroll?5of?5Chain?5Lightning?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FBKP@Scroll?5of?5Guardian?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FNGF@Non?5Item?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@BBFO@Scroll?5of?5Nova?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@HBF@Scroll?5of?5Golem?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@GEPP@Scroll?5of?5None?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@DLEP@Scroll?5of?5Teleport?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODHC@Scroll?5of?5Apocalypse?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08DNLH@Book?5of?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06NGLM@Dagger?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05DGOK@Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08OIB@Falchion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08KAPM@Scimitar?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MPPO@Claymore?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05EPNO@Blade?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05JMEJ@Sabre?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@PEAA@Long?5Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@BCBO@Broad?5Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@LHMK@Bastard?5Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@BPCM@Two?9Handed?5Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@CNCF@Great?5Sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09PFN@Small?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03IAFN@Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DPKC@Large?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09COBI@Broad?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@FOHJ@Battle?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOKD@Great?5Axe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04OIIF@Mace?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@CCDC@Morning?5Star?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@NFJ@War?5Hammer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06HJJB@Hammer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@OOJP@Spiked?5Club?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MIDA@Flail?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LPM@Maul?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03IBME@Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JCDD@Hunter?8s?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08OKLM@Long?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@DKDP@Composite?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@PILI@Short?5Battle?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@BIGH@Long?5Battle?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@JFHI@Short?5War?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@POPE@Long?5War?5Bow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IAG@Short?5Staff?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05EAPD@Staff?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@ICBJ@Long?5Staff?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@IFDM@Composite?5Staff?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@ILDK@Quarter?5Staff?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09IIHC@War?5Staff?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04FBEF@Ring?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06BCFK@Amulet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06KJBL@Armor2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06KLNE@FBttle?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IFLC@GoldFlip?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06EJIN@Helmut?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08DANF@SwrdFlip?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LKIC@Rock?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IHL@CrownF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06DGLF@LArmor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07OEKG@WShield?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06PAFO@Scroll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08CJML@FPlateAr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05MJNG@FBook?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04JEEI@Food?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08PHIC@FBttleBB?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08ICAM@FBttleDY?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08KHKG@FBttleOR?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FOPC@FBttleBR?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FMEI@FBttleBL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08PFPD@FBttleBY?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08NALN@FBttleWH?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IAHN@FBttleDB?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04HGKM@FEar?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06KIBP@FBrain?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05HGOE@FMush?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07LMBD@Innsign?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06KHLH@Bldstn?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06GMAG@Fanvil?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08HGKF@FLazStaf?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@ONAL@Items?2?$CFs?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05JKGE@?$CFs?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@ELHC@Staff?5of?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09FPPI@Ear?5of?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@PMKP@?$CFi?5gold?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EAIB@fully?5recover?5life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@GNJJ@recover?5partial?5life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KDLO@recover?5life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@LNHC@deadly?5heal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JFB@recover?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OKGO@fully?5recover?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@IJLM@increase?5strength?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@KAJB@increase?5magic?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EANF@increase?5dexterity?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@CAMI@increase?5vitality?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@GAEG@decrease?5strength?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@BADM@decrease?5dexterity?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@MJDC@decrease?5vitality?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@MNGE@recover?5life?5and?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@IENB@fully?5recover?5life?5and?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@NHAN@chance?5to?5hit?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KGKI@?$CF?$CLi?$CF?$CF?5damage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@PKFE@to?5hit?3?5?$CF?$CLi?$CF?$CF?0?5?$CF?$CLi?$CF?$CF?5damage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@DCPA@?$CF?$CLi?$CF?$CF?5armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@INMC@Resist?5Fire?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@DMII@Resist?5Fire?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IJJI@Resist?5Lightning?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@EKLI@Resist?5Lightning?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@FGAC@Resist?5Magic?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@CKDF@Resist?5Magic?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@LJPI@Resist?5All?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@NMHF@Resist?5All?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BN@NICN@spells?5are?5increased?51?5level?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BO@GOEC@spells?5are?5increased?52?5levels?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BN@DBNH@spells?5are?5decreased?51?5level?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@OMHN@Extra?5charges?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@LII@Fire?5hit?5damage?3?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@OGOK@Lightning?5hit?5damage?3?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GLFH@?$CF?$CLi?5to?5strength?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@GFMP@?$CF?$CLi?5to?5magic?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MEDH@?$CF?$CLi?5to?5dexterity?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@MCCD@?$CF?$CLi?5to?5vitality?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LLMG@?$CF?$CLi?5to?5all?5attributes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@OKFD@?$CF?$CLi?5damage?5from?5enemies?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NKBF@Hit?5Points?5?3?5?$CF?$CLi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@NCBG@Mana?5?3?5?$CF?$CLi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NKGA@high?5durability?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MLFF@decreased?5durability?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@PIHN@indestructible?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@KHON@?$CL?$CFi?$CF?$CF?5light?5radius?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NLNF@?9?$CFi?$CF?$CF?5light?5radius?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@KNMA@fire?5arrows?5damage?3?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BO@OKME@lightning?5arrows?5damage?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FCOA@?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@BPDC@attacker?5takes?51?93?5damage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MCFM@user?5loses?5all?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@LIEK@you?5can?8t?5heal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@BOFO@absorbs?5half?5of?5trap?5damage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@HJHA@knocks?5target?5back?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@OIOH@hit?5monster?5doesn?8t?5heal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@DGMD@hit?5steals?53?$CF?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NBLO@hit?5steals?55?$CF?5mana?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JMCM@hit?5steals?53?$CF?5life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@HLFB@hit?5steals?55?$CF?5life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@ENGD@damages?5target?8s?5armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@DKJA@quick?5attack?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@LIII@fast?5attack?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@DOEN@faster?5attack?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@KNDM@fastest?5attack?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FNCP@fast?5hit?5recovery?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HAJD@faster?5hit?5recovery?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@GDDN@fastest?5hit?5recovery?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IAA@fast?5block?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MLPI@adds?5?$CFi?5points?5to?5damage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CKCL@fires?5random?5speed?5arrows?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@JEIK@unusual?5item?5damage?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@GCGN@altered?5durability?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@JEHF@no?5strength?5requirement?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@ILCA@?$CFi?5?$CFs?5charges?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@CKKG@Faster?5attack?5swing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MOMA@one?5handed?5sword?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@GCPK@?$CL200?$CF?5damage?5vs?4?5demons?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@MAJM@All?5Resistance?5equals?50?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@MJCM@constantly?5lose?5hit?5points?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@JIPP@life?5stealing?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BHCJ@see?5with?5infravision?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GDEN@armor?5class?3?5?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@EHGP@Armor?5class?5added?5to?5life?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@CKFN@10?$CF?5of?5mana?5added?5to?5armor?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@EJEO@Another?5ability?5?$CINW?$CJ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@GHKG@Right?9click?5to?5read?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@KNNO@Right?9click?5to?5read?0?5then?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MLOA@left?9click?5to?5target?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EMJN@Right?5click?5to?5use?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EEDJ@Right?5click?5to?5read?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@FPN@Right?5click?5to?5view?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@BAHA@Level?5?3?5?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BO@JJFH@damage?3?5?$CFi?9?$CFi?5?5Indestructible?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@FAGK@damage?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@ICJI@armor?3?5?$CFi?5?5Indestructible?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@BMGD@armor?3?5?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@BLJA@dam?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@EAMD@Charges?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@unique?5item?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09OOBN@Required?3?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09GDNC@?$CFs?5?$CFi?5Str?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09LBGI@?$CFs?5?$CFi?5Mag?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09IBEM@?$CFs?5?$CFi?5Dex?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@EBH@Not?5Identified?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _qmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitItemGFX
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ItemPlace@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AddInitItems
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitItems
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcPlrItemVals@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcPlrScrolls@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcPlrStaff@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcSelfItems@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcPlrItemMin@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ItemMinStats@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcPlrBookVals@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcPlrInv@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetPlrHandItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetPlrHandSeed@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetGoldSeed@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetPlrHandSeed@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetPlrHandGoldCurs@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreatePlrItems@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ItemSpaceOk@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemSpace@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetSuperItemSpace@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetSuperItemLoc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CalcItemValue@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetBookSpell@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetStaffPower@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetStaffSpell@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemAttrs@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndPL@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PLVal@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SaveItemPower@28
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemPower@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemBonus@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetupItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndUItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _RndAllItems
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndTypeItems@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CheckUnique@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetUniqueItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnUnique@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ItemRndDur@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetupAllItems@32
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateItem@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateRndItem@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetupAllUseful@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateRndUseful@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateTypeItem@28
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateItem@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateEar@40
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnQuestItem@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SpawnRock
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RespawnItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DeleteItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ItemDoppel
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ProcessItems
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FreeItemGFX
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemFrm@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemStr@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CheckIdentify@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DoRepair@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RepairItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DoRecharge@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RechargeItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PrintItemOil@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PrintItemPower@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DrawUBack
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PrintUString@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DrawULine@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DrawUniqueInfo
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PrintItemMisc@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PrintItemDetails@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PrintItemDur@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @UseItem@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @StoreStatOk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SmithItemOk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndSmithItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @BubbleSwapItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SortSmith
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnSmith@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PremiumItemOk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndPremiumItem@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnOnePremium@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnPremium@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @WitchItemOk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndWitchItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SortWitch
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @WitchBookLevel@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnWitch@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndBoyItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnBoy@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @HealerItemOk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RndHealerItem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SortHealer
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SpawnHealer@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _SpawnStoreGold
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateSmithItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreatePremiumItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateBoyItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateWitchItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateHealerItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @RecreateTownItem@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _RecalcStoreStats
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ItemNoFlippy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateSpellBook@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateMagicArmor@24
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CreateMagicWeapon@24
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetItemRecord@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @NextItemRecord@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetItemRecord@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PutItemRecord@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0O@JGBG@Quilted?5Armor?$AA@		; `string'
PUBLIC	??_C@_05KFDN@Armor?$AA@				; `string'
PUBLIC	??_C@_0O@CGFJ@Leather?5Armor?$AA@		; `string'
PUBLIC	??_C@_0BD@GHHI@Hard?5Leather?5Armor?$AA@	; `string'
PUBLIC	??_C@_0BG@EIMI@Studded?5Leather?5Armor?$AA@	; `string'
PUBLIC	??_C@_09GPFE@Ring?5Mail?$AA@			; `string'
PUBLIC	??_C@_04IOKL@Mail?$AA@				; `string'
PUBLIC	??_C@_0L@EEOL@Chain?5Mail?$AA@			; `string'
PUBLIC	??_C@_0L@GLHE@Scale?5Mail?$AA@			; `string'
PUBLIC	??_C@_0N@CMJK@Breast?5Plate?$AA@		; `string'
PUBLIC	??_C@_05GHGI@Plate?$AA@				; `string'
PUBLIC	??_C@_0M@LJKD@Splint?5Mail?$AA@			; `string'
PUBLIC	??_C@_0L@DLHM@Plate?5Mail?$AA@			; `string'
PUBLIC	??_C@_0M@EEOC@Field?5Plate?$AA@			; `string'
PUBLIC	??_C@_0N@JKHF@Gothic?5Plate?$AA@		; `string'
PUBLIC	??_C@_0BA@NADG@Full?5Plate?5Mail?$AA@		; `string'
PUBLIC	??_C@_06GBHM@Shield?$AA@			; `string'
PUBLIC	??_C@_0N@GPPF@Small?5Shield?$AA@		; `string'
PUBLIC	??_C@_0N@BAHM@Large?5Shield?$AA@		; `string'
PUBLIC	??_C@_0M@BCJC@Kite?5Shield?$AA@			; `string'
PUBLIC	??_C@_0N@MEKF@Tower?5Shield?$AA@		; `string'
PUBLIC	??_C@_0O@KMIB@Gothic?5Shield?$AA@		; `string'
PUBLIC	??_C@_0BH@MDNB@Potion?5of?5Rejuvenation?$AA@	; `string'
PUBLIC	??_C@_0BM@HDFP@Potion?5of?5Full?5Rejuvenation?$AA@ ; `string'
PUBLIC	??_C@_0BD@JMEN@Elixir?5of?5Strength?$AA@	; `string'
PUBLIC	??_C@_0BA@EHL@Elixir?5of?5Magic?$AA@		; `string'
PUBLIC	??_C@_0BE@FLMA@Elixir?5of?5Dexterity?$AA@	; `string'
PUBLIC	??_C@_0BD@DFDJ@Elixir?5of?5Vitality?$AA@	; `string'
PUBLIC	??_C@_0BC@BGMN@Scroll?5of?5Healing?$AA@		; `string'
PUBLIC	??_C@_0BE@EOEK@Scroll?5of?5Lightning?$AA@	; `string'
PUBLIC	??_C@_0BE@KGPH@Scroll?5of?5Fire?5Wall?$AA@	; `string'
PUBLIC	??_C@_0BC@FHNN@Scroll?5of?5Inferno?$AA@		; `string'
PUBLIC	??_C@_0BA@FPKC@Scroll?5of?5Flash?$AA@		; `string'
PUBLIC	??_C@_0BG@LPBB@Scroll?5of?5Infravision?$AA@	; `string'
PUBLIC	??_C@_0BC@GABE@Scroll?5of?5Phasing?$AA@		; `string'
PUBLIC	??_C@_0BG@HMH@Scroll?5of?5Mana?5Shield?$AA@	; `string'
PUBLIC	??_C@_0BF@KPLE@Scroll?5of?5Flame?5Wave?$AA@	; `string'
PUBLIC	??_C@_0BD@FLEO@Scroll?5of?5Fireball?$AA@	; `string'
PUBLIC	??_C@_0BG@DOBJ@Scroll?5of?5Stone?5Curse?$AA@	; `string'
PUBLIC	??_C@_0BK@ECBO@Scroll?5of?5Chain?5Lightning?$AA@ ; `string'
PUBLIC	??_C@_0BD@FBKP@Scroll?5of?5Guardian?$AA@	; `string'
PUBLIC	??_C@_08FNGF@Non?5Item?$AA@			; `string'
PUBLIC	??_C@_0P@BBFO@Scroll?5of?5Nova?$AA@		; `string'
PUBLIC	??_C@_0BA@HBF@Scroll?5of?5Golem?$AA@		; `string'
PUBLIC	??_C@_0P@GEPP@Scroll?5of?5None?$AA@		; `string'
PUBLIC	??_C@_0BD@DLEP@Scroll?5of?5Teleport?$AA@	; `string'
PUBLIC	??_C@_0BF@ODHC@Scroll?5of?5Apocalypse?$AA@	; `string'
PUBLIC	??_C@_08DNLH@Book?5of?5?$AA@			; `string'
PUBLIC	??_C@_06NGLM@Dagger?$AA@			; `string'
PUBLIC	??_C@_05DGOK@Sword?$AA@				; `string'
PUBLIC	??_C@_08OIB@Falchion?$AA@			; `string'
PUBLIC	??_C@_08KAPM@Scimitar?$AA@			; `string'
PUBLIC	??_C@_08MPPO@Claymore?$AA@			; `string'
PUBLIC	??_C@_05EPNO@Blade?$AA@				; `string'
PUBLIC	??_C@_05JMEJ@Sabre?$AA@				; `string'
PUBLIC	??_C@_0L@PEAA@Long?5Sword?$AA@			; `string'
PUBLIC	??_C@_0M@BCBO@Broad?5Sword?$AA@			; `string'
PUBLIC	??_C@_0O@LHMK@Bastard?5Sword?$AA@		; `string'
PUBLIC	??_C@_0BB@BPCM@Two?9Handed?5Sword?$AA@		; `string'
PUBLIC	??_C@_0M@CNCF@Great?5Sword?$AA@			; `string'
PUBLIC	??_C@_09PFN@Small?5Axe?$AA@			; `string'
PUBLIC	??_C@_03IAFN@Axe?$AA@				; `string'
PUBLIC	??_C@_09DPKC@Large?5Axe?$AA@			; `string'
PUBLIC	??_C@_09COBI@Broad?5Axe?$AA@			; `string'
PUBLIC	??_C@_0L@FOHJ@Battle?5Axe?$AA@			; `string'
PUBLIC	??_C@_09MOKD@Great?5Axe?$AA@			; `string'
PUBLIC	??_C@_04OIIF@Mace?$AA@				; `string'
PUBLIC	??_C@_0N@CCDC@Morning?5Star?$AA@		; `string'
PUBLIC	??_C@_0L@NFJ@War?5Hammer?$AA@			; `string'
PUBLIC	??_C@_06HJJB@Hammer?$AA@			; `string'
PUBLIC	??_C@_0M@OOJP@Spiked?5Club?$AA@			; `string'
PUBLIC	??_C@_05MIDA@Flail?$AA@				; `string'
PUBLIC	??_C@_04LPM@Maul?$AA@				; `string'
PUBLIC	??_C@_03IBME@Bow?$AA@				; `string'
PUBLIC	??_C@_0N@JCDD@Hunter?8s?5Bow?$AA@		; `string'
PUBLIC	??_C@_08OKLM@Long?5Bow?$AA@			; `string'
PUBLIC	??_C@_0O@DKDP@Composite?5Bow?$AA@		; `string'
PUBLIC	??_C@_0BB@PILI@Short?5Battle?5Bow?$AA@		; `string'
PUBLIC	??_C@_0BA@BIGH@Long?5Battle?5Bow?$AA@		; `string'
PUBLIC	??_C@_0O@JFHI@Short?5War?5Bow?$AA@		; `string'
PUBLIC	??_C@_0N@POPE@Long?5War?5Bow?$AA@		; `string'
PUBLIC	??_C@_0M@IAG@Short?5Staff?$AA@			; `string'
PUBLIC	??_C@_05EAPD@Staff?$AA@				; `string'
PUBLIC	??_C@_0L@ICBJ@Long?5Staff?$AA@			; `string'
PUBLIC	??_C@_0BA@IFDM@Composite?5Staff?$AA@		; `string'
PUBLIC	??_C@_0O@ILDK@Quarter?5Staff?$AA@		; `string'
PUBLIC	??_C@_09IIHC@War?5Staff?$AA@			; `string'
PUBLIC	??_C@_04FBEF@Ring?$AA@				; `string'
PUBLIC	??_C@_06BCFK@Amulet?$AA@			; `string'
PUBLIC	??_C@_06KJBL@Armor2?$AA@			; `string'
PUBLIC	??_C@_06KLNE@FBttle?$AA@			; `string'
PUBLIC	??_C@_08IFLC@GoldFlip?$AA@			; `string'
PUBLIC	??_C@_06EJIN@Helmut?$AA@			; `string'
PUBLIC	??_C@_08DANF@SwrdFlip?$AA@			; `string'
PUBLIC	??_C@_04LKIC@Rock?$AA@				; `string'
PUBLIC	_PL_Prefix
PUBLIC	??_C@_06IHL@CrownF?$AA@				; `string'
PUBLIC	_PL_Suffix
PUBLIC	??_C@_06DGLF@LArmor?$AA@			; `string'
PUBLIC	_UniqueItemList
PUBLIC	??_C@_07OEKG@WShield?$AA@			; `string'
PUBLIC	_AllItemsList
PUBLIC	??_C@_06PAFO@Scroll?$AA@			; `string'
PUBLIC	_ItemCAnimTbl
PUBLIC	??_C@_08CJML@FPlateAr?$AA@			; `string'
PUBLIC	_ItemDropStrs
PUBLIC	??_C@_05MJNG@FBook?$AA@				; `string'
PUBLIC	_ItemAnimLs
PUBLIC	??_C@_04JEEI@Food?$AA@				; `string'
PUBLIC	_ItemDropSnds
PUBLIC	??_C@_08PHIC@FBttleBB?$AA@			; `string'
PUBLIC	_ItemInvSnds
PUBLIC	??_C@_08ICAM@FBttleDY?$AA@			; `string'
PUBLIC	_idoppely
PUBLIC	??_C@_08KHKG@FBttleOR?$AA@			; `string'
PUBLIC	_premiumlvladd
PUBLIC	??_C@_08FOPC@FBttleBR?$AA@			; `string'
PUBLIC	??_C@_08FMEI@FBttleBL?$AA@			; `string'
PUBLIC	??_C@_08PFPD@FBttleBY?$AA@			; `string'
PUBLIC	??_C@_08NALN@FBttleWH?$AA@			; `string'
PUBLIC	??_C@_08IAHN@FBttleDB?$AA@			; `string'
PUBLIC	??_C@_04HGKM@FEar?$AA@				; `string'
PUBLIC	??_C@_06KIBP@FBrain?$AA@			; `string'
PUBLIC	??_C@_05HGOE@FMush?$AA@				; `string'
PUBLIC	??_C@_07LMBD@Innsign?$AA@			; `string'
PUBLIC	??_C@_06KHLH@Bldstn?$AA@			; `string'
PUBLIC	??_C@_06GMAG@Fanvil?$AA@			; `string'
PUBLIC	??_C@_08HGKF@FLazStaf?$AA@			; `string'
PUBLIC	??_C@_03GMHJ@Tin?$AA@				; `string'
PUBLIC	??_C@_05LCHN@Brass?$AA@				; `string'
PUBLIC	??_C@_06ODEI@Bronze?$AA@			; `string'
PUBLIC	??_C@_04OOGD@Iron?$AA@				; `string'
PUBLIC	??_C@_05DCMA@Steel?$AA@				; `string'
PUBLIC	??_C@_06FDOO@Silver?$AA@			; `string'
PUBLIC	??_C@_04IKOF@Gold?$AA@				; `string'
PUBLIC	??_C@_08EGEN@Platinum?$AA@			; `string'
PUBLIC	??_C@_07GNDG@Mithril?$AA@			; `string'
PUBLIC	??_C@_08IENK@Meteoric?$AA@			; `string'
PUBLIC	??_C@_05EFIN@Weird?$AA@				; `string'
PUBLIC	??_C@_07CJID@Strange?$AA@			; `string'
PUBLIC	??_C@_07NODE@Useless?$AA@			; `string'
PUBLIC	??_C@_04IKEC@Bent?$AA@				; `string'
PUBLIC	??_C@_04BDFF@Weak?$AA@				; `string'
PUBLIC	??_C@_06FAHP@Jagged?$AA@			; `string'
PUBLIC	??_C@_06HHAB@Deadly?$AA@			; `string'
PUBLIC	??_C@_05BBBE@Heavy?$AA@				; `string'
PUBLIC	??_C@_07ECGL@Vicious?$AA@			; `string'
PUBLIC	??_C@_06NJIC@Brutal?$AA@			; `string'
PUBLIC	??_C@_07LHOJ@Massive?$AA@			; `string'
PUBLIC	??_C@_06CJBK@Savage?$AA@			; `string'
PUBLIC	??_C@_08NMGL@Ruthless?$AA@			; `string'
PUBLIC	??_C@_09DDBE@Merciless?$AA@			; `string'
PUBLIC	??_C@_06ICAM@Clumsy?$AA@			; `string'
PUBLIC	??_C@_04KEFJ@Dull?$AA@				; `string'
PUBLIC	??_C@_05MMAL@Sharp?$AA@				; `string'
PUBLIC	??_C@_04MEAC@Fine?$AA@				; `string'
PUBLIC	??_C@_09EAE@Warrior?8s?$AA@			; `string'
PUBLIC	??_C@_09MBML@Soldier?8s?$AA@			; `string'
PUBLIC	??_C@_06IECP@Lord?8s?$AA@			; `string'
PUBLIC	??_C@_08JAPA@Knight?8s?$AA@			; `string'
PUBLIC	??_C@_08NFNG@Master?8s?$AA@			; `string'
PUBLIC	??_C@_0L@NCDE@Champion?8s?$AA@			; `string'
PUBLIC	??_C@_06LAFC@King?8s?$AA@			; `string'
PUBLIC	??_C@_0L@BMID@Vulnerable?$AA@			; `string'
PUBLIC	??_C@_06DCIE@Rusted?$AA@			; `string'
PUBLIC	??_C@_06BEKF@Strong?$AA@			; `string'
PUBLIC	??_C@_05PNKF@Grand?$AA@				; `string'
PUBLIC	??_C@_07EDJP@Valiant?$AA@			; `string'
PUBLIC	??_C@_08HMNP@Glorious?$AA@			; `string'
PUBLIC	??_C@_07EIDE@Blessed?$AA@			; `string'
PUBLIC	??_C@_07EPFC@Saintly?$AA@			; `string'
PUBLIC	??_C@_07JECP@Awesome?$AA@			; `string'
PUBLIC	??_C@_04KHMI@Holy?$AA@				; `string'
PUBLIC	??_C@_05PIBE@Godly?$AA@				; `string'
PUBLIC	??_C@_03GOGG@Red?$AA@				; `string'
PUBLIC	??_C@_07FEBH@Crimson?$AA@			; `string'
PUBLIC	??_C@_06LALG@Garnet?$AA@			; `string'
PUBLIC	??_C@_04EFIE@Ruby?$AA@				; `string'
PUBLIC	??_C@_04KPAE@Blue?$AA@				; `string'
PUBLIC	??_C@_05FBBK@Azure?$AA@				; `string'
PUBLIC	??_C@_05MIIL@Lapis?$AA@				; `string'
PUBLIC	??_C@_06PPMI@Cobalt?$AA@			; `string'
PUBLIC	??_C@_08JPLJ@Sapphire?$AA@			; `string'
PUBLIC	??_C@_05CGP@White?$AA@				; `string'
PUBLIC	??_C@_05OBHK@Pearl?$AA@				; `string'
PUBLIC	??_C@_05KNIO@Ivory?$AA@				; `string'
PUBLIC	??_C@_07NPPL@Crystal?$AA@			; `string'
PUBLIC	??_C@_07DLIP@Diamond?$AA@			; `string'
PUBLIC	??_C@_05HFPD@Topaz?$AA@				; `string'
PUBLIC	??_C@_05JGOH@Amber?$AA@				; `string'
PUBLIC	??_C@_04HDGO@Jade?$AA@				; `string'
PUBLIC	??_C@_08FHBF@Obsidian?$AA@			; `string'
PUBLIC	??_C@_07BHJH@Emerald?$AA@			; `string'
PUBLIC	??_C@_07MJBJ@Hyena?8s?$AA@			; `string'
PUBLIC	??_C@_06BIDB@Frog?8s?$AA@			; `string'
PUBLIC	??_C@_08LPHF@Spider?8s?$AA@			; `string'
PUBLIC	??_C@_07HHEO@Raven?8s?$AA@			; `string'
PUBLIC	??_C@_07ONOH@Snake?8s?$AA@			; `string'
PUBLIC	??_C@_09EOEE@Serpent?8s?$AA@			; `string'
PUBLIC	??_C@_07GMNG@Drake?8s?$AA@			; `string'
PUBLIC	??_C@_08EMKB@Dragon?8s?$AA@			; `string'
PUBLIC	??_C@_06MNOF@Wyrm?8s?$AA@			; `string'
PUBLIC	??_C@_07IDMF@Hydra?8s?$AA@			; `string'
PUBLIC	??_C@_07KOJG@Angel?8s?$AA@			; `string'
PUBLIC	??_C@_0N@ELNE@Arch?9Angel?8s?$AA@		; `string'
PUBLIC	??_C@_09DDEK@Plentiful?$AA@			; `string'
PUBLIC	??_C@_09KCHB@Bountiful?$AA@			; `string'
PUBLIC	??_C@_07LGEK@Flaming?$AA@			; `string'
PUBLIC	??_C@_09NPLP@Lightning?$AA@			; `string'
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	??_C@_07PDKP@quality?$AA@			; `string'
PUBLIC	??_C@_07MOG@maiming?$AA@			; `string'
PUBLIC	??_C@_07NJAO@slaying?$AA@			; `string'
PUBLIC	??_C@_04CCDC@gore?$AA@				; `string'
PUBLIC	??_C@_07HFLF@carnage?$AA@			; `string'
PUBLIC	??_C@_09OFBO@slaughter?$AA@			; `string'
PUBLIC	??_C@_04LOGM@pain?$AA@				; `string'
PUBLIC	??_C@_05MNGI@tears?$AA@				; `string'
PUBLIC	??_C@_06HECL@health?$AA@			; `string'
PUBLIC	??_C@_0L@CCCL@protection?$AA@			; `string'
PUBLIC	??_C@_0L@CIHJ@absorption?$AA@			; `string'
PUBLIC	??_C@_0L@BONB@deflection?$AA@			; `string'
PUBLIC	??_C@_07JNDF@osmosis?$AA@			; `string'
PUBLIC	??_C@_07JBCL@frailty?$AA@			; `string'
PUBLIC	??_C@_08GLJO@weakness?$AA@			; `string'
PUBLIC	??_C@_08GOPF@strength?$AA@			; `string'
PUBLIC	??_C@_05JKNA@might?$AA@				; `string'
PUBLIC	??_C@_05EBLP@power?$AA@				; `string'
PUBLIC	??_C@_06BGKJ@giants?$AA@			; `string'
PUBLIC	??_C@_06MLAM@titans?$AA@			; `string'
PUBLIC	??_C@_09HGHO@paralysis?$AA@			; `string'
PUBLIC	??_C@_07GEAH@atrophy?$AA@			; `string'
PUBLIC	??_C@_09KIDC@dexterity?$AA@			; `string'
PUBLIC	??_C@_05MIHE@skill?$AA@				; `string'
PUBLIC	??_C@_08JPJB@accuracy?$AA@			; `string'
PUBLIC	??_C@_09PIJM@precision?$AA@			; `string'
PUBLIC	??_C@_0L@FGCJ@perfection?$AA@			; `string'
PUBLIC	??_C@_08NOGA@the?5fool?$AA@			; `string'
PUBLIC	??_C@_08OHBO@dyslexia?$AA@			; `string'
PUBLIC	??_C@_05FKHP@magic?$AA@				; `string'
PUBLIC	??_C@_08DFGD@the?5mind?$AA@			; `string'
PUBLIC	??_C@_0L@IKPP@brilliance?$AA@			; `string'
PUBLIC	??_C@_07OPMD@sorcery?$AA@			; `string'
PUBLIC	??_C@_08CDF@wizardry?$AA@			; `string'
PUBLIC	??_C@_07NPOJ@illness?$AA@			; `string'
PUBLIC	??_C@_07MEBM@disease?$AA@			; `string'
PUBLIC	??_C@_08MHIB@vitality?$AA@			; `string'
PUBLIC	??_C@_04MMEM@zest?$AA@				; `string'
PUBLIC	??_C@_03HFDI@vim?$AA@				; `string'
PUBLIC	??_C@_05OHOH@vigor?$AA@				; `string'
PUBLIC	??_C@_04LLCA@life?$AA@				; `string'
PUBLIC	??_C@_07PKPN@trouble?$AA@			; `string'
PUBLIC	??_C@_07BMMA@the?5pit?$AA@			; `string'
PUBLIC	??_C@_07JDNN@the?5sky?$AA@			; `string'
PUBLIC	??_C@_08MOCI@the?5moon?$AA@			; `string'
PUBLIC	??_C@_09DDFF@the?5stars?$AA@			; `string'
PUBLIC	??_C@_0M@JHLN@the?5heavens?$AA@			; `string'
PUBLIC	??_C@_0L@NFBJ@the?5zodiac?$AA@			; `string'
PUBLIC	??_C@_0M@CODE@the?5vulture?$AA@			; `string'
PUBLIC	??_C@_0L@BBCA@the?5jackal?$AA@			; `string'
PUBLIC	??_C@_07FIMG@the?5fox?$AA@			; `string'
PUBLIC	??_C@_0L@NLHK@the?5jaguar?$AA@			; `string'
PUBLIC	??_C@_09GJD@the?5eagle?$AA@			; `string'
PUBLIC	??_C@_08JEHK@the?5wolf?$AA@			; `string'
PUBLIC	??_C@_09NBBI@the?5tiger?$AA@			; `string'
PUBLIC	??_C@_08HAN@the?5lion?$AA@			; `string'
PUBLIC	??_C@_0M@EH@the?5mammoth?$AA@			; `string'
PUBLIC	??_C@_09KHDJ@the?5whale?$AA@			; `string'
PUBLIC	??_C@_09CAOA@fragility?$AA@			; `string'
PUBLIC	??_C@_0M@BMJN@brittleness?$AA@			; `string'
PUBLIC	??_C@_0L@MKAO@sturdiness?$AA@			; `string'
PUBLIC	??_C@_0O@NGPJ@craftsmanship?$AA@		; `string'
PUBLIC	??_C@_09HDHE@structure?$AA@			; `string'
PUBLIC	??_C@_08IEEH@the?5ages?$AA@			; `string'
PUBLIC	??_C@_08COBO@the?5dark?$AA@			; `string'
PUBLIC	??_C@_09JEAL@the?5night?$AA@			; `string'
PUBLIC	??_C@_05DKPF@light?$AA@				; `string'
PUBLIC	??_C@_08LADN@radiance?$AA@			; `string'
PUBLIC	??_C@_05GIBP@flame?$AA@				; `string'
PUBLIC	??_C@_04OLBH@fire?$AA@				; `string'
PUBLIC	??_C@_07DBMH@burning?$AA@			; `string'
PUBLIC	??_C@_05MKBB@shock?$AA@				; `string'
PUBLIC	??_C@_09JGLK@lightning?$AA@			; `string'
PUBLIC	??_C@_07MGNA@thunder?$AA@			; `string'
PUBLIC	??_C@_04OMAH@many?$AA@				; `string'
PUBLIC	??_C@_06BAKF@plenty?$AA@			; `string'
PUBLIC	??_C@_06KMDP@thorns?$AA@			; `string'
PUBLIC	??_C@_0L@EHKO@corruption?$AA@			; `string'
PUBLIC	??_C@_07CPIM@thieves?$AA@			; `string'
PUBLIC	??_C@_08LPKB@the?5bear?$AA@			; `string'
PUBLIC	??_C@_07CMND@the?5bat?$AA@			; `string'
PUBLIC	??_C@_08PJJE@vampires?$AA@			; `string'
PUBLIC	??_C@_09BGIL@the?5leech?$AA@			; `string'
PUBLIC	??_C@_05BDIK@blood?$AA@				; `string'
PUBLIC	??_C@_08HKMC@piercing?$AA@			; `string'
PUBLIC	??_C@_0L@DPAO@puncturing?$AA@			; `string'
PUBLIC	??_C@_07ECIM@bashing?$AA@			; `string'
PUBLIC	??_C@_09DLAK@readiness?$AA@			; `string'
PUBLIC	??_C@_09JHNE@swiftness?$AA@			; `string'
PUBLIC	??_C@_05PHJK@speed?$AA@				; `string'
PUBLIC	??_C@_05HPHA@haste?$AA@				; `string'
PUBLIC	??_C@_07DMNA@balance?$AA@			; `string'
PUBLIC	??_C@_09LMMN@stability?$AA@			; `string'
PUBLIC	??_C@_07JFPI@harmony?$AA@			; `string'
PUBLIC	??_C@_08PCBE@blocking?$AA@			; `string'
PUBLIC	??_C@_0BG@LEFE@The?5Butcher?8s?5Cleaver?$AA@	; `string'
PUBLIC	??_C@_0BB@GGAG@The?5Undead?5Crown?$AA@		; `string'
PUBLIC	??_C@_0O@EFCF@Empyrean?5Band?$AA@		; `string'
PUBLIC	??_C@_0N@JIIN@Optic?5Amulet?$AA@		; `string'
PUBLIC	??_C@_0O@PEHI@Ring?5of?5Truth?$AA@		; `string'
PUBLIC	??_C@_0BA@HLFM@Harlequin?5Crest?$AA@		; `string'
PUBLIC	??_C@_0O@FKOJ@Veil?5of?5Steel?$AA@		; `string'
PUBLIC	??_C@_0BA@JENP@Arkaine?8s?5Valor?$AA@		; `string'
PUBLIC	??_C@_0BA@OAIC@Griswold?8s?5Edge?$AA@		; `string'
PUBLIC	??_C@_0L@NHHH@Lightforge?$AA@			; `string'
PUBLIC	??_C@_0N@HFEC@The?5Rift?5Bow?$AA@		; `string'
PUBLIC	??_C@_0M@IKAD@The?5Needler?$AA@			; `string'
PUBLIC	??_C@_0BC@DFMJ@The?5Celestial?5Bow?$AA@		; `string'
PUBLIC	??_C@_0O@MMFL@Deadly?5Hunter?$AA@		; `string'
PUBLIC	??_C@_0BA@PFNB@Bow?5of?5the?5Dead?$AA@		; `string'
PUBLIC	??_C@_0BB@HEMC@The?5Blackoak?5Bow?$AA@		; `string'
PUBLIC	??_C@_09IEMI@Flamedart?$AA@			; `string'
PUBLIC	??_C@_0N@IPLI@Fleshstinger?$AA@			; `string'
PUBLIC	??_C@_09ICMO@Windforce?$AA@			; `string'
PUBLIC	??_C@_09PCNB@Eaglehorn?$AA@			; `string'
PUBLIC	??_C@_0BA@ION@Gonnagal?8s?5Dirk?$AA@		; `string'
PUBLIC	??_C@_0N@LMFG@The?5Defender?$AA@		; `string'
PUBLIC	??_C@_0O@NPMJ@Gryphons?5Claw?$AA@		; `string'
PUBLIC	??_C@_0M@NGHN@Black?5Razor?$AA@			; `string'
PUBLIC	??_C@_0N@COHM@Gibbous?5Moon?$AA@		; `string'
PUBLIC	??_C@_09IIDA@Ice?5Shank?$AA@			; `string'
PUBLIC	??_C@_0BI@JCLM@The?5Executioner?8s?5Blade?$AA@	; `string'
PUBLIC	??_C@_0M@FDHB@The?5Bonesaw?$AA@			; `string'
PUBLIC	??_C@_0L@EBEF@Shadowhawk?$AA@			; `string'
PUBLIC	??_C@_0M@EGMF@Wizardspike?$AA@			; `string'
PUBLIC	??_C@_0L@HCN@Lightsabre?$AA@			; `string'
PUBLIC	??_C@_0BD@EDLD@The?5Falcon?8s?5Talon?$AA@	; `string'
PUBLIC	??_C@_07HJHJ@Inferno?$AA@			; `string'
PUBLIC	??_C@_0M@BAAM@Doombringer?$AA@			; `string'
PUBLIC	??_C@_0M@IGFJ@The?5Grizzly?$AA@			; `string'
PUBLIC	??_C@_0BA@OANG@The?5Grandfather?$AA@		; `string'
PUBLIC	??_C@_0M@CBIO@The?5Mangler?$AA@			; `string'
PUBLIC	??_C@_0L@KEIA@Sharp?5Beak?$AA@			; `string'
PUBLIC	??_C@_0M@ENI@BloodSlayer?$AA@			; `string'
PUBLIC	??_C@_0BC@DEFA@The?5Celestial?5Axe?$AA@		; `string'
PUBLIC	??_C@_0L@LGGM@Wicked?5Axe?$AA@			; `string'
PUBLIC	??_C@_0N@POLL@Stonecleaver?$AA@			; `string'
PUBLIC	??_C@_0BD@CMJN@Aguinara?8s?5Hatchet?$AA@	; `string'
PUBLIC	??_C@_0L@DLHM@Hellslayer?$AA@			; `string'
PUBLIC	??_C@_0BH@CIE@Messerschmidt?8s?5Reaver?$AA@	; `string'
PUBLIC	??_C@_09NILJ@Crackrust?$AA@			; `string'
PUBLIC	??_C@_0BA@FNJO@Hammer?5of?5Jholm?$AA@		; `string'
PUBLIC	??_C@_0BA@NP@Civerb?8s?5Cudgel?$AA@		; `string'
PUBLIC	??_C@_0BD@JEIK@The?5Celestial?5Star?$AA@	; `string'
PUBLIC	??_C@_0P@HPLN@Baranar?8s?5Star?$AA@		; `string'
PUBLIC	??_C@_0N@KBLF@Gnarled?5Root?$AA@		; `string'
PUBLIC	??_C@_0BD@NKML@The?5Cranium?5Basher?$AA@	; `string'
PUBLIC	??_C@_0BC@ECOI@Schaefer?8s?5Hammer?$AA@		; `string'
PUBLIC	??_C@_0M@IHNE@Dreamflange?$AA@			; `string'
PUBLIC	??_C@_0BB@DJNB@Staff?5of?5Shadows?$AA@		; `string'
PUBLIC	??_C@_09DCFI@Immolator?$AA@			; `string'
PUBLIC	??_C@_0M@MMBM@Storm?5Spire?$AA@			; `string'
PUBLIC	??_C@_09GLO@Gleamsong?$AA@			; `string'
PUBLIC	??_C@_0M@BMCJ@Thundercall?$AA@			; `string'
PUBLIC	??_C@_0O@OIKA@The?5Protector?$AA@		; `string'
PUBLIC	??_C@_0O@KOJF@Naj?8s?5Puzzler?$AA@		; `string'
PUBLIC	??_C@_07KPBO@Mindcry?$AA@			; `string'
PUBLIC	??_C@_0M@LFDG@Rod?5of?5Onan?$AA@		; `string'
PUBLIC	??_C@_0P@BGBO@Helm?5of?5Sprits?$AA@		; `string'
PUBLIC	??_C@_0N@DNKB@Thinking?5Cap?$AA@		; `string'
PUBLIC	??_C@_0BA@OMOB@OverLord?8s?5Helm?$AA@		; `string'
PUBLIC	??_C@_0N@JHCM@Fool?8s?5Crest?$AA@		; `string'
PUBLIC	??_C@_0P@EJBH@Gotterdamerung?$AA@		; `string'
PUBLIC	??_C@_0O@NECM@Royal?5Circlet?$AA@		; `string'
PUBLIC	??_C@_0BE@NIAH@Torn?5Flesh?5of?5Souls?$AA@	; `string'
PUBLIC	??_C@_0BF@OMOA@The?5Gladiator?8s?5Bane?$AA@	; `string'
PUBLIC	??_C@_0BC@MCAH@The?5Rainbow?5Cloak?$AA@		; `string'
PUBLIC	??_C@_0P@IDGC@Leather?5of?5Aut?$AA@		; `string'
PUBLIC	??_C@_0O@GEEJ@Wisdom?8s?5Wrap?$AA@		; `string'
PUBLIC	??_C@_0O@IGGO@Sparking?5Mail?$AA@		; `string'
PUBLIC	??_C@_0BD@EIPI@Scavenger?5Carapace?$AA@		; `string'
PUBLIC	??_C@_0L@IJGD@Nightscape?$AA@			; `string'
PUBLIC	??_C@_0BC@FJEO@Naj?8s?5Light?5Plate?$AA@	; `string'
PUBLIC	??_C@_0BA@LMDJ@Demonspike?5Coat?$AA@		; `string'
PUBLIC	??_C@_0O@BCBJ@The?5Deflector?$AA@		; `string'
PUBLIC	??_C@_0BD@FMDN@Split?5Skull?5Shield?$AA@	; `string'
PUBLIC	??_C@_0BA@MNCP@Dragon?8s?5Breach?$AA@		; `string'
PUBLIC	??_C@_0BA@JLBF@Blackoak?5Shield?$AA@		; `string'
PUBLIC	??_C@_0O@MBNB@Holy?5Defender?$AA@		; `string'
PUBLIC	??_C@_0M@CHNE@Stormshield?$AA@			; `string'
PUBLIC	??_C@_07JICK@Bramble?$AA@			; `string'
PUBLIC	??_C@_0O@GFAH@Ring?5of?5Regha?$AA@		; `string'
PUBLIC	??_C@_0M@MJLO@The?5Bleeder?$AA@			; `string'
PUBLIC	??_C@_0BC@GNLC@Constricting?5Ring?$AA@		; `string'
PUBLIC	??_C@_0BD@BKHB@Ring?5of?5Engagement?$AA@	; `string'
PUBLIC	??_C@_0M@HOBP@Short?5Sword?$AA@			; `string'
PUBLIC	??_C@_07MMEF@Buckler?$AA@			; `string'
PUBLIC	??_C@_04NPLD@Club?$AA@				; `string'
PUBLIC	??_C@_09HMDM@Short?5Bow?$AA@			; `string'
PUBLIC	??_C@_0BM@FKFF@Short?5Staff?5of?5Charged?5Bolt?$AA@ ; `string'
PUBLIC	??_C@_07DFGK@Cleaver?$AA@			; `string'
PUBLIC	??_C@_0L@CAJC@Magic?5Rock?$AA@			; `string'
PUBLIC	??_C@_0M@NAPI@Tavern?5Sign?$AA@			; `string'
PUBLIC	??_C@_0O@DFFP@Golden?5Elixir?$AA@		; `string'
PUBLIC	??_C@_0O@FHBG@Anvil?5of?5Fury?$AA@		; `string'
PUBLIC	??_C@_0P@DIJL@Black?5Mushroom?$AA@		; `string'
PUBLIC	??_C@_05LNNG@Brain?$AA@				; `string'
PUBLIC	??_C@_0M@FMMF@Fungal?5Tome?$AA@			; `string'
PUBLIC	??_C@_0BA@FAA@Spectral?5Elixir?$AA@		; `string'
PUBLIC	??_C@_0M@BAA@Blood?5Stone?$AA@			; `string'
PUBLIC	??_C@_0BB@DLLL@Map?5of?5the?5Stars?$AA@		; `string'
PUBLIC	??_C@_05BPMN@Heart?$AA@				; `string'
PUBLIC	??_C@_0BC@OFPF@Potion?5of?5Healing?$AA@		; `string'
PUBLIC	??_C@_0P@PEDF@Potion?5of?5Mana?$AA@		; `string'
PUBLIC	??_C@_0BD@HKHI@Scroll?5of?5Identify?$AA@	; `string'
PUBLIC	??_C@_0BG@BCKO@Scroll?5of?5Town?5Portal?$AA@	; `string'
PUBLIC	??_C@_0BH@FJIN@Potion?5of?5Full?5Healing?$AA@	; `string'
PUBLIC	??_C@_0BE@EKIO@Potion?5of?5Full?5Mana?$AA@	; `string'
PUBLIC	??_C@_0BB@IAKD@Staff?5of?5Lazarus?$AA@		; `string'
PUBLIC	??_C@_0BE@KOIM@Scroll?5of?5Resurrect?$AA@	; `string'
PUBLIC	??_C@_03EEJM@Cap?$AA@				; `string'
PUBLIC	??_C@_09CIHH@Skull?5Cap?$AA@			; `string'
PUBLIC	??_C@_04JAHM@Helm?$AA@				; `string'
PUBLIC	??_C@_09PBMM@Full?5Helm?$AA@			; `string'
PUBLIC	??_C@_05MJDD@Crown?$AA@				; `string'
PUBLIC	??_C@_0L@FPDC@Great?5Helm?$AA@			; `string'
PUBLIC	??_C@_04EMKP@Cape?$AA@				; `string'
PUBLIC	??_C@_04GBCC@Rags?$AA@				; `string'
PUBLIC	??_C@_05HEPD@Cloak?$AA@				; `string'
PUBLIC	??_C@_04HOC@Robe?$AA@				; `string'
_DATA	SEGMENT
COMM	_itemactive:DWORD:07fH
COMM	_uitemflag:DWORD
COMM	_itemavail:DWORD:07fH
COMM	_curruitem:BYTE:0170H
COMM	_itemrecord:BYTE:07f0H
COMM	_item:BYTE:0b800H
COMM	_itemhold:DWORD:09H
COMM	_Item2Frm:DWORD:023H
COMM	_UniqueItemFlag:DWORD:080H
COMM	_numitems:DWORD
COMM	_gnNumGetRecords:DWORD
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??_C@_03GMHJ@Tin?$AA@
_DATA	SEGMENT
??_C@_03GMHJ@Tin?$AA@ DB 'Tin', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05LCHN@Brass?$AA@
_DATA	SEGMENT
??_C@_05LCHN@Brass?$AA@ DB 'Brass', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06ODEI@Bronze?$AA@
_DATA	SEGMENT
??_C@_06ODEI@Bronze?$AA@ DB 'Bronze', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04OOGD@Iron?$AA@
_DATA	SEGMENT
??_C@_04OOGD@Iron?$AA@ DB 'Iron', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05DCMA@Steel?$AA@
_DATA	SEGMENT
??_C@_05DCMA@Steel?$AA@ DB 'Steel', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06FDOO@Silver?$AA@
_DATA	SEGMENT
??_C@_06FDOO@Silver?$AA@ DB 'Silver', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04IKOF@Gold?$AA@
_DATA	SEGMENT
??_C@_04IKOF@Gold?$AA@ DB 'Gold', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08EGEN@Platinum?$AA@
_DATA	SEGMENT
??_C@_08EGEN@Platinum?$AA@ DB 'Platinum', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07GNDG@Mithril?$AA@
_DATA	SEGMENT
??_C@_07GNDG@Mithril?$AA@ DB 'Mithril', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IENK@Meteoric?$AA@
_DATA	SEGMENT
??_C@_08IENK@Meteoric?$AA@ DB 'Meteoric', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05EFIN@Weird?$AA@
_DATA	SEGMENT
??_C@_05EFIN@Weird?$AA@ DB 'Weird', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07CJID@Strange?$AA@
_DATA	SEGMENT
??_C@_07CJID@Strange?$AA@ DB 'Strange', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NODE@Useless?$AA@
_DATA	SEGMENT
??_C@_07NODE@Useless?$AA@ DB 'Useless', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04IKEC@Bent?$AA@
_DATA	SEGMENT
??_C@_04IKEC@Bent?$AA@ DB 'Bent', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04BDFF@Weak?$AA@
_DATA	SEGMENT
??_C@_04BDFF@Weak?$AA@ DB 'Weak', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06FAHP@Jagged?$AA@
_DATA	SEGMENT
??_C@_06FAHP@Jagged?$AA@ DB 'Jagged', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06HHAB@Deadly?$AA@
_DATA	SEGMENT
??_C@_06HHAB@Deadly?$AA@ DB 'Deadly', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05BBBE@Heavy?$AA@
_DATA	SEGMENT
??_C@_05BBBE@Heavy?$AA@ DB 'Heavy', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07ECGL@Vicious?$AA@
_DATA	SEGMENT
??_C@_07ECGL@Vicious?$AA@ DB 'Vicious', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06NJIC@Brutal?$AA@
_DATA	SEGMENT
??_C@_06NJIC@Brutal?$AA@ DB 'Brutal', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07LHOJ@Massive?$AA@
_DATA	SEGMENT
??_C@_07LHOJ@Massive?$AA@ DB 'Massive', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06CJBK@Savage?$AA@
_DATA	SEGMENT
??_C@_06CJBK@Savage?$AA@ DB 'Savage', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08NMGL@Ruthless?$AA@
_DATA	SEGMENT
??_C@_08NMGL@Ruthless?$AA@ DB 'Ruthless', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09DDBE@Merciless?$AA@
_DATA	SEGMENT
??_C@_09DDBE@Merciless?$AA@ DB 'Merciless', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06ICAM@Clumsy?$AA@
_DATA	SEGMENT
??_C@_06ICAM@Clumsy?$AA@ DB 'Clumsy', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04KEFJ@Dull?$AA@
_DATA	SEGMENT
??_C@_04KEFJ@Dull?$AA@ DB 'Dull', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MMAL@Sharp?$AA@
_DATA	SEGMENT
??_C@_05MMAL@Sharp?$AA@ DB 'Sharp', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04MEAC@Fine?$AA@
_DATA	SEGMENT
??_C@_04MEAC@Fine?$AA@ DB 'Fine', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09EAE@Warrior?8s?$AA@
_DATA	SEGMENT
??_C@_09EAE@Warrior?8s?$AA@ DB 'Warrior''s', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09MBML@Soldier?8s?$AA@
_DATA	SEGMENT
??_C@_09MBML@Soldier?8s?$AA@ DB 'Soldier''s', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_06IECP@Lord?8s?$AA@
_DATA	SEGMENT
??_C@_06IECP@Lord?8s?$AA@ DB 'Lord''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08JAPA@Knight?8s?$AA@
_DATA	SEGMENT
??_C@_08JAPA@Knight?8s?$AA@ DB 'Knight''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08NFNG@Master?8s?$AA@
_DATA	SEGMENT
??_C@_08NFNG@Master?8s?$AA@ DB 'Master''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@NCDE@Champion?8s?$AA@
_DATA	SEGMENT
??_C@_0L@NCDE@Champion?8s?$AA@ DB 'Champion''s', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_06LAFC@King?8s?$AA@
_DATA	SEGMENT
??_C@_06LAFC@King?8s?$AA@ DB 'King''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@BMID@Vulnerable?$AA@
_DATA	SEGMENT
??_C@_0L@BMID@Vulnerable?$AA@ DB 'Vulnerable', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_06DCIE@Rusted?$AA@
_DATA	SEGMENT
??_C@_06DCIE@Rusted?$AA@ DB 'Rusted', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06BEKF@Strong?$AA@
_DATA	SEGMENT
??_C@_06BEKF@Strong?$AA@ DB 'Strong', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05PNKF@Grand?$AA@
_DATA	SEGMENT
??_C@_05PNKF@Grand?$AA@ DB 'Grand', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07EDJP@Valiant?$AA@
_DATA	SEGMENT
??_C@_07EDJP@Valiant?$AA@ DB 'Valiant', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08HMNP@Glorious?$AA@
_DATA	SEGMENT
??_C@_08HMNP@Glorious?$AA@ DB 'Glorious', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07EIDE@Blessed?$AA@
_DATA	SEGMENT
??_C@_07EIDE@Blessed?$AA@ DB 'Blessed', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07EPFC@Saintly?$AA@
_DATA	SEGMENT
??_C@_07EPFC@Saintly?$AA@ DB 'Saintly', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JECP@Awesome?$AA@
_DATA	SEGMENT
??_C@_07JECP@Awesome?$AA@ DB 'Awesome', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04KHMI@Holy?$AA@
_DATA	SEGMENT
??_C@_04KHMI@Holy?$AA@ DB 'Holy', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05PIBE@Godly?$AA@
_DATA	SEGMENT
??_C@_05PIBE@Godly?$AA@ DB 'Godly', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_03GOGG@Red?$AA@
_DATA	SEGMENT
??_C@_03GOGG@Red?$AA@ DB 'Red', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07FEBH@Crimson?$AA@
_DATA	SEGMENT
??_C@_07FEBH@Crimson?$AA@ DB 'Crimson', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06LALG@Garnet?$AA@
_DATA	SEGMENT
??_C@_06LALG@Garnet?$AA@ DB 'Garnet', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04EFIE@Ruby?$AA@
_DATA	SEGMENT
??_C@_04EFIE@Ruby?$AA@ DB 'Ruby', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04KPAE@Blue?$AA@
_DATA	SEGMENT
??_C@_04KPAE@Blue?$AA@ DB 'Blue', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05FBBK@Azure?$AA@
_DATA	SEGMENT
??_C@_05FBBK@Azure?$AA@ DB 'Azure', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MIIL@Lapis?$AA@
_DATA	SEGMENT
??_C@_05MIIL@Lapis?$AA@ DB 'Lapis', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06PPMI@Cobalt?$AA@
_DATA	SEGMENT
??_C@_06PPMI@Cobalt?$AA@ DB 'Cobalt', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08JPLJ@Sapphire?$AA@
_DATA	SEGMENT
??_C@_08JPLJ@Sapphire?$AA@ DB 'Sapphire', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05CGP@White?$AA@
_DATA	SEGMENT
??_C@_05CGP@White?$AA@ DB 'White', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05OBHK@Pearl?$AA@
_DATA	SEGMENT
??_C@_05OBHK@Pearl?$AA@ DB 'Pearl', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05KNIO@Ivory?$AA@
_DATA	SEGMENT
??_C@_05KNIO@Ivory?$AA@ DB 'Ivory', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NPPL@Crystal?$AA@
_DATA	SEGMENT
??_C@_07NPPL@Crystal?$AA@ DB 'Crystal', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07DLIP@Diamond?$AA@
_DATA	SEGMENT
??_C@_07DLIP@Diamond?$AA@ DB 'Diamond', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05HFPD@Topaz?$AA@
_DATA	SEGMENT
??_C@_05HFPD@Topaz?$AA@ DB 'Topaz', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05JGOH@Amber?$AA@
_DATA	SEGMENT
??_C@_05JGOH@Amber?$AA@ DB 'Amber', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04HDGO@Jade?$AA@
_DATA	SEGMENT
??_C@_04HDGO@Jade?$AA@ DB 'Jade', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08FHBF@Obsidian?$AA@
_DATA	SEGMENT
??_C@_08FHBF@Obsidian?$AA@ DB 'Obsidian', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07BHJH@Emerald?$AA@
_DATA	SEGMENT
??_C@_07BHJH@Emerald?$AA@ DB 'Emerald', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MJBJ@Hyena?8s?$AA@
_DATA	SEGMENT
??_C@_07MJBJ@Hyena?8s?$AA@ DB 'Hyena''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06BIDB@Frog?8s?$AA@
_DATA	SEGMENT
??_C@_06BIDB@Frog?8s?$AA@ DB 'Frog''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08LPHF@Spider?8s?$AA@
_DATA	SEGMENT
??_C@_08LPHF@Spider?8s?$AA@ DB 'Spider''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07HHEO@Raven?8s?$AA@
_DATA	SEGMENT
??_C@_07HHEO@Raven?8s?$AA@ DB 'Raven''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07ONOH@Snake?8s?$AA@
_DATA	SEGMENT
??_C@_07ONOH@Snake?8s?$AA@ DB 'Snake''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09EOEE@Serpent?8s?$AA@
_DATA	SEGMENT
??_C@_09EOEE@Serpent?8s?$AA@ DB 'Serpent''s', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07GMNG@Drake?8s?$AA@
_DATA	SEGMENT
??_C@_07GMNG@Drake?8s?$AA@ DB 'Drake''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08EMKB@Dragon?8s?$AA@
_DATA	SEGMENT
??_C@_08EMKB@Dragon?8s?$AA@ DB 'Dragon''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06MNOF@Wyrm?8s?$AA@
_DATA	SEGMENT
??_C@_06MNOF@Wyrm?8s?$AA@ DB 'Wyrm''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07IDMF@Hydra?8s?$AA@
_DATA	SEGMENT
??_C@_07IDMF@Hydra?8s?$AA@ DB 'Hydra''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07KOJG@Angel?8s?$AA@
_DATA	SEGMENT
??_C@_07KOJG@Angel?8s?$AA@ DB 'Angel''s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@ELNE@Arch?9Angel?8s?$AA@
_DATA	SEGMENT
??_C@_0N@ELNE@Arch?9Angel?8s?$AA@ DB 'Arch-Angel''s', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09DDEK@Plentiful?$AA@
_DATA	SEGMENT
??_C@_09DDEK@Plentiful?$AA@ DB 'Plentiful', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09KCHB@Bountiful?$AA@
_DATA	SEGMENT
??_C@_09KCHB@Bountiful?$AA@ DB 'Bountiful', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07LGEK@Flaming?$AA@
_DATA	SEGMENT
??_C@_07LGEK@Flaming?$AA@ DB 'Flaming', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09NPLP@Lightning?$AA@
_DATA	SEGMENT
??_C@_09NPLP@Lightning?$AA@ DB 'Lightning', 00H		; `string'
_DATA	ENDS
CONST	SEGMENT
_PL_Prefix DD	FLAT:??_C@_03GMHJ@Tin?$AA@
	DB	01H
	ORG $+3
	DD	06H
	DD	0aH
	DD	03H
	DD	01011H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_05LCHN@Brass?$AA@
	DB	01H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	01011H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_06ODEI@Bronze?$AA@
	DB	00H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	01011H
	DD	00H
	DD	01H
	DD	01H
	DD	064H
	DD	01f4H
	DD	02H
	DD	FLAT:??_C@_04OOGD@Iron?$AA@
	DB	00H
	ORG $+3
	DD	06H
	DD	0aH
	DD	04H
	DD	01011H
	DD	00H
	DD	01H
	DD	01H
	DD	0258H
	DD	03e8H
	DD	03H
	DD	FLAT:??_C@_05DCMA@Steel?$AA@
	DB	00H
	ORG $+3
	DD	0bH
	DD	0fH
	DD	06H
	DD	01011H
	DD	00H
	DD	01H
	DD	01H
	DD	044cH
	DD	05dcH
	DD	05H
	DD	FLAT:??_C@_06FDOO@Silver?$AA@
	DB	00H
	ORG $+3
	DD	010H
	DD	014H
	DD	09H
	DD	01011H
	DD	010H
	DD	01H
	DD	01H
	DD	0640H
	DD	07d0H
	DD	07H
	DD	FLAT:??_C@_04IKOF@Gold?$AA@
	DB	00H
	ORG $+3
	DD	015H
	DD	01eH
	DD	0cH
	DD	01011H
	DD	010H
	DD	01H
	DD	01H
	DD	0834H
	DD	0bb8H
	DD	09H
	DD	FLAT:??_C@_08EGEN@Platinum?$AA@
	DB	00H
	ORG $+3
	DD	01fH
	DD	028H
	DD	010H
	DD	01010H
	DD	010H
	DD	01H
	DD	01H
	DD	0c1cH
	DD	0fa0H
	DD	0bH
	DD	FLAT:??_C@_07GNDG@Mithril?$AA@
	DB	00H
	ORG $+3
	DD	029H
	DD	03cH
	DD	014H
	DD	01010H
	DD	010H
	DD	01H
	DD	01H
	DD	01004H
	DD	01770H
	DD	0dH
	DD	FLAT:??_C@_08IENK@Meteoric?$AA@
	DB	00H
	ORG $+3
	DD	03dH
	DD	050H
	DD	017H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	017d4H
	DD	02710H
	DD	0fH
	DD	FLAT:??_C@_05EFIN@Weird?$AA@
	DB	00H
	ORG $+3
	DD	051H
	DD	064H
	DD	023H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	02774H
	DD	036b0H
	DD	011H
	DD	FLAT:??_C@_07CJID@Strange?$AA@
	DB	00H
	ORG $+3
	DD	065H
	DD	096H
	DD	03cH
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	03714H
	DD	04e20H
	DD	014H
	DD	FLAT:??_C@_07NODE@Useless?$AA@
	DB	03H
	ORG $+3
	DD	064H
	DD	064H
	DD	05H
	DD	01010H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffff8H
	DD	FLAT:??_C@_04IKEC@Bent?$AA@
	DB	03H
	ORG $+3
	DD	032H
	DD	04bH
	DD	03H
	DD	01010H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffcH
	DD	FLAT:??_C@_04BDFF@Weak?$AA@
	DB	03H
	ORG $+3
	DD	019H
	DD	02dH
	DD	01H
	DD	01010H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_06FAHP@Jagged?$AA@
	DB	02H
	ORG $+3
	DD	014H
	DD	023H
	DD	04H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	0faH
	DD	01c2H
	DD	03H
	DD	FLAT:??_C@_06HHAB@Deadly?$AA@
	DB	02H
	ORG $+3
	DD	024H
	DD	032H
	DD	06H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	01f4H
	DD	02bcH
	DD	04H
	DD	FLAT:??_C@_05BBBE@Heavy?$AA@
	DB	02H
	ORG $+3
	DD	033H
	DD	041H
	DD	09H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	02eeH
	DD	03b6H
	DD	05H
	DD	FLAT:??_C@_07ECGL@Vicious?$AA@
	DB	02H
	ORG $+3
	DD	042H
	DD	050H
	DD	0cH
	DD	01010H
	DD	01H
	DD	01H
	DD	01H
	DD	03e8H
	DD	05aaH
	DD	08H
	DD	FLAT:??_C@_06NJIC@Brutal?$AA@
	DB	02H
	ORG $+3
	DD	051H
	DD	05fH
	DD	010H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	05dcH
	DD	079eH
	DD	0aH
	DD	FLAT:??_C@_07LHOJ@Massive?$AA@
	DB	02H
	ORG $+3
	DD	060H
	DD	06eH
	DD	014H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	07d0H
	DD	0992H
	DD	0dH
	DD	FLAT:??_C@_06CJBK@Savage?$AA@
	DB	02H
	ORG $+3
	DD	06fH
	DD	07dH
	DD	017H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	09c4H
	DD	0bb8H
	DD	0fH
	DD	FLAT:??_C@_08NMGL@Ruthless?$AA@
	DB	02H
	ORG $+3
	DD	07eH
	DD	096H
	DD	023H
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	02774H
	DD	03a98H
	DD	011H
	DD	FLAT:??_C@_09DDBE@Merciless?$AA@
	DB	02H
	ORG $+3
	DD	097H
	DD	0afH
	DD	03cH
	DD	01010H
	DD	00H
	DD	01H
	DD	01H
	DD	03a98H
	DD	04e20H
	DD	014H
	DD	FLAT:??_C@_06ICAM@Clumsy?$AA@
	DB	05H
	ORG $+3
	DD	032H
	DD	04bH
	DD	05H
	DD	01110H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffff9H
	DD	FLAT:??_C@_04KEFJ@Dull?$AA@
	DB	05H
	ORG $+3
	DD	019H
	DD	02dH
	DD	01H
	DD	01110H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	FLAT:??_C@_05MMAL@Sharp?$AA@
	DB	04H
	ORG $+3
	DD	014H
	DD	023H
	DD	01H
	DD	01110H
	DD	00H
	DD	01H
	DD	00H
	DD	015eH
	DD	03b6H
	DD	05H
	DD	FLAT:??_C@_04MEAC@Fine?$AA@
	DB	04H
	ORG $+3
	DD	024H
	DD	032H
	DD	06H
	DD	01110H
	DD	00H
	DD	01H
	DD	01H
	DD	044cH
	DD	06a4H
	DD	07H
	DD	FLAT:??_C@_09EAE@Warrior?8s?$AA@
	DB	04H
	ORG $+3
	DD	033H
	DD	041H
	DD	0aH
	DD	01110H
	DD	00H
	DD	01H
	DD	01H
	DD	073aH
	DD	0992H
	DD	0dH
	DD	FLAT:??_C@_09MBML@Soldier?8s?$AA@
	DB	04H
	ORG $+3
	DD	042H
	DD	050H
	DD	0fH
	DD	01100H
	DD	00H
	DD	01H
	DD	01H
	DD	0a28H
	DD	0f6eH
	DD	011H
	DD	FLAT:??_C@_06IECP@Lord?8s?$AA@
	DB	04H
	ORG $+3
	DD	051H
	DD	05fH
	DD	013H
	DD	01100H
	DD	00H
	DD	01H
	DD	01H
	DD	01004H
	DD	0173eH
	DD	015H
	DD	FLAT:??_C@_08JAPA@Knight?8s?$AA@
	DB	04H
	ORG $+3
	DD	060H
	DD	06eH
	DD	017H
	DD	01100H
	DD	00H
	DD	01H
	DD	01H
	DD	017d4H
	DD	02102H
	DD	01aH
	DD	FLAT:??_C@_08NFNG@Master?8s?$AA@
	DB	04H
	ORG $+3
	DD	06fH
	DD	07dH
	DD	01cH
	DD	01100H
	DD	00H
	DD	01H
	DD	01H
	DD	02198H
	DD	032c8H
	DD	01eH
	DD	FLAT:??_C@_0L@NCDE@Champion?8s?$AA@
	DB	04H
	ORG $+3
	DD	07eH
	DD	096H
	DD	028H
	DD	01100H
	DD	00H
	DD	01H
	DD	01H
	DD	03b60H
	DD	05dc0H
	DD	021H
	DD	FLAT:??_C@_06LAFC@King?8s?$AA@
	DB	04H
	ORG $+3
	DD	097H
	DD	0afH
	DD	01cH
	DD	01100H
	DD	00H
	DD	01H
	DD	01H
	DD	05e24H
	DD	088b8H
	DD	026H
	DD	FLAT:??_C@_0L@BMID@Vulnerable?$AA@
	DB	07H
	ORG $+3
	DD	033H
	DD	064H
	DD	03H
	DD	0110000H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_06DCIE@Rusted?$AA@
	DB	07H
	ORG $+3
	DD	019H
	DD	032H
	DD	01H
	DD	0110000H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_04MEAC@Fine?$AA@
	DB	06H
	ORG $+3
	DD	014H
	DD	01eH
	DD	01H
	DD	0110000H
	DD	00H
	DD	01H
	DD	01H
	DD	014H
	DD	064H
	DD	02H
	DD	FLAT:??_C@_06BEKF@Strong?$AA@
	DB	06H
	ORG $+3
	DD	01fH
	DD	028H
	DD	03H
	DD	0110000H
	DD	00H
	DD	01H
	DD	01H
	DD	078H
	DD	0c8H
	DD	03H
	DD	FLAT:??_C@_05PNKF@Grand?$AA@
	DB	06H
	ORG $+3
	DD	029H
	DD	037H
	DD	06H
	DD	0110000H
	DD	00H
	DD	01H
	DD	01H
	DD	0dcH
	DD	012cH
	DD	05H
	DD	FLAT:??_C@_07EDJP@Valiant?$AA@
	DB	06H
	ORG $+3
	DD	038H
	DD	046H
	DD	0aH
	DD	0110000H
	DD	00H
	DD	01H
	DD	01H
	DD	0140H
	DD	0190H
	DD	07H
	DD	FLAT:??_C@_08HMNP@Glorious?$AA@
	DB	06H
	ORG $+3
	DD	047H
	DD	05aH
	DD	0eH
	DD	0110000H
	DD	010H
	DD	01H
	DD	01H
	DD	01a4H
	DD	0258H
	DD	09H
	DD	FLAT:??_C@_07EIDE@Blessed?$AA@
	DB	06H
	ORG $+3
	DD	05bH
	DD	06eH
	DD	013H
	DD	0110000H
	DD	010H
	DD	01H
	DD	01H
	DD	026cH
	DD	0320H
	DD	0bH
	DD	FLAT:??_C@_07EPFC@Saintly?$AA@
	DB	06H
	ORG $+3
	DD	06fH
	DD	082H
	DD	018H
	DD	0110000H
	DD	010H
	DD	01H
	DD	01H
	DD	0334H
	DD	04b0H
	DD	0dH
	DD	FLAT:??_C@_07JECP@Awesome?$AA@
	DB	06H
	ORG $+3
	DD	083H
	DD	096H
	DD	01cH
	DD	0110000H
	DD	010H
	DD	01H
	DD	01H
	DD	04c4H
	DD	07d0H
	DD	0fH
	DD	FLAT:??_C@_04KHMI@Holy?$AA@
	DB	06H
	ORG $+3
	DD	097H
	DD	0aaH
	DD	023H
	DD	0110000H
	DD	010H
	DD	01H
	DD	01H
	DD	01450H
	DD	01770H
	DD	011H
	DD	FLAT:??_C@_05PIBE@Godly?$AA@
	DB	06H
	ORG $+3
	DD	0abH
	DD	0c8H
	DD	03cH
	DD	0110000H
	DD	010H
	DD	01H
	DD	01H
	DD	01838H
	DD	01b58H
	DD	014H
	DD	FLAT:??_C@_03GOGG@Red?$AA@
	DB	08H
	ORG $+3
	DD	0aH
	DD	014H
	DD	04H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	01f4H
	DD	05dcH
	DD	02H
	DD	FLAT:??_C@_07FEBH@Crimson?$AA@
	DB	08H
	ORG $+3
	DD	015H
	DD	01eH
	DD	0aH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0834H
	DD	0bb8H
	DD	02H
	DD	FLAT:??_C@_07FEBH@Crimson?$AA@
	DB	08H
	ORG $+3
	DD	01fH
	DD	028H
	DD	010H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0c1cH
	DD	0fa0H
	DD	02H
	DD	FLAT:??_C@_06LALG@Garnet?$AA@
	DB	08H
	ORG $+3
	DD	029H
	DD	032H
	DD	014H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	02008H
	DD	02ee0H
	DD	03H
	DD	FLAT:??_C@_04EFIE@Ruby?$AA@
	DB	08H
	ORG $+3
	DD	033H
	DD	03cH
	DD	01aH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	042ccH
	DD	04e20H
	DD	05H
	DD	FLAT:??_C@_04KPAE@Blue?$AA@
	DB	09H
	ORG $+3
	DD	0aH
	DD	014H
	DD	04H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	01f4H
	DD	05dcH
	DD	02H
	DD	FLAT:??_C@_05FBBK@Azure?$AA@
	DB	09H
	ORG $+3
	DD	015H
	DD	01eH
	DD	0aH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0834H
	DD	0bb8H
	DD	02H
	DD	FLAT:??_C@_05MIIL@Lapis?$AA@
	DB	09H
	ORG $+3
	DD	01fH
	DD	028H
	DD	010H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0c1cH
	DD	0fa0H
	DD	02H
	DD	FLAT:??_C@_06PPMI@Cobalt?$AA@
	DB	09H
	ORG $+3
	DD	029H
	DD	032H
	DD	014H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	02008H
	DD	02ee0H
	DD	03H
	DD	FLAT:??_C@_08JPLJ@Sapphire?$AA@
	DB	09H
	ORG $+3
	DD	033H
	DD	03cH
	DD	01aH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	042ccH
	DD	04e20H
	DD	05H
	DD	FLAT:??_C@_05CGP@White?$AA@
	DB	0aH
	ORG $+3
	DD	0aH
	DD	014H
	DD	04H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	01f4H
	DD	05dcH
	DD	02H
	DD	FLAT:??_C@_05OBHK@Pearl?$AA@
	DB	0aH
	ORG $+3
	DD	015H
	DD	01eH
	DD	0aH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0834H
	DD	0bb8H
	DD	02H
	DD	FLAT:??_C@_05KNIO@Ivory?$AA@
	DB	0aH
	ORG $+3
	DD	01fH
	DD	028H
	DD	010H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0c1cH
	DD	0fa0H
	DD	02H
	DD	FLAT:??_C@_07NPPL@Crystal?$AA@
	DB	0aH
	ORG $+3
	DD	029H
	DD	032H
	DD	014H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	02008H
	DD	02ee0H
	DD	03H
	DD	FLAT:??_C@_07DLIP@Diamond?$AA@
	DB	0aH
	ORG $+3
	DD	033H
	DD	03cH
	DD	01aH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	042ccH
	DD	04e20H
	DD	05H
	DD	FLAT:??_C@_05HFPD@Topaz?$AA@
	DB	0bH
	ORG $+3
	DD	0aH
	DD	0fH
	DD	08H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	07d0H
	DD	01388H
	DD	03H
	DD	FLAT:??_C@_05JGOH@Amber?$AA@
	DB	0bH
	ORG $+3
	DD	010H
	DD	014H
	DD	0cH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	01ce8H
	DD	02710H
	DD	03H
	DD	FLAT:??_C@_04HDGO@Jade?$AA@
	DB	0bH
	ORG $+3
	DD	015H
	DD	01eH
	DD	012H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	02af8H
	DD	03a98H
	DD	03H
	DD	FLAT:??_C@_08FHBF@Obsidian?$AA@
	DB	0bH
	ORG $+3
	DD	01fH
	DD	028H
	DD	018H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	05dc0H
	DD	09c40H
	DD	04H
	DD	FLAT:??_C@_07BHJH@Emerald?$AA@
	DB	0bH
	ORG $+3
	DD	029H
	DD	032H
	DD	01fH
	DD	011110H
	DD	00H
	DD	00H
	DD	01H
	DD	0ee48H
	DD	0124f8H
	DD	07H
	DD	FLAT:??_C@_07MJBJ@Hyena?8s?$AA@
	DB	022H
	ORG $+3
	DD	0bH
	DD	019H
	DD	04H
	DD	0101H
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	03e8H
	DD	0fffffffeH
	DD	FLAT:??_C@_06BIDB@Frog?8s?$AA@
	DB	022H
	ORG $+3
	DD	01H
	DD	0aH
	DD	01H
	DD	0101H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_08LPHF@Spider?8s?$AA@
	DB	021H
	ORG $+3
	DD	0aH
	DD	0fH
	DD	01H
	DD	0101H
	DD	01H
	DD	00H
	DD	01H
	DD	01f4H
	DD	03e8H
	DD	02H
	DD	FLAT:??_C@_07HHEO@Raven?8s?$AA@
	DB	021H
	ORG $+3
	DD	0fH
	DD	014H
	DD	05H
	DD	0101H
	DD	00H
	DD	00H
	DD	01H
	DD	044cH
	DD	07d0H
	DD	03H
	DD	FLAT:??_C@_07ONOH@Snake?8s?$AA@
	DB	021H
	ORG $+3
	DD	015H
	DD	01eH
	DD	09H
	DD	0101H
	DD	00H
	DD	00H
	DD	01H
	DD	0834H
	DD	0fa0H
	DD	05H
	DD	FLAT:??_C@_09EOEE@Serpent?8s?$AA@
	DB	021H
	ORG $+3
	DD	01eH
	DD	028H
	DD	0fH
	DD	0101H
	DD	00H
	DD	00H
	DD	01H
	DD	01004H
	DD	01770H
	DD	07H
	DD	FLAT:??_C@_07GMNG@Drake?8s?$AA@
	DB	021H
	ORG $+3
	DD	029H
	DD	032H
	DD	015H
	DD	0101H
	DD	00H
	DD	00H
	DD	01H
	DD	017d4H
	DD	02710H
	DD	09H
	DD	FLAT:??_C@_08EMKB@Dragon?8s?$AA@
	DB	021H
	ORG $+3
	DD	033H
	DD	03cH
	DD	01bH
	DD	0101H
	DD	00H
	DD	00H
	DD	01H
	DD	02774H
	DD	03a98H
	DD	0bH
	DD	FLAT:??_C@_06MNOF@Wyrm?8s?$AA@
	DB	021H
	ORG $+3
	DD	03dH
	DD	050H
	DD	023H
	DD	0100H
	DD	00H
	DD	00H
	DD	01H
	DD	03afcH
	DD	04a38H
	DD	0cH
	DD	FLAT:??_C@_07IDMF@Hydra?8s?$AA@
	DB	021H
	ORG $+3
	DD	051H
	DD	064H
	DD	03cH
	DD	0100H
	DD	00H
	DD	00H
	DD	01H
	DD	04a9cH
	DD	07530H
	DD	0dH
	DD	FLAT:??_C@_07KOJG@Angel?8s?$AA@
	DB	0eH
	ORG $+3
	DD	01H
	DD	01H
	DD	0fH
	DD	0100H
	DD	010H
	DD	00H
	DD	01H
	DD	061a8H
	DD	061a8H
	DD	02H
	DD	FLAT:??_C@_0N@ELNE@Arch?9Angel?8s?$AA@
	DB	0eH
	ORG $+3
	DD	02H
	DD	02H
	DD	019H
	DD	0100H
	DD	010H
	DD	00H
	DD	01H
	DD	0c350H
	DD	0c350H
	DD	03H
	DD	FLAT:??_C@_09DDEK@Plentiful?$AA@
	DB	0fH
	ORG $+3
	DD	02H
	DD	02H
	DD	04H
	DD	0100H
	DD	00H
	DD	00H
	DD	01H
	DD	07d0H
	DD	07d0H
	DD	02H
	DD	FLAT:??_C@_09KCHB@Bountiful?$AA@
	DB	0fH
	ORG $+3
	DD	03H
	DD	03H
	DD	09H
	DD	0100H
	DD	00H
	DD	00H
	DD	01H
	DD	0bb8H
	DD	0bb8H
	DD	03H
	DD	FLAT:??_C@_07LGEK@Flaming?$AA@
	DB	010H
	ORG $+3
	DD	01H
	DD	0aH
	DD	07H
	DD	01100H
	DD	00H
	DD	00H
	DD	01H
	DD	01388H
	DD	01388H
	DD	02H
	DD	FLAT:??_C@_09NPLP@Lightning?$AA@
	DB	011H
	ORG $+3
	DD	02H
	DD	014H
	DD	012H
	DD	01100H
	DD	00H
	DD	00H
	DD	01H
	DD	02710H
	DD	02710H
	DD	02H
	DD	FLAT:??_C@_00A@?$AA@
	DB	0ffH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_07PDKP@quality?$AA@
_DATA	SEGMENT
??_C@_07PDKP@quality?$AA@ DB 'quality', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MOG@maiming?$AA@
_DATA	SEGMENT
??_C@_07MOG@maiming?$AA@ DB 'maiming', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NJAO@slaying?$AA@
_DATA	SEGMENT
??_C@_07NJAO@slaying?$AA@ DB 'slaying', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04CCDC@gore?$AA@
_DATA	SEGMENT
??_C@_04CCDC@gore?$AA@ DB 'gore', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07HFLF@carnage?$AA@
_DATA	SEGMENT
??_C@_07HFLF@carnage?$AA@ DB 'carnage', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09OFBO@slaughter?$AA@
_DATA	SEGMENT
??_C@_09OFBO@slaughter?$AA@ DB 'slaughter', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04LOGM@pain?$AA@
_DATA	SEGMENT
??_C@_04LOGM@pain?$AA@ DB 'pain', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MNGI@tears?$AA@
_DATA	SEGMENT
??_C@_05MNGI@tears?$AA@ DB 'tears', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06HECL@health?$AA@
_DATA	SEGMENT
??_C@_06HECL@health?$AA@ DB 'health', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@CCCL@protection?$AA@
_DATA	SEGMENT
??_C@_0L@CCCL@protection?$AA@ DB 'protection', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@CIHJ@absorption?$AA@
_DATA	SEGMENT
??_C@_0L@CIHJ@absorption?$AA@ DB 'absorption', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@BONB@deflection?$AA@
_DATA	SEGMENT
??_C@_0L@BONB@deflection?$AA@ DB 'deflection', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JNDF@osmosis?$AA@
_DATA	SEGMENT
??_C@_07JNDF@osmosis?$AA@ DB 'osmosis', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JBCL@frailty?$AA@
_DATA	SEGMENT
??_C@_07JBCL@frailty?$AA@ DB 'frailty', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08GLJO@weakness?$AA@
_DATA	SEGMENT
??_C@_08GLJO@weakness?$AA@ DB 'weakness', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08GOPF@strength?$AA@
_DATA	SEGMENT
??_C@_08GOPF@strength?$AA@ DB 'strength', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05JKNA@might?$AA@
_DATA	SEGMENT
??_C@_05JKNA@might?$AA@ DB 'might', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05EBLP@power?$AA@
_DATA	SEGMENT
??_C@_05EBLP@power?$AA@ DB 'power', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06BGKJ@giants?$AA@
_DATA	SEGMENT
??_C@_06BGKJ@giants?$AA@ DB 'giants', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06MLAM@titans?$AA@
_DATA	SEGMENT
??_C@_06MLAM@titans?$AA@ DB 'titans', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09HGHO@paralysis?$AA@
_DATA	SEGMENT
??_C@_09HGHO@paralysis?$AA@ DB 'paralysis', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07GEAH@atrophy?$AA@
_DATA	SEGMENT
??_C@_07GEAH@atrophy?$AA@ DB 'atrophy', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09KIDC@dexterity?$AA@
_DATA	SEGMENT
??_C@_09KIDC@dexterity?$AA@ DB 'dexterity', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MIHE@skill?$AA@
_DATA	SEGMENT
??_C@_05MIHE@skill?$AA@ DB 'skill', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08JPJB@accuracy?$AA@
_DATA	SEGMENT
??_C@_08JPJB@accuracy?$AA@ DB 'accuracy', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09PIJM@precision?$AA@
_DATA	SEGMENT
??_C@_09PIJM@precision?$AA@ DB 'precision', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@FGCJ@perfection?$AA@
_DATA	SEGMENT
??_C@_0L@FGCJ@perfection?$AA@ DB 'perfection', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_08NOGA@the?5fool?$AA@
_DATA	SEGMENT
??_C@_08NOGA@the?5fool?$AA@ DB 'the fool', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08OHBO@dyslexia?$AA@
_DATA	SEGMENT
??_C@_08OHBO@dyslexia?$AA@ DB 'dyslexia', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05FKHP@magic?$AA@
_DATA	SEGMENT
??_C@_05FKHP@magic?$AA@ DB 'magic', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08DFGD@the?5mind?$AA@
_DATA	SEGMENT
??_C@_08DFGD@the?5mind?$AA@ DB 'the mind', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@IKPP@brilliance?$AA@
_DATA	SEGMENT
??_C@_0L@IKPP@brilliance?$AA@ DB 'brilliance', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07OPMD@sorcery?$AA@
_DATA	SEGMENT
??_C@_07OPMD@sorcery?$AA@ DB 'sorcery', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08CDF@wizardry?$AA@
_DATA	SEGMENT
??_C@_08CDF@wizardry?$AA@ DB 'wizardry', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NPOJ@illness?$AA@
_DATA	SEGMENT
??_C@_07NPOJ@illness?$AA@ DB 'illness', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MEBM@disease?$AA@
_DATA	SEGMENT
??_C@_07MEBM@disease?$AA@ DB 'disease', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MHIB@vitality?$AA@
_DATA	SEGMENT
??_C@_08MHIB@vitality?$AA@ DB 'vitality', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04MMEM@zest?$AA@
_DATA	SEGMENT
??_C@_04MMEM@zest?$AA@ DB 'zest', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_03HFDI@vim?$AA@
_DATA	SEGMENT
??_C@_03HFDI@vim?$AA@ DB 'vim', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05OHOH@vigor?$AA@
_DATA	SEGMENT
??_C@_05OHOH@vigor?$AA@ DB 'vigor', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04LLCA@life?$AA@
_DATA	SEGMENT
??_C@_04LLCA@life?$AA@ DB 'life', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07PKPN@trouble?$AA@
_DATA	SEGMENT
??_C@_07PKPN@trouble?$AA@ DB 'trouble', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07BMMA@the?5pit?$AA@
_DATA	SEGMENT
??_C@_07BMMA@the?5pit?$AA@ DB 'the pit', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JDNN@the?5sky?$AA@
_DATA	SEGMENT
??_C@_07JDNN@the?5sky?$AA@ DB 'the sky', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MOCI@the?5moon?$AA@
_DATA	SEGMENT
??_C@_08MOCI@the?5moon?$AA@ DB 'the moon', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09DDFF@the?5stars?$AA@
_DATA	SEGMENT
??_C@_09DDFF@the?5stars?$AA@ DB 'the stars', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@JHLN@the?5heavens?$AA@
_DATA	SEGMENT
??_C@_0M@JHLN@the?5heavens?$AA@ DB 'the heavens', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@NFBJ@the?5zodiac?$AA@
_DATA	SEGMENT
??_C@_0L@NFBJ@the?5zodiac?$AA@ DB 'the zodiac', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@CODE@the?5vulture?$AA@
_DATA	SEGMENT
??_C@_0M@CODE@the?5vulture?$AA@ DB 'the vulture', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@BBCA@the?5jackal?$AA@
_DATA	SEGMENT
??_C@_0L@BBCA@the?5jackal?$AA@ DB 'the jackal', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07FIMG@the?5fox?$AA@
_DATA	SEGMENT
??_C@_07FIMG@the?5fox?$AA@ DB 'the fox', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@NLHK@the?5jaguar?$AA@
_DATA	SEGMENT
??_C@_0L@NLHK@the?5jaguar?$AA@ DB 'the jaguar', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09GJD@the?5eagle?$AA@
_DATA	SEGMENT
??_C@_09GJD@the?5eagle?$AA@ DB 'the eagle', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08JEHK@the?5wolf?$AA@
_DATA	SEGMENT
??_C@_08JEHK@the?5wolf?$AA@ DB 'the wolf', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09NBBI@the?5tiger?$AA@
_DATA	SEGMENT
??_C@_09NBBI@the?5tiger?$AA@ DB 'the tiger', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_08HAN@the?5lion?$AA@
_DATA	SEGMENT
??_C@_08HAN@the?5lion?$AA@ DB 'the lion', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@EH@the?5mammoth?$AA@
_DATA	SEGMENT
??_C@_0M@EH@the?5mammoth?$AA@ DB 'the mammoth', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09KHDJ@the?5whale?$AA@
_DATA	SEGMENT
??_C@_09KHDJ@the?5whale?$AA@ DB 'the whale', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09CAOA@fragility?$AA@
_DATA	SEGMENT
??_C@_09CAOA@fragility?$AA@ DB 'fragility', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@BMJN@brittleness?$AA@
_DATA	SEGMENT
??_C@_0M@BMJN@brittleness?$AA@ DB 'brittleness', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@MKAO@sturdiness?$AA@
_DATA	SEGMENT
??_C@_0L@MKAO@sturdiness?$AA@ DB 'sturdiness', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@NGPJ@craftsmanship?$AA@
_DATA	SEGMENT
??_C@_0O@NGPJ@craftsmanship?$AA@ DB 'craftsmanship', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09HDHE@structure?$AA@
_DATA	SEGMENT
??_C@_09HDHE@structure?$AA@ DB 'structure', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IEEH@the?5ages?$AA@
_DATA	SEGMENT
??_C@_08IEEH@the?5ages?$AA@ DB 'the ages', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08COBO@the?5dark?$AA@
_DATA	SEGMENT
??_C@_08COBO@the?5dark?$AA@ DB 'the dark', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09JEAL@the?5night?$AA@
_DATA	SEGMENT
??_C@_09JEAL@the?5night?$AA@ DB 'the night', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05DKPF@light?$AA@
_DATA	SEGMENT
??_C@_05DKPF@light?$AA@ DB 'light', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08LADN@radiance?$AA@
_DATA	SEGMENT
??_C@_08LADN@radiance?$AA@ DB 'radiance', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05GIBP@flame?$AA@
_DATA	SEGMENT
??_C@_05GIBP@flame?$AA@ DB 'flame', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04OLBH@fire?$AA@
_DATA	SEGMENT
??_C@_04OLBH@fire?$AA@ DB 'fire', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07DBMH@burning?$AA@
_DATA	SEGMENT
??_C@_07DBMH@burning?$AA@ DB 'burning', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MKBB@shock?$AA@
_DATA	SEGMENT
??_C@_05MKBB@shock?$AA@ DB 'shock', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09JGLK@lightning?$AA@
_DATA	SEGMENT
??_C@_09JGLK@lightning?$AA@ DB 'lightning', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MGNA@thunder?$AA@
_DATA	SEGMENT
??_C@_07MGNA@thunder?$AA@ DB 'thunder', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04OMAH@many?$AA@
_DATA	SEGMENT
??_C@_04OMAH@many?$AA@ DB 'many', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06BAKF@plenty?$AA@
_DATA	SEGMENT
??_C@_06BAKF@plenty?$AA@ DB 'plenty', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06KMDP@thorns?$AA@
_DATA	SEGMENT
??_C@_06KMDP@thorns?$AA@ DB 'thorns', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@EHKO@corruption?$AA@
_DATA	SEGMENT
??_C@_0L@EHKO@corruption?$AA@ DB 'corruption', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07CPIM@thieves?$AA@
_DATA	SEGMENT
??_C@_07CPIM@thieves?$AA@ DB 'thieves', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08LPKB@the?5bear?$AA@
_DATA	SEGMENT
??_C@_08LPKB@the?5bear?$AA@ DB 'the bear', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07CMND@the?5bat?$AA@
_DATA	SEGMENT
??_C@_07CMND@the?5bat?$AA@ DB 'the bat', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08PJJE@vampires?$AA@
_DATA	SEGMENT
??_C@_08PJJE@vampires?$AA@ DB 'vampires', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09BGIL@the?5leech?$AA@
_DATA	SEGMENT
??_C@_09BGIL@the?5leech?$AA@ DB 'the leech', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05BDIK@blood?$AA@
_DATA	SEGMENT
??_C@_05BDIK@blood?$AA@ DB 'blood', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08HKMC@piercing?$AA@
_DATA	SEGMENT
??_C@_08HKMC@piercing?$AA@ DB 'piercing', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@DPAO@puncturing?$AA@
_DATA	SEGMENT
??_C@_0L@DPAO@puncturing?$AA@ DB 'puncturing', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07ECIM@bashing?$AA@
_DATA	SEGMENT
??_C@_07ECIM@bashing?$AA@ DB 'bashing', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09DLAK@readiness?$AA@
_DATA	SEGMENT
??_C@_09DLAK@readiness?$AA@ DB 'readiness', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09JHNE@swiftness?$AA@
_DATA	SEGMENT
??_C@_09JHNE@swiftness?$AA@ DB 'swiftness', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05PHJK@speed?$AA@
_DATA	SEGMENT
??_C@_05PHJK@speed?$AA@ DB 'speed', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05HPHA@haste?$AA@
_DATA	SEGMENT
??_C@_05HPHA@haste?$AA@ DB 'haste', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07DMNA@balance?$AA@
_DATA	SEGMENT
??_C@_07DMNA@balance?$AA@ DB 'balance', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09LMMN@stability?$AA@
_DATA	SEGMENT
??_C@_09LMMN@stability?$AA@ DB 'stability', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JFPI@harmony?$AA@
_DATA	SEGMENT
??_C@_07JFPI@harmony?$AA@ DB 'harmony', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08PCBE@blocking?$AA@
_DATA	SEGMENT
??_C@_08PCBE@blocking?$AA@ DB 'blocking', 00H		; `string'
_DATA	ENDS
CONST	SEGMENT
_PL_Suffix DD	FLAT:??_C@_07PDKP@quality?$AA@
	DB	03dH
	ORG $+3
	DD	01H
	DD	02H
	DD	02H
	DD	01010H
	DD	00H
	DD	00H
	DD	01H
	DD	064H
	DD	0c8H
	DD	02H
	DD	FLAT:??_C@_07MOG@maiming?$AA@
	DB	03dH
	ORG $+3
	DD	03H
	DD	05H
	DD	07H
	DD	01010H
	DD	00H
	DD	00H
	DD	01H
	DD	0514H
	DD	05dcH
	DD	03H
	DD	FLAT:??_C@_07NJAO@slaying?$AA@
	DB	03dH
	ORG $+3
	DD	06H
	DD	08H
	DD	0fH
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	0a28H
	DD	0bb8H
	DD	05H
	DD	FLAT:??_C@_04CCDC@gore?$AA@
	DB	03dH
	ORG $+3
	DD	09H
	DD	0cH
	DD	019H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	01004H
	DD	01388H
	DD	08H
	DD	FLAT:??_C@_07HFLF@carnage?$AA@
	DB	03dH
	ORG $+3
	DD	0dH
	DD	010H
	DD	023H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	013ecH
	DD	02710H
	DD	0aH
	DD	FLAT:??_C@_09OFBO@slaughter?$AA@
	DB	03dH
	ORG $+3
	DD	011H
	DD	014H
	DD	03cH
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	02774H
	DD	03a98H
	DD	0dH
	DD	FLAT:??_C@_04LOGM@pain?$AA@
	DB	01dH
	ORG $+3
	DD	02H
	DD	04H
	DD	04H
	DD	0110001H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffcH
	DD	FLAT:??_C@_05MNGI@tears?$AA@
	DB	01dH
	ORG $+3
	DD	01H
	DD	01H
	DD	02H
	DD	0110001H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_06HECL@health?$AA@
	DB	01eH
	ORG $+3
	DD	01H
	DD	01H
	DD	02H
	DD	0110001H
	DD	010H
	DD	00H
	DD	01H
	DD	0c8H
	DD	0c8H
	DD	02H
	DD	FLAT:??_C@_0L@CCCL@protection?$AA@
	DB	01eH
	ORG $+3
	DD	02H
	DD	02H
	DD	06H
	DD	0110000H
	DD	010H
	DD	00H
	DD	01H
	DD	0190H
	DD	0320H
	DD	04H
	DD	FLAT:??_C@_0L@CIHJ@absorption?$AA@
	DB	01eH
	ORG $+3
	DD	03H
	DD	03H
	DD	0cH
	DD	0110000H
	DD	010H
	DD	00H
	DD	01H
	DD	03e9H
	DD	09c4H
	DD	0aH
	DD	FLAT:??_C@_0L@BONB@deflection?$AA@
	DB	01eH
	ORG $+3
	DD	04H
	DD	04H
	DD	014H
	DD	0100000H
	DD	010H
	DD	00H
	DD	01H
	DD	09c4H
	DD	01964H
	DD	0fH
	DD	FLAT:??_C@_07JNDF@osmosis?$AA@
	DB	01eH
	ORG $+3
	DD	05H
	DD	06H
	DD	032H
	DD	0100000H
	DD	010H
	DD	00H
	DD	01H
	DD	01d4cH
	DD	02710H
	DD	014H
	DD	FLAT:??_C@_07JBCL@frailty?$AA@
	DB	014H
	ORG $+3
	DD	06H
	DD	0aH
	DD	03H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_08GLJO@weakness?$AA@
	DB	014H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_08GOPF@strength?$AA@
	DB	013H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	0c8H
	DD	03e8H
	DD	02H
	DD	FLAT:??_C@_05JKNA@might?$AA@
	DB	013H
	ORG $+3
	DD	06H
	DD	0aH
	DD	05H
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	04b0H
	DD	07d0H
	DD	03H
	DD	FLAT:??_C@_05EBLP@power?$AA@
	DB	013H
	ORG $+3
	DD	0bH
	DD	0fH
	DD	0bH
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	0898H
	DD	0bb8H
	DD	04H
	DD	FLAT:??_C@_06BGKJ@giants?$AA@
	DB	013H
	ORG $+3
	DD	010H
	DD	014H
	DD	011H
	DD	0101011H
	DD	00H
	DD	00H
	DD	01H
	DD	0c80H
	DD	01388H
	DD	07H
	DD	FLAT:??_C@_06MLAM@titans?$AA@
	DB	013H
	ORG $+3
	DD	015H
	DD	01eH
	DD	017H
	DD	01001H
	DD	00H
	DD	00H
	DD	01H
	DD	01450H
	DD	02710H
	DD	0aH
	DD	FLAT:??_C@_09HGHO@paralysis?$AA@
	DB	018H
	ORG $+3
	DD	06H
	DD	0aH
	DD	03H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_07GEAH@atrophy?$AA@
	DB	018H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_09KIDC@dexterity?$AA@
	DB	017H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	0c8H
	DD	03e8H
	DD	02H
	DD	FLAT:??_C@_05MIHE@skill?$AA@
	DB	017H
	ORG $+3
	DD	06H
	DD	0aH
	DD	05H
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	04b0H
	DD	07d0H
	DD	03H
	DD	FLAT:??_C@_08JPJB@accuracy?$AA@
	DB	017H
	ORG $+3
	DD	0bH
	DD	0fH
	DD	0bH
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	0898H
	DD	0bb8H
	DD	04H
	DD	FLAT:??_C@_09PIJM@precision?$AA@
	DB	017H
	ORG $+3
	DD	010H
	DD	014H
	DD	011H
	DD	0101011H
	DD	00H
	DD	00H
	DD	01H
	DD	0c80H
	DD	01388H
	DD	07H
	DD	FLAT:??_C@_0L@FGCJ@perfection?$AA@
	DB	017H
	ORG $+3
	DD	015H
	DD	01eH
	DD	017H
	DD	011H
	DD	00H
	DD	00H
	DD	01H
	DD	01450H
	DD	02710H
	DD	0aH
	DD	FLAT:??_C@_08NOGA@the?5fool?$AA@
	DB	016H
	ORG $+3
	DD	06H
	DD	0aH
	DD	03H
	DD	0111111H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_08OHBO@dyslexia?$AA@
	DB	016H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111111H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_05FKHP@magic?$AA@
	DB	015H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0c8H
	DD	03e8H
	DD	02H
	DD	FLAT:??_C@_08DFGD@the?5mind?$AA@
	DB	015H
	ORG $+3
	DD	06H
	DD	0aH
	DD	05H
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	04b0H
	DD	07d0H
	DD	03H
	DD	FLAT:??_C@_0L@IKPP@brilliance?$AA@
	DB	015H
	ORG $+3
	DD	0bH
	DD	0fH
	DD	0bH
	DD	0111111H
	DD	00H
	DD	00H
	DD	01H
	DD	0898H
	DD	0bb8H
	DD	04H
	DD	FLAT:??_C@_07OPMD@sorcery?$AA@
	DB	015H
	ORG $+3
	DD	010H
	DD	014H
	DD	011H
	DD	0101111H
	DD	00H
	DD	00H
	DD	01H
	DD	0c80H
	DD	01388H
	DD	07H
	DD	FLAT:??_C@_08CDF@wizardry?$AA@
	DB	015H
	ORG $+3
	DD	015H
	DD	01eH
	DD	017H
	DD	0101H
	DD	00H
	DD	00H
	DD	01H
	DD	01450H
	DD	02710H
	DD	0aH
	DD	FLAT:??_C@_07NPOJ@illness?$AA@
	DB	01aH
	ORG $+3
	DD	06H
	DD	0aH
	DD	03H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_07MEBM@disease?$AA@
	DB	01aH
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_08MHIB@vitality?$AA@
	DB	019H
	ORG $+3
	DD	01H
	DD	05H
	DD	01H
	DD	0111011H
	DD	010H
	DD	00H
	DD	01H
	DD	0c8H
	DD	03e8H
	DD	02H
	DD	FLAT:??_C@_04MMEM@zest?$AA@
	DB	019H
	ORG $+3
	DD	06H
	DD	0aH
	DD	05H
	DD	0111011H
	DD	010H
	DD	00H
	DD	01H
	DD	04b0H
	DD	07d0H
	DD	03H
	DD	FLAT:??_C@_03HFDI@vim?$AA@
	DB	019H
	ORG $+3
	DD	0bH
	DD	0fH
	DD	0bH
	DD	0111011H
	DD	010H
	DD	00H
	DD	01H
	DD	0898H
	DD	0bb8H
	DD	04H
	DD	FLAT:??_C@_05OHOH@vigor?$AA@
	DB	019H
	ORG $+3
	DD	010H
	DD	014H
	DD	011H
	DD	0101011H
	DD	010H
	DD	00H
	DD	01H
	DD	0c80H
	DD	01388H
	DD	07H
	DD	FLAT:??_C@_04LLCA@life?$AA@
	DB	019H
	ORG $+3
	DD	015H
	DD	01eH
	DD	017H
	DD	01H
	DD	010H
	DD	00H
	DD	01H
	DD	01450H
	DD	02710H
	DD	0aH
	DD	FLAT:??_C@_07PKPN@trouble?$AA@
	DB	01cH
	ORG $+3
	DD	06H
	DD	0aH
	DD	0cH
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffff6H
	DD	FLAT:??_C@_07BMMA@the?5pit?$AA@
	DB	01cH
	ORG $+3
	DD	01H
	DD	05H
	DD	05H
	DD	0111011H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffbH
	DD	FLAT:??_C@_07JDNN@the?5sky?$AA@
	DB	01bH
	ORG $+3
	DD	01H
	DD	03H
	DD	05H
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	0320H
	DD	0fa0H
	DD	05H
	DD	FLAT:??_C@_08MOCI@the?5moon?$AA@
	DB	01bH
	ORG $+3
	DD	04H
	DD	07H
	DD	0bH
	DD	0111011H
	DD	00H
	DD	00H
	DD	01H
	DD	012c0H
	DD	01f40H
	DD	0aH
	DD	FLAT:??_C@_09DDFF@the?5stars?$AA@
	DB	01bH
	ORG $+3
	DD	08H
	DD	0bH
	DD	011H
	DD	0101011H
	DD	00H
	DD	00H
	DD	01H
	DD	02260H
	DD	02ee0H
	DD	0fH
	DD	FLAT:??_C@_0M@JHLN@the?5heavens?$AA@
	DB	01bH
	ORG $+3
	DD	0cH
	DD	0fH
	DD	019H
	DD	01011H
	DD	00H
	DD	00H
	DD	01H
	DD	03200H
	DD	04e20H
	DD	014H
	DD	FLAT:??_C@_0L@NFBJ@the?5zodiac?$AA@
	DB	01bH
	ORG $+3
	DD	010H
	DD	014H
	DD	01eH
	DD	01H
	DD	00H
	DD	00H
	DD	01H
	DD	05140H
	DD	09c40H
	DD	01eH
	DD	FLAT:??_C@_0M@CODE@the?5vulture?$AA@
	DB	020H
	ORG $+3
	DD	0bH
	DD	019H
	DD	04H
	DD	0110001H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffcH
	DD	FLAT:??_C@_0L@BBCA@the?5jackal?$AA@
	DB	020H
	ORG $+3
	DD	01H
	DD	0aH
	DD	01H
	DD	0110001H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_07FIMG@the?5fox?$AA@
	DB	01fH
	ORG $+3
	DD	0aH
	DD	0fH
	DD	01H
	DD	0110001H
	DD	00H
	DD	00H
	DD	01H
	DD	064H
	DD	03e8H
	DD	02H
	DD	FLAT:??_C@_0L@NLHK@the?5jaguar?$AA@
	DB	01fH
	ORG $+3
	DD	010H
	DD	014H
	DD	05H
	DD	0110001H
	DD	00H
	DD	00H
	DD	01H
	DD	044cH
	DD	07d0H
	DD	03H
	DD	FLAT:??_C@_09GJD@the?5eagle?$AA@
	DB	01fH
	ORG $+3
	DD	015H
	DD	01eH
	DD	09H
	DD	0110001H
	DD	00H
	DD	00H
	DD	01H
	DD	0834H
	DD	0fa0H
	DD	05H
	DD	FLAT:??_C@_08JEHK@the?5wolf?$AA@
	DB	01fH
	ORG $+3
	DD	01eH
	DD	028H
	DD	0fH
	DD	0110001H
	DD	00H
	DD	00H
	DD	01H
	DD	01004H
	DD	01770H
	DD	07H
	DD	FLAT:??_C@_09NBBI@the?5tiger?$AA@
	DB	01fH
	ORG $+3
	DD	029H
	DD	032H
	DD	015H
	DD	0110001H
	DD	00H
	DD	00H
	DD	01H
	DD	017d4H
	DD	02710H
	DD	09H
	DD	FLAT:??_C@_08HAN@the?5lion?$AA@
	DB	01fH
	ORG $+3
	DD	033H
	DD	03cH
	DD	01bH
	DD	0100001H
	DD	00H
	DD	00H
	DD	01H
	DD	02774H
	DD	03a98H
	DD	0bH
	DD	FLAT:??_C@_0M@EH@the?5mammoth?$AA@
	DB	01fH
	ORG $+3
	DD	03dH
	DD	050H
	DD	023H
	DD	0100000H
	DD	00H
	DD	00H
	DD	01H
	DD	03afcH
	DD	04a38H
	DD	0cH
	DD	FLAT:??_C@_09KHDJ@the?5whale?$AA@
	DB	01fH
	ORG $+3
	DD	051H
	DD	064H
	DD	03cH
	DD	0100000H
	DD	00H
	DD	00H
	DD	01H
	DD	04a9cH
	DD	07530H
	DD	0dH
	DD	FLAT:??_C@_09CAOA@fragility?$AA@
	DB	024H
	ORG $+3
	DD	064H
	DD	064H
	DD	03H
	DD	0111000H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffcH
	DD	FLAT:??_C@_0M@BMJN@brittleness?$AA@
	DB	024H
	ORG $+3
	DD	01aH
	DD	04bH
	DD	01H
	DD	0111000H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_0L@MKAO@sturdiness?$AA@
	DB	023H
	ORG $+3
	DD	01aH
	DD	04bH
	DD	01H
	DD	0111000H
	DD	00H
	DD	00H
	DD	01H
	DD	064H
	DD	064H
	DD	02H
	DD	FLAT:??_C@_0O@NGPJ@craftsmanship?$AA@
	DB	023H
	ORG $+3
	DD	033H
	DD	064H
	DD	06H
	DD	0111000H
	DD	00H
	DD	00H
	DD	01H
	DD	0c8H
	DD	0c8H
	DD	02H
	DD	FLAT:??_C@_09HDHE@structure?$AA@
	DB	023H
	ORG $+3
	DD	065H
	DD	0c8H
	DD	0cH
	DD	0111000H
	DD	00H
	DD	00H
	DD	01H
	DD	012cH
	DD	012cH
	DD	02H
	DD	FLAT:??_C@_08IEEH@the?5ages?$AA@
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DD	019H
	DD	0111000H
	DD	00H
	DD	00H
	DD	01H
	DD	0258H
	DD	0258H
	DD	05H
	DD	FLAT:??_C@_08COBO@the?5dark?$AA@
	DB	027H
	ORG $+3
	DD	04H
	DD	04H
	DD	06H
	DD	0101001H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffdH
	DD	FLAT:??_C@_09JEAL@the?5night?$AA@
	DB	027H
	ORG $+3
	DD	02H
	DD	02H
	DD	03H
	DD	0101001H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:??_C@_05DKPF@light?$AA@
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DD	04H
	DD	0101001H
	DD	010H
	DD	00H
	DD	01H
	DD	02eeH
	DD	02eeH
	DD	02H
	DD	FLAT:??_C@_08LADN@radiance?$AA@
	DB	026H
	ORG $+3
	DD	04H
	DD	04H
	DD	08H
	DD	0101001H
	DD	010H
	DD	00H
	DD	01H
	DD	05dcH
	DD	05dcH
	DD	03H
	DD	FLAT:??_C@_05GIBP@flame?$AA@
	DB	02aH
	ORG $+3
	DD	01H
	DD	03H
	DD	01H
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	07d0H
	DD	07d0H
	DD	02H
	DD	FLAT:??_C@_04OLBH@fire?$AA@
	DB	02aH
	ORG $+3
	DD	01H
	DD	06H
	DD	0bH
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	0fa0H
	DD	0fa0H
	DD	04H
	DD	FLAT:??_C@_07DBMH@burning?$AA@
	DB	02aH
	ORG $+3
	DD	01H
	DD	010H
	DD	023H
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	01770H
	DD	01770H
	DD	06H
	DD	FLAT:??_C@_05MKBB@shock?$AA@
	DB	02bH
	ORG $+3
	DD	01H
	DD	06H
	DD	0dH
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	01770H
	DD	01770H
	DD	02H
	DD	FLAT:??_C@_09JGLK@lightning?$AA@
	DB	02bH
	ORG $+3
	DD	01H
	DD	0aH
	DD	015H
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	01f40H
	DD	01f40H
	DD	04H
	DD	FLAT:??_C@_07MGNA@thunder?$AA@
	DB	02bH
	ORG $+3
	DD	01H
	DD	014H
	DD	03cH
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	02ee0H
	DD	02ee0H
	DD	06H
	DD	FLAT:??_C@_04OMAH@many?$AA@
	DB	023H
	ORG $+3
	DD	064H
	DD	064H
	DD	03H
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	02eeH
	DD	02eeH
	DD	02H
	DD	FLAT:??_C@_06BAKF@plenty?$AA@
	DB	023H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DD	07H
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	05dcH
	DD	05dcH
	DD	03H
	DD	FLAT:??_C@_06KMDP@thorns?$AA@
	DB	02dH
	ORG $+3
	DD	01H
	DD	03H
	DD	01H
	DD	0110000H
	DD	00H
	DD	00H
	DD	01H
	DD	01f4H
	DD	01f4H
	DD	02H
	DD	FLAT:??_C@_0L@EHKO@corruption?$AA@
	DB	02eH
	ORG $+3
	DD	00H
	DD	00H
	DD	05H
	DD	0111000H
	DD	01H
	DD	00H
	DD	00H
	DD	0fffffc18H
	DD	0fffffc18H
	DD	02H
	DD	FLAT:??_C@_07CPIM@thieves?$AA@
	DB	034H
	ORG $+3
	DD	00H
	DD	00H
	DD	0bH
	DD	0110001H
	DD	00H
	DD	00H
	DD	01H
	DD	05dcH
	DD	05dcH
	DD	02H
	DD	FLAT:??_C@_08LPKB@the?5bear?$AA@
	DB	035H
	ORG $+3
	DD	00H
	DD	00H
	DD	05H
	DD	01110H
	DD	01H
	DD	00H
	DD	01H
	DD	02eeH
	DD	02eeH
	DD	02H
	DD	FLAT:??_C@_07CMND@the?5bat?$AA@
	DB	037H
	ORG $+3
	DD	03H
	DD	03H
	DD	08H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	01d4cH
	DD	01d4cH
	DD	03H
	DD	FLAT:??_C@_08PJJE@vampires?$AA@
	DB	037H
	ORG $+3
	DD	05H
	DD	05H
	DD	013H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	03a98H
	DD	03a98H
	DD	03H
	DD	FLAT:??_C@_09BGIL@the?5leech?$AA@
	DB	038H
	ORG $+3
	DD	03H
	DD	03H
	DD	08H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	01d4cH
	DD	01d4cH
	DD	03H
	DD	FLAT:??_C@_05BDIK@blood?$AA@
	DB	038H
	ORG $+3
	DD	05H
	DD	05H
	DD	013H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	03a98H
	DD	03a98H
	DD	03H
	DD	FLAT:??_C@_08HKMC@piercing?$AA@
	DB	039H
	ORG $+3
	DD	02H
	DD	06H
	DD	01H
	DD	01010H
	DD	00H
	DD	00H
	DD	01H
	DD	03e8H
	DD	03e8H
	DD	03H
	DD	FLAT:??_C@_0L@DPAO@puncturing?$AA@
	DB	039H
	ORG $+3
	DD	04H
	DD	0cH
	DD	09H
	DD	01010H
	DD	00H
	DD	00H
	DD	01H
	DD	07d0H
	DD	07d0H
	DD	06H
	DD	FLAT:??_C@_07ECIM@bashing?$AA@
	DB	039H
	ORG $+3
	DD	08H
	DD	018H
	DD	011H
	DD	01000H
	DD	00H
	DD	00H
	DD	01H
	DD	0fa0H
	DD	0fa0H
	DD	0cH
	DD	FLAT:??_C@_09DLAK@readiness?$AA@
	DB	03aH
	ORG $+3
	DD	01H
	DD	01H
	DD	01H
	DD	01110H
	DD	00H
	DD	00H
	DD	01H
	DD	07d0H
	DD	07d0H
	DD	02H
	DD	FLAT:??_C@_09JHNE@swiftness?$AA@
	DB	03aH
	ORG $+3
	DD	02H
	DD	02H
	DD	0aH
	DD	01110H
	DD	00H
	DD	00H
	DD	01H
	DD	0fa0H
	DD	0fa0H
	DD	04H
	DD	FLAT:??_C@_05PHJK@speed?$AA@
	DB	03aH
	ORG $+3
	DD	03H
	DD	03H
	DD	013H
	DD	01100H
	DD	00H
	DD	00H
	DD	01H
	DD	01f40H
	DD	01f40H
	DD	08H
	DD	FLAT:??_C@_05HPHA@haste?$AA@
	DB	03aH
	ORG $+3
	DD	04H
	DD	04H
	DD	01bH
	DD	01100H
	DD	00H
	DD	00H
	DD	01H
	DD	03e80H
	DD	03e80H
	DD	010H
	DD	FLAT:??_C@_07DMNA@balance?$AA@
	DB	03bH
	ORG $+3
	DD	01H
	DD	01H
	DD	01H
	DD	0100001H
	DD	00H
	DD	00H
	DD	01H
	DD	07d0H
	DD	07d0H
	DD	02H
	DD	FLAT:??_C@_09LMMN@stability?$AA@
	DB	03bH
	ORG $+3
	DD	02H
	DD	02H
	DD	0aH
	DD	0100001H
	DD	00H
	DD	00H
	DD	01H
	DD	0fa0H
	DD	0fa0H
	DD	04H
	DD	FLAT:??_C@_07JFPI@harmony?$AA@
	DB	03bH
	ORG $+3
	DD	03H
	DD	03H
	DD	014H
	DD	0100001H
	DD	00H
	DD	00H
	DD	01H
	DD	01f40H
	DD	01f40H
	DD	08H
	DD	FLAT:??_C@_08PCBE@blocking?$AA@
	DB	03cH
	ORG $+3
	DD	01H
	DD	01H
	DD	05H
	DD	010000H
	DD	00H
	DD	00H
	DD	01H
	DD	0fa0H
	DD	0fa0H
	DD	04H
	DD	FLAT:??_C@_00A@?$AA@
	DB	0ffH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0BG@LEFE@The?5Butcher?8s?5Cleaver?$AA@
_DATA	SEGMENT
??_C@_0BG@LEFE@The?5Butcher?8s?5Cleaver?$AA@ DB 'The Butcher''s Cleaver', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@GGAG@The?5Undead?5Crown?$AA@
_DATA	SEGMENT
??_C@_0BB@GGAG@The?5Undead?5Crown?$AA@ DB 'The Undead Crown', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@EFCF@Empyrean?5Band?$AA@
_DATA	SEGMENT
??_C@_0O@EFCF@Empyrean?5Band?$AA@ DB 'Empyrean Band', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@JIIN@Optic?5Amulet?$AA@
_DATA	SEGMENT
??_C@_0N@JIIN@Optic?5Amulet?$AA@ DB 'Optic Amulet', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@PEHI@Ring?5of?5Truth?$AA@
_DATA	SEGMENT
??_C@_0O@PEHI@Ring?5of?5Truth?$AA@ DB 'Ring of Truth', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@HLFM@Harlequin?5Crest?$AA@
_DATA	SEGMENT
??_C@_0BA@HLFM@Harlequin?5Crest?$AA@ DB 'Harlequin Crest', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@FKOJ@Veil?5of?5Steel?$AA@
_DATA	SEGMENT
??_C@_0O@FKOJ@Veil?5of?5Steel?$AA@ DB 'Veil of Steel', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@JENP@Arkaine?8s?5Valor?$AA@
_DATA	SEGMENT
??_C@_0BA@JENP@Arkaine?8s?5Valor?$AA@ DB 'Arkaine''s Valor', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@OAIC@Griswold?8s?5Edge?$AA@
_DATA	SEGMENT
??_C@_0BA@OAIC@Griswold?8s?5Edge?$AA@ DB 'Griswold''s Edge', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@NHHH@Lightforge?$AA@
_DATA	SEGMENT
??_C@_0L@NHHH@Lightforge?$AA@ DB 'Lightforge', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@HFEC@The?5Rift?5Bow?$AA@
_DATA	SEGMENT
??_C@_0N@HFEC@The?5Rift?5Bow?$AA@ DB 'The Rift Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKAD@The?5Needler?$AA@
_DATA	SEGMENT
??_C@_0M@IKAD@The?5Needler?$AA@ DB 'The Needler', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@DFMJ@The?5Celestial?5Bow?$AA@
_DATA	SEGMENT
??_C@_0BC@DFMJ@The?5Celestial?5Bow?$AA@ DB 'The Celestial Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@MMFL@Deadly?5Hunter?$AA@
_DATA	SEGMENT
??_C@_0O@MMFL@Deadly?5Hunter?$AA@ DB 'Deadly Hunter', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@PFNB@Bow?5of?5the?5Dead?$AA@
_DATA	SEGMENT
??_C@_0BA@PFNB@Bow?5of?5the?5Dead?$AA@ DB 'Bow of the Dead', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@HEMC@The?5Blackoak?5Bow?$AA@
_DATA	SEGMENT
??_C@_0BB@HEMC@The?5Blackoak?5Bow?$AA@ DB 'The Blackoak Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09IEMI@Flamedart?$AA@
_DATA	SEGMENT
??_C@_09IEMI@Flamedart?$AA@ DB 'Flamedart', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@IPLI@Fleshstinger?$AA@
_DATA	SEGMENT
??_C@_0N@IPLI@Fleshstinger?$AA@ DB 'Fleshstinger', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09ICMO@Windforce?$AA@
_DATA	SEGMENT
??_C@_09ICMO@Windforce?$AA@ DB 'Windforce', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_09PCNB@Eaglehorn?$AA@
_DATA	SEGMENT
??_C@_09PCNB@Eaglehorn?$AA@ DB 'Eaglehorn', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@ION@Gonnagal?8s?5Dirk?$AA@
_DATA	SEGMENT
??_C@_0BA@ION@Gonnagal?8s?5Dirk?$AA@ DB 'Gonnagal''s Dirk', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@LMFG@The?5Defender?$AA@
_DATA	SEGMENT
??_C@_0N@LMFG@The?5Defender?$AA@ DB 'The Defender', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@NPMJ@Gryphons?5Claw?$AA@
_DATA	SEGMENT
??_C@_0O@NPMJ@Gryphons?5Claw?$AA@ DB 'Gryphons Claw', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@NGHN@Black?5Razor?$AA@
_DATA	SEGMENT
??_C@_0M@NGHN@Black?5Razor?$AA@ DB 'Black Razor', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@COHM@Gibbous?5Moon?$AA@
_DATA	SEGMENT
??_C@_0N@COHM@Gibbous?5Moon?$AA@ DB 'Gibbous Moon', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09IIDA@Ice?5Shank?$AA@
_DATA	SEGMENT
??_C@_09IIDA@Ice?5Shank?$AA@ DB 'Ice Shank', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@JCLM@The?5Executioner?8s?5Blade?$AA@
_DATA	SEGMENT
??_C@_0BI@JCLM@The?5Executioner?8s?5Blade?$AA@ DB 'The Executioner''s Bla'
	DB	'de', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@FDHB@The?5Bonesaw?$AA@
_DATA	SEGMENT
??_C@_0M@FDHB@The?5Bonesaw?$AA@ DB 'The Bonesaw', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@EBEF@Shadowhawk?$AA@
_DATA	SEGMENT
??_C@_0L@EBEF@Shadowhawk?$AA@ DB 'Shadowhawk', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@EGMF@Wizardspike?$AA@
_DATA	SEGMENT
??_C@_0M@EGMF@Wizardspike?$AA@ DB 'Wizardspike', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@HCN@Lightsabre?$AA@
_DATA	SEGMENT
??_C@_0L@HCN@Lightsabre?$AA@ DB 'Lightsabre', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EDLD@The?5Falcon?8s?5Talon?$AA@
_DATA	SEGMENT
??_C@_0BD@EDLD@The?5Falcon?8s?5Talon?$AA@ DB 'The Falcon''s Talon', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_07HJHJ@Inferno?$AA@
_DATA	SEGMENT
??_C@_07HJHJ@Inferno?$AA@ DB 'Inferno', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@BAAM@Doombringer?$AA@
_DATA	SEGMENT
??_C@_0M@BAAM@Doombringer?$AA@ DB 'Doombringer', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@IGFJ@The?5Grizzly?$AA@
_DATA	SEGMENT
??_C@_0M@IGFJ@The?5Grizzly?$AA@ DB 'The Grizzly', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@OANG@The?5Grandfather?$AA@
_DATA	SEGMENT
??_C@_0BA@OANG@The?5Grandfather?$AA@ DB 'The Grandfather', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@CBIO@The?5Mangler?$AA@
_DATA	SEGMENT
??_C@_0M@CBIO@The?5Mangler?$AA@ DB 'The Mangler', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@KEIA@Sharp?5Beak?$AA@
_DATA	SEGMENT
??_C@_0L@KEIA@Sharp?5Beak?$AA@ DB 'Sharp Beak', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@ENI@BloodSlayer?$AA@
_DATA	SEGMENT
??_C@_0M@ENI@BloodSlayer?$AA@ DB 'BloodSlayer', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@DEFA@The?5Celestial?5Axe?$AA@
_DATA	SEGMENT
??_C@_0BC@DEFA@The?5Celestial?5Axe?$AA@ DB 'The Celestial Axe', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@LGGM@Wicked?5Axe?$AA@
_DATA	SEGMENT
??_C@_0L@LGGM@Wicked?5Axe?$AA@ DB 'Wicked Axe', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@POLL@Stonecleaver?$AA@
_DATA	SEGMENT
??_C@_0N@POLL@Stonecleaver?$AA@ DB 'Stonecleaver', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CMJN@Aguinara?8s?5Hatchet?$AA@
_DATA	SEGMENT
??_C@_0BD@CMJN@Aguinara?8s?5Hatchet?$AA@ DB 'Aguinara''s Hatchet', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@DLHM@Hellslayer?$AA@
_DATA	SEGMENT
??_C@_0L@DLHM@Hellslayer?$AA@ DB 'Hellslayer', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CIE@Messerschmidt?8s?5Reaver?$AA@
_DATA	SEGMENT
??_C@_0BH@CIE@Messerschmidt?8s?5Reaver?$AA@ DB 'Messerschmidt''s Reaver', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09NILJ@Crackrust?$AA@
_DATA	SEGMENT
??_C@_09NILJ@Crackrust?$AA@ DB 'Crackrust', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FNJO@Hammer?5of?5Jholm?$AA@
_DATA	SEGMENT
??_C@_0BA@FNJO@Hammer?5of?5Jholm?$AA@ DB 'Hammer of Jholm', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NP@Civerb?8s?5Cudgel?$AA@
_DATA	SEGMENT
??_C@_0BA@NP@Civerb?8s?5Cudgel?$AA@ DB 'Civerb''s Cudgel', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JEIK@The?5Celestial?5Star?$AA@
_DATA	SEGMENT
??_C@_0BD@JEIK@The?5Celestial?5Star?$AA@ DB 'The Celestial Star', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@HPLN@Baranar?8s?5Star?$AA@
_DATA	SEGMENT
??_C@_0P@HPLN@Baranar?8s?5Star?$AA@ DB 'Baranar''s Star', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@KBLF@Gnarled?5Root?$AA@
_DATA	SEGMENT
??_C@_0N@KBLF@Gnarled?5Root?$AA@ DB 'Gnarled Root', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NKML@The?5Cranium?5Basher?$AA@
_DATA	SEGMENT
??_C@_0BD@NKML@The?5Cranium?5Basher?$AA@ DB 'The Cranium Basher', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@ECOI@Schaefer?8s?5Hammer?$AA@
_DATA	SEGMENT
??_C@_0BC@ECOI@Schaefer?8s?5Hammer?$AA@ DB 'Schaefer''s Hammer', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@IHNE@Dreamflange?$AA@
_DATA	SEGMENT
??_C@_0M@IHNE@Dreamflange?$AA@ DB 'Dreamflange', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@DJNB@Staff?5of?5Shadows?$AA@
_DATA	SEGMENT
??_C@_0BB@DJNB@Staff?5of?5Shadows?$AA@ DB 'Staff of Shadows', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09DCFI@Immolator?$AA@
_DATA	SEGMENT
??_C@_09DCFI@Immolator?$AA@ DB 'Immolator', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@MMBM@Storm?5Spire?$AA@
_DATA	SEGMENT
??_C@_0M@MMBM@Storm?5Spire?$AA@ DB 'Storm Spire', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09GLO@Gleamsong?$AA@
_DATA	SEGMENT
??_C@_09GLO@Gleamsong?$AA@ DB 'Gleamsong', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@BMCJ@Thundercall?$AA@
_DATA	SEGMENT
??_C@_0M@BMCJ@Thundercall?$AA@ DB 'Thundercall', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@OIKA@The?5Protector?$AA@
_DATA	SEGMENT
??_C@_0O@OIKA@The?5Protector?$AA@ DB 'The Protector', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@KOJF@Naj?8s?5Puzzler?$AA@
_DATA	SEGMENT
??_C@_0O@KOJF@Naj?8s?5Puzzler?$AA@ DB 'Naj''s Puzzler', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_07KPBO@Mindcry?$AA@
_DATA	SEGMENT
??_C@_07KPBO@Mindcry?$AA@ DB 'Mindcry', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@LFDG@Rod?5of?5Onan?$AA@
_DATA	SEGMENT
??_C@_0M@LFDG@Rod?5of?5Onan?$AA@ DB 'Rod of Onan', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@BGBO@Helm?5of?5Sprits?$AA@
_DATA	SEGMENT
??_C@_0P@BGBO@Helm?5of?5Sprits?$AA@ DB 'Helm of Sprits', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@DNKB@Thinking?5Cap?$AA@
_DATA	SEGMENT
??_C@_0N@DNKB@Thinking?5Cap?$AA@ DB 'Thinking Cap', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@OMOB@OverLord?8s?5Helm?$AA@
_DATA	SEGMENT
??_C@_0BA@OMOB@OverLord?8s?5Helm?$AA@ DB 'OverLord''s Helm', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@JHCM@Fool?8s?5Crest?$AA@
_DATA	SEGMENT
??_C@_0N@JHCM@Fool?8s?5Crest?$AA@ DB 'Fool''s Crest', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@EJBH@Gotterdamerung?$AA@
_DATA	SEGMENT
??_C@_0P@EJBH@Gotterdamerung?$AA@ DB 'Gotterdamerung', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@NECM@Royal?5Circlet?$AA@
_DATA	SEGMENT
??_C@_0O@NECM@Royal?5Circlet?$AA@ DB 'Royal Circlet', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@NIAH@Torn?5Flesh?5of?5Souls?$AA@
_DATA	SEGMENT
??_C@_0BE@NIAH@Torn?5Flesh?5of?5Souls?$AA@ DB 'Torn Flesh of Souls', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@OMOA@The?5Gladiator?8s?5Bane?$AA@
_DATA	SEGMENT
??_C@_0BF@OMOA@The?5Gladiator?8s?5Bane?$AA@ DB 'The Gladiator''s Bane', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@MCAH@The?5Rainbow?5Cloak?$AA@
_DATA	SEGMENT
??_C@_0BC@MCAH@The?5Rainbow?5Cloak?$AA@ DB 'The Rainbow Cloak', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@IDGC@Leather?5of?5Aut?$AA@
_DATA	SEGMENT
??_C@_0P@IDGC@Leather?5of?5Aut?$AA@ DB 'Leather of Aut', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@GEEJ@Wisdom?8s?5Wrap?$AA@
_DATA	SEGMENT
??_C@_0O@GEEJ@Wisdom?8s?5Wrap?$AA@ DB 'Wisdom''s Wrap', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@IGGO@Sparking?5Mail?$AA@
_DATA	SEGMENT
??_C@_0O@IGGO@Sparking?5Mail?$AA@ DB 'Sparking Mail', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EIPI@Scavenger?5Carapace?$AA@
_DATA	SEGMENT
??_C@_0BD@EIPI@Scavenger?5Carapace?$AA@ DB 'Scavenger Carapace', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@IJGD@Nightscape?$AA@
_DATA	SEGMENT
??_C@_0L@IJGD@Nightscape?$AA@ DB 'Nightscape', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJEO@Naj?8s?5Light?5Plate?$AA@
_DATA	SEGMENT
??_C@_0BC@FJEO@Naj?8s?5Light?5Plate?$AA@ DB 'Naj''s Light Plate', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@LMDJ@Demonspike?5Coat?$AA@
_DATA	SEGMENT
??_C@_0BA@LMDJ@Demonspike?5Coat?$AA@ DB 'Demonspike Coat', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@BCBJ@The?5Deflector?$AA@
_DATA	SEGMENT
??_C@_0O@BCBJ@The?5Deflector?$AA@ DB 'The Deflector', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FMDN@Split?5Skull?5Shield?$AA@
_DATA	SEGMENT
??_C@_0BD@FMDN@Split?5Skull?5Shield?$AA@ DB 'Split Skull Shield', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@MNCP@Dragon?8s?5Breach?$AA@
_DATA	SEGMENT
??_C@_0BA@MNCP@Dragon?8s?5Breach?$AA@ DB 'Dragon''s Breach', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@JLBF@Blackoak?5Shield?$AA@
_DATA	SEGMENT
??_C@_0BA@JLBF@Blackoak?5Shield?$AA@ DB 'Blackoak Shield', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@MBNB@Holy?5Defender?$AA@
_DATA	SEGMENT
??_C@_0O@MBNB@Holy?5Defender?$AA@ DB 'Holy Defender', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@CHNE@Stormshield?$AA@
_DATA	SEGMENT
??_C@_0M@CHNE@Stormshield?$AA@ DB 'Stormshield', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JICK@Bramble?$AA@
_DATA	SEGMENT
??_C@_07JICK@Bramble?$AA@ DB 'Bramble', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@GFAH@Ring?5of?5Regha?$AA@
_DATA	SEGMENT
??_C@_0O@GFAH@Ring?5of?5Regha?$AA@ DB 'Ring of Regha', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@MJLO@The?5Bleeder?$AA@
_DATA	SEGMENT
??_C@_0M@MJLO@The?5Bleeder?$AA@ DB 'The Bleeder', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@GNLC@Constricting?5Ring?$AA@
_DATA	SEGMENT
??_C@_0BC@GNLC@Constricting?5Ring?$AA@ DB 'Constricting Ring', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@BKHB@Ring?5of?5Engagement?$AA@
_DATA	SEGMENT
??_C@_0BD@BKHB@Ring?5of?5Engagement?$AA@ DB 'Ring of Engagement', 00H ; `string'
_DATA	ENDS
CONST	SEGMENT
_UniqueItemList DD FLAT:??_C@_0BG@LEFE@The?5Butcher?8s?5Cleaver?$AA@
	DB	011H
	DB	01H
	DB	03H
	ORG $+1
	DD	0e42H
	DB	013H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	03fH
	ORG $+3
	DD	04H
	DD	018H
	DB	040H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BB@GGAG@The?5Undead?5Crown?$AA@
	DB	039H
	DB	01H
	DB	03H
	ORG $+1
	DD	0410aH
	DB	049H
	ORG $+3
	DD	00H
	DD	00H
	DB	04bH
	ORG $+3
	DD	08H
	DD	08H
	DB	02cH
	ORG $+3
	DD	04dH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@EFCF@Empyrean?5Band?$AA@
	DB	03aH
	DB	01H
	DB	04H
	ORG $+1
	DD	01f40H
	DB	01bH
	ORG $+3
	DD	02H
	DD	02H
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DB	03bH
	ORG $+3
	DD	01H
	DD	01H
	DB	034H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@JIIN@Optic?5Amulet?$AA@
	DB	03bH
	DB	01H
	DB	05H
	ORG $+1
	DD	02616H
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DB	09H
	ORG $+3
	DD	014H
	DD	014H
	DB	01eH
	ORG $+3
	DD	01H
	DD	01H
	DB	015H
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	02cH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@PEHI@Ring?5of?5Truth?$AA@
	DB	03cH
	DB	01H
	DB	04H
	ORG $+1
	DD	0238cH
	DB	01fH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01eH
	ORG $+3
	DD	01H
	DD	01H
	DB	0bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02cH
	ORG $+3
	DD	0aH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@HLFM@Harlequin?5Crest?$AA@
	DB	03dH
	DB	01H
	DB	06H
	ORG $+1
	DD	0fa0H
	DB	04fH
	ORG $+3
	DD	03H
	DD	03H
	DB	01eH
	ORG $+3
	DD	01H
	DD	01H
	DB	01bH
	ORG $+3
	DD	02H
	DD	02H
	DB	01fH
	ORG $+3
	DD	07H
	DD	07H
	DB	021H
	ORG $+3
	DD	07H
	DD	07H
	DB	02cH
	ORG $+3
	DD	051H
	DD	00H
	DD	FLAT:??_C@_0O@FKOJ@Veil?5of?5Steel?$AA@
	DB	041H
	DB	01H
	DB	06H
	ORG $+1
	DD	0f938H
	DB	0bH
	ORG $+3
	DD	032H
	DD	032H
	DB	027H
	ORG $+3
	DD	02H
	DD	02H
	DB	06H
	ORG $+3
	DD	03cH
	DD	03cH
	DB	022H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	013H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	019H
	ORG $+3
	DD	0fH
	DD	0fH
	DD	FLAT:??_C@_0BA@JENP@Arkaine?8s?5Valor?$AA@
	DB	040H
	DB	01H
	DB	04H
	ORG $+1
	DD	0a410H
	DB	04bH
	ORG $+3
	DD	019H
	DD	019H
	DB	019H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01eH
	ORG $+3
	DD	03H
	DD	03H
	DB	03bH
	ORG $+3
	DD	03H
	DD	03H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@OAIC@Griswold?8s?5Edge?$AA@
	DB	042H
	DB	01H
	DB	06H
	ORG $+1
	DD	0a410H
	DB	010H
	ORG $+3
	DD	01H
	DD	0aH
	DB	00H
	ORG $+3
	DD	019H
	DD	019H
	DB	03aH
	ORG $+3
	DD	02H
	DD	02H
	DB	035H
	ORG $+3
	DD	00H
	DD	00H
	DB	021H
	ORG $+3
	DD	014H
	DD	014H
	DB	020H
	ORG $+3
	DD	014H
	DD	014H
	DD	FLAT:??_C@_0L@NHHH@Lightforge?$AA@
	DB	017H
	DB	01H
	DB	06H
	ORG $+1
	DD	06833H
	DB	026H
	ORG $+3
	DD	04H
	DD	04H
	DB	02H
	ORG $+3
	DD	096H
	DD	096H
	DB	00H
	ORG $+3
	DD	019H
	DD	019H
	DB	010H
	ORG $+3
	DD	0aH
	DD	014H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	01bH
	ORG $+3
	DD	08H
	DD	08H
	DD	FLAT:??_C@_0N@HFEC@The?5Rift?5Bow?$AA@
	DB	01H
	DB	01H
	DB	03H
	ORG $+1
	DD	0708H
	DB	03eH
	ORG $+3
	DD	00H
	DD	00H
	DB	03dH
	ORG $+3
	DD	02H
	DD	02H
	DB	018H
	ORG $+3
	DD	03H
	DD	03H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@IKAD@The?5Needler?$AA@
	DB	01H
	DB	02H
	DB	04H
	ORG $+1
	DD	022c4H
	DB	00H
	ORG $+3
	DD	032H
	DD	032H
	DB	03fH
	ORG $+3
	DD	01H
	DD	03H
	DB	03aH
	ORG $+3
	DD	02H
	DD	02H
	DB	02cH
	ORG $+3
	DD	09eH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@DFMJ@The?5Celestial?5Bow?$AA@
	DB	02H
	DB	02H
	DB	04H
	ORG $+1
	DD	04b0H
	DB	041H
	ORG $+3
	DD	00H
	DD	00H
	DB	03dH
	ORG $+3
	DD	02H
	DD	02H
	DB	04bH
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	085H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@MMFL@Deadly?5Hunter?$AA@
	DB	04H
	DB	03H
	DB	04H
	ORG $+1
	DD	0222eH
	DB	045H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	016H
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	06cH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@PFNB@Bow?5of?5the?5Dead?$AA@
	DB	04H
	DB	05H
	DB	06H
	ORG $+1
	DD	09c4H
	DB	00H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	017H
	ORG $+3
	DD	04H
	DD	04H
	DB	01aH
	ORG $+3
	DD	03H
	DD	03H
	DB	027H
	ORG $+3
	DD	02H
	DD	02H
	DB	040H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	02cH
	ORG $+3
	DD	06cH
	DD	00H
	DD	FLAT:??_C@_0BB@HEMC@The?5Blackoak?5Bow?$AA@
	DB	02H
	DB	05H
	DB	04H
	ORG $+1
	DD	09c4H
	DB	017H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01aH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02H
	ORG $+3
	DD	032H
	DD	032H
	DB	027H
	ORG $+3
	DD	01H
	DD	01H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09IEMI@Flamedart?$AA@
	DB	03H
	DB	0aH
	DB	04H
	ORG $+1
	DD	037aaH
	DB	02aH
	ORG $+3
	DD	00H
	DD	00H
	DB	010H
	ORG $+3
	DD	01H
	DD	06H
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	08H
	ORG $+3
	DD	028H
	DD	028H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@IPLI@Fleshstinger?$AA@
	DB	02H
	DB	0dH
	DB	04H
	ORG $+1
	DD	04074H
	DB	017H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	00H
	ORG $+3
	DD	028H
	DD	028H
	DB	02H
	ORG $+3
	DD	050H
	DD	050H
	DB	023H
	ORG $+3
	DD	06H
	DD	06H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09ICMO@Windforce?$AA@
	DB	05H
	DB	011H
	DB	04H
	ORG $+1
	DD	09376H
	DB	013H
	ORG $+3
	DD	05H
	DD	05H
	DB	02H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	035H
	ORG $+3
	DD	00H
	DD	00H
	DB	02cH
	ORG $+3
	DD	0a4H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09PCNB@Eaglehorn?$AA@
	DB	06H
	DB	01aH
	DB	05H
	ORG $+1
	DD	0a604H
	DB	017H
	ORG $+3
	DD	014H
	DD	014H
	DB	00H
	ORG $+3
	DD	032H
	DD	032H
	DB	02H
	ORG $+3
	DD	064H
	DD	064H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	02cH
	ORG $+3
	DD	06cH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@ION@Gonnagal?8s?5Dirk?$AA@
	DB	07H
	DB	01H
	DB	05H
	ORG $+1
	DD	01b80H
	DB	018H
	ORG $+3
	DD	05H
	DD	05H
	DB	03dH
	ORG $+3
	DD	04H
	DD	04H
	DB	03aH
	ORG $+3
	DD	02H
	DD	02H
	DB	08H
	ORG $+3
	DD	019H
	DD	019H
	DB	02cH
	ORG $+3
	DD	036H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@LMFG@The?5Defender?$AA@
	DB	0bH
	DB	01H
	DB	03H
	ORG $+1
	DD	07d0H
	DB	04bH
	ORG $+3
	DD	05H
	DD	05H
	DB	019H
	ORG $+3
	DD	05H
	DD	05H
	DB	01H
	ORG $+3
	DD	05H
	DD	05H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@NPMJ@Gryphons?5Claw?$AA@
	DB	08H
	DB	01H
	DB	04H
	ORG $+1
	DD	03e8H
	DB	02H
	ORG $+3
	DD	064H
	DD	064H
	DB	016H
	ORG $+3
	DD	02H
	DD	02H
	DB	018H
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	044H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@NGHN@Black?5Razor?$AA@
	DB	07H
	DB	01H
	DB	04H
	ORG $+1
	DD	07d0H
	DB	02H
	ORG $+3
	DD	096H
	DD	096H
	DB	019H
	ORG $+3
	DD	02H
	DD	02H
	DB	040H
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	035H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@COHM@Gibbous?5Moon?$AA@
	DB	0aH
	DB	02H
	DB	04H
	ORG $+1
	DD	01a04H
	DB	01bH
	ORG $+3
	DD	02H
	DD	02H
	DB	02H
	ORG $+3
	DD	019H
	DD	019H
	DB	021H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	027H
	ORG $+3
	DD	03H
	DD	03H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09IIDA@Ice?5Shank?$AA@
	DB	0dH
	DB	03H
	DB	03H
	ORG $+1
	DD	01482H
	DB	08H
	ORG $+3
	DD	028H
	DD	028H
	DB	040H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	013H
	ORG $+3
	DD	05H
	DD	0aH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BI@JCLM@The?5Executioner?8s?5Blade?$AA@
	DB	08H
	DB	03H
	DB	05H
	ORG $+1
	DD	01ba8H
	DB	02H
	ORG $+3
	DD	096H
	DD	096H
	DB	020H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	027H
	ORG $+3
	DD	01H
	DD	01H
	DB	023H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	02cH
	ORG $+3
	DD	03aH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@FDHB@The?5Bonesaw?$AA@
	DB	09H
	DB	06H
	DB	06H
	ORG $+1
	DD	01130H
	DB	03dH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	013H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	016H
	ORG $+3
	DD	05H
	DD	05H
	DB	018H
	ORG $+3
	DD	05H
	DD	05H
	DB	01fH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	022H
	ORG $+3
	DD	0aH
	DD	0aH
	DD	FLAT:??_C@_0L@EBEF@Shadowhawk?$AA@
	DB	0aH
	DB	08H
	DB	04H
	ORG $+1
	DD	035b6H
	DB	027H
	ORG $+3
	DD	02H
	DD	02H
	DB	038H
	ORG $+3
	DD	05H
	DD	05H
	DB	00H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	0bH
	ORG $+3
	DD	05H
	DD	05H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@EGMF@Wizardspike?$AA@
	DB	07H
	DB	0bH
	DB	05H
	ORG $+1
	DD	03278H
	DB	015H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	021H
	ORG $+3
	DD	023H
	DD	023H
	DB	00H
	ORG $+3
	DD	019H
	DD	019H
	DB	0bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	02cH
	ORG $+3
	DD	032H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@HCN@Lightsabre?$AA@
	DB	0bH
	DB	0dH
	DB	04H
	ORG $+1
	DD	04aceH
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DB	011H
	ORG $+3
	DD	01H
	DD	0aH
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	09H
	ORG $+3
	DD	032H
	DD	032H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@EDLD@The?5Falcon?8s?5Talon?$AA@
	DB	0cH
	DB	0fH
	DB	05H
	ORG $+1
	DD	01ebbH
	DB	03aH
	ORG $+3
	DD	04H
	DD	04H
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	03H
	ORG $+3
	DD	021H
	DD	021H
	DB	017H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02cH
	ORG $+3
	DD	044H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07HJHJ@Inferno?$AA@
	DB	0dH
	DB	011H
	DB	04H
	ORG $+1
	DD	08728H
	DB	010H
	ORG $+3
	DD	02H
	DD	0cH
	DB	026H
	ORG $+3
	DD	03H
	DD	03H
	DB	021H
	ORG $+3
	DD	014H
	DD	014H
	DB	08H
	ORG $+3
	DD	050H
	DD	050H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@BAAM@Doombringer?$AA@
	DB	0eH
	DB	013H
	DB	05H
	ORG $+1
	DD	0474aH
	DB	00H
	ORG $+3
	DD	019H
	DD	019H
	DB	02H
	ORG $+3
	DD	0faH
	DD	0faH
	DB	01cH
	ORG $+3
	DD	05H
	DD	05H
	DB	020H
	ORG $+3
	DD	019H
	DD	019H
	DB	027H
	ORG $+3
	DD	02H
	DD	02H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@IGFJ@The?5Grizzly?$AA@
	DB	0fH
	DB	017H
	DB	06H
	ORG $+1
	DD	0c350H
	DB	013H
	ORG $+3
	DD	014H
	DD	014H
	DB	01aH
	ORG $+3
	DD	05H
	DD	05H
	DB	02H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	035H
	ORG $+3
	DD	00H
	DD	00H
	DB	023H
	ORG $+3
	DD	064H
	DD	064H
	DB	02cH
	ORG $+3
	DD	0a0H
	DD	00H
	DD	FLAT:??_C@_0BA@OANG@The?5Grandfather?$AA@
	DB	010H
	DB	01bH
	DB	06H
	ORG $+1
	DD	01d3f8H
	DB	044H
	ORG $+3
	DD	00H
	DD	00H
	DB	01bH
	ORG $+3
	DD	05H
	DD	05H
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	02H
	ORG $+3
	DD	046H
	DD	046H
	DB	01fH
	ORG $+3
	DD	014H
	DD	014H
	DB	02cH
	ORG $+3
	DD	0a1H
	DD	00H
	DD	FLAT:??_C@_0M@CBIO@The?5Mangler?$AA@
	DB	012H
	DB	02H
	DB	05H
	ORG $+1
	DD	0b22H
	DB	02H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	018H
	ORG $+3
	DD	05H
	DD	05H
	DB	016H
	ORG $+3
	DD	05H
	DD	05H
	DB	022H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02cH
	ORG $+3
	DD	090H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@KEIA@Sharp?5Beak?$AA@
	DB	012H
	DB	02H
	DB	04H
	ORG $+1
	DD	0b22H
	DB	01fH
	ORG $+3
	DD	014H
	DD	014H
	DB	016H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	022H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02cH
	ORG $+3
	DD	08fH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@ENI@BloodSlayer?$AA@
	DB	013H
	DB	03H
	DB	05H
	ORG $+1
	DD	09c4H
	DB	02H
	ORG $+3
	DD	064H
	DD	064H
	DB	045H
	ORG $+3
	DD	032H
	DD	032H
	DB	01cH
	ORG $+3
	DD	05H
	DD	05H
	DB	0eH
	ORG $+3
	DD	0ffffffffH
	DD	0ffffffffH
	DB	02cH
	ORG $+3
	DD	090H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@DEFA@The?5Celestial?5Axe?$AA@
	DB	015H
	DB	04H
	DB	04H
	ORG $+1
	DD	03714H
	DB	041H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	01fH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	014H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@LGGM@Wicked?5Axe?$AA@
	DB	012H
	DB	05H
	DB	06H
	ORG $+1
	DD	079aeH
	DB	00H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	017H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01aH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01eH
	ORG $+3
	DD	01H
	DD	06H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	02cH
	ORG $+3
	DD	08fH
	DD	00H
	DD	FLAT:??_C@_0N@POLL@Stonecleaver?$AA@
	DB	013H
	DB	07H
	DB	05H
	ORG $+1
	DD	05d5cH
	DB	01fH
	ORG $+3
	DD	01eH
	DD	01eH
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	02H
	ORG $+3
	DD	032H
	DD	032H
	DB	09H
	ORG $+3
	DD	028H
	DD	028H
	DB	02cH
	ORG $+3
	DD	068H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@CMJN@Aguinara?8s?5Hatchet?$AA@
	DB	014H
	DB	0cH
	DB	03H
	ORG $+1
	DD	060e0H
	DB	0eH
	ORG $+3
	DD	01H
	DD	01H
	DB	015H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	0aH
	ORG $+3
	DD	050H
	DD	050H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@DLHM@Hellslayer?$AA@
	DB	015H
	DB	0fH
	DB	05H
	ORG $+1
	DD	06658H
	DB	013H
	ORG $+3
	DD	08H
	DD	08H
	DB	019H
	ORG $+3
	DD	08H
	DD	08H
	DB	02H
	ORG $+3
	DD	064H
	DD	064H
	DB	01fH
	ORG $+3
	DD	019H
	DD	019H
	DB	022H
	ORG $+3
	DD	019H
	DD	019H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BH@CIE@Messerschmidt?8s?5Reaver?$AA@
	DB	016H
	DB	019H
	DB	06H
	ORG $+1
	DD	0e290H
	DB	02H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	03dH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	01bH
	ORG $+3
	DD	05H
	DD	05H
	DB	020H
	ORG $+3
	DD	032H
	DD	032H
	DB	010H
	ORG $+3
	DD	02H
	DD	0cH
	DB	02cH
	ORG $+3
	DD	0a3H
	DD	00H
	DD	FLAT:??_C@_09NILJ@Crackrust?$AA@
	DB	017H
	DB	01H
	DB	05H
	ORG $+1
	DD	02c6fH
	DB	01bH
	ORG $+3
	DD	02H
	DD	02H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	0bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	02H
	ORG $+3
	DD	032H
	DD	032H
	DB	0eH
	ORG $+3
	DD	0ffffffffH
	DD	0ffffffffH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@FNJO@Hammer?5of?5Jholm?$AA@
	DB	01aH
	DB	01H
	DB	04H
	ORG $+1
	DD	021fcH
	DB	02H
	ORG $+3
	DD	04H
	DD	0aH
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	013H
	ORG $+3
	DD	03H
	DD	03H
	DB	00H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@NP@Civerb?8s?5Cudgel?$AA@
	DB	017H
	DB	01H
	DB	03H
	ORG $+1
	DD	07d0H
	DB	045H
	ORG $+3
	DD	023H
	DD	023H
	DB	018H
	ORG $+3
	DD	05H
	DD	05H
	DB	016H
	ORG $+3
	DD	02H
	DD	02H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@JEIK@The?5Celestial?5Star?$AA@
	DB	01cH
	DB	02H
	DB	05H
	ORG $+1
	DD	01e82H
	DB	041H
	ORG $+3
	DD	00H
	DD	00H
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DB	03dH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	04fH
	ORG $+3
	DD	08H
	DD	08H
	DB	02cH
	ORG $+3
	DD	083H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@HPLN@Baranar?8s?5Star?$AA@
	DB	018H
	DB	05H
	DB	06H
	ORG $+1
	DD	01ac2H
	DB	00H
	ORG $+3
	DD	0cH
	DD	0cH
	DB	02H
	ORG $+3
	DD	050H
	DD	050H
	DB	03aH
	ORG $+3
	DD	01H
	DD	01H
	DB	019H
	ORG $+3
	DD	04H
	DD	04H
	DB	018H
	ORG $+3
	DD	04H
	DD	04H
	DB	040H
	ORG $+3
	DD	03cH
	DD	03cH
	DD	FLAT:??_C@_0N@KBLF@Gnarled?5Root?$AA@
	DB	019H
	DB	09H
	DB	06H
	ORG $+1
	DD	0265cH
	DB	00H
	ORG $+3
	DD	014H
	DD	014H
	DB	02H
	ORG $+3
	DD	012cH
	DD	012cH
	DB	017H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	015H
	ORG $+3
	DD	05H
	DD	05H
	DB	0bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	04fH
	ORG $+3
	DD	0aH
	DD	0aH
	DD	FLAT:??_C@_0BD@NKML@The?5Cranium?5Basher?$AA@
	DB	01aH
	DB	0cH
	DB	06H
	ORG $+1
	DD	08e94H
	DB	03dH
	ORG $+3
	DD	014H
	DD	014H
	DB	013H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	022H
	ORG $+3
	DD	096H
	DD	096H
	DB	0bH
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	07aH
	DD	00H
	DD	FLAT:??_C@_0BC@ECOI@Schaefer?8s?5Hammer?$AA@
	DB	01bH
	DB	010H
	DB	06H
	ORG $+1
	DD	0db3dH
	DB	03H
	ORG $+3
	DD	064H
	DD	064H
	DB	011H
	ORG $+3
	DD	01H
	DD	032H
	DB	01fH
	ORG $+3
	DD	032H
	DD	032H
	DB	00H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	09H
	ORG $+3
	DD	050H
	DD	050H
	DB	026H
	ORG $+3
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0M@IHNE@Dreamflange?$AA@
	DB	017H
	DB	01aH
	DB	05H
	ORG $+1
	DD	06752H
	DB	015H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	021H
	ORG $+3
	DD	032H
	DD	032H
	DB	0aH
	ORG $+3
	DD	032H
	DD	032H
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DB	0eH
	ORG $+3
	DD	01H
	DD	01H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BB@DJNB@Staff?5of?5Shadows?$AA@
	DB	01dH
	DB	02H
	DB	05H
	ORG $+1
	DD	04e2H
	DB	016H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	00H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02H
	ORG $+3
	DD	03cH
	DD	03cH
	DB	027H
	ORG $+3
	DD	02H
	DD	02H
	DB	03aH
	ORG $+3
	DD	01H
	DD	01H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09DCFI@Immolator?$AA@
	DB	01dH
	DB	04H
	DB	04H
	ORG $+1
	DD	0f3cH
	DB	08H
	ORG $+3
	DD	014H
	DD	014H
	DB	010H
	ORG $+3
	DD	04H
	DD	04H
	DB	021H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01aH
	ORG $+3
	DD	05H
	DD	05H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@MMBM@Storm?5Spire?$AA@
	DB	021H
	DB	08H
	DB	04H
	ORG $+1
	DD	057e4H
	DB	09H
	ORG $+3
	DD	032H
	DD	032H
	DB	011H
	ORG $+3
	DD	02H
	DD	08H
	DB	013H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	016H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09GLO@Gleamsong?$AA@
	DB	01eH
	DB	08H
	DB	04H
	ORG $+1
	DD	01978H
	DB	021H
	ORG $+3
	DD	019H
	DD	019H
	DB	014H
	ORG $+3
	DD	03H
	DD	03H
	DB	01aH
	ORG $+3
	DD	03H
	DD	03H
	DB	042H
	ORG $+3
	DD	0aH
	DD	04cH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@BMCJ@Thundercall?$AA@
	DB	01fH
	DB	0eH
	DB	05H
	ORG $+1
	DD	056eaH
	DB	00H
	ORG $+3
	DD	023H
	DD	023H
	DB	011H
	ORG $+3
	DD	01H
	DD	0aH
	DB	042H
	ORG $+3
	DD	03H
	DD	04cH
	DB	09H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	026H
	ORG $+3
	DD	02H
	DD	02H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@OIKA@The?5Protector?$AA@
	DB	01eH
	DB	010H
	DB	06H
	ORG $+1
	DD	04358H
	DB	019H
	ORG $+3
	DD	05H
	DD	05H
	DB	01eH
	ORG $+3
	DD	05H
	DD	05H
	DB	04bH
	ORG $+3
	DD	028H
	DD	028H
	DB	042H
	ORG $+3
	DD	02H
	DD	056H
	DB	02dH
	ORG $+3
	DD	01H
	DD	03H
	DB	02cH
	ORG $+3
	DD	0a2H
	DD	00H
	DD	FLAT:??_C@_0O@KOJF@Naj?8s?5Puzzler?$AA@
	DB	01dH
	DB	012H
	DB	05H
	ORG $+1
	DD	084d0H
	DB	015H
	ORG $+3
	DD	014H
	DD	014H
	DB	017H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	0bH
	ORG $+3
	DD	014H
	DD	014H
	DB	042H
	ORG $+3
	DD	017H
	DD	039H
	DB	020H
	ORG $+3
	DD	019H
	DD	019H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07KPBO@Mindcry?$AA@
	DB	020H
	DB	014H
	DB	04H
	ORG $+1
	DD	0a21cH
	DB	015H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	042H
	ORG $+3
	DD	0dH
	DD	045H
	DB	0bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	0eH
	ORG $+3
	DD	01H
	DD	01H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@LFDG@Rod?5of?5Onan?$AA@
	DB	021H
	DB	016H
	DB	03H
	ORG $+1
	DD	0ac87H
	DB	042H
	ORG $+3
	DD	015H
	DD	032H
	DB	02H
	ORG $+3
	DD	064H
	DD	064H
	DB	01bH
	ORG $+3
	DD	05H
	DD	05H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@BGBO@Helm?5of?5Sprits?$AA@
	DB	023H
	DB	01H
	DB	02H
	ORG $+1
	DD	01d65H
	DB	038H
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	04dH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0N@DNKB@Thinking?5Cap?$AA@
	DB	022H
	DB	06H
	DB	05H
	ORG $+1
	DD	07e4H
	DB	021H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	0eH
	ORG $+3
	DD	02H
	DD	02H
	DB	0bH
	ORG $+3
	DD	014H
	DD	014H
	DB	040H
	ORG $+3
	DD	01H
	DD	01H
	DB	02cH
	ORG $+3
	DD	05dH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@OMOB@OverLord?8s?5Helm?$AA@
	DB	023H
	DB	07H
	DB	06H
	ORG $+1
	DD	030d4H
	DB	013H
	ORG $+3
	DD	014H
	DD	014H
	DB	017H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	019H
	ORG $+3
	DD	05H
	DD	05H
	DB	016H
	ORG $+3
	DD	014H
	DD	014H
	DB	040H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	02cH
	ORG $+3
	DD	063H
	DD	00H
	DD	FLAT:??_C@_0N@JHCM@Fool?8s?5Crest?$AA@
	DB	023H
	DB	0cH
	DB	05H
	ORG $+1
	DD	027a6H
	DB	01cH
	ORG $+3
	DD	04H
	DD	04H
	DB	01fH
	ORG $+3
	DD	064H
	DD	064H
	DB	01dH
	ORG $+3
	DD	01H
	DD	06H
	DB	02dH
	ORG $+3
	DD	01H
	DD	03H
	DB	02cH
	ORG $+3
	DD	050H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0P@EJBH@Gotterdamerung?$AA@
	DB	024H
	DB	015H
	DB	06H
	ORG $+1
	DD	0d674H
	DB	01bH
	ORG $+3
	DD	014H
	DD	014H
	DB	04bH
	ORG $+3
	DD	03cH
	DD	03cH
	DB	01eH
	ORG $+3
	DD	04H
	DD	04H
	DB	046H
	ORG $+3
	DD	00H
	DD	00H
	DB	027H
	ORG $+3
	DD	04H
	DD	04H
	DB	02cH
	ORG $+3
	DD	055H
	DD	00H
	DD	FLAT:??_C@_0O@NECM@Royal?5Circlet?$AA@
	DB	025H
	DB	01bH
	DB	05H
	ORG $+1
	DD	0612bH
	DB	01bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	021H
	ORG $+3
	DD	028H
	DD	028H
	DB	04bH
	ORG $+3
	DD	028H
	DD	028H
	DB	026H
	ORG $+3
	DD	01H
	DD	01H
	DB	02cH
	ORG $+3
	DD	04fH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BE@NIAH@Torn?5Flesh?5of?5Souls?$AA@
	DB	027H
	DB	02H
	DB	05H
	ORG $+1
	DD	012d9H
	DB	04bH
	ORG $+3
	DD	08H
	DD	08H
	DB	019H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01eH
	ORG $+3
	DD	01H
	DD	01H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	02cH
	ORG $+3
	DD	05cH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BF@OMOA@The?5Gladiator?8s?5Bane?$AA@
	DB	028H
	DB	06H
	DB	04H
	ORG $+1
	DD	0d7aH
	DB	04bH
	ORG $+3
	DD	019H
	DD	019H
	DB	01eH
	ORG $+3
	DD	02H
	DD	02H
	DB	023H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	01cH
	ORG $+3
	DD	03H
	DD	03H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@MCAH@The?5Rainbow?5Cloak?$AA@
	DB	029H
	DB	02H
	DB	06H
	ORG $+1
	DD	01324H
	DB	04bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01bH
	ORG $+3
	DD	01H
	DD	01H
	DB	0bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01fH
	ORG $+3
	DD	05H
	DD	05H
	DB	023H
	ORG $+3
	DD	032H
	DD	032H
	DB	02cH
	ORG $+3
	DD	08aH
	DD	00H
	DD	FLAT:??_C@_0P@IDGC@Leather?5of?5Aut?$AA@
	DB	02cH
	DB	04H
	DB	05H
	ORG $+1
	DD	02936H
	DB	04bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	013H
	ORG $+3
	DD	05H
	DD	05H
	DB	016H
	ORG $+3
	DD	05H
	DD	05H
	DB	017H
	ORG $+3
	DD	05H
	DD	05H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@GEEJ@Wisdom?8s?5Wrap?$AA@
	DB	02aH
	DB	05H
	DB	06H
	ORG $+1
	DD	01838H
	DB	015H
	ORG $+3
	DD	05H
	DD	05H
	DB	021H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	09H
	ORG $+3
	DD	019H
	DD	019H
	DB	04bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	01eH
	ORG $+3
	DD	01H
	DD	01H
	DB	02cH
	ORG $+3
	DD	08aH
	DD	00H
	DD	FLAT:??_C@_0O@IGGO@Sparking?5Mail?$AA@
	DB	02bH
	DB	09H
	DB	02H
	ORG $+1
	DD	03d86H
	DB	04bH
	ORG $+3
	DD	01eH
	DD	01eH
	DB	011H
	ORG $+3
	DD	01H
	DD	0aH
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@EIPI@Scavenger?5Carapace?$AA@
	DB	02dH
	DB	0dH
	DB	04H
	ORG $+1
	DD	036b0H
	DB	01eH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	04fH
	ORG $+3
	DD	01eH
	DD	01eH
	DB	017H
	ORG $+3
	DD	05H
	DD	05H
	DB	09H
	ORG $+3
	DD	028H
	DD	028H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@IJGD@Nightscape?$AA@
	DB	02eH
	DB	010H
	DB	06H
	ORG $+1
	DD	02d50H
	DB	03bH
	ORG $+3
	DD	02H
	DD	02H
	DB	027H
	ORG $+3
	DD	04H
	DD	04H
	DB	04bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	017H
	ORG $+3
	DD	03H
	DD	03H
	DB	0bH
	ORG $+3
	DD	014H
	DD	014H
	DB	02cH
	ORG $+3
	DD	08aH
	DD	00H
	DD	FLAT:??_C@_0BC@FJEO@Naj?8s?5Light?5Plate?$AA@
	DB	02fH
	DB	013H
	DB	06H
	ORG $+1
	DD	01336cH
	DB	041H
	ORG $+3
	DD	00H
	DD	00H
	DB	015H
	ORG $+3
	DD	05H
	DD	05H
	DB	021H
	ORG $+3
	DD	014H
	DD	014H
	DB	0bH
	ORG $+3
	DD	014H
	DD	014H
	DB	0eH
	ORG $+3
	DD	01H
	DD	01H
	DB	02cH
	ORG $+3
	DD	09fH
	DD	00H
	DD	FLAT:??_C@_0BA@LMDJ@Demonspike?5Coat?$AA@
	DB	030H
	DB	019H
	DB	05H
	ORG $+1
	DD	03d527H
	DB	04bH
	ORG $+3
	DD	064H
	DD	064H
	DB	01eH
	ORG $+3
	DD	06H
	DD	06H
	DB	013H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	08H
	ORG $+3
	DD	032H
	DD	032H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@BCBJ@The?5Deflector?$AA@
	DB	031H
	DB	01H
	DB	05H
	ORG $+1
	DD	05dcH
	DB	04bH
	ORG $+3
	DD	07H
	DD	07H
	DB	0bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	03H
	ORG $+3
	DD	014H
	DD	014H
	DB	01H
	ORG $+3
	DD	05H
	DD	05H
	DB	02cH
	ORG $+3
	DD	053H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@FMDN@Split?5Skull?5Shield?$AA@
	DB	031H
	DB	01H
	DB	06H
	ORG $+1
	DD	07e9H
	DB	04bH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01fH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	013H
	ORG $+3
	DD	02H
	DD	02H
	DB	027H
	ORG $+3
	DD	01H
	DD	01H
	DB	040H
	ORG $+3
	DD	0fH
	DD	0fH
	DB	02cH
	ORG $+3
	DD	074H
	DD	00H
	DD	FLAT:??_C@_0BA@MNCP@Dragon?8s?5Breach?$AA@
	DB	034H
	DB	02H
	DB	06H
	ORG $+1
	DD	04b00H
	DB	08H
	ORG $+3
	DD	019H
	DD	019H
	DB	013H
	ORG $+3
	DD	05H
	DD	05H
	DB	04bH
	ORG $+3
	DD	014H
	DD	014H
	DB	016H
	ORG $+3
	DD	05H
	DD	05H
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	02cH
	ORG $+3
	DD	075H
	DD	00H
	DD	FLAT:??_C@_0BA@JLBF@Blackoak?5Shield?$AA@
	DB	032H
	DB	04H
	DB	06H
	ORG $+1
	DD	0165dH
	DB	017H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	01aH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	04bH
	ORG $+3
	DD	012H
	DD	012H
	DB	027H
	ORG $+3
	DD	01H
	DD	01H
	DB	023H
	ORG $+3
	DD	096H
	DD	096H
	DB	02cH
	ORG $+3
	DD	092H
	DD	00H
	DD	FLAT:??_C@_0O@MBNB@Holy?5Defender?$AA@
	DB	033H
	DB	0aH
	DB	06H
	ORG $+1
	DD	035e8H
	DB	04bH
	ORG $+3
	DD	0fH
	DD	0fH
	DB	01eH
	ORG $+3
	DD	02H
	DD	02H
	DB	08H
	ORG $+3
	DD	014H
	DD	014H
	DB	023H
	ORG $+3
	DD	0c8H
	DD	0c8H
	DB	03cH
	ORG $+3
	DD	01H
	DD	01H
	DB	02cH
	ORG $+3
	DD	092H
	DD	00H
	DD	FLAT:??_C@_0M@CHNE@Stormshield?$AA@
	DB	035H
	DB	018H
	DB	06H
	ORG $+1
	DD	0bf68H
	DB	04bH
	ORG $+3
	DD	028H
	DD	028H
	DB	01dH
	ORG $+3
	DD	04H
	DD	04H
	DB	013H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	025H
	ORG $+3
	DD	00H
	DD	00H
	DB	03cH
	ORG $+3
	DD	01H
	DD	01H
	DB	02cH
	ORG $+3
	DD	094H
	DD	00H
	DD	FLAT:??_C@_07JICK@Bramble?$AA@
	DB	036H
	DB	01H
	DB	04H
	ORG $+1
	DD	03e8H
	DB	01cH
	ORG $+3
	DD	02H
	DD	02H
	DB	03dH
	ORG $+3
	DD	03H
	DD	03H
	DB	021H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02cH
	ORG $+3
	DD	09H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0O@GFAH@Ring?5of?5Regha?$AA@
	DB	036H
	DB	01H
	DB	06H
	ORG $+1
	DD	0104fH
	DB	015H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	0aH
	ORG $+3
	DD	0aH
	DD	0aH
	DB	026H
	ORG $+3
	DD	01H
	DD	01H
	DB	014H
	ORG $+3
	DD	03H
	DD	03H
	DB	018H
	ORG $+3
	DD	03H
	DD	03H
	DB	02cH
	ORG $+3
	DD	0bH
	DD	00H
	DD	FLAT:??_C@_0M@MJLO@The?5Bleeder?$AA@
	DB	036H
	DB	02H
	DB	04H
	ORG $+1
	DD	02134H
	DB	0aH
	ORG $+3
	DD	014H
	DD	014H
	DB	021H
	ORG $+3
	DD	01eH
	DD	01eH
	DB	020H
	ORG $+3
	DD	0aH
	DD	0aH
	DB	02cH
	ORG $+3
	DD	08H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@GNLC@Constricting?5Ring?$AA@
	DB	036H
	DB	05H
	DB	03H
	ORG $+1
	DD	0f230H
	DB	0bH
	ORG $+3
	DD	04bH
	DD	04bH
	DB	048H
	ORG $+3
	DD	00H
	DD	00H
	DB	02cH
	ORG $+3
	DD	0eH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@BKHB@Ring?5of?5Engagement?$AA@
	DB	036H
	DB	0bH
	DB	05H
	ORG $+1
	DD	030bcH
	DB	01eH
	ORG $+3
	DD	01H
	DD	02H
	DB	02dH
	ORG $+3
	DD	01H
	DD	03H
	DB	04bH
	ORG $+3
	DD	05H
	DD	05H
	DB	039H
	ORG $+3
	DD	04H
	DD	0cH
	DB	02cH
	ORG $+3
	DD	0dH
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	FLAT:??_C@_00A@?$AA@
	DB	0ffH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0M@HOBP@Short?5Sword?$AA@
_DATA	SEGMENT
??_C@_0M@HOBP@Short?5Sword?$AA@ DB 'Short Sword', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MMEF@Buckler?$AA@
_DATA	SEGMENT
??_C@_07MMEF@Buckler?$AA@ DB 'Buckler', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04NPLD@Club?$AA@
_DATA	SEGMENT
??_C@_04NPLD@Club?$AA@ DB 'Club', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09HMDM@Short?5Bow?$AA@
_DATA	SEGMENT
??_C@_09HMDM@Short?5Bow?$AA@ DB 'Short Bow', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@FKFF@Short?5Staff?5of?5Charged?5Bolt?$AA@
_DATA	SEGMENT
??_C@_0BM@FKFF@Short?5Staff?5of?5Charged?5Bolt?$AA@ DB 'Short Staff of Ch'
	DB	'arged Bolt', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_07DFGK@Cleaver?$AA@
_DATA	SEGMENT
??_C@_07DFGK@Cleaver?$AA@ DB 'Cleaver', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@CAJC@Magic?5Rock?$AA@
_DATA	SEGMENT
??_C@_0L@CAJC@Magic?5Rock?$AA@ DB 'Magic Rock', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@NAPI@Tavern?5Sign?$AA@
_DATA	SEGMENT
??_C@_0M@NAPI@Tavern?5Sign?$AA@ DB 'Tavern Sign', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@DFFP@Golden?5Elixir?$AA@
_DATA	SEGMENT
??_C@_0O@DFFP@Golden?5Elixir?$AA@ DB 'Golden Elixir', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@FHBG@Anvil?5of?5Fury?$AA@
_DATA	SEGMENT
??_C@_0O@FHBG@Anvil?5of?5Fury?$AA@ DB 'Anvil of Fury', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@DIJL@Black?5Mushroom?$AA@
_DATA	SEGMENT
??_C@_0P@DIJL@Black?5Mushroom?$AA@ DB 'Black Mushroom', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_05LNNG@Brain?$AA@
_DATA	SEGMENT
??_C@_05LNNG@Brain?$AA@ DB 'Brain', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@FMMF@Fungal?5Tome?$AA@
_DATA	SEGMENT
??_C@_0M@FMMF@Fungal?5Tome?$AA@ DB 'Fungal Tome', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FAA@Spectral?5Elixir?$AA@
_DATA	SEGMENT
??_C@_0BA@FAA@Spectral?5Elixir?$AA@ DB 'Spectral Elixir', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@BAA@Blood?5Stone?$AA@
_DATA	SEGMENT
??_C@_0M@BAA@Blood?5Stone?$AA@ DB 'Blood Stone', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@DLLL@Map?5of?5the?5Stars?$AA@
_DATA	SEGMENT
??_C@_0BB@DLLL@Map?5of?5the?5Stars?$AA@ DB 'Map of the Stars', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_05BPMN@Heart?$AA@
_DATA	SEGMENT
??_C@_05BPMN@Heart?$AA@ DB 'Heart', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@OFPF@Potion?5of?5Healing?$AA@
_DATA	SEGMENT
??_C@_0BC@OFPF@Potion?5of?5Healing?$AA@ DB 'Potion of Healing', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@PEDF@Potion?5of?5Mana?$AA@
_DATA	SEGMENT
??_C@_0P@PEDF@Potion?5of?5Mana?$AA@ DB 'Potion of Mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@HKHI@Scroll?5of?5Identify?$AA@
_DATA	SEGMENT
??_C@_0BD@HKHI@Scroll?5of?5Identify?$AA@ DB 'Scroll of Identify', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@BCKO@Scroll?5of?5Town?5Portal?$AA@
_DATA	SEGMENT
??_C@_0BG@BCKO@Scroll?5of?5Town?5Portal?$AA@ DB 'Scroll of Town Portal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@FJIN@Potion?5of?5Full?5Healing?$AA@
_DATA	SEGMENT
??_C@_0BH@FJIN@Potion?5of?5Full?5Healing?$AA@ DB 'Potion of Full Healing', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EKIO@Potion?5of?5Full?5Mana?$AA@
_DATA	SEGMENT
??_C@_0BE@EKIO@Potion?5of?5Full?5Mana?$AA@ DB 'Potion of Full Mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@IAKD@Staff?5of?5Lazarus?$AA@
_DATA	SEGMENT
??_C@_0BB@IAKD@Staff?5of?5Lazarus?$AA@ DB 'Staff of Lazarus', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@KOIM@Scroll?5of?5Resurrect?$AA@
_DATA	SEGMENT
??_C@_0BE@KOIM@Scroll?5of?5Resurrect?$AA@ DB 'Scroll of Resurrect', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_03EEJM@Cap?$AA@
_DATA	SEGMENT
??_C@_03EEJM@Cap?$AA@ DB 'Cap', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09CIHH@Skull?5Cap?$AA@
_DATA	SEGMENT
??_C@_09CIHH@Skull?5Cap?$AA@ DB 'Skull Cap', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_04JAHM@Helm?$AA@
_DATA	SEGMENT
??_C@_04JAHM@Helm?$AA@ DB 'Helm', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09PBMM@Full?5Helm?$AA@
_DATA	SEGMENT
??_C@_09PBMM@Full?5Helm?$AA@ DB 'Full Helm', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MJDD@Crown?$AA@
_DATA	SEGMENT
??_C@_05MJDD@Crown?$AA@ DB 'Crown', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@FPDC@Great?5Helm?$AA@
_DATA	SEGMENT
??_C@_0L@FPDC@Great?5Helm?$AA@ DB 'Great Helm', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_04EMKP@Cape?$AA@
_DATA	SEGMENT
??_C@_04EMKP@Cape?$AA@ DB 'Cape', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04GBCC@Rags?$AA@
_DATA	SEGMENT
??_C@_04GBCC@Rags?$AA@ DB 'Rags', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05HEPD@Cloak?$AA@
_DATA	SEGMENT
??_C@_05HEPD@Cloak?$AA@ DB 'Cloak', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04HOC@Robe?$AA@
_DATA	SEGMENT
??_C@_04HOC@Robe?$AA@ DB 'Robe', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@JGBG@Quilted?5Armor?$AA@
_DATA	SEGMENT
??_C@_0O@JGBG@Quilted?5Armor?$AA@ DB 'Quilted Armor', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_05KFDN@Armor?$AA@
_DATA	SEGMENT
??_C@_05KFDN@Armor?$AA@ DB 'Armor', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@CGFJ@Leather?5Armor?$AA@
_DATA	SEGMENT
??_C@_0O@CGFJ@Leather?5Armor?$AA@ DB 'Leather Armor', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@GHHI@Hard?5Leather?5Armor?$AA@
_DATA	SEGMENT
??_C@_0BD@GHHI@Hard?5Leather?5Armor?$AA@ DB 'Hard Leather Armor', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@EIMI@Studded?5Leather?5Armor?$AA@
_DATA	SEGMENT
??_C@_0BG@EIMI@Studded?5Leather?5Armor?$AA@ DB 'Studded Leather Armor', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09GPFE@Ring?5Mail?$AA@
_DATA	SEGMENT
??_C@_09GPFE@Ring?5Mail?$AA@ DB 'Ring Mail', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_04IOKL@Mail?$AA@
_DATA	SEGMENT
??_C@_04IOKL@Mail?$AA@ DB 'Mail', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@EEOL@Chain?5Mail?$AA@
_DATA	SEGMENT
??_C@_0L@EEOL@Chain?5Mail?$AA@ DB 'Chain Mail', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@GLHE@Scale?5Mail?$AA@
_DATA	SEGMENT
??_C@_0L@GLHE@Scale?5Mail?$AA@ DB 'Scale Mail', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@CMJK@Breast?5Plate?$AA@
_DATA	SEGMENT
??_C@_0N@CMJK@Breast?5Plate?$AA@ DB 'Breast Plate', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05GHGI@Plate?$AA@
_DATA	SEGMENT
??_C@_05GHGI@Plate?$AA@ DB 'Plate', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@LJKD@Splint?5Mail?$AA@
_DATA	SEGMENT
??_C@_0M@LJKD@Splint?5Mail?$AA@ DB 'Splint Mail', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@DLHM@Plate?5Mail?$AA@
_DATA	SEGMENT
??_C@_0L@DLHM@Plate?5Mail?$AA@ DB 'Plate Mail', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@EEOC@Field?5Plate?$AA@
_DATA	SEGMENT
??_C@_0M@EEOC@Field?5Plate?$AA@ DB 'Field Plate', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@JKHF@Gothic?5Plate?$AA@
_DATA	SEGMENT
??_C@_0N@JKHF@Gothic?5Plate?$AA@ DB 'Gothic Plate', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NADG@Full?5Plate?5Mail?$AA@
_DATA	SEGMENT
??_C@_0BA@NADG@Full?5Plate?5Mail?$AA@ DB 'Full Plate Mail', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_06GBHM@Shield?$AA@
_DATA	SEGMENT
??_C@_06GBHM@Shield?$AA@ DB 'Shield', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@GPPF@Small?5Shield?$AA@
_DATA	SEGMENT
??_C@_0N@GPPF@Small?5Shield?$AA@ DB 'Small Shield', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@BAHM@Large?5Shield?$AA@
_DATA	SEGMENT
??_C@_0N@BAHM@Large?5Shield?$AA@ DB 'Large Shield', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@BCJC@Kite?5Shield?$AA@
_DATA	SEGMENT
??_C@_0M@BCJC@Kite?5Shield?$AA@ DB 'Kite Shield', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@MEKF@Tower?5Shield?$AA@
_DATA	SEGMENT
??_C@_0N@MEKF@Tower?5Shield?$AA@ DB 'Tower Shield', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@KMIB@Gothic?5Shield?$AA@
_DATA	SEGMENT
??_C@_0O@KMIB@Gothic?5Shield?$AA@ DB 'Gothic Shield', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@MDNB@Potion?5of?5Rejuvenation?$AA@
_DATA	SEGMENT
??_C@_0BH@MDNB@Potion?5of?5Rejuvenation?$AA@ DB 'Potion of Rejuvenation', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@HDFP@Potion?5of?5Full?5Rejuvenation?$AA@
_DATA	SEGMENT
??_C@_0BM@HDFP@Potion?5of?5Full?5Rejuvenation?$AA@ DB 'Potion of Full Rej'
	DB	'uvenation', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JMEN@Elixir?5of?5Strength?$AA@
_DATA	SEGMENT
??_C@_0BD@JMEN@Elixir?5of?5Strength?$AA@ DB 'Elixir of Strength', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@EHL@Elixir?5of?5Magic?$AA@
_DATA	SEGMENT
??_C@_0BA@EHL@Elixir?5of?5Magic?$AA@ DB 'Elixir of Magic', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@FLMA@Elixir?5of?5Dexterity?$AA@
_DATA	SEGMENT
??_C@_0BE@FLMA@Elixir?5of?5Dexterity?$AA@ DB 'Elixir of Dexterity', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@DFDJ@Elixir?5of?5Vitality?$AA@
_DATA	SEGMENT
??_C@_0BD@DFDJ@Elixir?5of?5Vitality?$AA@ DB 'Elixir of Vitality', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@BGMN@Scroll?5of?5Healing?$AA@
_DATA	SEGMENT
??_C@_0BC@BGMN@Scroll?5of?5Healing?$AA@ DB 'Scroll of Healing', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EOEK@Scroll?5of?5Lightning?$AA@
_DATA	SEGMENT
??_C@_0BE@EOEK@Scroll?5of?5Lightning?$AA@ DB 'Scroll of Lightning', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@KGPH@Scroll?5of?5Fire?5Wall?$AA@
_DATA	SEGMENT
??_C@_0BE@KGPH@Scroll?5of?5Fire?5Wall?$AA@ DB 'Scroll of Fire Wall', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FHNN@Scroll?5of?5Inferno?$AA@
_DATA	SEGMENT
??_C@_0BC@FHNN@Scroll?5of?5Inferno?$AA@ DB 'Scroll of Inferno', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@FPKC@Scroll?5of?5Flash?$AA@
_DATA	SEGMENT
??_C@_0BA@FPKC@Scroll?5of?5Flash?$AA@ DB 'Scroll of Flash', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LPBB@Scroll?5of?5Infravision?$AA@
_DATA	SEGMENT
??_C@_0BG@LPBB@Scroll?5of?5Infravision?$AA@ DB 'Scroll of Infravision', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@GABE@Scroll?5of?5Phasing?$AA@
_DATA	SEGMENT
??_C@_0BC@GABE@Scroll?5of?5Phasing?$AA@ DB 'Scroll of Phasing', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@HMH@Scroll?5of?5Mana?5Shield?$AA@
_DATA	SEGMENT
??_C@_0BG@HMH@Scroll?5of?5Mana?5Shield?$AA@ DB 'Scroll of Mana Shield', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@KPLE@Scroll?5of?5Flame?5Wave?$AA@
_DATA	SEGMENT
??_C@_0BF@KPLE@Scroll?5of?5Flame?5Wave?$AA@ DB 'Scroll of Flame Wave', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FLEO@Scroll?5of?5Fireball?$AA@
_DATA	SEGMENT
??_C@_0BD@FLEO@Scroll?5of?5Fireball?$AA@ DB 'Scroll of Fireball', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@DOBJ@Scroll?5of?5Stone?5Curse?$AA@
_DATA	SEGMENT
??_C@_0BG@DOBJ@Scroll?5of?5Stone?5Curse?$AA@ DB 'Scroll of Stone Curse', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@ECBO@Scroll?5of?5Chain?5Lightning?$AA@
_DATA	SEGMENT
??_C@_0BK@ECBO@Scroll?5of?5Chain?5Lightning?$AA@ DB 'Scroll of Chain Ligh'
	DB	'tning', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@FBKP@Scroll?5of?5Guardian?$AA@
_DATA	SEGMENT
??_C@_0BD@FBKP@Scroll?5of?5Guardian?$AA@ DB 'Scroll of Guardian', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_08FNGF@Non?5Item?$AA@
_DATA	SEGMENT
??_C@_08FNGF@Non?5Item?$AA@ DB 'Non Item', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@BBFO@Scroll?5of?5Nova?$AA@
_DATA	SEGMENT
??_C@_0P@BBFO@Scroll?5of?5Nova?$AA@ DB 'Scroll of Nova', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@HBF@Scroll?5of?5Golem?$AA@
_DATA	SEGMENT
??_C@_0BA@HBF@Scroll?5of?5Golem?$AA@ DB 'Scroll of Golem', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@GEPP@Scroll?5of?5None?$AA@
_DATA	SEGMENT
??_C@_0P@GEPP@Scroll?5of?5None?$AA@ DB 'Scroll of None', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@DLEP@Scroll?5of?5Teleport?$AA@
_DATA	SEGMENT
??_C@_0BD@DLEP@Scroll?5of?5Teleport?$AA@ DB 'Scroll of Teleport', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODHC@Scroll?5of?5Apocalypse?$AA@
_DATA	SEGMENT
??_C@_0BF@ODHC@Scroll?5of?5Apocalypse?$AA@ DB 'Scroll of Apocalypse', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_08DNLH@Book?5of?5?$AA@
_DATA	SEGMENT
??_C@_08DNLH@Book?5of?5?$AA@ DB 'Book of ', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06NGLM@Dagger?$AA@
_DATA	SEGMENT
??_C@_06NGLM@Dagger?$AA@ DB 'Dagger', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05DGOK@Sword?$AA@
_DATA	SEGMENT
??_C@_05DGOK@Sword?$AA@ DB 'Sword', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08OIB@Falchion?$AA@
_DATA	SEGMENT
??_C@_08OIB@Falchion?$AA@ DB 'Falchion', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08KAPM@Scimitar?$AA@
_DATA	SEGMENT
??_C@_08KAPM@Scimitar?$AA@ DB 'Scimitar', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MPPO@Claymore?$AA@
_DATA	SEGMENT
??_C@_08MPPO@Claymore?$AA@ DB 'Claymore', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05EPNO@Blade?$AA@
_DATA	SEGMENT
??_C@_05EPNO@Blade?$AA@ DB 'Blade', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05JMEJ@Sabre?$AA@
_DATA	SEGMENT
??_C@_05JMEJ@Sabre?$AA@ DB 'Sabre', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@PEAA@Long?5Sword?$AA@
_DATA	SEGMENT
??_C@_0L@PEAA@Long?5Sword?$AA@ DB 'Long Sword', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@BCBO@Broad?5Sword?$AA@
_DATA	SEGMENT
??_C@_0M@BCBO@Broad?5Sword?$AA@ DB 'Broad Sword', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@LHMK@Bastard?5Sword?$AA@
_DATA	SEGMENT
??_C@_0O@LHMK@Bastard?5Sword?$AA@ DB 'Bastard Sword', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@BPCM@Two?9Handed?5Sword?$AA@
_DATA	SEGMENT
??_C@_0BB@BPCM@Two?9Handed?5Sword?$AA@ DB 'Two-Handed Sword', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@CNCF@Great?5Sword?$AA@
_DATA	SEGMENT
??_C@_0M@CNCF@Great?5Sword?$AA@ DB 'Great Sword', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09PFN@Small?5Axe?$AA@
_DATA	SEGMENT
??_C@_09PFN@Small?5Axe?$AA@ DB 'Small Axe', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_03IAFN@Axe?$AA@
_DATA	SEGMENT
??_C@_03IAFN@Axe?$AA@ DB 'Axe', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09DPKC@Large?5Axe?$AA@
_DATA	SEGMENT
??_C@_09DPKC@Large?5Axe?$AA@ DB 'Large Axe', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09COBI@Broad?5Axe?$AA@
_DATA	SEGMENT
??_C@_09COBI@Broad?5Axe?$AA@ DB 'Broad Axe', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@FOHJ@Battle?5Axe?$AA@
_DATA	SEGMENT
??_C@_0L@FOHJ@Battle?5Axe?$AA@ DB 'Battle Axe', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09MOKD@Great?5Axe?$AA@
_DATA	SEGMENT
??_C@_09MOKD@Great?5Axe?$AA@ DB 'Great Axe', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_04OIIF@Mace?$AA@
_DATA	SEGMENT
??_C@_04OIIF@Mace?$AA@ DB 'Mace', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@CCDC@Morning?5Star?$AA@
_DATA	SEGMENT
??_C@_0N@CCDC@Morning?5Star?$AA@ DB 'Morning Star', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@NFJ@War?5Hammer?$AA@
_DATA	SEGMENT
??_C@_0L@NFJ@War?5Hammer?$AA@ DB 'War Hammer', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_06HJJB@Hammer?$AA@
_DATA	SEGMENT
??_C@_06HJJB@Hammer?$AA@ DB 'Hammer', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@OOJP@Spiked?5Club?$AA@
_DATA	SEGMENT
??_C@_0M@OOJP@Spiked?5Club?$AA@ DB 'Spiked Club', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MIDA@Flail?$AA@
_DATA	SEGMENT
??_C@_05MIDA@Flail?$AA@ DB 'Flail', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04LPM@Maul?$AA@
_DATA	SEGMENT
??_C@_04LPM@Maul?$AA@ DB 'Maul', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_03IBME@Bow?$AA@
_DATA	SEGMENT
??_C@_03IBME@Bow?$AA@ DB 'Bow', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@JCDD@Hunter?8s?5Bow?$AA@
_DATA	SEGMENT
??_C@_0N@JCDD@Hunter?8s?5Bow?$AA@ DB 'Hunter''s Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_08OKLM@Long?5Bow?$AA@
_DATA	SEGMENT
??_C@_08OKLM@Long?5Bow?$AA@ DB 'Long Bow', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@DKDP@Composite?5Bow?$AA@
_DATA	SEGMENT
??_C@_0O@DKDP@Composite?5Bow?$AA@ DB 'Composite Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@PILI@Short?5Battle?5Bow?$AA@
_DATA	SEGMENT
??_C@_0BB@PILI@Short?5Battle?5Bow?$AA@ DB 'Short Battle Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@BIGH@Long?5Battle?5Bow?$AA@
_DATA	SEGMENT
??_C@_0BA@BIGH@Long?5Battle?5Bow?$AA@ DB 'Long Battle Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@JFHI@Short?5War?5Bow?$AA@
_DATA	SEGMENT
??_C@_0O@JFHI@Short?5War?5Bow?$AA@ DB 'Short War Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@POPE@Long?5War?5Bow?$AA@
_DATA	SEGMENT
??_C@_0N@POPE@Long?5War?5Bow?$AA@ DB 'Long War Bow', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@IAG@Short?5Staff?$AA@
_DATA	SEGMENT
??_C@_0M@IAG@Short?5Staff?$AA@ DB 'Short Staff', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_05EAPD@Staff?$AA@
_DATA	SEGMENT
??_C@_05EAPD@Staff?$AA@ DB 'Staff', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@ICBJ@Long?5Staff?$AA@
_DATA	SEGMENT
??_C@_0L@ICBJ@Long?5Staff?$AA@ DB 'Long Staff', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@IFDM@Composite?5Staff?$AA@
_DATA	SEGMENT
??_C@_0BA@IFDM@Composite?5Staff?$AA@ DB 'Composite Staff', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@ILDK@Quarter?5Staff?$AA@
_DATA	SEGMENT
??_C@_0O@ILDK@Quarter?5Staff?$AA@ DB 'Quarter Staff', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_09IIHC@War?5Staff?$AA@
_DATA	SEGMENT
??_C@_09IIHC@War?5Staff?$AA@ DB 'War Staff', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_04FBEF@Ring?$AA@
_DATA	SEGMENT
??_C@_04FBEF@Ring?$AA@ DB 'Ring', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06BCFK@Amulet?$AA@
_DATA	SEGMENT
??_C@_06BCFK@Amulet?$AA@ DB 'Amulet', 00H		; `string'
_DATA	ENDS
_DATA	SEGMENT
_AllItemsList DD 01H
	DB	04H
	DB	07H
	ORG $+2
	DD	0a8H
	DB	0bH
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_04IKOF@Gold?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	ORG $+2
	DD	040H
	DB	01H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@HOBP@Short?5Sword?$AA@
	DD	00H
	DB	02H
	ORG $+3
	DD	014H
	DD	02H
	DD	06H
	DD	00H
	DD	00H
	DB	012H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	032H
	DD	00H
	DB	02H
	DB	01H
	ORG $+2
	DD	053H
	DB	05H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_07MMEF@Buckler?$AA@
	DD	00H
	DB	02H
	ORG $+3
	DD	0aH
	DD	00H
	DD	00H
	DD	03H
	DD	03H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	032H
	DD	032H
	DD	00H
	DB	01H
	DB	01H
	ORG $+2
	DD	042H
	DB	04H
	DB	019H
	ORG $+2
	DD	FLAT:??_C@_04NPLD@Club?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	014H
	DD	01H
	DD	06H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	014H
	DD	014H
	DD	00H
	DB	01H
	DB	02H
	ORG $+2
	DD	076H
	DB	03H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_09HMDM@Short?5Bow?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	01eH
	DD	01H
	DD	04H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	064H
	DD	00H
	DB	01H
	DB	02H
	ORG $+2
	DD	06dH
	DB	0aH
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BM@FKFF@Short?5Staff?5of?5Charged?5Bolt?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	019H
	DD	02H
	DD	04H
	DD	00H
	DD	00H
	DB	00H
	DB	014H
	DB	00H
	ORG $+1
	DD	00H
	DD	017H
	DD	01eH
	DD	00H
	DD	0208H
	DD	0208H
	DD	00H
	DB	01H
	DB	02H
	ORG $+2
	DD	06aH
	DB	02H
	DB	011H
	ORG $+2
	DD	FLAT:??_C@_07DFGK@Cleaver?$AA@
	DD	00H
	DB	0aH
	ORG $+3
	DD	0aH
	DD	04H
	DD	018H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	07d0H
	DD	07d0H
	DD	00H
	DB	02H
	DB	04H
	ORG $+2
	DD	04eH
	DB	07H
	DB	039H
	ORG $+2
	DD	FLAT:??_C@_0BB@GGAG@The?5Undead?5Crown?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	032H
	DD	00H
	DD	00H
	DD	0fH
	DD	0fH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	02H
	DD	01bH
	DD	00H
	DD	00H
	DD	02710H
	DD	02710H
	DD	00H
	DB	03H
	DB	05H
	ORG $+2
	DD	012H
	DB	0cH
	DB	03aH
	ORG $+2
	DD	FLAT:??_C@_0O@EFCF@Empyrean?5Band?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	01f40H
	DD	01f40H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	04cH
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0L@CAJC@Magic?5Rock?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	06H
	ORG $+2
	DD	02cH
	DB	0dH
	DB	03bH
	ORG $+2
	DD	FLAT:??_C@_0N@JIIN@Optic?5Amulet?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	01388H
	DD	01388H
	DD	00H
	DB	03H
	DB	05H
	ORG $+2
	DD	0aH
	DB	0cH
	DB	03cH
	ORG $+2
	DD	FLAT:??_C@_0O@PEHI@Ring?5of?5Truth?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	07eH
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@NAPI@Tavern?5Sign?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02H
	DB	04H
	ORG $+2
	DD	05dH
	DB	07H
	DB	03dH
	ORG $+2
	DD	FLAT:??_C@_0BA@HLFM@Harlequin?5Crest?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	0fH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	0fH
	DD	014H
	DD	00H
	DB	02H
	DB	04H
	ORG $+2
	DD	055H
	DB	07H
	DB	041H
	ORG $+2
	DD	FLAT:??_C@_0O@FKOJ@Veil?5of?5Steel?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	03cH
	DD	00H
	DD	00H
	DD	012H
	DD	012H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	011H
	DB	00H
	DB	03fH
	ORG $+2
	DD	FLAT:??_C@_0O@DFFP@Golden?5Elixir?$AA@
	DD	00H
	DB	0fH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	08cH
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0O@FHBG@Anvil?5of?5Fury?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	059H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0P@DIJL@Black?5Mushroom?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	028H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_05LNNG@Brain?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	061H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@FMMF@Fungal?5Tome?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	0fH
	DB	00H
	DB	03fH
	ORG $+2
	DD	FLAT:??_C@_0BA@FAA@Spectral?5Elixir?$AA@
	DD	00H
	DB	0fH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	02cH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	019H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@BAA@Blood?5Stone?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	060H
	DB	00H
	DB	03eH
	ORG $+2
	DD	FLAT:??_C@_0BB@DLLL@Map?5of?5the?5Stars?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	02aH
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	07H
	ORG $+2
	DD	013H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_05BPMN@Heart?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	02bH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	020H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BC@OFPF@Potion?5of?5Healing?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	03H
	DD	00H
	DD	01H
	DD	032H
	DD	032H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	027H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0P@PEDF@Potion?5of?5Mana?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	06H
	DD	00H
	DD	01H
	DD	032H
	DD	032H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@HKHI@Scroll?5of?5Identify?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	05H
	DD	01H
	DD	0c8H
	DD	0c8H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BG@BCKO@Scroll?5of?5Town?5Portal?$AA@
	DD	00H
	DB	04H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	07H
	DD	01H
	DD	0c8H
	DD	0c8H
	DD	00H
	DB	02H
	DB	03H
	ORG $+2
	DD	09dH
	DB	08H
	DB	040H
	ORG $+2
	DD	FLAT:??_C@_0BA@JENP@Arkaine?8s?5Valor?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	028H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	023H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BH@FJIN@Potion?5of?5Full?5Healing?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	096H
	DD	096H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@EKIO@Potion?5of?5Full?5Mana?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	07H
	DD	00H
	DD	01H
	DD	096H
	DD	096H
	DD	00H
	DB	01H
	DB	01H
	ORG $+2
	DD	03dH
	DB	01H
	DB	042H
	ORG $+2
	DD	FLAT:??_C@_0BA@OAIC@Griswold?8s?5Edge?$AA@
	DD	00H
	DB	08H
	ORG $+3
	DD	032H
	DD	04H
	DD	0cH
	DD	00H
	DD	00H
	DB	028H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	02eeH
	DD	02eeH
	DD	00H
	DB	01H
	DB	01H
	ORG $+2
	DD	03bH
	DB	04H
	DB	043H
	ORG $+2
	DD	FLAT:??_C@_0L@NHHH@Lightforge?$AA@
	DD	00H
	DB	02H
	ORG $+3
	DD	020H
	DD	01H
	DD	08H
	DD	00H
	DD	00H
	DB	010H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01bH
	DD	00H
	DD	00H
	DD	0c8H
	DD	0c8H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	09bH
	DB	00H
	DB	044H
	ORG $+2
	DD	FLAT:??_C@_0BB@IAKD@Staff?5of?5Lazarus?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@KOIM@Scroll?5of?5Resurrect?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	020H
	DD	01H
	DD	0faH
	DD	0faH
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DB	02H
	DB	04H
	ORG $+2
	DD	05bH
	DB	07H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_03EEJM@Cap?$AA@
	DD	FLAT:??_C@_03EEJM@Cap?$AA@
	DB	01H
	ORG $+3
	DD	0fH
	DD	00H
	DD	00H
	DD	01H
	DD	03H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0fH
	DD	014H
	DD	01H
	DB	02H
	DB	04H
	ORG $+2
	DD	05aH
	DB	07H
	DB	022H
	ORG $+2
	DD	FLAT:??_C@_09CIHH@Skull?5Cap?$AA@
	DD	FLAT:??_C@_03EEJM@Cap?$AA@
	DB	04H
	ORG $+3
	DD	014H
	DD	00H
	DD	00H
	DD	02H
	DD	04H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	019H
	DD	01eH
	DD	01H
	DB	02H
	DB	04H
	ORG $+2
	DD	052H
	DB	07H
	DB	023H
	ORG $+2
	DD	FLAT:??_C@_04JAHM@Helm?$AA@
	DD	FLAT:??_C@_04JAHM@Helm?$AA@
	DB	08H
	ORG $+3
	DD	01eH
	DD	00H
	DD	00H
	DD	04H
	DD	06H
	DB	019H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	028H
	DD	046H
	DD	01H
	DB	02H
	DB	04H
	ORG $+2
	DD	04bH
	DB	07H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_09PBMM@Full?5Helm?$AA@
	DD	FLAT:??_C@_04JAHM@Helm?$AA@
	DB	0cH
	ORG $+3
	DD	023H
	DD	00H
	DD	00H
	DD	06H
	DD	08H
	DB	023H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05aH
	DD	082H
	DD	01H
	DB	02H
	DB	04H
	ORG $+2
	DD	05fH
	DB	07H
	DB	025H
	ORG $+2
	DD	FLAT:??_C@_05MJDD@Crown?$AA@
	DD	FLAT:??_C@_05MJDD@Crown?$AA@
	DB	010H
	ORG $+3
	DD	028H
	DD	00H
	DD	00H
	DD	08H
	DD	0cH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0c8H
	DD	012cH
	DD	01H
	DB	02H
	DB	04H
	ORG $+2
	DD	062H
	DB	07H
	DB	024H
	ORG $+2
	DD	FLAT:??_C@_0L@FPDC@Great?5Helm?$AA@
	DD	FLAT:??_C@_04JAHM@Helm?$AA@
	DB	014H
	ORG $+3
	DD	03cH
	DD	00H
	DD	00H
	DD	0aH
	DD	0fH
	DB	032H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0190H
	DD	01f4H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	096H
	DB	06H
	DB	02eH
	ORG $+2
	DD	FLAT:??_C@_04EMKP@Cape?$AA@
	DD	FLAT:??_C@_04EMKP@Cape?$AA@
	DB	01H
	ORG $+3
	DD	0cH
	DD	00H
	DD	00H
	DD	01H
	DD	05H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0aH
	DD	032H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	080H
	DB	06H
	DB	027H
	ORG $+2
	DD	FLAT:??_C@_04GBCC@Rags?$AA@
	DD	FLAT:??_C@_04GBCC@Rags?$AA@
	DB	01H
	ORG $+3
	DD	06H
	DD	00H
	DD	00H
	DD	02H
	DD	06H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	019H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	095H
	DB	06H
	DB	029H
	ORG $+2
	DD	FLAT:??_C@_05HEPD@Cloak?$AA@
	DD	FLAT:??_C@_05HEPD@Cloak?$AA@
	DB	02H
	ORG $+3
	DD	012H
	DD	00H
	DD	00H
	DD	03H
	DD	07H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	028H
	DD	046H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	089H
	DB	06H
	DB	02aH
	ORG $+2
	DD	FLAT:??_C@_04HOC@Robe?$AA@
	DD	FLAT:??_C@_04HOC@Robe?$AA@
	DB	03H
	ORG $+3
	DD	018H
	DD	00H
	DD	00H
	DD	04H
	DD	07H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	04bH
	DD	07dH
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	081H
	DB	06H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0O@JGBG@Quilted?5Armor?$AA@
	DD	FLAT:??_C@_05KFDN@Armor?$AA@
	DB	04H
	ORG $+3
	DD	01eH
	DD	00H
	DD	00H
	DD	07H
	DD	0aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0c8H
	DD	012cH
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	087H
	DB	06H
	DB	02cH
	ORG $+2
	DD	FLAT:??_C@_0O@CGFJ@Leather?5Armor?$AA@
	DD	FLAT:??_C@_05KFDN@Armor?$AA@
	DB	06H
	ORG $+3
	DD	023H
	DD	00H
	DD	00H
	DD	0aH
	DD	0dH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	012cH
	DD	0190H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	07fH
	DB	06H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@GHHI@Hard?5Leather?5Armor?$AA@
	DD	FLAT:??_C@_05KFDN@Armor?$AA@
	DB	07H
	ORG $+3
	DD	028H
	DD	00H
	DD	00H
	DD	0bH
	DD	0eH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01c2H
	DD	0226H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	06bH
	DB	06H
	DB	028H
	ORG $+2
	DD	FLAT:??_C@_0BG@EIMI@Studded?5Leather?5Armor?$AA@
	DD	FLAT:??_C@_05KFDN@Armor?$AA@
	DB	09H
	ORG $+3
	DD	02dH
	DD	00H
	DD	00H
	DD	0fH
	DD	011H
	DB	014H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02bcH
	DD	0320H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	09aH
	DB	08H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_09GPFE@Ring?5Mail?$AA@
	DD	FLAT:??_C@_04IOKL@Mail?$AA@
	DB	0bH
	ORG $+3
	DD	032H
	DD	00H
	DD	00H
	DD	011H
	DD	014H
	DB	019H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0384H
	DD	044cH
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	06fH
	DB	08H
	DB	02bH
	ORG $+2
	DD	FLAT:??_C@_0L@EEOL@Chain?5Mail?$AA@
	DD	FLAT:??_C@_04IOKL@Mail?$AA@
	DB	0dH
	ORG $+3
	DD	037H
	DD	00H
	DD	00H
	DD	012H
	DD	016H
	DB	01eH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	04e2H
	DD	06d6H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	072H
	DB	08H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0L@GLHE@Scale?5Mail?$AA@
	DD	FLAT:??_C@_04IOKL@Mail?$AA@
	DB	0fH
	ORG $+3
	DD	03cH
	DD	00H
	DD	00H
	DD	017H
	DD	01cH
	DB	023H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08fcH
	DD	0af0H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	099H
	DB	09H
	DB	02dH
	ORG $+2
	DD	FLAT:??_C@_0N@CMJK@Breast?5Plate?$AA@
	DD	FLAT:??_C@_05GHGI@Plate?$AA@
	DB	010H
	ORG $+3
	DD	050H
	DD	00H
	DD	00H
	DD	014H
	DD	018H
	DB	028H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0af0H
	DD	0c80H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	088H
	DB	08H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@LJKD@Splint?5Mail?$AA@
	DD	FLAT:??_C@_04IOKL@Mail?$AA@
	DB	011H
	ORG $+3
	DD	041H
	DD	00H
	DD	00H
	DD	01eH
	DD	023H
	DB	028H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0cb2H
	DD	0ea6H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	067H
	DB	09H
	DB	02fH
	ORG $+2
	DD	FLAT:??_C@_0L@DLHM@Plate?5Mail?$AA@
	DD	FLAT:??_C@_05GHGI@Plate?$AA@
	DB	013H
	ORG $+3
	DD	04bH
	DD	00H
	DD	00H
	DD	02aH
	DD	032H
	DB	03cH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	011f8H
	DD	01518H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	067H
	DB	09H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@EEOC@Field?5Plate?$AA@
	DD	FLAT:??_C@_05GHGI@Plate?$AA@
	DB	015H
	ORG $+3
	DD	050H
	DD	00H
	DD	00H
	DD	028H
	DD	02dH
	DB	041H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	016a8H
	DD	01838H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	098H
	DB	09H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0N@JKHF@Gothic?5Plate?$AA@
	DD	FLAT:??_C@_05GHGI@Plate?$AA@
	DB	017H
	ORG $+3
	DD	064H
	DD	00H
	DD	00H
	DD	032H
	DD	03cH
	DB	050H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01f40H
	DD	02710H
	DD	01H
	DB	02H
	DB	03H
	ORG $+2
	DD	097H
	DB	09H
	DB	030H
	ORG $+2
	DD	FLAT:??_C@_0BA@NADG@Full?5Plate?5Mail?$AA@
	DD	FLAT:??_C@_05GHGI@Plate?$AA@
	DB	019H
	ORG $+3
	DD	05aH
	DD	00H
	DD	00H
	DD	03cH
	DD	04bH
	DB	05aH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01964H
	DD	01f40H
	DD	01H
	DB	02H
	DB	01H
	ORG $+2
	DD	053H
	DB	05H
	DB	031H
	ORG $+2
	DD	FLAT:??_C@_07MMEF@Buckler?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DB	01H
	ORG $+3
	DD	010H
	DD	00H
	DD	00H
	DD	01H
	DD	05H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01eH
	DD	046H
	DD	01H
	DB	02H
	DB	01H
	ORG $+2
	DD	069H
	DB	05H
	DB	032H
	ORG $+2
	DD	FLAT:??_C@_0N@GPPF@Small?5Shield?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DB	05H
	ORG $+3
	DD	018H
	DD	00H
	DD	00H
	DD	03H
	DD	08H
	DB	019H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05aH
	DD	082H
	DD	01H
	DB	02H
	DB	01H
	ORG $+2
	DD	093H
	DB	05H
	DB	033H
	ORG $+2
	DD	FLAT:??_C@_0N@BAHM@Large?5Shield?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DB	09H
	ORG $+3
	DD	020H
	DD	00H
	DD	00H
	DD	05H
	DD	0aH
	DB	028H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0c8H
	DD	012cH
	DD	01H
	DB	02H
	DB	01H
	ORG $+2
	DD	071H
	DB	05H
	DB	034H
	ORG $+2
	DD	FLAT:??_C@_0M@BCJC@Kite?5Shield?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DB	0eH
	ORG $+3
	DD	028H
	DD	00H
	DD	00H
	DD	08H
	DD	0fH
	DB	032H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0190H
	DD	02bcH
	DD	01H
	DB	02H
	DB	01H
	ORG $+2
	DD	084H
	DB	05H
	DB	035H
	ORG $+2
	DD	FLAT:??_C@_0N@MEKF@Tower?5Shield?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DB	014H
	ORG $+3
	DD	032H
	DD	00H
	DD	00H
	DD	0cH
	DD	014H
	DB	03cH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0352H
	DD	04b0H
	DD	01H
	DB	02H
	DB	01H
	ORG $+2
	DD	094H
	DB	05H
	DB	035H
	ORG $+2
	DD	FLAT:??_C@_0O@KMIB@Gothic?5Shield?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DB	017H
	ORG $+3
	DD	03cH
	DD	00H
	DD	00H
	DD	0eH
	DD	012H
	DB	050H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08fcH
	DD	0a8cH
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	020H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BC@OFPF@Potion?5of?5Healing?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	03H
	DD	00H
	DD	01H
	DD	032H
	DD	032H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	023H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BH@FJIN@Potion?5of?5Full?5Healing?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	096H
	DD	096H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	027H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0P@PEDF@Potion?5of?5Mana?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	06H
	DD	00H
	DD	01H
	DD	032H
	DD	032H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@EKIO@Potion?5of?5Full?5Mana?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	07H
	DD	00H
	DD	01H
	DD	096H
	DD	096H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	025H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BH@MDNB@Potion?5of?5Rejuvenation?$AA@
	DD	00H
	DB	03H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	012H
	DD	00H
	DD	01H
	DD	078H
	DD	078H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	021H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BM@HDFP@Potion?5of?5Full?5Rejuvenation?$AA@
	DD	00H
	DB	07H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	013H
	DD	00H
	DD	01H
	DD	0258H
	DD	0258H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	026H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@JMEN@Elixir?5of?5Strength?$AA@
	DD	00H
	DB	0fH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	0aH
	DD	00H
	DD	01H
	DD	01388H
	DD	01388H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	022H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BA@EHL@Elixir?5of?5Magic?$AA@
	DD	00H
	DB	0fH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	0bH
	DD	00H
	DD	01H
	DD	01388H
	DD	01388H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	024H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@FLMA@Elixir?5of?5Dexterity?$AA@
	DD	00H
	DB	0fH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	0cH
	DD	00H
	DD	01H
	DD	01388H
	DD	01388H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01fH
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@DFDJ@Elixir?5of?5Vitality?$AA@
	DD	00H
	DB	014H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	0dH
	DD	00H
	DD	01H
	DD	01388H
	DD	01388H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BC@BGMN@Scroll?5of?5Healing?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	02H
	DD	01H
	DD	032H
	DD	032H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@EOEK@Scroll?5of?5Lightning?$AA@
	DD	00H
	DB	04H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	03H
	DD	01H
	DD	096H
	DD	096H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@HKHI@Scroll?5of?5Identify?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	05H
	DD	01H
	DD	064H
	DD	064H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@KOIM@Scroll?5of?5Resurrect?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	020H
	DD	01H
	DD	0faH
	DD	0faH
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BE@KGPH@Scroll?5of?5Fire?5Wall?$AA@
	DD	00H
	DB	04H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	011H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	06H
	DD	01H
	DD	0190H
	DD	0190H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BC@FHNN@Scroll?5of?5Inferno?$AA@
	DD	00H
	DB	01H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	013H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	014H
	DD	01H
	DD	064H
	DD	064H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BG@BCKO@Scroll?5of?5Town?5Portal?$AA@
	DD	00H
	DB	04H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	07H
	DD	01H
	DD	0c8H
	DD	0c8H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BA@FPKC@Scroll?5of?5Flash?$AA@
	DD	00H
	DB	06H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	015H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	04H
	DD	01H
	DD	01f4H
	DD	01f4H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BG@LPBB@Scroll?5of?5Infravision?$AA@
	DD	00H
	DB	08H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	017H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	09H
	DD	01H
	DD	0258H
	DD	0258H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BC@GABE@Scroll?5of?5Phasing?$AA@
	DD	00H
	DB	06H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	019H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	0aH
	DD	01H
	DD	0c8H
	DD	0c8H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BG@HMH@Scroll?5of?5Mana?5Shield?$AA@
	DD	00H
	DB	08H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	0bH
	DD	01H
	DD	04b0H
	DD	04b0H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BF@KPLE@Scroll?5of?5Flame?5Wave?$AA@
	DD	00H
	DB	0aH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	01dH
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	0fH
	DD	01H
	DD	028aH
	DD	028aH
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@FLEO@Scroll?5of?5Fireball?$AA@
	DD	00H
	DB	08H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	01fH
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	0cH
	DD	01H
	DD	012cH
	DD	012cH
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BG@DOBJ@Scroll?5of?5Stone?5Curse?$AA@
	DD	00H
	DB	06H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	021H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	08H
	DD	01H
	DD	0320H
	DD	0320H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BK@ECBO@Scroll?5of?5Chain?5Lightning?$AA@
	DD	00H
	DB	0aH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	023H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	0eH
	DD	01H
	DD	02eeH
	DD	02eeH
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@FBKP@Scroll?5of?5Guardian?$AA@
	DD	00H
	DB	0cH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	02fH
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	0dH
	DD	01H
	DD	03b6H
	DD	03b6H
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_08FNGF@Non?5Item?$AA@
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0P@BBFO@Scroll?5of?5Nova?$AA@
	DD	00H
	DB	0eH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	039H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	012H
	DD	01H
	DD	0514H
	DD	0514H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BA@HBF@Scroll?5of?5Golem?$AA@
	DD	00H
	DB	0aH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	033H
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	015H
	DD	01H
	DD	044cH
	DD	044cH
	DD	00H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0P@GEPP@Scroll?5of?5None?$AA@
	DD	00H
	DB	063H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	03dH
	DB	00H
	ORG $+1
	DD	00H
	DD	016H
	DD	00H
	DD	01H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BD@DLEP@Scroll?5of?5Teleport?$AA@
	DD	00H
	DB	0eH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	051H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	017H
	DD	01H
	DD	0bb8H
	DD	0bb8H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	01H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BF@ODHC@Scroll?5of?5Apocalypse?$AA@
	DD	00H
	DB	016H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	075H
	DB	00H
	ORG $+1
	DD	00H
	DD	015H
	DD	018H
	DD	01H
	DD	07d0H
	DD	07d0H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	058H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_08DNLH@Book?5of?5?$AA@
	DD	00H
	DB	02H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	018H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	058H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_08DNLH@Book?5of?5?$AA@
	DD	00H
	DB	08H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	018H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	058H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_08DNLH@Book?5of?5?$AA@
	DD	00H
	DB	0eH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	018H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	01H
	DB	03H
	DB	07H
	ORG $+2
	DD	058H
	DB	00H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_08DNLH@Book?5of?5?$AA@
	DD	00H
	DB	014H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	018H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	033H
	DB	01H
	DB	07H
	ORG $+2
	DD	FLAT:??_C@_06NGLM@Dagger?$AA@
	DD	FLAT:??_C@_06NGLM@Dagger?$AA@
	DB	01H
	ORG $+3
	DD	010H
	DD	01H
	DD	04H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03cH
	DD	03cH
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	040H
	DB	01H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0M@HOBP@Short?5Sword?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	01H
	ORG $+3
	DD	018H
	DD	02H
	DD	06H
	DD	00H
	DD	00H
	DB	012H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	078H
	DD	078H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	03eH
	DB	01H
	DB	08H
	ORG $+2
	DD	FLAT:??_C@_08OIB@Falchion?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	02H
	ORG $+3
	DD	014H
	DD	04H
	DD	08H
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0faH
	DD	0faH
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	048H
	DB	01H
	DB	0cH
	ORG $+2
	DD	FLAT:??_C@_08KAPM@Scimitar?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	04H
	ORG $+3
	DD	01cH
	DD	03H
	DD	07H
	DD	00H
	DD	00H
	DB	017H
	DB	00H
	DB	017H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0c8H
	DD	0c8H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	041H
	DB	01H
	DB	09H
	ORG $+2
	DD	FLAT:??_C@_08MPPO@Claymore?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	05H
	ORG $+3
	DD	024H
	DD	01H
	DD	0cH
	DD	00H
	DD	00H
	DB	023H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01c2H
	DD	01c2H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	038H
	DB	01H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_05EPNO@Blade?$AA@
	DD	FLAT:??_C@_05EPNO@Blade?$AA@
	DB	04H
	ORG $+3
	DD	01eH
	DD	03H
	DD	08H
	DD	00H
	DD	00H
	DB	019H
	DB	00H
	DB	01eH
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0118H
	DD	0118H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	043H
	DB	01H
	DB	0bH
	ORG $+2
	DD	FLAT:??_C@_05JMEJ@Sabre?$AA@
	DD	FLAT:??_C@_05JMEJ@Sabre?$AA@
	DB	01H
	ORG $+3
	DD	02dH
	DD	01H
	DD	08H
	DD	00H
	DD	00H
	DB	011H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0aaH
	DD	0aaH
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	03cH
	DB	01H
	DB	0dH
	ORG $+2
	DD	FLAT:??_C@_0L@PEAA@Long?5Sword?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	06H
	ORG $+3
	DD	028H
	DD	02H
	DD	0aH
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	01eH
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	015eH
	DD	015eH
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	03dH
	DB	01H
	DB	0aH
	ORG $+2
	DD	FLAT:??_C@_0M@BCBO@Broad?5Sword?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	08H
	ORG $+3
	DD	032H
	DD	04H
	DD	0cH
	DD	00H
	DD	00H
	DB	028H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02eeH
	DD	02eeH
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	039H
	DB	01H
	DB	0eH
	ORG $+2
	DD	FLAT:??_C@_0O@LHMK@Bastard?5Sword?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	0aH
	ORG $+3
	DD	03cH
	DD	06H
	DD	0fH
	DD	00H
	DD	00H
	DB	032H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	06eH
	DB	01H
	DB	0fH
	ORG $+2
	DD	FLAT:??_C@_0BB@BPCM@Two?9Handed?5Sword?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	0eH
	ORG $+3
	DD	04bH
	DD	08H
	DD	010H
	DD	00H
	DD	00H
	DB	041H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0708H
	DD	0708H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	086H
	DB	01H
	DB	010H
	ORG $+2
	DD	FLAT:??_C@_0M@CNCF@Great?5Sword?$AA@
	DD	FLAT:??_C@_05DGOK@Sword?$AA@
	DB	011H
	ORG $+3
	DD	064H
	DD	0aH
	DD	014H
	DD	00H
	DD	00H
	DB	04bH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0bb8H
	DD	0bb8H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	070H
	DB	02H
	DB	014H
	ORG $+2
	DD	FLAT:??_C@_09PFN@Small?5Axe?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DB	02H
	ORG $+3
	DD	018H
	DD	02H
	DD	0aH
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	096H
	DD	096H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	090H
	DB	02H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DB	04H
	ORG $+3
	DD	020H
	DD	04H
	DD	0cH
	DD	00H
	DD	00H
	DB	016H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01c2H
	DD	01c2H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	08eH
	DB	02H
	DB	012H
	ORG $+2
	DD	FLAT:??_C@_09DPKC@Large?5Axe?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DB	06H
	ORG $+3
	DD	028H
	DD	06H
	DD	010H
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02eeH
	DD	02eeH
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	08dH
	DB	02H
	DB	013H
	ORG $+2
	DD	FLAT:??_C@_09COBI@Broad?5Axe?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DB	08H
	ORG $+3
	DD	032H
	DD	08H
	DD	014H
	DD	00H
	DD	00H
	DB	032H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	065H
	DB	02H
	DB	015H
	ORG $+2
	DD	FLAT:??_C@_0L@FOHJ@Battle?5Axe?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DB	0aH
	ORG $+3
	DD	03cH
	DD	0aH
	DD	019H
	DD	00H
	DD	00H
	DB	041H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05dcH
	DD	05dcH
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	08fH
	DB	02H
	DB	016H
	ORG $+2
	DD	FLAT:??_C@_09MOKD@Great?5Axe?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DB	0cH
	ORG $+3
	DD	04bH
	DD	0cH
	DD	01eH
	DD	00H
	DD	00H
	DB	050H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	09c4H
	DD	09c4H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	03bH
	DB	04H
	DB	017H
	ORG $+2
	DD	FLAT:??_C@_04OIIF@Mace?$AA@
	DD	FLAT:??_C@_04OIIF@Mace?$AA@
	DB	02H
	ORG $+3
	DD	020H
	DD	01H
	DD	08H
	DD	00H
	DD	00H
	DB	010H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0c8H
	DD	0c8H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	03fH
	DB	04H
	DB	018H
	ORG $+2
	DD	FLAT:??_C@_0N@CCDC@Morning?5Star?$AA@
	DD	FLAT:??_C@_04OIIF@Mace?$AA@
	DB	03H
	ORG $+3
	DD	028H
	DD	01H
	DD	0aH
	DD	00H
	DD	00H
	DB	01aH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	012cH
	DD	012cH
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	079H
	DB	04H
	DB	01bH
	ORG $+2
	DD	FLAT:??_C@_0L@NFJ@War?5Hammer?$AA@
	DD	FLAT:??_C@_06HJJB@Hammer?$AA@
	DB	05H
	ORG $+3
	DD	032H
	DD	05H
	DD	09H
	DD	00H
	DD	00H
	DB	028H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0258H
	DD	0258H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	046H
	DB	04H
	DB	019H
	ORG $+2
	DD	FLAT:??_C@_0M@OOJP@Spiked?5Club?$AA@
	DD	FLAT:??_C@_04NPLD@Club?$AA@
	DB	04H
	ORG $+3
	DD	014H
	DD	03H
	DD	06H
	DD	00H
	DD	00H
	DB	012H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0e1H
	DD	0e1H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	042H
	DB	04H
	DB	019H
	ORG $+2
	DD	FLAT:??_C@_04NPLD@Club?$AA@
	DD	FLAT:??_C@_04NPLD@Club?$AA@
	DB	01H
	ORG $+3
	DD	014H
	DD	01H
	DD	06H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	014H
	DD	014H
	DD	01H
	DB	01H
	DB	01H
	ORG $+2
	DD	083H
	DB	04H
	DB	01cH
	ORG $+2
	DD	FLAT:??_C@_05MIDA@Flail?$AA@
	DD	FLAT:??_C@_05MIDA@Flail?$AA@
	DB	07H
	ORG $+3
	DD	024H
	DD	02H
	DD	0cH
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01f4H
	DD	01f4H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	07aH
	DB	04H
	DB	01aH
	ORG $+2
	DD	FLAT:??_C@_04LPM@Maul?$AA@
	DD	FLAT:??_C@_04LPM@Maul?$AA@
	DB	0aH
	ORG $+3
	DD	032H
	DD	06H
	DD	014H
	DD	00H
	DD	00H
	DB	037H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0384H
	DD	0384H
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	076H
	DB	03H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_09HMDM@Short?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	01H
	ORG $+3
	DD	01eH
	DD	01H
	DD	04H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	064H
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	066H
	DB	03H
	DB	03H
	ORG $+2
	DD	FLAT:??_C@_0N@JCDD@Hunter?8s?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	03H
	ORG $+3
	DD	028H
	DD	02H
	DD	05H
	DD	00H
	DD	00H
	DB	014H
	DB	00H
	DB	023H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	015eH
	DD	015eH
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	066H
	DB	03H
	DB	02H
	ORG $+2
	DD	FLAT:??_C@_08OKLM@Long?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	05H
	ORG $+3
	DD	023H
	DD	01H
	DD	06H
	DD	00H
	DD	00H
	DB	019H
	DB	00H
	DB	01eH
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0faH
	DD	0faH
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	085H
	DB	03H
	DB	04H
	ORG $+2
	DD	FLAT:??_C@_0O@DKDP@Composite?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	07H
	ORG $+3
	DD	02dH
	DD	03H
	DD	06H
	DD	00H
	DD	00H
	DB	019H
	DB	00H
	DB	028H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0258H
	DD	0258H
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	0a7H
	DB	03H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0BB@PILI@Short?5Battle?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	09H
	ORG $+3
	DD	02dH
	DD	03H
	DD	07H
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	032H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02eeH
	DD	02eeH
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	077H
	DB	03H
	DB	06H
	ORG $+2
	DD	FLAT:??_C@_0BA@BIGH@Long?5Battle?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	0bH
	ORG $+3
	DD	032H
	DD	01H
	DD	0aH
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	03cH
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	0a5H
	DB	03H
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_0O@JFHI@Short?5War?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	0fH
	ORG $+3
	DD	037H
	DD	04H
	DD	08H
	DD	00H
	DD	00H
	DB	023H
	DB	00H
	DB	046H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05dcH
	DD	05dcH
	DD	02H
	DB	01H
	DB	02H
	ORG $+2
	DD	077H
	DB	03H
	DB	05H
	ORG $+2
	DD	FLAT:??_C@_0N@POPE@Long?5War?5Bow?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DB	013H
	ORG $+3
	DD	03cH
	DD	01H
	DD	0eH
	DD	00H
	DD	00H
	DB	02dH
	DB	00H
	DB	050H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	07d0H
	DD	07d0H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	06dH
	DB	0aH
	DB	01eH
	ORG $+2
	DD	FLAT:??_C@_0M@IAG@Short?5Staff?$AA@
	DD	FLAT:??_C@_05EAPD@Staff?$AA@
	DB	01H
	ORG $+3
	DD	019H
	DD	02H
	DD	04H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	017H
	DD	00H
	DD	00H
	DD	01eH
	DD	01eH
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	07bH
	DB	0aH
	DB	01dH
	ORG $+2
	DD	FLAT:??_C@_0L@ICBJ@Long?5Staff?$AA@
	DD	FLAT:??_C@_05EAPD@Staff?$AA@
	DB	04H
	ORG $+3
	DD	023H
	DD	04H
	DD	08H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	017H
	DD	00H
	DD	00H
	DD	064H
	DD	064H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	0a6H
	DB	0aH
	DB	01fH
	ORG $+2
	DD	FLAT:??_C@_0BA@IFDM@Composite?5Staff?$AA@
	DD	FLAT:??_C@_05EAPD@Staff?$AA@
	DB	06H
	ORG $+3
	DD	02dH
	DD	05H
	DD	0aH
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	017H
	DD	00H
	DD	00H
	DD	01f4H
	DD	01f4H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	06dH
	DB	0aH
	DB	020H
	ORG $+2
	DD	FLAT:??_C@_0O@ILDK@Quarter?5Staff?$AA@
	DD	FLAT:??_C@_05EAPD@Staff?$AA@
	DB	09H
	ORG $+3
	DD	037H
	DD	06H
	DD	0cH
	DD	00H
	DD	00H
	DB	014H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	017H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	01H
	DB	02H
	ORG $+2
	DD	07cH
	DB	0aH
	DB	021H
	ORG $+2
	DD	FLAT:??_C@_09IIHC@War?5Staff?$AA@
	DD	FLAT:??_C@_05EAPD@Staff?$AA@
	DB	0cH
	ORG $+3
	DD	04bH
	DD	08H
	DD	010H
	DD	00H
	DD	00H
	DB	01eH
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	017H
	DD	00H
	DD	00H
	DD	05dcH
	DD	05dcH
	DD	01H
	DB	03H
	DB	05H
	ORG $+2
	DD	0cH
	DB	0cH
	DB	036H
	ORG $+2
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DB	05H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	019H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	03H
	DB	05H
	ORG $+2
	DD	0cH
	DB	0cH
	DB	036H
	ORG $+2
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DB	0aH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	019H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	03H
	DB	05H
	ORG $+2
	DD	0cH
	DB	0cH
	DB	036H
	ORG $+2
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DB	0fH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	019H
	DD	00H
	DD	00H
	DD	03e8H
	DD	03e8H
	DD	01H
	DB	03H
	DB	06H
	ORG $+2
	DD	02dH
	DB	0dH
	DB	038H
	ORG $+2
	DD	FLAT:??_C@_06BCFK@Amulet?$AA@
	DD	FLAT:??_C@_06BCFK@Amulet?$AA@
	DB	08H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01aH
	DD	00H
	DD	00H
	DD	04b0H
	DD	04b0H
	DD	01H
	DB	03H
	DB	06H
	ORG $+2
	DD	02dH
	DB	0dH
	DB	038H
	ORG $+2
	DD	FLAT:??_C@_06BCFK@Amulet?$AA@
	DD	FLAT:??_C@_06BCFK@Amulet?$AA@
	DB	010H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	01aH
	DD	00H
	DD	00H
	DD	04b0H
	DD	04b0H
	DD	00H
	DB	00H
	DB	0ffH
	ORG $+2
	DD	00H
	DB	00H
	DB	00H
	ORG $+2
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
_ItemCAnimTbl DB 014H
	DB	010H
	DB	010H
	DB	010H
	DB	04H
	DB	04H
	DB	04H
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	015H
	DB	015H
	DB	019H
	DB	0cH
	DB	01cH
	DB	01cH
	DB	01cH
	DB	00H
	DB	00H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	018H
	DB	01aH
	DB	02H
	DB	019H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01bH
	DB	01bH
	DB	01dH
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	00H
	DB	08H
	DB	08H
	DB	00H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	06H
	DB	08H
	DB	08H
	DB	08H
	DB	06H
	DB	08H
	DB	08H
	DB	06H
	DB	08H
	DB	08H
	DB	06H
	DB	06H
	DB	06H
	DB	08H
	DB	08H
	DB	08H
	DB	05H
	DB	09H
	DB	0dH
	DB	0dH
	DB	0dH
	DB	05H
	DB	05H
	DB	05H
	DB	0fH
	DB	05H
	DB	05H
	DB	012H
	DB	012H
	DB	012H
	DB	01eH
	DB	05H
	DB	05H
	DB	0eH
	DB	05H
	DB	0eH
	DB	0dH
	DB	010H
	DB	012H
	DB	05H
	DB	05H
	DB	07H
	DB	01H
	DB	03H
	DB	011H
	DB	01H
	DB	0fH
	DB	0aH
	DB	0eH
	DB	03H
	DB	0bH
	DB	08H
	DB	00H
	DB	01H
	DB	07H
	DB	00H
	DB	07H
	DB	0fH
	DB	07H
	DB	03H
	DB	03H
	DB	03H
	DB	06H
	DB	06H
	DB	0bH
	DB	0bH
	DB	0bH
	DB	01fH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	06H
	DB	06H
	DB	07H
	DB	03H
	DB	08H
	DB	0eH
	DB	00H
	DB	0eH
	DB	0eH
	DB	00H
	DB	021H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	07H
	DB	07H
	DB	07H
	DB	0eH
	DB	0eH
	DB	011H
	DB	011H
	DB	011H
	DB	00H
	DB	022H
	DB	01H
	DB	00H
	DB	03H
	DB	011H
	DB	08H
	DB	08H
	DB	06H
	DB	01H
	DB	03H
	DB	03H
	DB	0bH
	DB	03H
	DB	04H
_DATA	ENDS
;	COMDAT ??_C@_06KJBL@Armor2?$AA@
_DATA	SEGMENT
??_C@_06KJBL@Armor2?$AA@ DB 'Armor2', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06KLNE@FBttle?$AA@
_DATA	SEGMENT
??_C@_06KLNE@FBttle?$AA@ DB 'FBttle', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IFLC@GoldFlip?$AA@
_DATA	SEGMENT
??_C@_08IFLC@GoldFlip?$AA@ DB 'GoldFlip', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06EJIN@Helmut?$AA@
_DATA	SEGMENT
??_C@_06EJIN@Helmut?$AA@ DB 'Helmut', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08DANF@SwrdFlip?$AA@
_DATA	SEGMENT
??_C@_08DANF@SwrdFlip?$AA@ DB 'SwrdFlip', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04LKIC@Rock?$AA@
_DATA	SEGMENT
??_C@_04LKIC@Rock?$AA@ DB 'Rock', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06IHL@CrownF?$AA@
_DATA	SEGMENT
??_C@_06IHL@CrownF?$AA@ DB 'CrownF', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06DGLF@LArmor?$AA@
_DATA	SEGMENT
??_C@_06DGLF@LArmor?$AA@ DB 'LArmor', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07OEKG@WShield?$AA@
_DATA	SEGMENT
??_C@_07OEKG@WShield?$AA@ DB 'WShield', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06PAFO@Scroll?$AA@
_DATA	SEGMENT
??_C@_06PAFO@Scroll?$AA@ DB 'Scroll', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08CJML@FPlateAr?$AA@
_DATA	SEGMENT
??_C@_08CJML@FPlateAr?$AA@ DB 'FPlateAr', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05MJNG@FBook?$AA@
_DATA	SEGMENT
??_C@_05MJNG@FBook?$AA@ DB 'FBook', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04JEEI@Food?$AA@
_DATA	SEGMENT
??_C@_04JEEI@Food?$AA@ DB 'Food', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08PHIC@FBttleBB?$AA@
_DATA	SEGMENT
??_C@_08PHIC@FBttleBB?$AA@ DB 'FBttleBB', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08ICAM@FBttleDY?$AA@
_DATA	SEGMENT
??_C@_08ICAM@FBttleDY?$AA@ DB 'FBttleDY', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08KHKG@FBttleOR?$AA@
_DATA	SEGMENT
??_C@_08KHKG@FBttleOR?$AA@ DB 'FBttleOR', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08FOPC@FBttleBR?$AA@
_DATA	SEGMENT
??_C@_08FOPC@FBttleBR?$AA@ DB 'FBttleBR', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08FMEI@FBttleBL?$AA@
_DATA	SEGMENT
??_C@_08FMEI@FBttleBL?$AA@ DB 'FBttleBL', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08PFPD@FBttleBY?$AA@
_DATA	SEGMENT
??_C@_08PFPD@FBttleBY?$AA@ DB 'FBttleBY', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08NALN@FBttleWH?$AA@
_DATA	SEGMENT
??_C@_08NALN@FBttleWH?$AA@ DB 'FBttleWH', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IAHN@FBttleDB?$AA@
_DATA	SEGMENT
??_C@_08IAHN@FBttleDB?$AA@ DB 'FBttleDB', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04HGKM@FEar?$AA@
_DATA	SEGMENT
??_C@_04HGKM@FEar?$AA@ DB 'FEar', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_06KIBP@FBrain?$AA@
_DATA	SEGMENT
??_C@_06KIBP@FBrain?$AA@ DB 'FBrain', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05HGOE@FMush?$AA@
_DATA	SEGMENT
??_C@_05HGOE@FMush?$AA@ DB 'FMush', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07LMBD@Innsign?$AA@
_DATA	SEGMENT
??_C@_07LMBD@Innsign?$AA@ DB 'Innsign', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06KHLH@Bldstn?$AA@
_DATA	SEGMENT
??_C@_06KHLH@Bldstn?$AA@ DB 'Bldstn', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06GMAG@Fanvil?$AA@
_DATA	SEGMENT
??_C@_06GMAG@Fanvil?$AA@ DB 'Fanvil', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08HGKF@FLazStaf?$AA@
_DATA	SEGMENT
??_C@_08HGKF@FLazStaf?$AA@ DB 'FLazStaf', 00H		; `string'
_DATA	ENDS
_DATA	SEGMENT
	ORG $+7
_ItemDropStrs DD FLAT:??_C@_06KJBL@Armor2?$AA@
	DD	FLAT:??_C@_03IAFN@Axe?$AA@
	DD	FLAT:??_C@_06KLNE@FBttle?$AA@
	DD	FLAT:??_C@_03IBME@Bow?$AA@
	DD	FLAT:??_C@_08IFLC@GoldFlip?$AA@
	DD	FLAT:??_C@_06EJIN@Helmut?$AA@
	DD	FLAT:??_C@_04OIIF@Mace?$AA@
	DD	FLAT:??_C@_06GBHM@Shield?$AA@
	DD	FLAT:??_C@_08DANF@SwrdFlip?$AA@
	DD	FLAT:??_C@_04LKIC@Rock?$AA@
	DD	FLAT:??_C@_07DFGK@Cleaver?$AA@
	DD	FLAT:??_C@_05EAPD@Staff?$AA@
	DD	FLAT:??_C@_04FBEF@Ring?$AA@
	DD	FLAT:??_C@_06IHL@CrownF?$AA@
	DD	FLAT:??_C@_06DGLF@LArmor?$AA@
	DD	FLAT:??_C@_07OEKG@WShield?$AA@
	DD	FLAT:??_C@_06PAFO@Scroll?$AA@
	DD	FLAT:??_C@_08CJML@FPlateAr?$AA@
	DD	FLAT:??_C@_05MJNG@FBook?$AA@
	DD	FLAT:??_C@_04JEEI@Food?$AA@
	DD	FLAT:??_C@_08PHIC@FBttleBB?$AA@
	DD	FLAT:??_C@_08ICAM@FBttleDY?$AA@
	DD	FLAT:??_C@_08KHKG@FBttleOR?$AA@
	DD	FLAT:??_C@_08FOPC@FBttleBR?$AA@
	DD	FLAT:??_C@_08FMEI@FBttleBL?$AA@
	DD	FLAT:??_C@_08PFPD@FBttleBY?$AA@
	DD	FLAT:??_C@_08NALN@FBttleWH?$AA@
	DD	FLAT:??_C@_08IAHN@FBttleDB?$AA@
	DD	FLAT:??_C@_04HGKM@FEar?$AA@
	DD	FLAT:??_C@_06KIBP@FBrain?$AA@
	DD	FLAT:??_C@_05HGOE@FMush?$AA@
	DD	FLAT:??_C@_07LMBD@Innsign?$AA@
	DD	FLAT:??_C@_06KHLH@Bldstn?$AA@
	DD	FLAT:??_C@_06GMAG@Fanvil?$AA@
	DD	FLAT:??_C@_08HGKF@FLazStaf?$AA@
_ItemAnimLs DB	0fH
	DB	0dH
	DB	010H
	DB	0dH
	DB	0aH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0aH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	01H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	0dH
	DB	0cH
	DB	0cH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	08H
	ORG $+1
_ItemDropSnds DD 01cH
	DD	016H
	DD	021H
	DD	01aH
	DD	029H
	DD	01bH
	DD	028H
	DD	025H
	DD	028H
	DD	023H
	DD	016H
	DD	027H
	DD	022H
	DD	01bH
	DD	01dH
	DD	025H
	DD	024H
	DD	01cH
	DD	019H
	DD	01dH
	DD	021H
	DD	021H
	DD	021H
	DD	021H
	DD	021H
	DD	021H
	DD	021H
	DD	021H
	DD	018H
	DD	018H
	DD	020H
	DD	03bH
	DD	017H
	DD	015H
	DD	027H
	ORG $+4
_ItemInvSnds DD	033H
	DD	02cH
	DD	036H
	DD	030H
	DD	029H
	DD	031H
	DD	03dH
	DD	03aH
	DD	03dH
	DD	038H
	DD	02cH
	DD	03cH
	DD	037H
	DD	031H
	DD	034H
	DD	03aH
	DD	039H
	DD	033H
	DD	02fH
	DD	033H
	DD	036H
	DD	036H
	DD	036H
	DD	036H
	DD	036H
	DD	036H
	DD	036H
	DD	036H
	DD	02eH
	DD	02eH
	DD	035H
	DD	03bH
	DD	02dH
	DD	02bH
	DD	03cH
_idoppely DD	010H
_premiumlvladd DD 0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	01H
	DD	02H
_DATA	ENDS
PUBLIC	??_C@_0N@ONAL@Items?2?$CFs?4CEL?$AA@		; `string'
PUBLIC	_InitItemGFX
EXTRN	_sprintf:NEAR
EXTRN	@LoadFileInMem@8:NEAR
EXTRN	_memset:NEAR
;	COMDAT ??_C@_0N@ONAL@Items?2?$CFs?4CEL?$AA@
; File Source/items.cpp
_DATA	SEGMENT
??_C@_0N@ONAL@Items?2?$CFs?4CEL?$AA@ DB 'Items\%s.CEL', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitItemGFX
_TEXT	SEGMENT
_arglist$ = -64
_InitItemGFX PROC NEAR					; COMDAT
; Line 639
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
; Line 648
	xor	esi, esi
$L85503:
	push	DWORD PTR _ItemDropStrs[esi]
	lea	eax, DWORD PTR _arglist$[ebp]
	push	OFFSET FLAT:??_C@_0N@ONAL@Items?2?$CFs?4CEL?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
	xor	edx, edx
	lea	ecx, DWORD PTR _arglist$[ebp]
	call	@LoadFileInMem@8
	mov	DWORD PTR _Item2Frm[esi], eax
	add	esi, 4
	cmp	esi, 140				; 0000008cH
	jl	SHORT $L85503
; Line 649
	push	512					; 00000200H
	push	0
	push	OFFSET FLAT:_UniqueItemFlag
	call	_memset
	add	esp, 12					; 0000000cH
	pop	esi
; Line 650
	leave
	ret	0
_InitItemGFX ENDP
_TEXT	ENDS
PUBLIC	@ItemPlace@8
EXTRN	_dFlags:BYTE
EXTRN	_dItem:BYTE
EXTRN	_dMonster:BYTE
EXTRN	_dObject:BYTE
EXTRN	_dPiece:BYTE
EXTRN	_nSolidTable:BYTE
EXTRN	_dPlayer:BYTE
; Function compile flags: /Ogsy
;	COMDAT @ItemPlace@8
_TEXT	SEGMENT
@ItemPlace@8 PROC NEAR					; COMDAT
; _xp$ = ecx
; _yp$ = edx
; Line 659
	imul	ecx, 112				; 00000070H
	push	ebx
; Line 660
	xor	ebx, ebx
	lea	eax, DWORD PTR [ecx+edx]
	shl	eax, 2
	cmp	DWORD PTR _dMonster[eax], ebx
	jne	SHORT $L85516
	cmp	BYTE PTR _dPlayer[ecx+edx], bl
	jne	SHORT $L85516
	cmp	BYTE PTR _dItem[ecx+edx], bl
	jne	SHORT $L85516
	cmp	BYTE PTR _dObject[ecx+edx], bl
	jne	SHORT $L85516
	test	BYTE PTR _dFlags[ecx+edx], 8
	jne	SHORT $L85516
; Line 663
	mov	eax, DWORD PTR _dPiece[eax]
	cmp	BYTE PTR _nSolidTable[eax], bl
	pop	ebx
	sete	al
; Line 665
	ret	0
$L85516:
; Line 661
	xor	al, al
	pop	ebx
; Line 665
	ret	0
@ItemPlace@8 ENDP
_TEXT	ENDS
PUBLIC	_AddInitItems
PUBLIC	@GetItemAttrs@12
PUBLIC	@SetupItem@4
EXTRN	@SetRndSeed@4:NEAR
EXTRN	_GetRndSeed:NEAR
EXTRN	@random@8:NEAR
EXTRN	@DeltaAddItem@4:NEAR
EXTRN	_currlevel:BYTE
; Function compile flags: /Ogsy
;	COMDAT _AddInitItems
_TEXT	SEGMENT
_AddInitItems PROC NEAR					; COMDAT
; Line 668
	push	ebp
; Line 675
	push	3
	pop	edx
	mov	cl, 11					; 0000000bH
	call	@random@8
	mov	ebp, eax
	add	ebp, 3
; Line 676
	test	ebp, ebp
	jle	$L85527
	push	ebx
	push	esi
	push	edi
$L85525:
; Line 679
	mov	eax, DWORD PTR _numitems
	mov	ebx, DWORD PTR _itemavail
	shl	eax, 2
; Line 680
	mov	ecx, OFFSET FLAT:_itemavail+504
	sub	ecx, eax
	mov	DWORD PTR _itemactive[eax], ebx
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _itemavail, eax
$L85528:
; Line 682
	push	80					; 00000050H
	mov	cl, 12					; 0000000cH
	pop	edx
	call	@random@8
; Line 683
	push	80					; 00000050H
	mov	edi, eax
	pop	edx
	mov	cl, 12					; 0000000cH
	add	edi, 16					; 00000010H
	call	@random@8
	mov	edx, eax
; Line 684
	mov	ecx, edi
	add	edx, 16					; 00000010H
	call	@ItemPlace@8
	test	al, al
	je	SHORT $L85528
; Line 685
	mov	esi, ebx
; Line 687
	mov	al, bl
	imul	esi, 368				; 00000170H
	inc	al
	mov	DWORD PTR _item[esi+12], edi
	imul	edi, 112				; 00000070H
	mov	DWORD PTR _item[esi+16], edx
	mov	BYTE PTR _dItem[edi+edx], al
; Line 688
	call	_GetRndSeed
; Line 690
	mov	ecx, eax
	mov	DWORD PTR _item[esi], eax
	call	@SetRndSeed@4
; Line 691
	push	2
	mov	cl, 12					; 0000000cH
	pop	edx
	call	@random@8
	test	eax, eax
; Line 692
	movzx	eax, BYTE PTR _currlevel
	mov	ecx, ebx
	push	eax
	je	SHORT $L85531
	push	24					; 00000018H
; Line 693
	jmp	SHORT $L88458
$L85531:
; Line 694
	push	25					; 00000019H
$L88458:
	pop	edx
	call	@GetItemAttrs@12
; Line 695
	movzx	ax, BYTE PTR _currlevel
	add	eax, 32768				; 00008000H
; Line 696
	mov	ecx, ebx
	mov	WORD PTR _item[esi+4], ax
	call	@SetupItem@4
; Line 698
	mov	eax, DWORD PTR _item[esi+28]
	and	DWORD PTR _item[esi+20], 0
; Line 700
	mov	ecx, ebx
	mov	DWORD PTR _item[esi+32], eax
	mov	BYTE PTR _item[esi+48], 1
	call	@DeltaAddItem@4
; Line 701
	inc	DWORD PTR _numitems
; Line 702
	dec	ebp
; Line 703
	jne	$L85525
	pop	edi
	pop	esi
	pop	ebx
$L85527:
	pop	ebp
; Line 705
	ret	0
_AddInitItems ENDP
_TEXT	ENDS
PUBLIC	_InitItems
PUBLIC	@SpawnQuestItem@20
PUBLIC	_SpawnRock
EXTRN	_setlevel:BYTE
EXTRN	_setpc_x:DWORD
EXTRN	_setpc_y:DWORD
EXTRN	@QuestStatus@4:NEAR
EXTRN	_golditem:BYTE
; Function compile flags: /Ogsy
;	COMDAT _InitItems
_TEXT	SEGMENT
_InitItems PROC NEAR					; COMDAT
; Line 708
	push	ebx
	push	esi
	push	edi
; Line 712
	push	1
	xor	edx, edx
	xor	ecx, ecx
	call	@GetItemAttrs@12
; Line 714
	push	92					; 0000005cH
	mov	esi, OFFSET FLAT:_item
	pop	ecx
	mov	edi, OFFSET FLAT:_golditem
	xor	ebx, ebx
; Line 715
	mov	eax, OFFSET FLAT:_item+16
	rep movsd
	mov	DWORD PTR _numitems, ebx
	mov	DWORD PTR _golditem+356, 1
$L85536:
; Line 718
	mov	DWORD PTR [eax-8], ebx
; Line 719
	mov	DWORD PTR [eax-4], ebx
; Line 720
	mov	DWORD PTR [eax], ebx
; Line 721
	mov	DWORD PTR [eax+4], ebx
; Line 722
	mov	BYTE PTR [eax+32], bl
; Line 723
	mov	DWORD PTR [eax+40], ebx
; Line 724
	mov	DWORD PTR [eax+36], ebx
; Line 725
	add	eax, 368				; 00000170H
; Line 726
	lea	ecx, DWORD PTR [eax-4]
	cmp	ecx, OFFSET FLAT:_item+47116
	jl	SHORT $L85536
; Line 728
	push	508					; 000001fcH
	push	ebx
	push	OFFSET FLAT:_itemactive
	xor	esi, esi
	call	_memset
	add	esp, 12					; 0000000cH
$L85542:
; Line 730
	mov	DWORD PTR _itemavail[esi*4], esi
; Line 731
	inc	esi
; Line 732
	cmp	esi, 127				; 0000007fH
	jl	SHORT $L85542
; Line 733
	cmp	BYTE PTR _setlevel, bl
	jne	SHORT $L85548
; Line 734
	call	_GetRndSeed
; Line 735
	xor	ecx, ecx
	call	@QuestStatus@4
	test	eax, eax
	je	SHORT $L85546
; Line 736
	call	_SpawnRock
$L85546:
; Line 737
	push	10					; 0000000aH
	pop	ecx
	call	@QuestStatus@4
	test	eax, eax
	je	SHORT $L85547
; Line 738
	mov	eax, DWORD PTR _setpc_y
	push	1
	push	ebx
	lea	eax, DWORD PTR [eax+eax+27]
	push	eax
	mov	eax, DWORD PTR _setpc_x
	push	16					; 00000010H
	lea	edx, DWORD PTR [eax+eax+27]
	pop	ecx
	call	@SpawnQuestItem@20
$L85547:
; Line 739
	mov	al, BYTE PTR _currlevel
	cmp	al, bl
	jbe	SHORT $L85548
	cmp	al, 16					; 00000010H
	jae	SHORT $L85548
; Line 740
	call	_AddInitItems
$L85548:
	pop	edi
; Line 742
	mov	DWORD PTR _uitemflag, ebx
	pop	esi
	pop	ebx
; Line 743
	ret	0
_InitItems ENDP
_TEXT	ENDS
PUBLIC	@CalcPlrItemVals@8
EXTRN	@SetPlayerHitPoints@8:NEAR
EXTRN	__allshl:NEAR
EXTRN	_drawpanflag:DWORD
EXTRN	@ChangeLightRadius@8:NEAR
EXTRN	@ChangeVisionRadius@8:NEAR
EXTRN	_missileactive:BYTE
EXTRN	_missile:BYTE
EXTRN	_nummissiles:DWORD
EXTRN	_myplr:DWORD
EXTRN	_plr:BYTE
EXTRN	@LoadPlrGFX@8:NEAR
EXTRN	@SetPlrAnims@4:NEAR
EXTRN	_drawhpflag:DWORD
EXTRN	_drawmanaflag:DWORD
; Function compile flags: /Ogsy
;	COMDAT @CalcPlrItemVals@8
_TEXT	SEGMENT
_p$ = -12
_Loadgfx$ = -108
_mind$ = -100
_maxd$ = -96
_tac$ = -28
_bdam$ = -32
_btohit$ = -36
_bac$ = -40
_iflgs$ = -24
_sadd$ = -48
_madd$ = -20
_dadd$ = -52
_vadd$ = -16
_spl$ = -116
_fr$ = -64
_lr$ = -68
_mr$ = -72
_ghit$ = -44
_lrad$ = -4
_ihp$ = -76
_imana$ = -8
_spllvladd$ = -56
_enac$ = -60
_fmin$ = -80
_fmax$ = -84
_lmin$ = -88
_lmax$ = -92
@CalcPlrItemVals@8 PROC NEAR				; COMDAT
; _p$ = ecx
; _Loadgfx$ = edx
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	ebx
	push	esi
	mov	esi, ecx
; Line 750
	xor	eax, eax
	mov	DWORD PTR _p$[ebp], esi
	xor	ecx, ecx
; Line 775
	xor	ebx, ebx
	imul	esi, 21720				; 000054d8H
	push	edi
	mov	DWORD PTR _Loadgfx$[ebp], edx
	mov	DWORD PTR _tac$[ebp], eax
	mov	DWORD PTR _bdam$[ebp], eax
	mov	DWORD PTR _btohit$[ebp], eax
	mov	DWORD PTR _bac$[ebp], eax
	mov	DWORD PTR _iflgs$[ebp], eax
	mov	DWORD PTR _sadd$[ebp], eax
	mov	DWORD PTR _madd$[ebp], eax
	mov	DWORD PTR _dadd$[ebp], eax
	mov	DWORD PTR _vadd$[ebp], eax
	mov	DWORD PTR _spl$[ebp], eax
	mov	DWORD PTR _spl$[ebp+4], eax
	mov	DWORD PTR _fr$[ebp], eax
	mov	DWORD PTR _lr$[ebp], eax
	mov	DWORD PTR _mr$[ebp], eax
; Line 776
	mov	DWORD PTR _ghit$[ebp], eax
; Line 778
	mov	DWORD PTR _lrad$[ebp], 10		; 0000000aH
; Line 780
	mov	DWORD PTR _ihp$[ebp], eax
; Line 781
	mov	DWORD PTR _imana$[ebp], eax
; Line 783
	mov	DWORD PTR _spllvladd$[ebp], eax
; Line 784
	mov	DWORD PTR _enac$[ebp], eax
; Line 786
	mov	DWORD PTR _fmin$[ebp], eax
; Line 787
	mov	DWORD PTR _fmax$[ebp], eax
; Line 788
	mov	DWORD PTR _lmin$[ebp], eax
; Line 789
	mov	DWORD PTR _lmax$[ebp], eax
	lea	edi, DWORD PTR _plr[esi+1248]
	mov	DWORD PTR -104+[ebp], 7
$L85585:
; Line 796
	cmp	DWORD PTR [edi-348], -1
	je	$L85586
	cmp	DWORD PTR [edi], 0
	je	$L85586
; Line 799
	mov	edx, DWORD PTR [edi-144]
	add	ecx, DWORD PTR [edi-152]
	add	DWORD PTR _tac$[ebp], edx
; Line 800
	add	eax, DWORD PTR [edi-148]
; Line 802
	mov	edx, DWORD PTR [edi-132]
	mov	DWORD PTR _mind$[ebp], ecx
	test	edx, edx
	mov	DWORD PTR _maxd$[ebp], eax
	je	SHORT $L85590
; Line 803
	xor	eax, eax
	lea	ecx, DWORD PTR [edx-1]
	inc	eax
	xor	edx, edx
	call	__allshl
	or	DWORD PTR _spl$[ebp], eax
	or	DWORD PTR _spl$[ebp+4], edx
	mov	eax, DWORD PTR _maxd$[ebp]
	mov	ecx, DWORD PTR _mind$[ebp]
$L85590:
; Line 806
	cmp	BYTE PTR [edi-296], 0
	je	SHORT $L85593
	cmp	DWORD PTR [edi-300], 0
	je	$L85586
$L85593:
; Line 807
	mov	ecx, DWORD PTR [edi-112]
	add	DWORD PTR _bdam$[ebp], ecx
; Line 808
	mov	ecx, DWORD PTR [edi-108]
	add	DWORD PTR _btohit$[ebp], ecx
; Line 809
	mov	ecx, DWORD PTR [edi-104]
	test	ecx, ecx
	je	SHORT $L85594
; Line 810
	mov	eax, DWORD PTR [edi-144]
	push	100					; 00000064H
	imul	eax, ecx
	cdq
	pop	ecx
	idiv	ecx
; Line 811
	test	eax, eax
	jne	SHORT $L85596
; Line 812
	inc	eax
$L85596:
; Line 813
	add	DWORD PTR _bac$[ebp], eax
	mov	eax, DWORD PTR _maxd$[ebp]
$L85594:
; Line 816
	mov	ecx, DWORD PTR [edi-140]
	add	ebx, DWORD PTR [edi-64]
	or	DWORD PTR _iflgs$[ebp], ecx
; Line 817
	mov	ecx, DWORD PTR [edi-100]
	add	DWORD PTR _sadd$[ebp], ecx
; Line 818
	mov	ecx, DWORD PTR [edi-96]
	add	DWORD PTR _madd$[ebp], ecx
; Line 819
	mov	ecx, DWORD PTR [edi-92]
	add	DWORD PTR _dadd$[ebp], ecx
; Line 820
	mov	ecx, DWORD PTR [edi-88]
	add	DWORD PTR _vadd$[ebp], ecx
; Line 821
	mov	ecx, DWORD PTR [edi-84]
	add	DWORD PTR _fr$[ebp], ecx
; Line 822
	mov	ecx, DWORD PTR [edi-80]
	add	DWORD PTR _lr$[ebp], ecx
; Line 823
	mov	ecx, DWORD PTR [edi-76]
	add	DWORD PTR _mr$[ebp], ecx
; Line 824
	mov	ecx, DWORD PTR [edi-60]
	add	DWORD PTR _ghit$[ebp], ecx
; Line 825
	mov	ecx, DWORD PTR [edi-56]
	add	DWORD PTR _lrad$[ebp], ecx
; Line 826
	mov	ecx, DWORD PTR [edi-68]
	add	DWORD PTR _ihp$[ebp], ecx
; Line 827
	mov	ecx, DWORD PTR [edi-72]
	add	DWORD PTR _imana$[ebp], ecx
; Line 828
	movsx	ecx, BYTE PTR [edi-52]
	add	DWORD PTR _spllvladd$[ebp], ecx
; Line 829
	mov	ecx, DWORD PTR [edi-28]
	add	DWORD PTR _enac$[ebp], ecx
; Line 830
	mov	ecx, DWORD PTR [edi-44]
	add	DWORD PTR _fmin$[ebp], ecx
; Line 831
	mov	ecx, DWORD PTR [edi-40]
	add	DWORD PTR _fmax$[ebp], ecx
; Line 832
	mov	ecx, DWORD PTR [edi-36]
	add	DWORD PTR _lmin$[ebp], ecx
; Line 833
	mov	ecx, DWORD PTR [edi-32]
	add	DWORD PTR _lmax$[ebp], ecx
	mov	ecx, DWORD PTR _mind$[ebp]
$L85586:
	add	edi, 368				; 00000170H
	dec	DWORD PTR -104+[ebp]
	jne	$L85585
; Line 838
	xor	edx, edx
	cmp	ecx, edx
	jne	SHORT $L85599
	cmp	eax, edx
	jne	SHORT $L85599
; Line 839
	xor	eax, eax
	inc	eax
; Line 842
	cmp	DWORD PTR _plr[esi+2372], 5
	mov	ecx, eax
	jne	SHORT $L85598
	cmp	DWORD PTR _plr[esi+2720], edx
	je	SHORT $L85598
; Line 843
	push	3
	pop	eax
$L85598:
; Line 846
	cmp	DWORD PTR _plr[esi+2740], 5
	jne	SHORT $L85599
	cmp	DWORD PTR _plr[esi+3088], edx
	je	SHORT $L85599
; Line 847
	push	3
	pop	eax
$L85599:
; Line 851
	mov	DWORD PTR _plr[esi+21548], eax
; Line 852
	mov	eax, DWORD PTR _tac$[ebp]
	mov	DWORD PTR _plr[esi+21552], eax
; Line 853
	mov	eax, DWORD PTR _bdam$[ebp]
	mov	DWORD PTR _plr[esi+21556], eax
; Line 854
	mov	eax, DWORD PTR _btohit$[ebp]
	mov	DWORD PTR _plr[esi+21560], eax
; Line 855
	mov	eax, DWORD PTR _bac$[ebp]
	mov	DWORD PTR _plr[esi+21564], eax
; Line 856
	mov	eax, DWORD PTR _iflgs$[ebp]
	mov	DWORD PTR _plr[esi+21584], eax
; Line 857
	mov	eax, DWORD PTR _ghit$[ebp]
; Line 861
	push	2
	mov	DWORD PTR _plr[esi+21588], eax
	pop	eax
	mov	DWORD PTR _plr[esi+21544], ecx
	cmp	DWORD PTR _lrad$[ebp], eax
	mov	DWORD PTR _plr[esi+21568], ebx
	jge	SHORT $L85600
; Line 862
	mov	DWORD PTR _lrad$[ebp], eax
$L85600:
; Line 864
	push	15					; 0000000fH
	pop	eax
	cmp	DWORD PTR _lrad$[ebp], eax
	jle	SHORT $L85601
; Line 865
	mov	DWORD PTR _lrad$[ebp], eax
$L85601:
; Line 868
	movsx	eax, BYTE PTR _plr[esi+318]
	cmp	eax, DWORD PTR _lrad$[ebp]
	je	SHORT $L85602
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L85602
; Line 869
	mov	ebx, DWORD PTR _lrad$[ebp]
	mov	ecx, DWORD PTR _plr[esi+156]
	mov	edx, ebx
	call	@ChangeLightRadius@8
; Line 871
	mov	ecx, DWORD PTR _plr[esi+160]
; Line 872
	push	10					; 0000000aH
	pop	edx
	cmp	ebx, edx
	jl	SHORT $L85603
; Line 873
	mov	edx, ebx
$L85603:
; Line 875
	call	@ChangeVisionRadius@8
; Line 878
	mov	BYTE PTR _plr[esi+318], bl
	xor	edx, edx
$L85602:
; Line 881
	mov	eax, DWORD PTR _plr[esi+360]
	add	eax, DWORD PTR _sadd$[ebp]
	mov	DWORD PTR _plr[esi+356], eax
; Line 882
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	lea	ecx, DWORD PTR _plr[eax+356]
	cmp	DWORD PTR [ecx], edx
	jg	SHORT $L85605
; Line 883
	mov	DWORD PTR [ecx], edx
$L85605:
; Line 886
	mov	ecx, DWORD PTR _plr[esi+368]
	add	ecx, DWORD PTR _madd$[ebp]
	mov	DWORD PTR _plr[esi+364], ecx
; Line 887
	lea	ecx, DWORD PTR _plr[eax+364]
	cmp	DWORD PTR [ecx], edx
	jg	SHORT $L85606
; Line 888
	mov	DWORD PTR [ecx], edx
$L85606:
; Line 891
	mov	ecx, DWORD PTR _plr[esi+376]
	add	ecx, DWORD PTR _dadd$[ebp]
	mov	DWORD PTR _plr[esi+372], ecx
; Line 892
	lea	ecx, DWORD PTR _plr[eax+372]
	cmp	DWORD PTR [ecx], edx
	jg	SHORT $L85607
; Line 893
	mov	DWORD PTR [ecx], edx
$L85607:
; Line 896
	mov	ecx, DWORD PTR _plr[esi+384]
; Line 897
	lea	eax, DWORD PTR _plr[eax+380]
	add	ecx, DWORD PTR _vadd$[ebp]
	mov	DWORD PTR _plr[esi+380], ecx
	cmp	DWORD PTR [eax], edx
	jg	SHORT $L85608
; Line 898
	mov	DWORD PTR [eax], edx
$L85608:
; Line 901
	cmp	BYTE PTR _plr[esi+352], 1
; Line 902
	movsx	eax, BYTE PTR _plr[esi+440]
	jne	SHORT $L85609
	mov	ecx, DWORD PTR _plr[esi+372]
	add	ecx, DWORD PTR _plr[esi+356]
	imul	eax, ecx
	mov	ecx, 200				; 000000c8H
; Line 903
	jmp	SHORT $L88494
$L85609:
; Line 904
	imul	eax, DWORD PTR _plr[esi+356]
	push	100					; 00000064H
	pop	ecx
$L88494:
	cdq
	idiv	ecx
; Line 907
	mov	edi, DWORD PTR _spl$[ebp]
	mov	ebx, DWORD PTR _spl$[ebp+4]
; Line 911
	cmp	BYTE PTR _plr[esi+184], 3
	mov	DWORD PTR _plr[esi+21576], edi
	mov	DWORD PTR _plr[esi+21580], ebx
	mov	DWORD PTR _plr[esi+392], eax
	jne	SHORT $L85612
	mov	ecx, DWORD PTR _plr[esi+180]
	xor	eax, eax
	dec	ecx
	inc	eax
	xor	edx, edx
	call	__allshl
	and	eax, edi
	and	edx, ebx
	or	eax, edx
	jne	SHORT $L85612
; Line 912
	or	DWORD PTR _plr[esi+180], -1
; Line 913
	mov	BYTE PTR _plr[esi+184], 4
; Line 914
	mov	DWORD PTR _drawpanflag, 255		; 000000ffH
$L85612:
; Line 917
	mov	al, BYTE PTR _spllvladd$[ebp]
; Line 920
	test	BYTE PTR _iflgs$[ebp+3], -128		; ffffff80H
	mov	BYTE PTR _plr[esi+21592], al
	mov	eax, DWORD PTR _enac$[ebp]
	mov	DWORD PTR _plr[esi+21600], eax
	je	SHORT $L88485
; Line 922
	xor	eax, eax
; Line 923
	xor	ecx, ecx
; Line 924
	xor	ebx, ebx
	jmp	SHORT $L85613
$L88485:
	mov	ecx, DWORD PTR _fr$[ebp]
	mov	ebx, DWORD PTR _lr$[ebp]
	mov	eax, DWORD PTR _mr$[ebp]
$L85613:
; Line 927
	push	75					; 0000004bH
	pop	edx
	cmp	eax, edx
	jle	SHORT $L85614
; Line 928
	mov	eax, edx
$L85614:
; Line 932
	cmp	ecx, edx
	mov	BYTE PTR _plr[esi+457], al
	jle	SHORT $L85615
; Line 933
	mov	ecx, edx
$L85615:
; Line 937
	cmp	ebx, edx
	mov	BYTE PTR _plr[esi+458], cl
	jle	SHORT $L85616
; Line 938
	mov	ebx, edx
$L85616:
; Line 942
	mov	dl, BYTE PTR _plr[esi+352]
; Line 943
	mov	eax, DWORD PTR _vadd$[ebp]
	test	dl, dl
	mov	BYTE PTR _plr[esi+459], bl
	jne	SHORT $L85617
	add	eax, eax
$L85617:
; Line 945
	cmp	dl, 1
	jne	SHORT $L85618
; Line 946
	mov	ecx, eax
	sar	ecx, 1
	add	eax, ecx
$L85618:
; Line 948
	mov	ecx, DWORD PTR _ihp$[ebp]
	shl	eax, 6
	add	ecx, eax
; Line 951
	mov	eax, DWORD PTR _madd$[ebp]
	cmp	dl, 2
	jne	SHORT $L85619
	add	eax, eax
$L85619:
; Line 953
	cmp	dl, 1
	jne	SHORT $L85620
; Line 954
	mov	edx, eax
	sar	edx, 1
	add	eax, edx
$L85620:
; Line 959
	mov	edx, DWORD PTR _plr[esi+404]
	shl	eax, 6
	add	DWORD PTR _imana$[ebp], eax
	mov	eax, DWORD PTR _plr[esi+400]
	add	eax, ecx
	add	edx, ecx
; Line 961
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR _plr[esi+408], eax
	cmp	ecx, DWORD PTR _myplr
	mov	DWORD PTR _plr[esi+412], edx
	jne	SHORT $L85621
	test	eax, -64				; ffffffc0H
	jg	SHORT $L85621
; Line 962
	xor	edx, edx
	call	@SetPlayerHitPoints@8
$L85621:
; Line 965
	mov	eax, DWORD PTR _plr[esi+420]
; Line 974
	xor	edi, edi
	add	eax, DWORD PTR _imana$[ebp]
	mov	DWORD PTR _plr[esi+428], eax
	mov	eax, DWORD PTR _plr[esi+424]
	add	eax, DWORD PTR _imana$[ebp]
	test	BYTE PTR _iflgs$[ebp], 1
	mov	DWORD PTR _plr[esi+432], eax
	mov	eax, DWORD PTR _fmin$[ebp]
	mov	DWORD PTR _plr[esi+21604], eax
	mov	eax, DWORD PTR _fmax$[ebp]
	mov	DWORD PTR _plr[esi+21608], eax
	mov	eax, DWORD PTR _lmin$[ebp]
	mov	DWORD PTR _plr[esi+21612], eax
	mov	eax, DWORD PTR _lmax$[ebp]
	mov	DWORD PTR _plr[esi+21616], eax
	je	SHORT $L85622
	inc	edi
	mov	DWORD PTR _plr[esi+464], edi
; Line 975
	jmp	SHORT $L85623
$L85622:
; Line 976
	and	DWORD PTR _plr[esi+464], 0
	inc	edi
$L85623:
; Line 986
	mov	edx, DWORD PTR _plr[esi+2372]
	and	BYTE PTR _plr[esi+316], 0
	xor	ecx, ecx
	xor	eax, eax
	cmp	edx, -1
	mov	DWORD PTR _plr[esi+312], ecx
	je	SHORT $L85624
	cmp	BYTE PTR _plr[esi+2554], 1
	jne	SHORT $L85624
	cmp	DWORD PTR _plr[esi+2720], ecx
	je	SHORT $L85624
; Line 987
	mov	eax, edx
$L85624:
; Line 992
	mov	ebx, DWORD PTR _plr[esi+2740]
	cmp	ebx, -1
	je	SHORT $L85625
	cmp	BYTE PTR _plr[esi+2922], 1
	jne	SHORT $L85625
	cmp	DWORD PTR _plr[esi+3088], ecx
	je	SHORT $L85625
; Line 993
	mov	eax, ebx
$L85625:
; Line 996
	mov	ecx, eax
	dec	ecx
	je	SHORT $L85630
	dec	ecx
	je	SHORT $L85631
	dec	ecx
	je	SHORT $L85632
	dec	ecx
	je	SHORT $L85633
	sub	ecx, 6
	jne	SHORT $L85627
; Line 1011
	push	8
; Line 1012
	jmp	SHORT $L88495
$L85633:
; Line 1008
	push	6
; Line 1009
	jmp	SHORT $L88495
$L85632:
; Line 1004
	mov	DWORD PTR _plr[esi+312], edi
; Line 1005
	push	4
; Line 1006
	jmp	SHORT $L88495
$L85631:
; Line 1001
	push	5
; Line 1002
	jmp	SHORT $L88495
$L85630:
; Line 998
	push	2
$L88495:
	pop	eax
$L85627:
; Line 1015
	cmp	edx, 5
	jne	SHORT $L85635
	cmp	DWORD PTR _plr[esi+2720], 0
	je	SHORT $L85635
; Line 1016
	mov	BYTE PTR _plr[esi+316], 1
; Line 1017
	inc	eax
$L85635:
; Line 1019
	cmp	ebx, 5
	jne	SHORT $L85636
	cmp	DWORD PTR _plr[esi+3088], 0
	je	SHORT $L85636
; Line 1020
	mov	BYTE PTR _plr[esi+316], 1
; Line 1021
	inc	eax
$L85636:
; Line 1024
	mov	ecx, DWORD PTR _plr[esi+3108]
	xor	ebx, ebx
	cmp	ecx, 8
	jne	SHORT $L85637
	cmp	DWORD PTR _plr[esi+3456], ebx
	je	SHORT $L85637
; Line 1025
	add	eax, 16					; 00000010H
$L85637:
; Line 1027
	cmp	ecx, 9
	jne	SHORT $L85638
	cmp	DWORD PTR _plr[esi+3456], ebx
	je	SHORT $L85638
; Line 1028
	add	eax, 32					; 00000020H
$L85638:
; Line 1031
	cmp	DWORD PTR _plr[esi+120], eax
	je	SHORT $L85639
	cmp	DWORD PTR _Loadgfx$[ebp], ebx
	je	SHORT $L85639
; Line 1034
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, edi
	mov	DWORD PTR _plr[esi+120], eax
	mov	DWORD PTR _plr[esi+536], ebx
	call	@LoadPlrGFX@8
; Line 1035
	mov	ecx, DWORD PTR _p$[ebp]
	call	@SetPlrAnims@4
; Line 1040
	mov	eax, DWORD PTR _p$[ebp]
	imul	eax, 5430				; 00001536H
	add	eax, DWORD PTR _plr[esi+112]
	mov	eax, DWORD PTR _plr[eax*4+540]
; Line 1043
	mov	DWORD PTR _plr[esi+140], edi
	mov	DWORD PTR _plr[esi+124], eax
	mov	eax, DWORD PTR _plr[esi+572]
	mov	DWORD PTR _plr[esi+136], eax
; Line 1046
	mov	eax, DWORD PTR _plr[esi+576]
	mov	DWORD PTR _plr[esi+144], eax
; Line 1047
	add	eax, -64				; ffffffc0H
	sar	eax, 1
	mov	DWORD PTR _plr[esi+132], ebx
	mov	DWORD PTR _plr[esi+128], 3
	mov	DWORD PTR _plr[esi+148], eax
; Line 1048
	jmp	SHORT $L85640
$L85639:
; Line 1049
	mov	DWORD PTR _plr[esi+120], eax
$L85640:
; Line 1052
	mov	ecx, DWORD PTR _nummissiles
	xor	edx, edx
	cmp	ecx, ebx
	jle	SHORT $L85643
$L85641:
; Line 1053
	mov	eax, DWORD PTR _missileactive[edx*4]
; Line 1054
	imul	eax, 176				; 000000b0H
	cmp	DWORD PTR _missile[eax], 13		; 0000000dH
	jne	SHORT $L85642
	mov	ebx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR _missile[eax+116], ebx
	jne	SHORT $L85642
; Line 1055
	mov	ebx, DWORD PTR _plr[esi+408]
	mov	DWORD PTR _missile[eax+144], ebx
; Line 1056
	mov	ebx, DWORD PTR _plr[esi+400]
	mov	DWORD PTR _missile[eax+148], ebx
$L85642:
	inc	edx
	cmp	edx, ecx
	jl	SHORT $L85641
$L85643:
; Line 1060
	mov	DWORD PTR _drawmanaflag, edi
; Line 1061
	mov	DWORD PTR _drawhpflag, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 1062
	leave
	ret	0
@CalcPlrItemVals@8 ENDP
_TEXT	ENDS
PUBLIC	@CalcPlrScrolls@4
; Function compile flags: /Ogsy
;	COMDAT @CalcPlrScrolls@4
_TEXT	SEGMENT
@CalcPlrScrolls@4 PROC NEAR				; COMDAT
; _p$ = ecx
; Line 1065
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
; Line 1068
	imul	esi, 21720				; 000054d8H
	push	edi
; Line 1069
	mov	ebp, 368				; 00000170H
	mov	eax, DWORD PTR _plr[esi+18188]
	and	DWORD PTR _plr[esi+280], 0
	and	DWORD PTR _plr[esi+284], 0
	test	eax, eax
	jle	SHORT $L85652
	lea	edi, DWORD PTR _plr[esi+3688]
	mov	ebx, eax
$L85650:
; Line 1070
	cmp	DWORD PTR [edi-212], -1
	je	SHORT $L85651
	mov	eax, DWORD PTR [edi]
	cmp	eax, 21					; 00000015H
	je	SHORT $L85654
	cmp	eax, 22					; 00000016H
	jne	SHORT $L85651
$L85654:
; Line 1071
	cmp	DWORD PTR [edi+136], 0
	je	SHORT $L85651
; Line 1072
	mov	ecx, DWORD PTR [edi+4]
	xor	eax, eax
	dec	ecx
	inc	eax
	xor	edx, edx
	call	__allshl
	or	DWORD PTR _plr[esi+280], eax
	or	DWORD PTR _plr[esi+284], edx
$L85651:
	add	edi, ebp
	dec	ebx
	jne	SHORT $L85650
$L85652:
; Line 1076
	push	8
	lea	edi, DWORD PTR _plr[esi+18452]
	pop	ebx
$L85657:
; Line 1077
	cmp	DWORD PTR [edi-212], -1
	je	SHORT $L85658
	mov	eax, DWORD PTR [edi]
	cmp	eax, 21					; 00000015H
	je	SHORT $L85661
	cmp	eax, 22					; 00000016H
	jne	SHORT $L85658
$L85661:
; Line 1078
	cmp	DWORD PTR [edi+136], 0
	je	SHORT $L85658
; Line 1079
	mov	ecx, DWORD PTR [edi+4]
	xor	eax, eax
	dec	ecx
	inc	eax
	xor	edx, edx
	call	__allshl
	or	DWORD PTR _plr[esi+280], eax
	or	DWORD PTR _plr[esi+284], edx
$L85658:
	add	edi, ebp
	dec	ebx
	jne	SHORT $L85657
; Line 1082
	cmp	BYTE PTR _plr[esi+184], 2
	jne	SHORT $L85665
; Line 1083
	mov	ecx, DWORD PTR _plr[esi+180]
	xor	eax, eax
	dec	ecx
	inc	eax
	shl	eax, cl
	cdq
	and	eax, DWORD PTR _plr[esi+280]
	and	edx, DWORD PTR _plr[esi+284]
	or	eax, edx
	jne	SHORT $L85665
; Line 1084
	or	DWORD PTR _plr[esi+180], -1
; Line 1085
	mov	BYTE PTR _plr[esi+184], 4
; Line 1086
	mov	DWORD PTR _drawpanflag, 255		; 000000ffH
$L85665:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1089
	ret	0
@CalcPlrScrolls@4 ENDP
_TEXT	ENDS
PUBLIC	@CalcPlrStaff@4
; Function compile flags: /Ogsy
;	COMDAT @CalcPlrStaff@4
_TEXT	SEGMENT
@CalcPlrStaff@4 PROC NEAR				; COMDAT
; _pnum$ = ecx
; Line 1093
	push	esi
	mov	esi, ecx
; Line 1094
	imul	esi, 21720				; 000054d8H
	xor	eax, eax
; Line 1095
	cmp	DWORD PTR _plr[esi+2372], -1
	mov	DWORD PTR _plr[esi+21576], eax
	mov	DWORD PTR _plr[esi+21580], eax
	je	SHORT $L85669
	cmp	DWORD PTR _plr[esi+2720], eax
	je	SHORT $L85669
	cmp	DWORD PTR _plr[esi+2592], eax
	jle	SHORT $L85669
; Line 1096
	mov	ecx, DWORD PTR _plr[esi+2588]
	inc	eax
	dec	ecx
	xor	edx, edx
	call	__allshl
	mov	DWORD PTR _plr[esi+21576], eax
	mov	DWORD PTR _plr[esi+21580], edx
$L85669:
	pop	esi
; Line 1098
	ret	0
@CalcPlrStaff@4 ENDP
_TEXT	ENDS
PUBLIC	@CalcSelfItems@4
; Function compile flags: /Ogsy
;	COMDAT @CalcSelfItems@4
_TEXT	SEGMENT
_v9$ = -16
_v11$ = -8
_v12$ = -4
@CalcSelfItems@4 PROC NEAR				; COMDAT
; _pnum$ = ecx
; Line 1101
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 1115
	imul	ecx, 21720				; 000054d8H
	push	ebx
	push	esi
	push	edi
	add	ecx, OFFSET FLAT:_plr
	push	7
; Line 1116
	xor	esi, esi
; Line 1117
	xor	edi, edi
; Line 1118
	xor	edx, edx
; Line 1119
	lea	eax, DWORD PTR [ecx+1248]
	pop	ebx
$L85686:
; Line 1122
	cmp	DWORD PTR [eax-348], -1
	je	SHORT $L85690
; Line 1123
	cmp	DWORD PTR [eax-300], 0
; Line 1124
	mov	DWORD PTR [eax], 1
; Line 1125
	je	SHORT $L85690
; Line 1126
	add	esi, DWORD PTR [eax-100]
; Line 1127
	add	edi, DWORD PTR [eax-96]
; Line 1128
	add	edx, DWORD PTR [eax-92]
$L85690:
; Line 1131
	add	eax, 368				; 00000170H
; Line 1133
	dec	ebx
	jne	SHORT $L85686
; Line 1134
	mov	DWORD PTR _v11$[ebp], edx
	xor	edx, edx
$L85691:
; Line 1136
	mov	DWORD PTR _v9$[ebp], edx
; Line 1137
	lea	eax, DWORD PTR [ecx+1244]
	mov	DWORD PTR -12+[ebp], 7
$L85694:
; Line 1140
	cmp	DWORD PTR [eax-344], -1
	je	SHORT $L85707
	cmp	DWORD PTR [eax+4], edx
	je	SHORT $L85707
; Line 1142
	mov	edx, DWORD PTR [ecx+360]
	mov	DWORD PTR _v12$[ebp], 1
	movsx	ebx, BYTE PTR [eax]
	add	edx, esi
	cmp	edx, ebx
	jge	SHORT $L85700
; Line 1143
	and	DWORD PTR _v12$[ebp], 0
$L85700:
; Line 1144
	mov	edx, DWORD PTR [ecx+368]
	movzx	ebx, BYTE PTR [eax+1]
	add	edx, edi
	cmp	edx, ebx
	jge	SHORT $L85702
; Line 1145
	and	DWORD PTR _v12$[ebp], 0
$L85702:
; Line 1146
	mov	edx, DWORD PTR [ecx+376]
	movsx	ebx, BYTE PTR [eax+2]
	add	edx, DWORD PTR _v11$[ebp]
	cmp	edx, ebx
	jge	SHORT $L88515
; Line 1147
	xor	edx, edx
	mov	DWORD PTR _v12$[ebp], edx
	jmp	SHORT $L85703
$L88515:
	xor	edx, edx
$L85703:
; Line 1148
	cmp	DWORD PTR _v12$[ebp], edx
	jne	SHORT $L85707
; Line 1149
	cmp	DWORD PTR [eax-296], edx
; Line 1150
	mov	DWORD PTR _v9$[ebp], 1
; Line 1151
	mov	DWORD PTR [eax+4], edx
; Line 1152
	je	SHORT $L85707
; Line 1155
	mov	ebx, DWORD PTR [eax-88]
	sub	esi, DWORD PTR [eax-96]
	sub	edi, DWORD PTR [eax-92]
	sub	DWORD PTR _v11$[ebp], ebx
$L85707:
; Line 1159
	add	eax, 368				; 00000170H
; Line 1161
	dec	DWORD PTR -12+[ebp]
	jne	$L85694
; Line 1162
	cmp	DWORD PTR _v9$[ebp], edx
	jne	$L85691
	pop	edi
	pop	esi
	pop	ebx
; Line 1163
	leave
	ret	0
@CalcSelfItems@4 ENDP
_TEXT	ENDS
PUBLIC	@CalcPlrItemMin@4
PUBLIC	@ItemMinStats@8
; Function compile flags: /Ogsy
;	COMDAT @CalcPlrItemMin@4
_TEXT	SEGMENT
_v4$ = -4
@CalcPlrItemMin@4 PROC NEAR				; COMDAT
; _pnum$ = ecx
; Line 1166
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1174
	imul	ecx, 21720				; 000054d8H
	push	ebx
	add	ecx, OFFSET FLAT:_plr
	push	esi
	mov	esi, ecx
	push	edi
; Line 1177
	mov	ebx, 368				; 00000170H
	mov	eax, DWORD PTR [esi+18188]
	lea	edi, DWORD PTR [esi+3468]
	test	eax, eax
	je	SHORT $L85723
; Line 1178
	mov	DWORD PTR _v4$[ebp], eax
$L85721:
; Line 1180
	mov	edx, edi
	mov	ecx, esi
	call	@ItemMinStats@8
	movzx	eax, al
	mov	DWORD PTR [edi+356], eax
; Line 1181
	add	edi, ebx
; Line 1182
	dec	DWORD PTR _v4$[ebp]
; Line 1183
	jne	SHORT $L85721
$L85723:
; Line 1185
	lea	edi, DWORD PTR [esi+18232]
	mov	DWORD PTR -4+[ebp], 8
$L85724:
; Line 1188
	cmp	DWORD PTR [edi+8], -1
	je	SHORT $L85727
; Line 1189
	mov	edx, edi
	mov	ecx, esi
	call	@ItemMinStats@8
	movzx	eax, al
	mov	DWORD PTR [edi+356], eax
$L85727:
; Line 1191
	add	edi, ebx
; Line 1193
	dec	DWORD PTR -4+[ebp]
	jne	SHORT $L85724
	pop	edi
	pop	esi
	pop	ebx
; Line 1194
	leave
	ret	0
@CalcPlrItemMin@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @ItemMinStats@8
_TEXT	SEGMENT
@ItemMinStats@8 PROC NEAR				; COMDAT
; _p$ = ecx
; _x$ = edx
; Line 1198
	movsx	eax, BYTE PTR [edx+352]
	cmp	DWORD PTR [ecx+356], eax
	jl	SHORT $L85734
	movzx	eax, BYTE PTR [edx+353]
	cmp	DWORD PTR [ecx+364], eax
	jl	SHORT $L85734
	movsx	eax, BYTE PTR [edx+354]
	cmp	DWORD PTR [ecx+372], eax
	jl	SHORT $L85734
; Line 1201
	mov	al, 1
; Line 1202
	ret	0
$L85734:
; Line 1199
	xor	al, al
; Line 1202
	ret	0
@ItemMinStats@8 ENDP
_TEXT	ENDS
PUBLIC	@CalcPlrBookVals@4
PUBLIC	@StoreStatOk@4
PUBLIC	@WitchBookLevel@4
EXTRN	_spelldata:BYTE
EXTRN	_witchitem:BYTE
; Function compile flags: /Ogsy
;	COMDAT @CalcPlrBookVals@4
_TEXT	SEGMENT
_v9$ = -9
_v12$ = -8
_v13$ = -4
@CalcPlrBookVals@4 PROC NEAR				; COMDAT
; _p$ = ecx
; Line 1205
	sub	esp, 12					; 0000000cH
; Line 1220
	cmp	BYTE PTR _currlevel, 0
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	jne	SHORT $L85755
; Line 1221
	xor	ebx, ebx
	inc	ebx
; Line 1222
	cmp	DWORD PTR _witchitem+376, -1
	je	SHORT $L85755
; Line 1223
	mov	esi, OFFSET FLAT:_witchitem+376
$L85753:
; Line 1225
	mov	ecx, ebx
	call	@WitchBookLevel@4
; Line 1226
	lea	ecx, DWORD PTR [esi-8]
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR [esi+348], eax
; Line 1227
	add	esi, 368				; 00000170H
; Line 1228
	inc	ebx
; Line 1229
	cmp	DWORD PTR [esi], -1
	jne	SHORT $L85753
$L85755:
; Line 1234
	imul	edi, 21720				; 000054d8H
	and	DWORD PTR _v12$[esp+24], 0
	cmp	DWORD PTR _plr[edi+18188], 0
	jle	$L85760
	push	ebp
; Line 1235
	lea	ebp, DWORD PTR _plr[edi+3692]
$L85758:
; Line 1237
	cmp	DWORD PTR [ebp-216], 0
	jne	$L85761
	cmp	DWORD PTR [ebp-4], 24			; 00000018H
	jne	$L85761
; Line 1238
	mov	eax, DWORD PTR [ebp]
; Line 1239
	mov	ecx, eax
	imul	ecx, 56					; 00000038H
	mov	cl, BYTE PTR _spelldata[ecx+28]
; Line 1240
	mov	BYTE PTR [ebp+129], cl
; Line 1241
	mov	al, BYTE PTR _plr[edi+eax+193]
; Line 1242
	test	al, al
	movsx	esi, al
	je	SHORT $L85763
$L85764:
; Line 1244
	movzx	eax, cl
	push	100					; 00000064H
	lea	eax, DWORD PTR [eax+eax*4]
	pop	ebx
	shl	eax, 2
	cdq
	idiv	ebx
	add	al, cl
; Line 1245
	dec	esi
	mov	DWORD PTR _v13$[esp+28], esi
	mov	BYTE PTR _v9$[esp+28], al
; Line 1260
	movzx	esi, al
	or	cl, 255					; 000000ffH
	lea	eax, DWORD PTR [esi+esi*4]
	shl	eax, 2
	cdq
	idiv	ebx
	add	eax, esi
	cmp	eax, 255				; 000000ffH
	jg	SHORT $L85767
	mov	cl, BYTE PTR _v9$[esp+28]
	mov	esi, DWORD PTR _v13$[esp+28]
	jmp	SHORT $L85765
$L85767:
; Line 1252
	xor	esi, esi
$L85765:
; Line 1253
	test	esi, esi
	jne	SHORT $L85764
; Line 1254
	mov	BYTE PTR [ebp+129], cl
$L85763:
; Line 1260
	lea	edx, DWORD PTR [ebp-224]
	lea	ecx, DWORD PTR _plr[edi]
	call	@ItemMinStats@8
	movzx	eax, al
	mov	DWORD PTR [ebp+132], eax
$L85761:
	inc	DWORD PTR _v12$[esp+28]
	add	ebp, 368				; 00000170H
	mov	eax, DWORD PTR _v12$[esp+28]
	cmp	eax, DWORD PTR _plr[edi+18188]
	jl	$L85758
	pop	ebp
$L85760:
	pop	edi
	pop	esi
	pop	ebx
; Line 1262
	add	esp, 12					; 0000000cH
	ret	0
@CalcPlrBookVals@4 ENDP
_TEXT	ENDS
PUBLIC	_RecalcStoreStats
PUBLIC	@CalcPlrInv@8
; Function compile flags: /Ogsy
;	COMDAT @CalcPlrInv@8
_TEXT	SEGMENT
@CalcPlrInv@8 PROC NEAR					; COMDAT
; _p$ = ecx
; _Loadgfx$ = edx
; Line 1265
	push	esi
	push	edi
	mov	edi, edx
	mov	esi, ecx
; Line 1266
	call	@CalcPlrItemMin@4
; Line 1267
	mov	ecx, esi
	call	@CalcSelfItems@4
; Line 1268
	mov	edx, edi
	mov	ecx, esi
	call	@CalcPlrItemVals@8
; Line 1269
	mov	ecx, esi
	call	@CalcPlrItemMin@4
; Line 1270
	cmp	esi, DWORD PTR _myplr
	jne	SHORT $L85777
; Line 1271
	mov	ecx, esi
	call	@CalcPlrBookVals@4
; Line 1272
	mov	ecx, esi
	call	@CalcPlrScrolls@4
; Line 1273
	mov	ecx, esi
	call	@CalcPlrStaff@4
; Line 1274
	cmp	esi, DWORD PTR _myplr
	jne	SHORT $L85777
	cmp	BYTE PTR _currlevel, 0
	jne	SHORT $L85777
	pop	edi
	pop	esi
; Line 1275
	jmp	_RecalcStoreStats
$L85777:
	pop	edi
	pop	esi
; Line 1277
	ret	0
@CalcPlrInv@8 ENDP
_TEXT	ENDS
PUBLIC	@SetPlrHandItem@8
EXTRN	_strcpy:NEAR
; Function compile flags: /Ogsy
;	COMDAT @SetPlrHandItem@8
_TEXT	SEGMENT
@SetPlrHandItem@8 PROC NEAR				; COMDAT
; _h$ = ecx
; _idata$ = edx
; Line 1280
	push	ebx
	push	esi
	mov	ebx, edx
	push	edi
; Line 1283
	mov	edi, ebx
	mov	esi, ecx
	imul	edi, 76					; 0000004cH
; Line 1286
	push	368					; 00000170H
	push	0
	push	esi
	add	edi, OFFSET FLAT:_AllItemsList
	call	_memset
; Line 1288
	movsx	eax, BYTE PTR [edi+12]
	mov	DWORD PTR [esi+8], eax
; Line 1289
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+192], eax
; Line 1290
	push	DWORD PTR [edi+16]
	lea	eax, DWORD PTR [esi+61]
	push	eax
	call	_strcpy
; Line 1291
	push	DWORD PTR [edi+16]
	lea	eax, DWORD PTR [esi+125]
	push	eax
	call	_strcpy
; Line 1292
	mov	al, BYTE PTR [edi+5]
	add	esp, 28					; 0000001cH
	mov	BYTE PTR [esi+189], al
; Line 1293
	mov	al, BYTE PTR [edi+4]
	mov	BYTE PTR [esi+190], al
; Line 1294
	mov	eax, DWORD PTR [edi+32]
	mov	DWORD PTR [esi+204], eax
; Line 1295
	mov	eax, DWORD PTR [edi+36]
	mov	DWORD PTR [esi+208], eax
; Line 1296
	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [esi+212], eax
; Line 1297
	mov	eax, DWORD PTR [edi+56]
	mov	DWORD PTR [esi+220], eax
; Line 1298
	mov	eax, DWORD PTR [edi+60]
	mov	DWORD PTR [esi+224], eax
; Line 1300
	cmp	DWORD PTR [edi+56], 23			; 00000017H
	jne	SHORT $L85784
; Line 1301
	mov	DWORD PTR [esi+228], 40			; 00000028H
$L85784:
; Line 1304
	mov	eax, DWORD PTR [esi+228]
	mov	DWORD PTR [esi+232], eax
; Line 1305
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+236], eax
; Line 1306
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+240], eax
; Line 1307
	mov	al, BYTE PTR [edi+48]
	mov	BYTE PTR [esi+352], al
; Line 1308
	mov	al, BYTE PTR [edi+49]
	mov	BYTE PTR [esi+353], al
; Line 1309
	mov	al, BYTE PTR [edi+50]
	mov	BYTE PTR [esi+354], al
; Line 1310
	mov	eax, DWORD PTR [edi+68]
	mov	DWORD PTR [esi+196], eax
; Line 1311
	mov	eax, DWORD PTR [edi+68]
; Line 1312
	or	BYTE PTR [esi+332], -1
; Line 1313
	or	BYTE PTR [esi+333], -1
; Line 1314
	and	BYTE PTR [esi+60], 0
	mov	DWORD PTR [esi+200], eax
; Line 1315
	mov	DWORD PTR [esi+360], ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 1316
	ret	0
@SetPlrHandItem@8 ENDP
_TEXT	ENDS
PUBLIC	@GetPlrHandSeed@4
; Function compile flags: /Ogsy
;	COMDAT @GetPlrHandSeed@4
_TEXT	SEGMENT
@GetPlrHandSeed@4 PROC NEAR				; COMDAT
; _h$ = ecx
; Line 1319
	push	esi
	mov	esi, ecx
; Line 1320
	call	_GetRndSeed
	mov	DWORD PTR [esi], eax
	pop	esi
; Line 1321
	ret	0
@GetPlrHandSeed@4 ENDP
_TEXT	ENDS
PUBLIC	@GetGoldSeed@8
; Function compile flags: /Ogsy
;	COMDAT @GetGoldSeed@8
_TEXT	SEGMENT
@GetGoldSeed@8 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _h$ = edx
; Line 1324
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebx, edx
	mov	edi, ecx
$L85799:
; Line 1334
	xor	esi, esi
	inc	esi
; Line 1335
	call	_GetRndSeed
; Line 1336
	mov	edx, DWORD PTR _numitems
	xor	ecx, ecx
	test	edx, edx
	jle	SHORT $L85804
$L85802:
; Line 1337
	mov	ebp, DWORD PTR _itemactive[ecx*4]
	imul	ebp, 368				; 00000170H
	cmp	DWORD PTR _item[ebp], eax
	jne	SHORT $L85803
; Line 1338
	xor	esi, esi
$L85803:
; Line 1336
	inc	ecx
	cmp	ecx, edx
	jl	SHORT $L85802
$L85804:
; Line 1340
	cmp	edi, DWORD PTR _myplr
	jne	SHORT $L85810
; Line 1341
	mov	ecx, edi
	imul	ecx, 21720				; 000054d8H
	mov	edx, DWORD PTR _plr[ecx+18188]
; Line 1342
	test	edx, edx
	jle	SHORT $L85810
; Line 1343
	lea	ecx, DWORD PTR _plr[ecx+3468]
$L85808:
; Line 1345
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $L85811
; Line 1346
	xor	esi, esi
$L85811:
; Line 1347
	add	ecx, 368				; 00000170H
; Line 1348
	dec	edx
; Line 1349
	jne	SHORT $L85808
$L85810:
; Line 1352
	test	esi, esi
	je	SHORT $L85799
	pop	edi
	pop	esi
; Line 1353
	mov	DWORD PTR [ebx], eax
	pop	ebp
	pop	ebx
; Line 1354
	ret	0
@GetGoldSeed@8 ENDP
_TEXT	ENDS
PUBLIC	@SetPlrHandSeed@8
; Function compile flags: /Ogsy
;	COMDAT @SetPlrHandSeed@8
_TEXT	SEGMENT
@SetPlrHandSeed@8 PROC NEAR				; COMDAT
; _h$ = ecx
; _iseed$ = edx
; Line 1358
	mov	DWORD PTR [ecx], edx
; Line 1359
	ret	0
@SetPlrHandSeed@8 ENDP
_TEXT	ENDS
PUBLIC	@SetPlrHandGoldCurs@4
; Function compile flags: /Ogsy
;	COMDAT @SetPlrHandGoldCurs@4
_TEXT	SEGMENT
@SetPlrHandGoldCurs@4 PROC NEAR				; COMDAT
; _h$ = ecx
; Line 1365
	mov	eax, DWORD PTR [ecx+196]
; Line 1366
	cmp	eax, 2500				; 000009c4H
	jge	SHORT $L85821
; Line 1367
	cmp	eax, 1000				; 000003e8H
	jle	SHORT $L85822
; Line 1368
	mov	DWORD PTR [ecx+192], 5
; Line 1374
	ret	0
$L85822:
; Line 1370
	mov	DWORD PTR [ecx+192], 4
; Line 1374
	ret	0
$L85821:
; Line 1372
	mov	DWORD PTR [ecx+192], 6
; Line 1374
	ret	0
@SetPlrHandGoldCurs@4 ENDP
_TEXT	ENDS
PUBLIC	@CreatePlrItems@4
EXTRN	@AutoPlace@20:NEAR
; Function compile flags: /Ogsy
;	COMDAT @CreatePlrItems@4
_TEXT	SEGMENT
_p$ = -4
@CreatePlrItems@4 PROC NEAR				; COMDAT
; _p$ = ecx
; Line 1377
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	mov	DWORD PTR _p$[ebp], ebx
; Line 1379
	imul	ebx, 21720				; 000054d8H
	push	esi
	push	edi
	push	7
	lea	eax, DWORD PTR _plr[ebx+900]
	pop	ecx
	mov	edi, 368				; 00000170H
$L85830:
; Line 1382
	or	DWORD PTR [eax], -1
	add	eax, edi
	dec	ecx
	jne	SHORT $L85830
; Line 1387
	push	40					; 00000028H
	lea	eax, DWORD PTR _plr[ebx+18192]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR _plr[ebx+3476]
	push	40					; 00000028H
	pop	ecx
$L85833:
; Line 1391
	or	DWORD PTR [eax], -1
	add	eax, edi
	dec	ecx
	jne	SHORT $L85833
; Line 1394
	and	DWORD PTR _plr[ebx+18188], 0
; Line 1396
	lea	esi, DWORD PTR _plr[ebx+18232]
	push	8
	lea	eax, DWORD PTR [esi+8]
	pop	ecx
$L85836:
; Line 1398
	or	DWORD PTR [eax], -1
	add	eax, edi
	dec	ecx
	jne	SHORT $L85836
; Line 1401
	movsx	eax, BYTE PTR _plr[ebx+352]
	sub	eax, 0
	je	SHORT $L85843
	dec	eax
	je	SHORT $L85844
	dec	eax
	jne	$L85840
; Line 1432
	lea	edi, DWORD PTR _plr[ebx+2364]
	push	5
	pop	edx
	mov	ecx, edi
	call	@SetPlrHandItem@8
; Line 1433
	mov	ecx, edi
	call	@GetPlrHandSeed@4
; Line 1435
	mov	ecx, esi
	push	25					; 00000019H
	pop	edx
	call	@SetPlrHandItem@8
; Line 1436
	mov	ecx, esi
	call	@GetPlrHandSeed@4
; Line 1438
	push	25					; 00000019H
; Line 1440
	jmp	$L88567
$L85844:
; Line 1422
	lea	edi, DWORD PTR _plr[ebx+2364]
	push	4
	pop	edx
	mov	ecx, edi
	call	@SetPlrHandItem@8
; Line 1423
	mov	ecx, edi
	call	@GetPlrHandSeed@4
; Line 1430
	jmp	SHORT $L88568
$L85843:
; Line 1403
	lea	edi, DWORD PTR _plr[ebx+2364]
	xor	edx, edx
	inc	edx
	mov	ecx, edi
	call	@SetPlrHandItem@8
; Line 1404
	mov	ecx, edi
	call	@GetPlrHandSeed@4
; Line 1406
	lea	edi, DWORD PTR _plr[ebx+2732]
	push	2
	mov	ecx, edi
	pop	edx
	call	@SetPlrHandItem@8
; Line 1407
	mov	ecx, edi
	call	@GetPlrHandSeed@4
; Line 1411
	lea	edi, DWORD PTR _plr[ebx+21176]
	push	3
	mov	ecx, edi
	pop	edx
	call	@SetPlrHandItem@8
; Line 1412
	mov	ecx, edi
	call	@GetPlrHandSeed@4
; Line 1413
	mov	ecx, DWORD PTR _p$[ebp]
	xor	edx, edx
	push	1
	push	3
	push	1
	call	@AutoPlace@20
$L88568:
; Line 1415
	push	24					; 00000018H
	mov	ecx, esi
	pop	edx
	call	@SetPlrHandItem@8
; Line 1416
	mov	ecx, esi
	call	@GetPlrHandSeed@4
; Line 1418
	push	24					; 00000018H
$L88567:
	lea	esi, DWORD PTR _plr[ebx+18600]
	pop	edx
	mov	ecx, esi
	call	@SetPlrHandItem@8
; Line 1419
	mov	ecx, esi
	call	@GetPlrHandSeed@4
$L85840:
; Line 1443
	lea	esi, DWORD PTR _plr[ebx+21176]
	xor	edx, edx
	mov	ecx, esi
	call	@SetPlrHandItem@8
; Line 1444
	mov	ecx, esi
	call	@GetPlrHandSeed@4
; Line 1448
	mov	DWORD PTR _plr[ebx+21368], 4
; Line 1455
	xor	edx, edx
	push	100					; 00000064H
	pop	eax
	mov	DWORD PTR _plr[ebx+21372], eax
	mov	DWORD PTR _plr[ebx+460], eax
	mov	eax, DWORD PTR _plr[ebx+18188]
	push	92					; 0000005cH
	imul	eax, 368				; 00000170H
	pop	ecx
	lea	edi, DWORD PTR _plr[eax+ebx+3468]
	rep movsd
	inc	DWORD PTR _plr[ebx+18188]
	mov	al, BYTE PTR _plr[ebx+18188]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	BYTE PTR _plr[ebx+18222], al
	call	@CalcPlrItemVals@8
	pop	edi
	pop	esi
	pop	ebx
; Line 1456
	leave
	ret	0
@CreatePlrItems@4 ENDP
_TEXT	ENDS
PUBLIC	@ItemSpaceOk@8
EXTRN	_object:BYTE
; Function compile flags: /Ogsy
;	COMDAT @ItemSpaceOk@8
_TEXT	SEGMENT
@ItemSpaceOk@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _j$ = edx
; Line 1459
	push	ebx
; Line 1469
	xor	ebx, ebx
	push	esi
	cmp	ecx, ebx
	push	edi
; Line 1470
	jl	$L85864
; Line 1471
	cmp	ecx, 112				; 00000070H
; Line 1472
	jge	$L85864
; Line 1473
	cmp	edx, ebx
; Line 1474
	jl	$L85864
; Line 1475
	cmp	edx, 112				; 00000070H
; Line 1476
	jge	$L85864
; Line 1478
	mov	eax, ecx
	imul	eax, 112				; 00000070H
	lea	ecx, DWORD PTR [eax+edx]
; Line 1479
	mov	esi, ecx
	shl	esi, 2
	cmp	DWORD PTR _dMonster[esi], ebx
	jne	SHORT $L85864
	cmp	BYTE PTR _dPlayer[eax+edx], bl
	jne	SHORT $L85864
	cmp	BYTE PTR _dItem[eax+edx], bl
	jne	SHORT $L85864
; Line 1481
	mov	cl, BYTE PTR _dObject[eax+edx]
; Line 1482
	cmp	cl, bl
	je	SHORT $L85866
; Line 1483
	jg	SHORT $L88571
	movsx	edi, cl
	or	ecx, -1
	sub	ecx, edi
	jmp	SHORT $L88572
$L88571:
	movsx	ecx, cl
	dec	ecx
$L88572:
; Line 1484
	imul	ecx, 120				; 00000078H
	cmp	DWORD PTR _object[ecx+56], ebx
; Line 1485
	jne	SHORT $L85864
$L85866:
; Line 1487
	mov	cl, BYTE PTR _dObject[eax+edx+113]
; Line 1488
	cmp	cl, bl
	setl	bl
; Line 1489
	test	cl, cl
	jle	SHORT $L85867
; Line 1490
	movsx	edi, cl
	imul	edi, 120				; 00000078H
	cmp	BYTE PTR _object[edi-56], 0
; Line 1491
	jne	SHORT $L85864
$L85867:
; Line 1494
	test	bl, bl
	je	SHORT $L88573
	movsx	ecx, cl
	inc	ecx
	mov	edi, OFFSET FLAT:_object+64
	imul	ecx, 120				; 00000078H
	sub	edi, ecx
	xor	bl, bl
	cmp	BYTE PTR [edi], bl
	je	SHORT $L85870
$L85864:
; Line 1480
	xor	eax, eax
$L85850:
	pop	edi
	pop	esi
	pop	ebx
; Line 1503
	ret	0
$L88573:
; Line 1494
	xor	bl, bl
$L85870:
; Line 1495
	mov	cl, BYTE PTR _dObject[eax+edx+112]
; Line 1496
	cmp	cl, bl
; Line 1497
	jle	SHORT $L85873
; Line 1498
	mov	al, BYTE PTR _dObject[eax+edx+1]
; Line 1499
	cmp	al, bl
	jle	SHORT $L85873
	movsx	ecx, cl
	imul	ecx, 120				; 00000078H
	cmp	BYTE PTR _object[ecx-56], bl
	je	SHORT $L85873
	movsx	eax, al
	imul	eax, 120				; 00000078H
	cmp	BYTE PTR _object[eax-56], bl
; Line 1502
	jne	SHORT $L85864
$L85873:
; Line 1500
	mov	eax, DWORD PTR _dPiece[esi]
	xor	ecx, ecx
	cmp	BYTE PTR _nSolidTable[eax], bl
	sete	cl
	mov	eax, ecx
	jmp	SHORT $L85850
@ItemSpaceOk@8 ENDP
_TEXT	ENDS
PUBLIC	@GetItemSpace@12
; Function compile flags: /Ogsy
;	COMDAT @GetItemSpace@12
_TEXT	SEGMENT
_x$ = -8
_y$ = -12
_inum$ = 8
@GetItemSpace@12 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 1506
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	eax, edx
	push	esi
	push	edi
	mov	DWORD PTR _y$[ebp], eax
; Line 1512
	lea	edx, DWORD PTR [eax-1]
	lea	esi, DWORD PTR [eax+1]
	cmp	edx, esi
	mov	DWORD PTR _x$[ebp], ecx
	mov	edi, OFFSET FLAT:_itemhold
	jg	SHORT $L85889
	mov	DWORD PTR -4+[ebp], edi
	push	ebx
$L85887:
; Line 1514
	lea	ebx, DWORD PTR [ecx-1]
	lea	esi, DWORD PTR [ecx+1]
	cmp	ebx, esi
	jg	SHORT $L85892
; Line 1513
	mov	esi, DWORD PTR -4+[ebp]
$L85890:
; Line 1515
	mov	ecx, ebx
	call	@ItemSpaceOk@8
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR _x$[ebp]
; Line 1516
	add	esi, 12					; 0000000cH
	inc	ebx
	inc	eax
	cmp	ebx, eax
	jle	SHORT $L85890
	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
$L85892:
; Line 1518
	add	DWORD PTR -4+[ebp], 4
	inc	edx
	lea	esi, DWORD PTR [eax+1]
	cmp	edx, esi
	jle	SHORT $L85887
	pop	ebx
$L85889:
; Line 1521
	xor	esi, esi
$L85893:
; Line 1523
	push	3
	mov	eax, edi
	pop	ecx
$L85896:
; Line 1524
	cmp	DWORD PTR [eax], 0
	je	SHORT $L85897
; Line 1525
	xor	esi, esi
	inc	esi
$L85897:
	add	eax, 12					; 0000000cH
	dec	ecx
	jne	SHORT $L85896
	add	edi, 4
	cmp	edi, OFFSET FLAT:_itemhold+12
	jl	SHORT $L85893
; Line 1529
	push	15					; 0000000fH
	mov	cl, 13					; 0000000dH
	pop	edx
	call	@random@8
	inc	eax
; Line 1531
	test	esi, esi
	jne	SHORT $L85900
; Line 1532
	xor	eax, eax
	jmp	SHORT $L85880
$L85900:
; Line 1534
	xor	ecx, ecx
; Line 1535
	xor	edx, edx
; Line 1536
	test	eax, eax
	jle	SHORT $L88586
$L85902:
; Line 1537
	lea	esi, DWORD PTR [edx+ecx*2]
	mov	edi, ecx
	add	edi, esi
	cmp	DWORD PTR _itemhold[edi*4], 0
	je	SHORT $L85904
; Line 1538
	dec	eax
$L85904:
; Line 1539
	test	eax, eax
	jle	SHORT $L88586
; Line 1540
	inc	ecx
; Line 1541
	cmp	ecx, 3
	jne	SHORT $L85902
; Line 1542
	xor	ecx, ecx
; Line 1543
	inc	edx
; Line 1544
	cmp	edx, 3
	jne	SHORT $L85902
; Line 1545
	xor	edx, edx
; Line 1536
	jmp	SHORT $L85902
$L88586:
; Line 1550
	mov	eax, DWORD PTR _x$[ebp]
	lea	eax, DWORD PTR [ecx+eax-1]
; Line 1551
	mov	ecx, DWORD PTR _y$[ebp]
	lea	esi, DWORD PTR [edx+ecx-1]
; Line 1552
	mov	dl, BYTE PTR _inum$[ebp]
	movsx	ecx, dl
	imul	ecx, 368				; 00000170H
; Line 1554
	inc	dl
	mov	DWORD PTR _item[ecx+12], eax
	imul	eax, 112				; 00000070H
	mov	BYTE PTR _dItem[eax+esi], dl
; Line 1556
	xor	eax, eax
	mov	DWORD PTR _item[ecx+16], esi
	inc	eax
$L85880:
	pop	edi
	pop	esi
; Line 1557
	leave
	ret	4
@GetItemSpace@12 ENDP
_TEXT	ENDS
PUBLIC	@GetSuperItemSpace@12
; Function compile flags: /Ogsy
;	COMDAT @GetSuperItemSpace@12
_TEXT	SEGMENT
_x$ = -8
_y$ = -16
_inum$ = 8
_v4$ = -12
_v13$ = -4
@GetSuperItemSpace@12 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 1560
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _y$[ebp], edx
; Line 1573
	push	DWORD PTR _inum$[ebp]
	mov	DWORD PTR _x$[ebp], ecx
	call	@GetItemSpace@12
	test	eax, eax
	jne	SHORT $L85927
; Line 1575
	push	-2					; fffffffeH
	mov	DWORD PTR _v13$[ebp], 2
	pop	ebx
	mov	DWORD PTR _v4$[ebp], ebx
$L85925:
; Line 1578
	cmp	ebx, DWORD PTR _v13$[ebp]
	jg	SHORT $L85936
; Line 1601
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, ebx
	mov	DWORD PTR -20+[ebp], eax
$L85930:
	mov	esi, DWORD PTR -20+[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	edi, esi
	sub	edi, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [ebx+eax]
$L85932:
	mov	ecx, esi
	call	@ItemSpaceOk@8
	test	eax, eax
	jne	SHORT $L88593
	inc	esi
	inc	edi
	cmp	edi, DWORD PTR _v13$[ebp]
	jle	SHORT $L85932
	inc	ebx
	cmp	ebx, DWORD PTR _v13$[ebp]
	jle	SHORT $L85930
$L85936:
; Line 1600
	mov	ebx, DWORD PTR _v4$[ebp]
	inc	DWORD PTR _v13$[ebp]
	dec	ebx
; Line 1601
	cmp	ebx, -50				; ffffffceH
	mov	DWORD PTR _v4$[ebp], ebx
	jg	SHORT $L85925
	jmp	SHORT $L85927
$L88593:
; Line 1585
	mov	cl, BYTE PTR _inum$[ebp]
	movsx	eax, cl
; Line 1586
	imul	eax, 368				; 00000170H
; Line 1588
	inc	cl
	mov	DWORD PTR _item[eax+12], esi
	imul	esi, 112				; 00000070H
	mov	DWORD PTR _item[eax+16], edx
	mov	BYTE PTR _dItem[esi+edx], cl
$L85927:
	pop	edi
	pop	esi
	pop	ebx
; Line 1603
	leave
	ret	4
@GetSuperItemSpace@12 ENDP
_TEXT	ENDS
PUBLIC	@GetSuperItemLoc@16
; Function compile flags: /Ogsy
;	COMDAT @GetSuperItemLoc@16
_TEXT	SEGMENT
_x$ = -8
_y$ = -16
_xx$ = 8
_yy$ = 12
_v4$ = -12
_v11$ = -4
@GetSuperItemLoc@16 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 1606
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
; Line 1618
	or	ebx, -1
	push	esi
	push	edi
	mov	DWORD PTR _y$[ebp], edx
	mov	DWORD PTR _x$[ebp], ecx
	mov	DWORD PTR _v11$[ebp], 1
	mov	DWORD PTR _v4$[ebp], ebx
$L85954:
; Line 1621
	cmp	ebx, DWORD PTR _v11$[ebp]
	jg	SHORT $LABEL_7$85957
; Line 1625
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, ebx
	mov	DWORD PTR -20+[ebp], eax
$LABEL_3$85959:
; Line 1630
	mov	eax, DWORD PTR _y$[ebp]
; Line 1631
	mov	edi, DWORD PTR -20+[ebp]
	mov	ecx, DWORD PTR _yy$[ebp]
	add	eax, ebx
	mov	esi, edi
	sub	esi, DWORD PTR _x$[ebp]
	mov	DWORD PTR [ecx], eax
$L85961:
; Line 1633
	mov	eax, DWORD PTR _xx$[ebp]
; Line 1634
	mov	ecx, edi
	mov	DWORD PTR [eax], edi
	mov	eax, DWORD PTR _yy$[ebp]
	mov	edx, DWORD PTR [eax]
	call	@ItemSpaceOk@8
	test	eax, eax
	jne	SHORT $L88601
; Line 1637
	inc	edi
	inc	esi
; Line 1638
	cmp	esi, DWORD PTR _v11$[ebp]
	jle	SHORT $L85961
; Line 1639
	inc	ebx
	cmp	ebx, DWORD PTR _v11$[ebp]
	jle	SHORT $LABEL_3$85959
$LABEL_7$85957:
; Line 1625
	mov	ebx, DWORD PTR _v4$[ebp]
	inc	DWORD PTR _v11$[ebp]
	dec	ebx
	cmp	ebx, -50				; ffffffceH
	mov	DWORD PTR _v4$[ebp], ebx
	jg	SHORT $L85954
$L88601:
	pop	edi
	pop	esi
	pop	ebx
; Line 1644
	leave
	ret	8
@GetSuperItemLoc@16 ENDP
_TEXT	ENDS
PUBLIC	@CalcItemValue@4
; Function compile flags: /Ogsy
;	COMDAT @CalcItemValue@4
_TEXT	SEGMENT
@CalcItemValue@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 1654
	imul	ecx, 368				; 00000170H
	push	esi
	mov	esi, DWORD PTR _item[ecx+348]
	add	esi, DWORD PTR _item[ecx+340]
; Line 1655
	sets	al
; Line 1656
	test	esi, esi
	jle	SHORT $L85973
; Line 1657
	mov	eax, DWORD PTR _item[ecx+196]
	imul	esi, eax
; Line 1658
	test	esi, esi
	setl	al
$L85973:
; Line 1660
	test	al, al
	je	SHORT $L85974
; Line 1661
	mov	eax, DWORD PTR _item[ecx+196]
	cdq
	idiv	esi
	mov	esi, eax
$L85974:
; Line 1662
	mov	eax, DWORD PTR _item[ecx+344]
	add	eax, DWORD PTR _item[ecx+336]
	add	eax, esi
	pop	esi
; Line 1663
	test	eax, eax
	jg	SHORT $L85975
; Line 1664
	xor	eax, eax
	inc	eax
$L85975:
; Line 1665
	mov	DWORD PTR _item[ecx+200], eax
; Line 1666
	ret	0
@CalcItemValue@4 ENDP
_TEXT	ENDS
PUBLIC	@GetBookSpell@8
EXTRN	_gbMaxPlayers:BYTE
EXTRN	_strcat:NEAR
; Function compile flags: /Ogsy
;	COMDAT @GetBookSpell@8
_TEXT	SEGMENT
_v11$ = -4
@GetBookSpell@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _lvl$ = edx
; Line 1669
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 1683
	test	edx, edx
	mov	esi, ecx
	mov	edi, edx
	jne	SHORT $L85991
; Line 1684
	inc	edi
$L85991:
; Line 1685
	push	37					; 00000025H
	mov	cl, 14					; 0000000eH
	pop	edx
	call	@random@8
	inc	eax
$LABEL_13$85992:
; Line 1687
	xor	ecx, ecx
	inc	ecx
$L85994:
; Line 1688
	test	eax, eax
	jle	SHORT $L85995
; Line 1689
	mov	edx, ecx
	imul	edx, 56					; 00000038H
	mov	edx, DWORD PTR _spelldata[edx+12]
; Line 1690
	cmp	edx, -1
	je	SHORT $L85996
	cmp	edi, edx
	jl	SHORT $L85996
; Line 1691
	dec	eax
; Line 1692
	mov	DWORD PTR _v11$[ebp], ecx
$L85996:
; Line 1694
	inc	ecx
; Line 1695
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L85999
; Line 1696
	cmp	ecx, 32					; 00000020H
	jne	SHORT $L85998
; Line 1697
	push	33					; 00000021H
	pop	ecx
$L85998:
; Line 1698
	cmp	ecx, 34					; 00000022H
	jne	SHORT $L85999
; Line 1699
	push	35					; 00000023H
	pop	ecx
$L85999:
; Line 1701
	cmp	ecx, 37					; 00000025H
	jne	SHORT $L85994
; Line 1702
	jmp	SHORT $LABEL_13$85992
$L85995:
; Line 1705
	mov	edi, DWORD PTR _v11$[ebp]
; Line 1706
	imul	esi, 368				; 00000170H
	imul	edi, 56					; 00000038H
	push	ebx
	lea	eax, DWORD PTR _item[esi+61]
	lea	ebx, DWORD PTR _spelldata[edi+4]
	push	DWORD PTR [ebx]
	push	eax
	call	_strcat
; Line 1707
	push	DWORD PTR [ebx]
	lea	eax, DWORD PTR _item[esi+125]
	push	eax
	call	_strcat
; Line 1708
	mov	eax, DWORD PTR _v11$[ebp]
	add	esp, 16					; 00000010H
	mov	DWORD PTR _item[esi+224], eax
; Line 1709
	mov	al, BYTE PTR _spelldata[edi+28]
	mov	BYTE PTR _item[esi+353], al
; Line 1710
	mov	eax, DWORD PTR _spelldata[edi+48]
; Line 1711
	add	DWORD PTR _item[esi+196], eax
; Line 1712
	add	DWORD PTR _item[esi+200], eax
; Line 1713
	mov	al, BYTE PTR _spelldata[edi+2]
	pop	ebx
; Line 1714
	test	al, al
	jne	SHORT $L86002
; Line 1715
	mov	DWORD PTR _item[esi+192], 87		; 00000057H
$L86002:
; Line 1716
	cmp	al, 1
	jne	SHORT $L86003
; Line 1717
	mov	DWORD PTR _item[esi+192], 88		; 00000058H
$L86003:
; Line 1718
	cmp	al, 2
	jne	SHORT $L86004
; Line 1719
	mov	DWORD PTR _item[esi+192], 86		; 00000056H
$L86004:
	pop	edi
	pop	esi
; Line 1720
	leave
	ret	0
@GetBookSpell@8 ENDP
_TEXT	ENDS
PUBLIC	@GetStaffPower@16
PUBLIC	??_C@_05JKGE@?$CFs?5?$CFs?$AA@			; `string'
PUBLIC	??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@		; `string'
PUBLIC	@SaveItemPower@28
EXTRN	@control_WriteStringToBuffer@4:NEAR
;	COMDAT ??_C@_05JKGE@?$CFs?5?$CFs?$AA@
_DATA	SEGMENT
??_C@_05JKGE@?$CFs?5?$CFs?$AA@ DB '%s %s', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@
_DATA	SEGMENT
??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@ DB '%s of %s', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @GetStaffPower@16
_TEXT	SEGMENT
_i$ = -4
_lvl$ = -8
_bs$ = 8
_onlygood$ = 12
_l$ = -1160
_istr$ = -136
@GetStaffPower@16 PROC NEAR				; COMDAT
; _i$ = ecx
; _lvl$ = edx
; Line 1724
	push	ebp
	mov	ebp, esp
	sub	esp, 1160				; 00000488H
	push	ebx
	push	esi
	push	edi
; Line 1742
	push	10					; 0000000aH
	mov	DWORD PTR _lvl$[ebp], edx
	mov	DWORD PTR _i$[ebp], ecx
	pop	edx
	mov	cl, 15					; 0000000fH
	or	ebx, -1
	call	@random@8
	test	eax, eax
	je	SHORT $L86028
	cmp	BYTE PTR _onlygood$[ebp], 0
	je	$L86036
$L86028:
; Line 1743
	xor	esi, esi
; Line 1744
	xor	edi, edi
	mov	eax, OFFSET FLAT:_PL_Prefix+16
$L86030:
; Line 1747
	test	BYTE PTR [eax+5], 1
	je	SHORT $L86035
	mov	ecx, DWORD PTR _lvl$[ebp]
	cmp	DWORD PTR [eax], ecx
	jg	SHORT $L86035
	cmp	BYTE PTR _onlygood$[ebp], 0
	je	SHORT $L86034
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $L86035
$L86034:
; Line 1748
	mov	DWORD PTR _l$[ebp+esi*4], edi
	inc	esi
; Line 1749
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $L86035
; Line 1750
	mov	DWORD PTR _l$[ebp+esi*4], edi
	inc	esi
$L86035:
; Line 1752
	add	eax, 48					; 00000030H
	inc	edi
; Line 1753
	cmp	BYTE PTR [eax-12], -1
	jne	SHORT $L86030
; Line 1754
	test	esi, esi
	je	$L86036
; Line 1755
	mov	edx, esi
	mov	cl, 16					; 00000010H
	call	@random@8
; Line 1758
	mov	edi, DWORD PTR _i$[ebp]
	mov	ebx, DWORD PTR _l$[ebp+eax*4]
	imul	edi, 368				; 00000170H
	lea	esi, DWORD PTR [ebx+ebx*2]
	lea	eax, DWORD PTR _item[edi+125]
	shl	esi, 4
	push	eax
	mov	DWORD PTR 12+[ebp], eax
	push	DWORD PTR _PL_Prefix[esi]
	lea	eax, DWORD PTR _istr$[ebp]
	push	OFFSET FLAT:??_C@_05JKGE@?$CFs?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 1759
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	DWORD PTR 12+[ebp]
	call	_strcpy
	add	esp, 24					; 00000018H
; Line 1770
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _PL_Prefix[esi+44]
	lea	eax, DWORD PTR _PL_Prefix[esi+4]
	mov	BYTE PTR _item[edi+60], 1
	mov	DWORD PTR 12+[ebp], eax
	push	DWORD PTR _PL_Prefix[esi+40]
	movsx	edx, BYTE PTR [eax]
	push	DWORD PTR _PL_Prefix[esi+36]
	push	DWORD PTR _PL_Prefix[esi+12]
	push	DWORD PTR _PL_Prefix[esi+8]
	call	@SaveItemPower@28
; Line 1771
	mov	eax, DWORD PTR 12+[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR _item[edi+332], al
$L86036:
; Line 1776
	mov	esi, DWORD PTR _i$[ebp]
	imul	esi, 368				; 00000170H
	lea	edi, DWORD PTR _item[esi+125]
; Line 1777
	mov	ecx, edi
	call	@control_WriteStringToBuffer@4
	test	eax, eax
	jne	$L86041
; Line 1778
	mov	eax, DWORD PTR _item[esi+360]
	imul	eax, 76					; 0000004cH
	push	DWORD PTR _AllItemsList[eax+20]
	push	edi
	call	_strcpy
	pop	ecx
; Line 1779
	cmp	ebx, -1
	pop	ecx
	je	SHORT $L86039
; Line 1780
	lea	eax, DWORD PTR [ebx+ebx*2]
	push	edi
	shl	eax, 4
	push	DWORD PTR _PL_Prefix[eax]
	lea	eax, DWORD PTR _istr$[ebp]
	push	OFFSET FLAT:??_C@_05JKGE@?$CFs?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 1781
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	edi
	call	_strcpy
	add	esp, 24					; 00000018H
$L86039:
; Line 1783
	mov	eax, DWORD PTR _bs$[ebp]
	imul	eax, 56					; 00000038H
	push	DWORD PTR _spelldata[eax+4]
	lea	eax, DWORD PTR _istr$[ebp]
	push	edi
	push	OFFSET FLAT:??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 1784
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	edi
	call	_strcpy
	add	esp, 24					; 00000018H
; Line 1785
	cmp	BYTE PTR _item[esi+60], 0
	jne	SHORT $L86041
; Line 1786
	lea	eax, DWORD PTR _item[esi+61]
	push	edi
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
$L86041:
; Line 1788
	mov	ecx, DWORD PTR _i$[ebp]
	call	@CalcItemValue@4
	pop	edi
	pop	esi
	pop	ebx
; Line 1789
	leave
	ret	8
@GetStaffPower@16 ENDP
_TEXT	ENDS
PUBLIC	@GetStaffSpell@12
PUBLIC	@GetItemPower@20
PUBLIC	??_C@_0M@ELHC@Staff?5of?5?$CFs?$AA@		; `string'
;	COMDAT ??_C@_0M@ELHC@Staff?5of?5?$CFs?$AA@
_DATA	SEGMENT
??_C@_0M@ELHC@Staff?5of?5?$CFs?$AA@ DB 'Staff of %s', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @GetStaffSpell@12
_TEXT	SEGMENT
_i$ = -8
_lvl$ = -12
_onlygood$ = 8
_istr$ = -76
_bs$ = -4
@GetStaffSpell@12 PROC NEAR				; COMDAT
; _i$ = ecx
; _lvl$ = edx
; Line 1793
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
; Line 1803
	push	4
	mov	esi, edx
	mov	DWORD PTR _i$[ebp], ecx
	pop	edx
	mov	cl, 17					; 00000011H
	mov	DWORD PTR _lvl$[ebp], esi
	call	@random@8
	test	eax, eax
	je	$L86057
; Line 1804
	sar	esi, 1
; Line 1805
	jne	SHORT $L86058
; Line 1806
	xor	esi, esi
	inc	esi
$L86058:
; Line 1807
	push	37					; 00000025H
	mov	cl, 18					; 00000012H
	pop	edx
	call	@random@8
	inc	eax
$LABEL_15$86059:
; Line 1809
	xor	ecx, ecx
	inc	ecx
$L86061:
; Line 1810
	test	eax, eax
	jle	SHORT $L86062
; Line 1811
	mov	edx, ecx
	imul	edx, 56					; 00000038H
	mov	edx, DWORD PTR _spelldata[edx+16]
	cmp	edx, -1
	je	SHORT $L86063
	cmp	esi, edx
	jl	SHORT $L86063
; Line 1812
	dec	eax
; Line 1813
	mov	DWORD PTR _bs$[ebp], ecx
$L86063:
; Line 1815
	inc	ecx
; Line 1816
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86066
; Line 1817
	cmp	ecx, 32					; 00000020H
	jne	SHORT $L86065
; Line 1818
	push	33					; 00000021H
	pop	ecx
$L86065:
; Line 1819
	cmp	ecx, 34					; 00000022H
	jne	SHORT $L86066
; Line 1820
	push	35					; 00000023H
	pop	ecx
$L86066:
; Line 1822
	cmp	ecx, 37					; 00000025H
	jne	SHORT $L86061
; Line 1823
	jmp	SHORT $LABEL_15$86059
$L86062:
; Line 1825
	mov	esi, DWORD PTR _i$[ebp]
	push	ebx
	push	edi
	mov	edi, DWORD PTR _bs$[ebp]
	imul	edi, 56					; 00000038H
	imul	esi, 368				; 00000170H
	push	DWORD PTR _spelldata[edi+4]
	lea	ebx, DWORD PTR _item[esi+61]
	lea	eax, DWORD PTR _istr$[ebp]
	push	ebx
	push	OFFSET FLAT:??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1826
	lea	ecx, DWORD PTR _istr$[ebp]
	call	@control_WriteStringToBuffer@4
	test	eax, eax
	jne	SHORT $L86068
; Line 1827
	push	DWORD PTR _spelldata[edi+4]
	lea	eax, DWORD PTR _istr$[ebp]
	push	OFFSET FLAT:??_C@_0M@ELHC@Staff?5of?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
$L86068:
; Line 1828
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	ebx
	call	_strcpy
; Line 1829
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	lea	eax, DWORD PTR _item[esi+125]
	push	eax
	call	_strcpy
; Line 1830
	mov	ebx, DWORD PTR _spelldata[edi+40]
; Line 1831
	mov	edx, DWORD PTR _spelldata[edi+44]
; Line 1832
	mov	eax, DWORD PTR _bs$[ebp]
	sub	edx, ebx
	add	esp, 16					; 00000010H
	inc	edx
; Line 1833
	mov	cl, 19					; 00000013H
	mov	DWORD PTR _item[esi+224], eax
	call	@random@8
	mov	ecx, eax
; Line 1834
	mov	al, BYTE PTR _spelldata[edi+28]
	mov	BYTE PTR _item[esi+353], al
; Line 1837
	mov	eax, DWORD PTR _spelldata[edi+52]
	add	ecx, ebx
	push	5
	imul	eax, ecx
	mov	DWORD PTR _item[esi+228], ecx
	mov	DWORD PTR _item[esi+232], ecx
	cdq
	pop	ecx
	idiv	ecx
; Line 1840
	push	DWORD PTR _onlygood$[ebp]
	mov	edx, DWORD PTR _lvl$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _bs$[ebp]
	add	DWORD PTR _item[esi+196], eax
	add	DWORD PTR _item[esi+200], eax
	call	@GetStaffPower@16
	pop	edi
	pop	ebx
; Line 1841
	jmp	SHORT $L86070
$L86057:
; Line 1842
	movzx	eax, BYTE PTR _onlygood$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	push	eax
	mov	edx, esi
	push	256					; 00000100H
	push	esi
	sar	edx, 1
	call	@GetItemPower@20
$L86070:
	pop	esi
; Line 1844
	leave
	ret	4
@GetStaffSpell@12 ENDP
_TEXT	ENDS
EXTRN	_gnDifficulty:DWORD
EXTRN	_leveltype:BYTE
; Function compile flags: /Ogsy
;	COMDAT @GetItemAttrs@12
_TEXT	SEGMENT
_i$ = -8
_idata$ = -4
_lvl$ = 8
@GetItemAttrs@12 PROC NEAR				; COMDAT
; _i$ = ecx
; _idata$ = edx
; Line 1848
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	DWORD PTR _idata$[ebp], edi
; Line 1851
	imul	edi, 76					; 0000004cH
	mov	esi, ecx
; Line 1853
	lea	ebx, DWORD PTR _AllItemsList[edi+16]
	mov	DWORD PTR _i$[ebp], esi
	imul	esi, 368				; 00000170H
	movsx	eax, BYTE PTR _AllItemsList[edi+12]
	push	DWORD PTR [ebx]
	mov	DWORD PTR _item[esi+8], eax
	mov	eax, DWORD PTR _AllItemsList[edi+8]
	mov	DWORD PTR _item[esi+192], eax
	lea	eax, DWORD PTR _item[esi+61]
	push	eax
	call	_strcpy
; Line 1854
	push	DWORD PTR [ebx]
	lea	eax, DWORD PTR _item[esi+125]
	push	eax
	call	_strcpy
; Line 1855
	mov	al, BYTE PTR _AllItemsList[edi+5]
; Line 1860
	mov	edx, DWORD PTR _AllItemsList[edi+44]
	mov	BYTE PTR _item[esi+189], al
	mov	al, BYTE PTR _AllItemsList[edi+4]
	mov	BYTE PTR _item[esi+190], al
	mov	eax, DWORD PTR _AllItemsList[edi+32]
	lea	ebx, DWORD PTR _AllItemsList[edi+40]
	mov	DWORD PTR _item[esi+204], eax
	mov	eax, DWORD PTR _AllItemsList[edi+36]
	add	esp, 16					; 00000010H
	sub	edx, DWORD PTR [ebx]
	mov	DWORD PTR _item[esi+208], eax
	mov	eax, DWORD PTR _AllItemsList[edi+56]
	mov	cl, 20					; 00000014H
	inc	edx
	mov	DWORD PTR _item[esi+220], eax
	call	@random@8
	add	eax, DWORD PTR [ebx]
; Line 1865
	xor	ebx, ebx
	mov	BYTE PTR _item[esi+60], bl
; Line 1868
	mov	DWORD PTR _item[esi+336], ebx
	mov	DWORD PTR _item[esi+212], eax
	mov	eax, DWORD PTR _AllItemsList[edi+52]
	mov	DWORD PTR _item[esi+216], eax
	mov	eax, DWORD PTR _AllItemsList[edi+60]
	mov	DWORD PTR _item[esi+224], eax
	mov	eax, DWORD PTR _AllItemsList[edi+68]
	mov	DWORD PTR _item[esi+196], eax
	mov	DWORD PTR _item[esi+200], eax
	mov	eax, DWORD PTR _AllItemsList[edi+28]
; Line 1872
	mov	DWORD PTR _item[esi+340], ebx
	mov	DWORD PTR _item[esi+236], eax
	mov	DWORD PTR _item[esi+240], eax
	mov	al, BYTE PTR _AllItemsList[edi+48]
; Line 1873
	mov	DWORD PTR _item[esi+344], ebx
	mov	BYTE PTR _item[esi+352], al
	mov	al, BYTE PTR _AllItemsList[edi+49]
	mov	BYTE PTR _item[esi+353], al
	mov	al, BYTE PTR _AllItemsList[edi+50]
	mov	BYTE PTR _item[esi+354], al
; Line 1887
	mov	eax, DWORD PTR _idata$[ebp]
	mov	DWORD PTR _item[esi+348], ebx
	mov	DWORD PTR _item[esi+244], ebx
	mov	DWORD PTR _item[esi+248], ebx
	mov	DWORD PTR _item[esi+252], ebx
	mov	DWORD PTR _item[esi+256], ebx
	mov	DWORD PTR _item[esi+260], ebx
	mov	DWORD PTR _item[esi+264], ebx
	mov	DWORD PTR _item[esi+268], ebx
	mov	DWORD PTR _item[esi+228], ebx
	mov	DWORD PTR _item[esi+232], ebx
	mov	DWORD PTR _item[esi+272], ebx
	mov	DWORD PTR _item[esi+276], ebx
	mov	DWORD PTR _item[esi+280], ebx
	mov	DWORD PTR _item[esi+360], eax
; Line 1888
	mov	DWORD PTR _item[esi+292], ebx
; Line 1889
	mov	DWORD PTR _item[esi+296], ebx
; Line 1890
	mov	DWORD PTR _item[esi+300], ebx
; Line 1891
	mov	BYTE PTR _item[esi+304], bl
; Line 1892
	or	BYTE PTR _item[esi+332], -1
; Line 1893
	or	BYTE PTR _item[esi+333], -1
; Line 1903
	cmp	DWORD PTR _AllItemsList[edi+56], 24	; 00000018H
	mov	BYTE PTR _item[esi+305], bl
	mov	DWORD PTR _item[esi+312], ebx
	mov	DWORD PTR _item[esi+316], ebx
	mov	DWORD PTR _item[esi+320], ebx
	mov	DWORD PTR _item[esi+324], ebx
	mov	DWORD PTR _item[esi+328], ebx
	mov	DWORD PTR _item[esi+284], ebx
	mov	DWORD PTR _item[esi+288], ebx
	jne	SHORT $L86079
; Line 1904
	mov	edx, DWORD PTR _lvl$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	call	@GetBookSpell@8
$L86079:
; Line 1906
	cmp	DWORD PTR _item[esi+8], 11		; 0000000bH
	jne	$L86088
; Line 1907
	cmp	DWORD PTR _gnDifficulty, ebx
	je	SHORT $L86081
; Line 1908
	mov	eax, DWORD PTR _lvl$[ebp]
; Line 1909
	jmp	SHORT $L86082
$L86081:
; Line 1910
	movzx	eax, BYTE PTR _currlevel
	mov	cl, 21					; 00000015H
	lea	edx, DWORD PTR [eax+eax*4]
	add	edx, edx
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	lea	ecx, DWORD PTR [ecx+ecx*4]
	add	eax, ecx
$L86082:
; Line 1912
	cmp	DWORD PTR _gnDifficulty, 1
	jne	SHORT $L86083
; Line 1913
	movzx	eax, BYTE PTR _currlevel
	add	eax, 16					; 00000010H
	mov	cl, 21					; 00000015H
	lea	edx, DWORD PTR [eax+eax*4]
	add	edx, edx
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	add	ecx, 16					; 00000010H
	lea	ecx, DWORD PTR [ecx+ecx*4]
	add	eax, ecx
$L86083:
; Line 1914
	cmp	DWORD PTR _gnDifficulty, 2
	jne	SHORT $L86084
; Line 1915
	movzx	eax, BYTE PTR _currlevel
	add	eax, 32					; 00000020H
	mov	cl, 21					; 00000015H
	lea	edx, DWORD PTR [eax+eax*4]
	add	edx, edx
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	add	ecx, 32					; 00000020H
	lea	ecx, DWORD PTR [ecx+ecx*4]
	add	eax, ecx
$L86084:
; Line 1917
	cmp	BYTE PTR _leveltype, 4
	jne	SHORT $L86085
; Line 1918
	mov	ecx, eax
	sar	ecx, 3
	add	eax, ecx
$L86085:
; Line 1919
	mov	ecx, 5000				; 00001388H
	cmp	eax, ecx
	jle	SHORT $L86086
; Line 1920
	mov	eax, ecx
$L86086:
; Line 1924
	cmp	eax, 2500				; 000009c4H
	mov	DWORD PTR _item[esi+196], eax
	jge	SHORT $L86087
; Line 1925
	xor	ecx, ecx
	cmp	eax, 1000				; 000003e8H
	setg	cl
	add	ecx, 4
	mov	DWORD PTR _item[esi+192], ecx
; Line 1926
	jmp	SHORT $L86088
$L86087:
; Line 1927
	mov	DWORD PTR _item[esi+192], 6
$L86088:
	pop	edi
	pop	esi
	pop	ebx
; Line 1929
	leave
	ret	4
@GetItemAttrs@12 ENDP
_TEXT	ENDS
PUBLIC	@RndPL@8
; Function compile flags: /Ogsy
;	COMDAT @RndPL@8
_TEXT	SEGMENT
@RndPL@8 PROC NEAR					; COMDAT
; _param1$ = ecx
; _param2$ = edx
; Line 1933
	push	esi
	mov	esi, ecx
; Line 1934
	sub	edx, esi
	mov	cl, 22					; 00000016H
	inc	edx
	call	@random@8
	add	eax, esi
	pop	esi
; Line 1935
	ret	0
@RndPL@8 ENDP
_TEXT	ENDS
PUBLIC	@PLVal@20
; Function compile flags: /Ogsy
;	COMDAT @PLVal@20
_TEXT	SEGMENT
_p2$ = 8
_minv$ = 12
_maxv$ = 16
@PLVal@20 PROC NEAR					; COMDAT
; _pv$ = ecx
; _p1$ = edx
; Line 1938
	push	ebx
	push	esi
	push	edi
; Line 1939
	mov	edi, DWORD PTR _p2$[esp+8]
	cmp	edx, edi
	mov	eax, ecx
	jne	SHORT $L86105
; Line 1940
	mov	eax, DWORD PTR _minv$[esp+8]
	jmp	SHORT $L86104
$L86105:
; Line 1941
	mov	ebx, DWORD PTR _minv$[esp+8]
	mov	esi, DWORD PTR _maxv$[esp+8]
	cmp	ebx, esi
	jne	SHORT $L86106
; Line 1942
	mov	eax, ebx
	jmp	SHORT $L86104
$L86106:
; Line 1943
	sub	eax, edx
	sub	edi, edx
	imul	eax, 100				; 00000064H
	cdq
	idiv	edi
	sub	esi, ebx
	push	100					; 00000064H
	pop	ecx
	imul	eax, esi
	cdq
	idiv	ecx
	add	eax, ebx
$L86104:
	pop	edi
	pop	esi
	pop	ebx
; Line 1944
	ret	12					; 0000000cH
@PLVal@20 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @SaveItemPower@28
_TEXT	SEGMENT
_param1$ = 8
_param2$ = 12
_minval$ = 16
_maxval$ = 20
_multval$ = 24
_v10$ = -4
@SaveItemPower@28 PROC NEAR				; COMDAT
; _i$ = ecx
; _power$ = edx
; Line 1947
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
; Line 1988
	mov	edx, DWORD PTR _param2$[ebp]
	mov	esi, ecx
	mov	ecx, DWORD PTR _param1$[ebp]
	call	@RndPL@8
	mov	ebx, eax
; Line 1990
	cmp	edi, 79					; 0000004fH
	mov	DWORD PTR _v10$[ebp], ebx
	ja	$L86299
	jmp	DWORD PTR $L88646[edi*4]
$L86163:
; Line 1992
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+248
; Line 1993
	jmp	$LABEL_115$86164
$L86165:
; Line 1995
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+248
; Line 1996
	jmp	$LABEL_62$86166
$L86167:
; Line 1998
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+244
; Line 1999
	jmp	$LABEL_115$86164
$L86168:
; Line 2001
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+244
; Line 2002
	jmp	$LABEL_62$86166
$L86169:
; Line 2004
	mov	edx, DWORD PTR _param2$[ebp]
	mov	ecx, DWORD PTR _param1$[ebp]
	call	@RndPL@8
; Line 2006
	mov	edi, esi
	mov	ebx, eax
	imul	edi, 368				; 00000170H
	add	DWORD PTR _item[edi+244], ebx
; Line 2007
	cmp	DWORD PTR _param1$[ebp], 20		; 00000014H
	jne	SHORT $L86170
; Line 2008
	push	5
	xor	ecx, ecx
	pop	edx
	inc	ecx
; Line 2009
	jmp	$L88639
$L86170:
; Line 2010
	mov	eax, DWORD PTR _param1$[ebp]
; Line 2011
	cmp	eax, 36					; 00000024H
	jne	SHORT $L86172
; Line 2012
	push	10					; 0000000aH
	pop	edx
	push	6
	pop	ecx
	call	@RndPL@8
$L86172:
; Line 2013
	cmp	DWORD PTR _param1$[ebp], 51		; 00000033H
	jne	SHORT $L86173
; Line 2014
	push	15					; 0000000fH
	pop	edx
	push	11					; 0000000bH
	pop	ecx
	call	@RndPL@8
$L86173:
; Line 2015
	cmp	DWORD PTR _param1$[ebp], 66		; 00000042H
	jne	SHORT $L86174
; Line 2016
	push	20					; 00000014H
	pop	edx
	push	16					; 00000010H
	pop	ecx
	call	@RndPL@8
$L86174:
; Line 2017
	cmp	DWORD PTR _param1$[ebp], 81		; 00000051H
	jne	SHORT $L86175
; Line 2018
	push	30					; 0000001eH
	pop	edx
	push	21					; 00000015H
	pop	ecx
	call	@RndPL@8
$L86175:
; Line 2019
	cmp	DWORD PTR _param1$[ebp], 96		; 00000060H
	jne	SHORT $L86176
; Line 2020
	push	40					; 00000028H
	pop	edx
	push	31					; 0000001fH
	pop	ecx
	call	@RndPL@8
$L86176:
; Line 2021
	cmp	DWORD PTR _param1$[ebp], 111		; 0000006fH
	jne	SHORT $L86177
; Line 2022
	push	50					; 00000032H
	pop	edx
	push	41					; 00000029H
	pop	ecx
	call	@RndPL@8
$L86177:
; Line 2023
	cmp	DWORD PTR _param1$[ebp], 126		; 0000007eH
	jne	SHORT $L86178
; Line 2024
	push	75					; 0000004bH
	pop	edx
	push	51					; 00000033H
	pop	ecx
	call	@RndPL@8
$L86178:
; Line 2025
	cmp	DWORD PTR _param1$[ebp], 151		; 00000097H
	jne	SHORT $L86179
; Line 2026
	push	100					; 00000064H
	pop	edx
	push	76					; 0000004cH
	pop	ecx
$L88639:
	call	@RndPL@8
$L86179:
; Line 2027
	add	DWORD PTR _item[edi+248], eax
; Line 2028
	jmp	$L86299
$L86180:
; Line 2031
	mov	edi, esi
; Line 2032
	mov	eax, DWORD PTR _param1$[ebp]
	imul	edi, 368				; 00000170H
	sub	DWORD PTR _item[edi+244], ebx
	cmp	eax, 25					; 00000019H
	jne	SHORT $L86181
; Line 2033
	push	5
	xor	ecx, ecx
	pop	edx
	inc	ecx
; Line 2034
	jmp	SHORT $L88640
$L86181:
; Line 2036
	cmp	eax, 50					; 00000032H
	jne	SHORT $L86183
; Line 2037
	push	10					; 0000000aH
	pop	edx
	push	6
	pop	ecx
$L88640:
	call	@RndPL@8
$L86183:
; Line 2038
	sub	DWORD PTR _item[edi+248], eax
; Line 2039
	jmp	$L86299
$L86184:
; Line 2041
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+252
; Line 2042
	jmp	$LABEL_115$86164
$L86185:
; Line 2044
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+252
; Line 2045
	jmp	$LABEL_62$86166
$L86186:
; Line 2047
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+272
; Line 2048
	jmp	$LABEL_115$86164
$L86187:
; Line 2050
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+276
; Line 2051
	jmp	$LABEL_115$86164
$L86188:
; Line 2053
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+280
; Line 2054
	jmp	$LABEL_115$86164
$L86189:
; Line 2057
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	DWORD PTR _item[eax+272], ebx
; Line 2058
	mov	ecx, DWORD PTR _item[eax+272]
; Line 2059
	add	DWORD PTR _item[eax+276], ebx
; Line 2060
	add	DWORD PTR _item[eax+280], ebx
; Line 2061
	mov	edx, DWORD PTR _item[eax+276]
; Line 2062
	mov	edi, DWORD PTR _item[eax+280]
; Line 2063
	test	ecx, ecx
	jge	SHORT $L86190
; Line 2064
	and	DWORD PTR _item[eax+272], 0
$L86190:
; Line 2065
	test	edx, edx
	jge	SHORT $L86191
; Line 2066
	and	DWORD PTR _item[eax+276], 0
$L86191:
; Line 2067
	test	edi, edi
	jge	$L86299
; Line 2068
	and	DWORD PTR _item[eax+280], 0
; Line 2069
	jmp	$L86299
$L86193:
; Line 2071
	mov	eax, esi
	imul	eax, 368				; 00000170H
	mov	BYTE PTR _item[eax+304], bl
; Line 2072
	jmp	$L86299
$L86194:
; Line 2074
	mov	ecx, esi
	imul	ecx, 368				; 00000170H
	lea	edx, DWORD PTR _item[ecx+228]
; Line 2075
	mov	eax, DWORD PTR [edx]
	imul	eax, DWORD PTR _param1$[ebp]
; Line 2076
	mov	DWORD PTR [edx], eax
; Line 2077
	mov	DWORD PTR _item[ecx+232], eax
; Line 2078
	jmp	$L86299
$L86195:
; Line 2081
	mov	eax, esi
	imul	eax, 368				; 00000170H
	or	DWORD PTR _item[eax+216], 16		; 00000010H
; Line 2082
	jmp	$LABEL_77$86196
$L86197:
; Line 2085
	mov	eax, esi
	imul	eax, 368				; 00000170H
	or	DWORD PTR _item[eax+216], 32		; 00000020H
; Line 2086
	jmp	$LABEL_79$86198
$L86199:
; Line 2088
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+256
; Line 2089
	jmp	$LABEL_115$86164
$L86200:
; Line 2091
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+256
; Line 2092
	jmp	$LABEL_62$86166
$L86201:
; Line 2094
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+260
; Line 2095
	jmp	$LABEL_115$86164
$L86202:
; Line 2097
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+260
; Line 2098
	jmp	$LABEL_62$86166
$L86203:
; Line 2100
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+264
; Line 2101
	jmp	$LABEL_115$86164
$L86204:
; Line 2103
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+264
; Line 2104
	jmp	$LABEL_62$86166
$L86205:
; Line 2106
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+268
; Line 2107
	jmp	$LABEL_115$86164
$L86206:
; Line 2109
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+268
; Line 2110
	jmp	$LABEL_62$86166
$L86207:
; Line 2113
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	DWORD PTR _item[eax+256], ebx
; Line 2114
	add	DWORD PTR _item[eax+260], ebx
; Line 2115
	add	DWORD PTR _item[eax+264], ebx
; Line 2116
	add	DWORD PTR _item[eax+268], ebx
; Line 2117
	jmp	$L86299
$L86208:
; Line 2120
	mov	eax, esi
	imul	eax, 368				; 00000170H
	sub	DWORD PTR _item[eax+256], ebx
; Line 2121
	sub	DWORD PTR _item[eax+260], ebx
; Line 2122
	sub	DWORD PTR _item[eax+264], ebx
; Line 2123
	sub	DWORD PTR _item[eax+268], ebx
; Line 2124
	jmp	$L86299
$L86209:
; Line 2126
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+296
; Line 2127
	jmp	$LABEL_115$86164
$L86210:
; Line 2129
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+296
; Line 2130
	jmp	$LABEL_62$86166
$L86211:
; Line 2133
	mov	eax, esi
	mov	ecx, ebx
	imul	eax, 368				; 00000170H
	shl	ecx, 6
	add	eax, OFFSET FLAT:_item+288
; Line 2134
	jmp	$LABEL_73$86212
$L86213:
; Line 2137
	mov	eax, esi
	mov	ecx, ebx
	imul	eax, 368				; 00000170H
	shl	ecx, 6
	add	eax, OFFSET FLAT:_item+288
; Line 2138
	jmp	$LABEL_75$86214
$L86215:
; Line 2140
	mov	eax, esi
	mov	ecx, ebx
	imul	eax, 368				; 00000170H
	shl	ecx, 6
	lea	eax, DWORD PTR _item[eax+284]
	add	DWORD PTR [eax], ecx
; Line 2141
	jmp	$LABEL_92$86216
$L86217:
; Line 2143
	mov	eax, esi
	mov	ecx, ebx
	imul	eax, 368				; 00000170H
	shl	ecx, 6
	lea	eax, DWORD PTR _item[eax+284]
	sub	DWORD PTR [eax], ecx
; Line 2144
	jmp	$LABEL_92$86216
$L86218:
; Line 2147
	mov	ecx, esi
; Line 2149
	push	100					; 00000064H
	imul	ecx, 368				; 00000170H
	mov	edi, DWORD PTR _item[ecx+240]
	mov	eax, edi
	imul	eax, ebx
	cdq
	pop	ebx
	idiv	ebx
; Line 2150
	add	DWORD PTR _item[ecx+236], eax
; Line 2151
	add	eax, edi
	mov	DWORD PTR _item[ecx+240], eax
; Line 2152
	jmp	SHORT $L88645
$L86219:
; Line 2155
	mov	ecx, esi
	push	100					; 00000064H
	imul	ecx, 368				; 00000170H
	mov	edi, DWORD PTR _item[ecx+240]
	mov	eax, edi
	imul	eax, ebx
	cdq
	pop	ebx
	idiv	ebx
; Line 2157
	xor	edx, edx
	inc	edx
	sub	edi, eax
	cmp	edi, edx
	mov	DWORD PTR _item[ecx+240], edi
	jge	SHORT $L86220
; Line 2158
	mov	DWORD PTR _item[ecx+240], edx
$L86220:
; Line 2159
	mov	eax, DWORD PTR _item[ecx+240]
	mov	DWORD PTR _item[ecx+236], eax
$L88645:
; Line 2160
	mov	ebx, DWORD PTR _v10$[ebp]
	jmp	$L86299
$L86221:
; Line 2162
	mov	ecx, 255				; 000000ffH
; Line 2163
	jmp	$LABEL_119$86222
$L86223:
; Line 2166
	mov	eax, esi
	mov	ecx, DWORD PTR _param1$[ebp]
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+300
$LABEL_73$86212:
; Line 2168
	add	DWORD PTR [eax], ecx
; Line 2169
	jmp	$L86299
$L86224:
; Line 2172
	mov	eax, esi
	mov	ecx, DWORD PTR _param1$[ebp]
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+300
$LABEL_75$86214:
; Line 2174
	sub	DWORD PTR [eax], ecx
; Line 2175
	jmp	$L86299
$L86225:
; Line 2178
	mov	eax, esi
	imul	eax, 368				; 00000170H
	or	DWORD PTR _item[eax+216], 8
$LABEL_77$86196:
; Line 2180
	mov	ecx, DWORD PTR _param1$[ebp]
	mov	DWORD PTR _item[eax+312], ecx
; Line 2181
	mov	ecx, DWORD PTR _param2$[ebp]
	mov	DWORD PTR _item[eax+316], ecx
; Line 2182
	jmp	$L86299
$L86226:
; Line 2185
	mov	eax, esi
	imul	eax, 368				; 00000170H
	or	BYTE PTR _item[eax+219], 2
$LABEL_79$86198:
; Line 2187
	mov	ecx, DWORD PTR _param1$[ebp]
	mov	DWORD PTR _item[eax+320], ecx
; Line 2188
	mov	ecx, DWORD PTR _param2$[ebp]
	mov	DWORD PTR _item[eax+324], ecx
; Line 2189
	jmp	$L86299
$L86229:
; Line 2191
	mov	eax, esi
	mov	ecx, DWORD PTR _param1$[ebp]
	imul	eax, 368				; 00000170H
	mov	DWORD PTR _item[eax+192], ecx
; Line 2192
	jmp	$L86299
$L86230:
; Line 2194
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+219]
	or	BYTE PTR [eax], 4
; Line 2195
	jmp	$L86299
$L86233:
; Line 2197
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+219]
	or	BYTE PTR [eax], 8
; Line 2198
	jmp	SHORT $LABEL_92$86216
$L86236:
; Line 2200
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+217]
; Line 2201
	jmp	$L88643
$L86238:
; Line 2203
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+219]
; Line 2204
	jmp	$L88644
$L86241:
; Line 2206
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+217]
; Line 2207
	jmp	$L88642
$L86243:
; Line 2209
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+217]
; Line 2210
	jmp	$L88644
$L86245:
; Line 2212
	cmp	DWORD PTR _param1$[ebp], 3
	jne	SHORT $L86246
; Line 2213
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+217]
	or	BYTE PTR [eax], 32			; 00000020H
$L86246:
; Line 2214
	cmp	DWORD PTR _param1$[ebp], 5
	jne	SHORT $LABEL_92$86216
; Line 2215
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+217]
	or	BYTE PTR [eax], 64			; 00000040H
$LABEL_92$86216:
; Line 2217
	mov	DWORD PTR _drawmanaflag, 1
; Line 2218
	jmp	$L86299
$L86250:
; Line 2220
	cmp	DWORD PTR _param1$[ebp], 3
	jne	SHORT $L86251
; Line 2221
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+217]
	or	BYTE PTR [eax], 128			; 00000080H
$L86251:
; Line 2222
	xor	edx, edx
	inc	edx
	cmp	DWORD PTR _param1$[ebp], 5
	jne	SHORT $L86253
; Line 2223
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
	or	BYTE PTR [eax], dl
$L86253:
; Line 2224
	mov	DWORD PTR _drawhpflag, edx
; Line 2225
	jmp	$L86299
$L86255:
; Line 2227
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+328
; Line 2228
	jmp	$LABEL_115$86164
$L86256:
; Line 2230
	mov	ecx, DWORD PTR _param1$[ebp]
	cmp	ecx, 1
	jne	SHORT $L86257
; Line 2231
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
	or	BYTE PTR [eax], 2
$L86257:
; Line 2232
	cmp	ecx, 2
	jne	SHORT $L86259
; Line 2233
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
	or	BYTE PTR [eax], 4
$L86259:
; Line 2234
	cmp	ecx, 3
	jne	SHORT $L86261
; Line 2235
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
	or	BYTE PTR [eax], 8
$L86261:
; Line 2236
	cmp	ecx, 4
	jne	$L86299
; Line 2237
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
$L88644:
	or	BYTE PTR [eax], 16			; 00000010H
; Line 2238
	jmp	$L86299
$L86265:
; Line 2240
	cmp	DWORD PTR _param1$[ebp], 1
	jne	SHORT $L86266
; Line 2241
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
	or	BYTE PTR [eax], 32			; 00000020H
$L86266:
; Line 2242
	cmp	DWORD PTR _param1$[ebp], 2
	jne	SHORT $L86268
; Line 2243
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
	or	BYTE PTR [eax], 64			; 00000040H
$L86268:
; Line 2244
	cmp	DWORD PTR _param1$[ebp], 3
	jne	$L86299
; Line 2245
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
; Line 2246
	jmp	$L88641
$L86272:
; Line 2248
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+219]
$L88643:
	or	BYTE PTR [eax], 1
; Line 2249
	jmp	$L86299
$L86275:
; Line 2251
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+292
$LABEL_115$86164:
; Line 2253
	add	DWORD PTR [eax], ebx
; Line 2254
	jmp	$L86299
$L86276:
; Line 2256
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+216]
	or	DWORD PTR [eax], 4
; Line 2257
	jmp	$L86299
$L86277:
; Line 2260
	mov	eax, esi
	mov	ecx, DWORD PTR _param1$[ebp]
	imul	eax, 368				; 00000170H
	mov	DWORD PTR _item[eax+204], ecx
; Line 2261
	mov	ecx, DWORD PTR _param2$[ebp]
	mov	DWORD PTR _item[eax+208], ecx
; Line 2262
	jmp	$L86299
$L86278:
; Line 2264
	mov	ecx, DWORD PTR _param1$[ebp]
$LABEL_119$86222:
; Line 2267
	mov	eax, esi
	imul	eax, 368				; 00000170H
	mov	DWORD PTR _item[eax+236], ecx
; Line 2268
	mov	DWORD PTR _item[eax+240], ecx
; Line 2269
	jmp	$L86299
$L86279:
; Line 2271
	mov	eax, esi
	imul	eax, 368				; 00000170H
	and	BYTE PTR _item[eax+352], 0
; Line 2272
	jmp	$L86299
$L86280:
; Line 2275
	mov	eax, esi
	mov	ecx, DWORD PTR _param1$[ebp]
	imul	eax, 368				; 00000170H
	mov	DWORD PTR _item[eax+224], ecx
; Line 2276
	mov	DWORD PTR _item[eax+228], ecx
; Line 2277
	mov	ecx, DWORD PTR _param2$[ebp]
	mov	DWORD PTR _item[eax+232], ecx
; Line 2278
	jmp	$L86299
$L86281:
; Line 2280
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+218]
$L88642:
	or	BYTE PTR [eax], 8
; Line 2281
	jmp	$L86299
$L86283:
; Line 2283
	mov	eax, esi
	imul	eax, 368				; 00000170H
	mov	BYTE PTR _item[eax+189], 1
; Line 2284
	jmp	$L86299
$L86284:
; Line 2286
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+219]
	or	BYTE PTR [eax], 64			; 00000040H
; Line 2287
	jmp	$L86299
$L86287:
; Line 2289
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+219]
$L88641:
	or	BYTE PTR [eax], 128			; 00000080H
; Line 2290
	jmp	$L86299
$L86290:
; Line 2292
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+216]
	or	DWORD PTR [eax], 64			; 00000040H
; Line 2293
	jmp	$L86299
$L86291:
; Line 2295
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+216]
	or	DWORD PTR [eax], 2
; Line 2296
	jmp	$L86299
$L86292:
; Line 2298
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	eax, DWORD PTR _item[eax+216]
	or	DWORD PTR [eax], 1
; Line 2299
	jmp	$L86299
$L86293:
; Line 2301
	mov	eax, esi
	imul	eax, 368				; 00000170H
	mov	DWORD PTR _item[eax+212], ebx
; Line 2302
	jmp	$L86299
$L86294:
; Line 2304
	mov	ecx, DWORD PTR _myplr
	push	5
	imul	ecx, 21720				; 000054d8H
	pop	edi
	mov	eax, DWORD PTR _plr[ecx+372]
	cdq
	idiv	edi
	add	eax, DWORD PTR _plr[ecx+21552]
	add	eax, DWORD PTR _plr[ecx+21564]
	mov	ecx, esi
	shl	eax, 6
	imul	ecx, 368				; 00000170H
	mov	DWORD PTR _item[ecx+288], eax
; Line 2305
	jmp	SHORT $L86299
$L86295:
; Line 2307
	mov	eax, esi
	push	10					; 0000000aH
	imul	eax, 368				; 00000170H
	pop	edi
	lea	ecx, DWORD PTR _item[eax+212]
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[eax+424]
	sar	eax, 6
	cdq
	idiv	edi
	add	DWORD PTR [ecx], eax
; Line 2308
	jmp	SHORT $L86299
$L86296:
; Line 2310
	mov	eax, DWORD PTR _myplr
	push	30					; 0000001eH
	imul	eax, 21720				; 000054d8H
	pop	ecx
	movsx	eax, BYTE PTR _plr[eax+440]
	sub	ecx, eax
; Line 2311
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+272
; Line 2313
	test	ecx, ecx
	mov	DWORD PTR [eax], ecx
	jge	SHORT $L86299
; Line 2314
	and	DWORD PTR [eax], 0
; Line 2315
	jmp	SHORT $L86299
$L86298:
; Line 2317
	mov	eax, esi
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_item+212
$LABEL_62$86166:
; Line 2319
	sub	DWORD PTR [eax], ebx
$L86299:
; Line 2325
	imul	esi, 368				; 00000170H
	cmp	DWORD PTR _item[esi+336], 0
	jne	SHORT $L86301
	cmp	DWORD PTR _item[esi+340], 0
	jne	SHORT $L86301
; Line 2329
	push	DWORD PTR _maxval$[ebp]
	mov	edx, DWORD PTR _param1$[ebp]
	mov	ecx, ebx
	push	DWORD PTR _minval$[ebp]
	push	DWORD PTR _param2$[ebp]
	call	@PLVal@20
	mov	DWORD PTR _item[esi+336], eax
; Line 2330
	mov	eax, DWORD PTR _multval$[ebp]
	mov	DWORD PTR _item[esi+340], eax
	jmp	SHORT $L86302
$L86301:
; Line 2326
	push	DWORD PTR _maxval$[ebp]
	mov	edx, DWORD PTR _param1$[ebp]
	mov	ecx, ebx
	push	DWORD PTR _minval$[ebp]
	push	DWORD PTR _param2$[ebp]
	call	@PLVal@20
	mov	DWORD PTR _item[esi+344], eax
; Line 2327
	mov	eax, DWORD PTR _multval$[ebp]
	mov	DWORD PTR _item[esi+348], eax
$L86302:
	pop	edi
	pop	esi
	pop	ebx
; Line 2332
	leave
	ret	20					; 00000014H
$L88646:
	DD	$L86163
	DD	$L86165
	DD	$L86167
	DD	$L86168
	DD	$L86169
	DD	$L86180
	DD	$L86184
	DD	$L86185
	DD	$L86186
	DD	$L86187
	DD	$L86188
	DD	$L86189
	DD	$L86299
	DD	$L86299
	DD	$L86193
	DD	$L86194
	DD	$L86195
	DD	$L86197
	DD	$L86299
	DD	$L86199
	DD	$L86200
	DD	$L86201
	DD	$L86202
	DD	$L86203
	DD	$L86204
	DD	$L86205
	DD	$L86206
	DD	$L86207
	DD	$L86208
	DD	$L86209
	DD	$L86210
	DD	$L86211
	DD	$L86213
	DD	$L86215
	DD	$L86217
	DD	$L86218
	DD	$L86219
	DD	$L86221
	DD	$L86223
	DD	$L86224
	DD	$L86299
	DD	$L86299
	DD	$L86225
	DD	$L86226
	DD	$L86229
	DD	$L86230
	DD	$L86233
	DD	$L86236
	DD	$L86299
	DD	$L86299
	DD	$L86299
	DD	$L86299
	DD	$L86238
	DD	$L86241
	DD	$L86243
	DD	$L86245
	DD	$L86250
	DD	$L86255
	DD	$L86256
	DD	$L86265
	DD	$L86272
	DD	$L86275
	DD	$L86276
	DD	$L86277
	DD	$L86278
	DD	$L86279
	DD	$L86280
	DD	$L86281
	DD	$L86283
	DD	$L86284
	DD	$L86287
	DD	$L86299
	DD	$L86290
	DD	$L86291
	DD	$L86292
	DD	$L86293
	DD	$L86294
	DD	$L86295
	DD	$L86296
	DD	$L86298
@SaveItemPower@28 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @GetItemPower@20
_TEXT	SEGMENT
_i$ = -4
_minlvl$ = -20
_maxlvl$ = 8
_flgs$ = 12
_onlygood$ = 16
_l$ = -1172
_istr$ = -148
_post$ = -16
_sufidx$ = -12
_preidx$ = -8
@GetItemPower@20 PROC NEAR				; COMDAT
; _i$ = ecx
; _minlvl$ = edx
; Line 2335
	push	ebp
	mov	ebp, esp
	sub	esp, 1172				; 00000494H
	push	esi
; Line 2348
	push	4
	mov	DWORD PTR _minlvl$[ebp], edx
	mov	DWORD PTR _i$[ebp], ecx
	pop	edx
	mov	cl, 23					; 00000017H
	call	@random@8
; Line 2349
	mov	cl, 23					; 00000017H
	mov	esi, eax
	push	3
	pop	edx
	call	@random@8
; Line 2350
	test	esi, esi
	mov	DWORD PTR _post$[ebp], eax
	je	SHORT $L86325
	test	eax, eax
	jne	SHORT $L86325
; Line 2351
	push	2
	mov	cl, 23					; 00000017H
	pop	edx
	call	@random@8
	test	eax, eax
	je	SHORT $L86324
; Line 2352
	mov	DWORD PTR _post$[ebp], 1
; Line 2353
	jmp	SHORT $L86325
$L86324:
; Line 2354
	xor	esi, esi
$L86325:
; Line 2356
	or	DWORD PTR _preidx$[ebp], -1
; Line 2357
	or	DWORD PTR _sufidx$[ebp], -1
	push	ebx
; Line 2358
	xor	bl, bl
; Line 2359
	cmp	DWORD PTR _onlygood$[ebp], 0
	push	edi
	jne	SHORT $L86327
; Line 2360
	push	3
	xor	cl, cl
	pop	edx
	call	@random@8
	test	eax, eax
	je	SHORT $L86327
; Line 2361
	mov	DWORD PTR _onlygood$[ebp], 1
$L86327:
; Line 2363
	test	esi, esi
	jne	$L86338
; Line 2364
	xor	edx, edx
	mov	cl, 1
	mov	eax, OFFSET FLAT:_PL_Prefix+16
$L86330:
; Line 2368
	mov	edi, DWORD PTR _flgs$[ebp]
	test	DWORD PTR [eax+4], edi
	je	SHORT $L86337
; Line 2369
	mov	edi, DWORD PTR [eax]
	cmp	edi, DWORD PTR _minlvl$[ebp]
	jl	SHORT $L86337
	cmp	edi, DWORD PTR _maxlvl$[ebp]
	jg	SHORT $L86337
	cmp	DWORD PTR _onlygood$[ebp], 0
	je	SHORT $L86335
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $L86337
$L86335:
	cmp	DWORD PTR _flgs$[ebp], 256		; 00000100H
	jne	SHORT $L86336
	cmp	cl, 15					; 0000000fH
	je	SHORT $L86337
$L86336:
; Line 2370
	mov	DWORD PTR _l$[ebp+edx*4], esi
	inc	edx
; Line 2371
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $L86337
; Line 2372
	mov	DWORD PTR _l$[ebp+edx*4], esi
	inc	edx
$L86337:
; Line 2376
	mov	cl, BYTE PTR [eax+36]
	add	eax, 48					; 00000030H
	inc	esi
	cmp	cl, -1
	jne	SHORT $L86330
; Line 2377
	test	edx, edx
	je	$L86338
; Line 2378
	add	cl, 24					; 00000018H
	call	@random@8
; Line 2379
	mov	edi, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _l$[ebp+eax*4]
	imul	edi, 368				; 00000170H
	lea	esi, DWORD PTR [eax+eax*2]
	mov	DWORD PTR _preidx$[ebp], eax
	lea	ebx, DWORD PTR _item[edi+125]
	lea	eax, DWORD PTR _istr$[ebp]
	shl	esi, 4
	push	ebx
	push	DWORD PTR _PL_Prefix[esi]
	push	OFFSET FLAT:??_C@_05JKGE@?$CFs?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 2380
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	ebx
	call	_strcpy
	add	esp, 24					; 00000018H
; Line 2389
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _PL_Prefix[esi+44]
	mov	BYTE PTR _item[edi+60], 1
	movsx	edx, BYTE PTR _PL_Prefix[esi+4]
	push	DWORD PTR _PL_Prefix[esi+40]
	push	DWORD PTR _PL_Prefix[esi+36]
	push	DWORD PTR _PL_Prefix[esi+12]
	push	DWORD PTR _PL_Prefix[esi+8]
	call	@SaveItemPower@28
; Line 2391
	mov	al, BYTE PTR _PL_Prefix[esi+4]
	mov	bl, BYTE PTR _PL_Prefix[esi+24]
	mov	BYTE PTR _item[edi+332], al
$L86338:
; Line 2395
	xor	esi, esi
	cmp	DWORD PTR _post$[ebp], esi
	je	$L86347
; Line 2396
	xor	edx, edx
	mov	eax, OFFSET FLAT:_PL_Suffix+16
$L86341:
; Line 2400
	mov	ecx, DWORD PTR _flgs$[ebp]
	test	DWORD PTR [eax+4], ecx
	je	SHORT $L86345
; Line 2401
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _minlvl$[ebp]
	jl	SHORT $L86345
	cmp	ecx, DWORD PTR _maxlvl$[ebp]
	jg	SHORT $L86345
	mov	edi, DWORD PTR [eax+8]
	movzx	ecx, bl
	or	edi, ecx
	cmp	edi, 17					; 00000011H
	je	SHORT $L86345
	cmp	DWORD PTR _onlygood$[ebp], 0
	je	SHORT $L86346
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $L86345
$L86346:
; Line 2402
	mov	DWORD PTR _l$[ebp+edx*4], esi
	inc	edx
$L86345:
; Line 2404
	add	eax, 48					; 00000030H
	inc	esi
; Line 2405
	cmp	BYTE PTR [eax-12], -1
	jne	SHORT $L86341
; Line 2406
	test	edx, edx
	je	$L86347
; Line 2407
	mov	cl, 23					; 00000017H
	call	@random@8
; Line 2408
	mov	edi, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _l$[ebp+eax*4]
	imul	edi, 368				; 00000170H
	lea	esi, DWORD PTR [eax+eax*2]
	mov	DWORD PTR _sufidx$[ebp], eax
	shl	esi, 4
	lea	ebx, DWORD PTR _item[edi+125]
	lea	eax, DWORD PTR _istr$[ebp]
	push	DWORD PTR _PL_Suffix[esi]
	push	ebx
	push	OFFSET FLAT:??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 2409
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	ebx
	call	_strcpy
	add	esp, 24					; 00000018H
; Line 2418
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _PL_Suffix[esi+44]
	lea	ebx, DWORD PTR _PL_Suffix[esi+4]
	mov	BYTE PTR _item[edi+60], 1
	push	DWORD PTR _PL_Suffix[esi+40]
	movsx	edx, BYTE PTR [ebx]
	push	DWORD PTR _PL_Suffix[esi+36]
	push	DWORD PTR _PL_Suffix[esi+12]
	push	DWORD PTR _PL_Suffix[esi+8]
	call	@SaveItemPower@28
; Line 2419
	mov	al, BYTE PTR [ebx]
	mov	BYTE PTR _item[edi+333], al
$L86347:
; Line 2423
	mov	esi, DWORD PTR _i$[ebp]
	imul	esi, 368				; 00000170H
	lea	edi, DWORD PTR _item[esi+125]
	mov	ecx, edi
	call	@control_WriteStringToBuffer@4
	test	eax, eax
	jne	$L88663
; Line 2424
	mov	eax, DWORD PTR _item[esi+360]
	imul	eax, 76					; 0000004cH
	push	DWORD PTR _AllItemsList[eax+20]
	push	edi
	call	_strcpy
; Line 2425
	mov	ebx, DWORD PTR _preidx$[ebp]
	pop	ecx
	cmp	ebx, -1
	pop	ecx
	je	SHORT $L86349
; Line 2426
	lea	eax, DWORD PTR [ebx+ebx*2]
	push	edi
	shl	eax, 4
	push	DWORD PTR _PL_Prefix[eax]
	lea	eax, DWORD PTR _istr$[ebp]
	push	OFFSET FLAT:??_C@_05JKGE@?$CFs?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 2427
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	edi
	call	_strcpy
	add	esp, 24					; 00000018H
$L86349:
; Line 2429
	mov	esi, DWORD PTR _sufidx$[ebp]
	cmp	esi, -1
	je	SHORT $L86350
; Line 2430
	lea	eax, DWORD PTR [esi+esi*2]
	shl	eax, 4
	push	DWORD PTR _PL_Suffix[eax]
	lea	eax, DWORD PTR _istr$[ebp]
	push	edi
	push	OFFSET FLAT:??_C@_08DBB@?$CFs?5of?5?$CFs?$AA@ ; `string'
	push	eax
	call	_sprintf
; Line 2431
	lea	eax, DWORD PTR _istr$[ebp]
	push	eax
	push	edi
	call	_strcpy
	add	esp, 24					; 00000018H
	jmp	SHORT $L86350
$L88663:
	mov	ebx, DWORD PTR _preidx$[ebp]
	mov	esi, DWORD PTR _sufidx$[ebp]
$L86350:
; Line 2434
	cmp	ebx, -1
	pop	edi
	pop	ebx
	jne	SHORT $L86352
	cmp	esi, -1
	je	SHORT $L86351
$L86352:
; Line 2435
	mov	ecx, DWORD PTR _i$[ebp]
	call	@CalcItemValue@4
$L86351:
	pop	esi
; Line 2436
	leave
	ret	12					; 0000000cH
@GetItemPower@20 ENDP
_TEXT	ENDS
PUBLIC	@GetItemBonus@20
; Function compile flags: /Ogsy
;	COMDAT @GetItemBonus@20
_TEXT	SEGMENT
_onlygood$ = 16
_minlvl$ = 8
_maxlvl$ = 12
@GetItemBonus@20 PROC NEAR				; COMDAT
; _i$ = ecx
; _idata$ = edx
; Line 2440
	push	ebp
	mov	ebp, esp
; Line 2441
	mov	eax, ecx
	imul	eax, 368				; 00000170H
	cmp	BYTE PTR _item[eax+190], 4
	je	SHORT $L86376
; Line 2442
	mov	edx, DWORD PTR _minlvl$[ebp]
	cmp	edx, 25					; 00000019H
	jle	SHORT $L86365
; Line 2443
	push	25					; 00000019H
	pop	edx
$L86365:
; Line 2445
	mov	eax, DWORD PTR _item[eax+8]
	dec	eax
	cmp	eax, 12					; 0000000cH
	ja	SHORT $L86376
	movzx	eax, BYTE PTR $L88666[eax]
	jmp	DWORD PTR $L88668[eax*4]
$L86370:
; Line 2449
	push	DWORD PTR _onlygood$[ebp]
	push	4096					; 00001000H
; Line 2450
	jmp	SHORT $L88667
$L86371:
; Line 2452
	push	DWORD PTR _onlygood$[ebp]
	push	16					; 00000010H
; Line 2453
	jmp	SHORT $L88667
$L86372:
; Line 2455
	push	DWORD PTR _onlygood$[ebp]
	push	65536					; 00010000H
; Line 2456
	jmp	SHORT $L88667
$L86373:
; Line 2461
	push	DWORD PTR _onlygood$[ebp]
	push	1048576					; 00100000H
; Line 2462
	jmp	SHORT $L88667
$L86374:
; Line 2464
	push	DWORD PTR _onlygood$[ebp]
	mov	edx, DWORD PTR _maxlvl$[ebp]
	call	@GetStaffSpell@12
; Line 2465
	jmp	SHORT $L86376
$L86375:
; Line 2468
	push	DWORD PTR _onlygood$[ebp]
	push	1
$L88667:
	push	DWORD PTR _maxlvl$[ebp]
	call	@GetItemPower@20
$L86376:
; Line 2474
	pop	ebp
	ret	12					; 0000000cH
$L88668:
	DD	$L86370
	DD	$L86371
	DD	$L86372
	DD	$L86373
	DD	$L86374
	DD	$L86375
	DD	$L86376
$L88666:
	DB	0
	DB	0
	DB	1
	DB	0
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	4
	DB	6
	DB	5
	DB	5
@GetItemBonus@20 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @SetupItem@4
_TEXT	SEGMENT
@SetupItem@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 2481
	imul	ecx, 368				; 00000170H
	push	esi
; Line 2490
	mov	esi, DWORD PTR _myplr
	mov	eax, DWORD PTR _item[ecx+192]
	imul	esi, 21720				; 000054d8H
	movzx	eax, BYTE PTR _ItemCAnimTbl[eax]
	mov	DWORD PTR _item[ecx+36], 96		; 00000060H
	mov	DWORD PTR _item[ecx+40], 16		; 00000010H
	movzx	edx, BYTE PTR _ItemAnimLs[eax]
	mov	eax, DWORD PTR _Item2Frm[eax*4]
	mov	DWORD PTR _item[ecx+28], edx
	mov	DWORD PTR _item[ecx+24], eax
	xor	eax, eax
	cmp	BYTE PTR _plr[esi+21626], al
	mov	DWORD PTR _item[ecx+56], eax
	mov	DWORD PTR _item[ecx+52], eax
	pop	esi
	jne	SHORT $L86382
; Line 2492
	xor	edx, edx
	mov	BYTE PTR _item[ecx+48], al
	inc	edx
; Line 2493
	mov	DWORD PTR _item[ecx+20], edx
; Line 2494
	jmp	SHORT $L86383
$L86382:
; Line 2495
	mov	DWORD PTR _item[ecx+20], eax
; Line 2496
	mov	BYTE PTR _item[ecx+48], 1
$L86383:
; Line 2499
	mov	DWORD PTR _item[ecx+32], edx
; Line 2500
	ret	0
@SetupItem@4 ENDP
_TEXT	ENDS
PUBLIC	@RndItem@4
EXTRN	_monster:BYTE
; Function compile flags: /Ogsy
;	COMDAT @RndItem@4
_TEXT	SEGMENT
_ril$ = -2048
@RndItem@4 PROC NEAR					; COMDAT
; _m$ = ecx
; Line 2503
	push	ebp
	mov	ebp, esp
	sub	esp, 2048				; 00000800H
	push	edi
	mov	edi, ecx
; Line 2507
	imul	edi, 228				; 000000e4H
	mov	eax, DWORD PTR _monster[edi+224]
	mov	cx, WORD PTR [eax+120]
	test	ch, ch
	jns	SHORT $L86390
; Line 2508
	and	ecx, 4095				; 00000fffH
	or	eax, -1
	sub	eax, ecx
	jmp	$L86386
$L86390:
; Line 2510
	test	ch, 64					; 00000040H
; Line 2511
	jne	SHORT $L88679
; Line 2513
	push	100					; 00000064H
	mov	cl, 24					; 00000018H
	pop	edx
	call	@random@8
	cmp	eax, 40					; 00000028H
	jle	SHORT $L86392
$L88679:
; Line 2514
	xor	eax, eax
	jmp	$L86386
$L86392:
; Line 2516
	push	100					; 00000064H
	mov	cl, 24					; 00000018H
	pop	edx
	call	@random@8
	cmp	eax, 25					; 00000019H
	jle	SHORT $L86393
; Line 2517
	xor	eax, eax
	inc	eax
	jmp	$L86386
$L86393:
	push	esi
; Line 2519
	xor	esi, esi
; Line 2520
	xor	edx, edx
	cmp	BYTE PTR _AllItemsList+5, -1
	je	SHORT $L86396
	mov	eax, OFFSET FLAT:_AllItemsList+24
	push	ebx
$L86394:
; Line 2521
	mov	ecx, DWORD PTR [eax-24]
	cmp	ecx, 2
	jne	SHORT $L86397
	mov	bl, BYTE PTR _monster[edi+192]
	cmp	bl, BYTE PTR [eax]
	jl	SHORT $L86397
; Line 2522
	mov	DWORD PTR _ril$[ebp+esi*4], edx
; Line 2523
	inc	esi
$L86397:
; Line 2525
	test	ecx, ecx
	je	SHORT $L86398
	mov	cl, BYTE PTR _monster[edi+192]
	cmp	cl, BYTE PTR [eax]
	jl	SHORT $L86398
; Line 2526
	mov	DWORD PTR _ril$[ebp+esi*4], edx
; Line 2527
	inc	esi
$L86398:
; Line 2529
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $L86399
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86399
; Line 2530
	dec	esi
$L86399:
; Line 2531
	cmp	ecx, 34					; 00000022H
	jne	SHORT $L86395
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86395
; Line 2532
	dec	esi
$L86395:
; Line 2520
	add	eax, 76					; 0000004cH
	inc	edx
	cmp	BYTE PTR [eax-19], -1
	jne	SHORT $L86394
	pop	ebx
$L86396:
; Line 2535
	mov	edx, esi
	mov	cl, 24					; 00000018H
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	inc	eax
	pop	esi
$L86386:
	pop	edi
; Line 2536
	leave
	ret	0
@RndItem@4 ENDP
_TEXT	ENDS
PUBLIC	@RndUItem@4
; Function compile flags: /Ogsy
;	COMDAT @RndUItem@4
_TEXT	SEGMENT
_ril$ = -2048
@RndUItem@4 PROC NEAR					; COMDAT
; _m$ = ecx
; Line 2545
	or	eax, -1
	sub	esp, 2048				; 00000800H
	cmp	ecx, eax
	je	SHORT $L86408
	mov	edx, ecx
	imul	edx, 228				; 000000e4H
	mov	edx, DWORD PTR _monster[edx+224]
	mov	dx, WORD PTR [edx+120]
	test	dh, dh
	jns	SHORT $L86408
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86408
; Line 2546
	and	edx, 4095				; 00000fffH
	sub	eax, edx
	jmp	$L86403
$L86408:
	push	ebp
; Line 2548
	xor	edx, edx
; Line 2549
	xor	ebp, ebp
	cmp	BYTE PTR _AllItemsList+5, al
	je	$L86411
	push	ebx
	push	esi
	push	edi
	mov	esi, OFFSET FLAT:_AllItemsList+12
$L86409:
; Line 2550
	xor	edi, edi
	inc	edi
; Line 2551
	cmp	DWORD PTR [esi-12], 0
	jne	SHORT $L86412
; Line 2552
	xor	edi, edi
$L86412:
; Line 2553
	cmp	ecx, eax
	je	SHORT $L86413
; Line 2554
	mov	eax, ecx
	imul	eax, 228				; 000000e4H
	mov	al, BYTE PTR _monster[eax+192]
	cmp	al, BYTE PTR [esi+12]
; Line 2556
	jmp	SHORT $L88690
$L86413:
; Line 2557
	movzx	eax, BYTE PTR _currlevel
	movsx	ebx, BYTE PTR [esi+12]
	add	eax, eax
	cmp	eax, ebx
$L88690:
	jge	SHORT $L86416
; Line 2558
	xor	edi, edi
$L86416:
; Line 2560
	mov	bl, BYTE PTR [esi]
	test	bl, bl
	jne	SHORT $L86417
; Line 2561
	xor	edi, edi
$L86417:
; Line 2562
	cmp	bl, 11					; 0000000bH
	jne	SHORT $L86418
; Line 2563
	xor	edi, edi
$L86418:
; Line 2564
	cmp	bl, 14					; 0000000eH
	jne	SHORT $L86419
; Line 2565
	xor	edi, edi
$L86419:
; Line 2566
	cmp	DWORD PTR [esi+44], 24			; 00000018H
	jne	SHORT $L86420
; Line 2567
	xor	edi, edi
	inc	edi
$L86420:
; Line 2568
	mov	ebx, DWORD PTR [esi+48]
	cmp	ebx, 32					; 00000020H
	jne	SHORT $L86421
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86421
; Line 2569
	xor	edi, edi
$L86421:
; Line 2570
	cmp	ebx, 34					; 00000022H
	jne	SHORT $L86422
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86422
; Line 2571
	xor	edi, edi
$L86422:
; Line 2572
	test	edi, edi
	je	SHORT $L86410
; Line 2573
	mov	DWORD PTR _ril$[esp+edx*4+2064], ebp
; Line 2574
	inc	edx
$L86410:
	add	esi, 76					; 0000004cH
	or	eax, -1
	inc	ebp
	cmp	BYTE PTR [esi-7], al
	jne	$L86409
	pop	edi
	pop	esi
	pop	ebx
$L86411:
; Line 2578
	mov	cl, 25					; 00000019H
	call	@random@8
	mov	eax, DWORD PTR _ril$[esp+eax*4+2052]
	pop	ebp
$L86403:
; Line 2579
	add	esp, 2048				; 00000800H
	ret	0
@RndUItem@4 ENDP
_TEXT	ENDS
PUBLIC	_RndAllItems
; Function compile flags: /Ogsy
;	COMDAT _RndAllItems
_TEXT	SEGMENT
_ril$ = -2048
_RndAllItems PROC NEAR					; COMDAT
; Line 2583
	push	ebp
	mov	ebp, esp
	sub	esp, 2048				; 00000800H
; Line 2587
	push	100					; 00000064H
	mov	cl, 26					; 0000001aH
	pop	edx
	call	@random@8
	cmp	eax, 25					; 00000019H
	jle	SHORT $L86428
; Line 2588
	xor	eax, eax
; Line 2603
	leave
	ret	0
$L86428:
	push	esi
	push	edi
; Line 2590
	xor	esi, esi
; Line 2591
	xor	edi, edi
	cmp	BYTE PTR _AllItemsList+5, -1
	je	SHORT $L86431
	mov	dl, BYTE PTR _gbMaxPlayers
	mov	eax, OFFSET FLAT:_AllItemsList+60
	push	ebx
$L86429:
; Line 2592
	cmp	DWORD PTR [eax-60], 0
	je	SHORT $L86432
	movzx	ecx, BYTE PTR _currlevel
	movsx	ebx, BYTE PTR [eax-36]
	add	ecx, ecx
	cmp	ecx, ebx
	jl	SHORT $L86432
; Line 2593
	mov	DWORD PTR _ril$[ebp+esi*4], edi
; Line 2594
	inc	esi
$L86432:
; Line 2596
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $L86433
	cmp	dl, 1
	jne	SHORT $L86433
; Line 2597
	dec	esi
$L86433:
; Line 2598
	cmp	ecx, 34					; 00000022H
	jne	SHORT $L86430
	cmp	dl, 1
	jne	SHORT $L86430
; Line 2599
	dec	esi
$L86430:
; Line 2591
	add	eax, 76					; 0000004cH
	inc	edi
	cmp	BYTE PTR [eax-55], -1
	jne	SHORT $L86429
	pop	ebx
$L86431:
; Line 2602
	mov	edx, esi
	mov	cl, 26					; 0000001aH
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	pop	edi
	pop	esi
; Line 2603
	leave
	ret	0
_RndAllItems ENDP
_TEXT	ENDS
PUBLIC	@RndTypeItems@8
; Function compile flags: /Ogsy
;	COMDAT @RndTypeItems@8
_TEXT	SEGMENT
_itype$ = -8
_ril$ = -2056
_ri$ = -4
@RndTypeItems@8 PROC NEAR				; COMDAT
; _itype$ = ecx
; _imid$ = edx
; Line 2607
	push	ebp
	mov	ebp, esp
	sub	esp, 2056				; 00000808H
; Line 2613
	and	DWORD PTR _ri$[ebp], 0
	push	edi
; Line 2614
	xor	edi, edi
; Line 2616
	cmp	BYTE PTR _AllItemsList+5, -1
	mov	DWORD PTR _itype$[ebp], ecx
	je	SHORT $L86447
	push	ebx
	push	esi
; Line 2633
	movzx	esi, BYTE PTR _currlevel
	add	esi, esi
	mov	eax, OFFSET FLAT:_AllItemsList+24
$L86445:
	cmp	DWORD PTR [eax-24], 0
	mov	bl, 1
	jne	SHORT $L86448
; Line 2620
	xor	bl, bl
$L86448:
; Line 2621
	movsx	ecx, BYTE PTR [eax]
	cmp	esi, ecx
	jge	SHORT $L86449
; Line 2622
	xor	bl, bl
$L86449:
; Line 2623
	movsx	ecx, BYTE PTR [eax-12]
	cmp	ecx, DWORD PTR _itype$[ebp]
	je	SHORT $L86450
; Line 2624
	xor	bl, bl
$L86450:
; Line 2625
	cmp	edx, -1
	je	SHORT $L86451
	cmp	DWORD PTR [eax+32], edx
	je	SHORT $L86451
; Line 2626
	xor	bl, bl
$L86451:
; Line 2627
	test	bl, bl
	je	SHORT $L86452
; Line 2628
	mov	ecx, DWORD PTR _ri$[ebp]
	inc	DWORD PTR _ri$[ebp]
	mov	DWORD PTR _ril$[ebp+ecx*4], edi
$L86452:
; Line 2629
	add	eax, 76					; 0000004cH
	inc	edi
; Line 2630
	cmp	BYTE PTR [eax-19], -1
	jne	SHORT $L86445
	pop	esi
	pop	ebx
$L86447:
; Line 2633
	mov	edx, DWORD PTR _ri$[ebp]
	mov	cl, 27					; 0000001bH
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	pop	edi
; Line 2634
	leave
	ret	0
@RndTypeItems@8 ENDP
_TEXT	ENDS
PUBLIC	@CheckUnique@16
; Function compile flags: /Ogsy
;	COMDAT @CheckUnique@16
_TEXT	SEGMENT
_lvl$ = -8
_uper$ = 8
_recreate$ = 12
_numu$ = -4
_uok$ = -136
@CheckUnique@16 PROC NEAR				; COMDAT
; _i$ = ecx
; _lvl$ = edx
; Line 2638
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	esi
	push	edi
; Line 2644
	push	100					; 00000064H
	mov	DWORD PTR _lvl$[ebp], edx
	mov	esi, ecx
	pop	edx
	mov	cl, 28					; 0000001cH
	call	@random@8
	cmp	eax, DWORD PTR _uper$[ebp]
; Line 2645
	jg	$L88711
; Line 2646
	and	DWORD PTR _numu$[ebp], 0
; Line 2647
	mov	edi, 128				; 00000080H
	push	edi
	lea	eax, DWORD PTR _uok$[ebp]
	push	0
	push	eax
	call	_memset
	imul	esi, 368				; 00000170H
	add	esp, 12					; 0000000cH
	mov	cl, 17					; 00000011H
	mov	eax, DWORD PTR _item[esi+360]
	mov	esi, OFFSET FLAT:_UniqueItemList+4
	imul	eax, 76					; 0000004cH
	mov	DWORD PTR 8+[ebp], OFFSET FLAT:_UniqueItemFlag
	mov	dl, BYTE PTR _AllItemsList[eax+13]
	lea	eax, DWORD PTR _uok$[ebp]
$L86468:
; Line 2655
	cmp	cl, dl
	jne	SHORT $L86471
	movsx	ecx, BYTE PTR [esi+1]
	cmp	DWORD PTR _lvl$[ebp], ecx
	jl	SHORT $L86471
	cmp	BYTE PTR _recreate$[ebp], 0
	jne	SHORT $L86472
	mov	ecx, DWORD PTR 8+[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $L86472
	cmp	BYTE PTR _gbMaxPlayers, 1
	je	SHORT $L86471
$L86472:
; Line 2657
	inc	DWORD PTR _numu$[ebp]
	mov	BYTE PTR [eax], 1
$L86471:
; Line 2659
	add	DWORD PTR 8+[ebp], 4
	add	esi, 84					; 00000054H
	inc	eax
; Line 2660
	mov	cl, BYTE PTR [esi]
	cmp	cl, -1
	jne	SHORT $L86468
; Line 2661
	mov	esi, DWORD PTR _numu$[ebp]
	test	esi, esi
	jne	SHORT $L86473
$L88711:
; Line 2662
	or	eax, -1
$L86461:
	pop	edi
	pop	esi
; Line 2677
	leave
	ret	8
$L86473:
; Line 2664
	push	10					; 0000000aH
	mov	cl, 29					; 0000001dH
	pop	edx
	call	@random@8
; Line 2665
	xor	eax, eax
; Line 2666
	test	esi, esi
	jle	SHORT $L86461
$L86476:
; Line 2668
	cmp	BYTE PTR _uok$[ebp+eax], 0
	je	SHORT $L86478
; Line 2669
	dec	esi
$L86478:
; Line 2670
	test	esi, esi
	jle	SHORT $L86461
; Line 2672
	inc	eax
	cmp	eax, edi
	jne	SHORT $L86476
; Line 2673
	xor	eax, eax
; Line 2667
	jmp	SHORT $L86476
@CheckUnique@16 ENDP
_TEXT	ENDS
PUBLIC	@GetUniqueItem@8
; Function compile flags: /Ogsy
;	COMDAT @GetUniqueItem@8
_TEXT	SEGMENT
_uid$ = -4
@GetUniqueItem@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _uid$ = edx
; Line 2682
	push	ecx
	push	ebx
	push	ebp
	push	esi
; Line 2684
	mov	esi, edx
	imul	esi, 84					; 00000054H
	xor	ebx, ebx
	push	edi
	inc	ebx
	xor	ebp, ebp
	push	ebx
	push	ebp
	push	ebp
	mov	DWORD PTR _uid$[esp+32], edx
	push	DWORD PTR _UniqueItemList[esi+20]
	mov	DWORD PTR _UniqueItemFlag[edx*4], ebx
	movsx	edx, BYTE PTR _UniqueItemList[esi+12]
	push	DWORD PTR _UniqueItemList[esi+16]
	mov	edi, ecx
	call	@SaveItemPower@28
; Line 2686
	cmp	BYTE PTR _UniqueItemList[esi+6], bl
	jle	SHORT $L86486
; Line 2687
	movsx	edx, BYTE PTR _UniqueItemList[esi+24]
	push	ebx
	push	ebp
	push	ebp
	mov	ecx, edi
	push	DWORD PTR _UniqueItemList[esi+32]
	push	DWORD PTR _UniqueItemList[esi+28]
	call	@SaveItemPower@28
$L86486:
; Line 2688
	cmp	BYTE PTR _UniqueItemList[esi+6], 2
	jle	SHORT $L86487
; Line 2689
	movsx	edx, BYTE PTR _UniqueItemList[esi+36]
	push	ebx
	push	ebp
	push	ebp
	mov	ecx, edi
	push	DWORD PTR _UniqueItemList[esi+44]
	push	DWORD PTR _UniqueItemList[esi+40]
	call	@SaveItemPower@28
$L86487:
; Line 2690
	cmp	BYTE PTR _UniqueItemList[esi+6], 3
	jle	SHORT $L86488
; Line 2691
	movsx	edx, BYTE PTR _UniqueItemList[esi+48]
	push	ebx
	push	ebp
	push	ebp
	mov	ecx, edi
	push	DWORD PTR _UniqueItemList[esi+56]
	push	DWORD PTR _UniqueItemList[esi+52]
	call	@SaveItemPower@28
$L86488:
; Line 2692
	cmp	BYTE PTR _UniqueItemList[esi+6], 4
	jle	SHORT $L86489
; Line 2693
	movsx	edx, BYTE PTR _UniqueItemList[esi+60]
	push	ebx
	push	ebp
	push	ebp
	mov	ecx, edi
	push	DWORD PTR _UniqueItemList[esi+68]
	push	DWORD PTR _UniqueItemList[esi+64]
	call	@SaveItemPower@28
$L86489:
; Line 2694
	cmp	BYTE PTR _UniqueItemList[esi+6], 5
	jle	SHORT $L86490
; Line 2695
	movsx	edx, BYTE PTR _UniqueItemList[esi+72]
	push	ebx
	push	ebp
	push	ebp
	mov	ecx, edi
	push	DWORD PTR _UniqueItemList[esi+80]
	push	DWORD PTR _UniqueItemList[esi+76]
	call	@SaveItemPower@28
$L86490:
; Line 2697
	imul	edi, 368				; 00000170H
	push	DWORD PTR _UniqueItemList[esi]
	lea	eax, DWORD PTR _item[edi+125]
	push	eax
	call	_strcpy
; Line 2698
	mov	eax, DWORD PTR _UniqueItemList[esi+8]
; Line 2700
	cmp	DWORD PTR _item[edi+220], 27		; 0000001bH
	pop	ecx
	mov	DWORD PTR _item[edi+200], eax
	pop	ecx
	jne	SHORT $L86491
; Line 2701
	mov	eax, DWORD PTR _uid$[esp+20]
	mov	DWORD PTR _item[edi], eax
$L86491:
; Line 2704
	mov	eax, DWORD PTR _uid$[esp+20]
	or	BYTE PTR _item[edi+5], 2
	mov	DWORD PTR _item[edi+308], eax
; Line 2705
	mov	BYTE PTR _item[edi+60], 2
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2706
	pop	ecx
	ret	0
@GetUniqueItem@8 ENDP
_TEXT	ENDS
PUBLIC	@SpawnUnique@12
; Function compile flags: /Ogsy
;	COMDAT @SpawnUnique@12
_TEXT	SEGMENT
_y$ = 8
@SpawnUnique@12 PROC NEAR				; COMDAT
; _uid$ = ecx
; _x$ = edx
; Line 2713
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	push	ebx
	push	edi
	mov	ebx, edx
	mov	edi, ecx
	jge	SHORT $L86501
; Line 2714
	mov	eax, DWORD PTR _itemavail
; Line 2715
	mov	edx, DWORD PTR _y$[esp+4]
	push	esi
	push	eax
	mov	ecx, ebx
	mov	esi, eax
	call	@GetSuperItemSpace@12
; Line 2717
	mov	eax, DWORD PTR _numitems
; Line 2718
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
	xor	edx, edx
	mov	DWORD PTR _itemactive[eax], esi
	mov	eax, DWORD PTR [ecx]
; Line 2720
	mov	cl, BYTE PTR _AllItemsList+13
	mov	DWORD PTR _itemavail, eax
	mov	eax, edi
	imul	eax, 84					; 00000054H
	mov	al, BYTE PTR _UniqueItemList[eax+4]
	cmp	cl, al
	je	SHORT $L86505
; Line 2721
	mov	ecx, OFFSET FLAT:_AllItemsList+13
$L86504:
; Line 2722
	add	ecx, 76					; 0000004cH
	inc	edx
	cmp	BYTE PTR [ecx], al
	jne	SHORT $L86504
$L86505:
; Line 2726
	movzx	eax, BYTE PTR _currlevel
	push	eax
	mov	ecx, esi
	call	@GetItemAttrs@12
; Line 2727
	mov	edx, edi
	mov	ecx, esi
	call	@GetUniqueItem@8
; Line 2728
	mov	ecx, esi
	call	@SetupItem@4
; Line 2729
	inc	DWORD PTR _numitems
	pop	esi
$L86501:
	pop	edi
	pop	ebx
; Line 2731
	ret	4
@SpawnUnique@12 ENDP
_TEXT	ENDS
PUBLIC	@ItemRndDur@4
; Function compile flags: /Ogsy
;	COMDAT @ItemRndDur@4
_TEXT	SEGMENT
@ItemRndDur@4 PROC NEAR					; COMDAT
; _ii$ = ecx
; Line 2735
	push	esi
	mov	esi, ecx
; Line 2736
	imul	esi, 368				; 00000170H
	mov	eax, DWORD PTR _item[esi+236]
	test	eax, eax
	je	SHORT $L86509
	cmp	eax, 255				; 000000ffH
	je	SHORT $L86509
	push	edi
; Line 2737
	lea	edi, DWORD PTR _item[esi+240]
	xor	cl, cl
	mov	edx, DWORD PTR [edi]
	sar	edx, 1
	call	@random@8
	mov	ecx, DWORD PTR [edi]
	sar	ecx, 2
	pop	edi
	lea	eax, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _item[esi+236], eax
$L86509:
	pop	esi
; Line 2738
	ret	0
@ItemRndDur@4 ENDP
_TEXT	ENDS
PUBLIC	@SetupAllItems@32
; Function compile flags: /Ogsy
;	COMDAT @SetupAllItems@32
_TEXT	SEGMENT
_ii$ = -4
_idx$ = -8
_iseed$ = 8
_lvl$ = 12
_uper$ = 16
_onlygood$ = 20
_recreate$ = 24
_pregen$ = 28
@SetupAllItems@32 PROC NEAR				; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 2741
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _ii$[ebp], esi
; Line 2745
	imul	esi, 368				; 00000170H
	mov	edi, DWORD PTR _iseed$[ebp]
	mov	DWORD PTR _idx$[ebp], edx
; Line 2746
	mov	ecx, edi
	mov	DWORD PTR _item[esi], edi
	call	@SetRndSeed@4
; Line 2747
	mov	ebx, DWORD PTR _lvl$[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _ii$[ebp]
	mov	eax, ebx
	sar	eax, 1
	push	eax
	call	@GetItemAttrs@12
; Line 2750
	cmp	DWORD PTR _pregen$[ebp], 0
	mov	WORD PTR _item[esi+4], bx
	je	SHORT $L86529
; Line 2751
	mov	eax, ebx
	or	ah, -128				; ffffff80H
	mov	WORD PTR _item[esi+4], ax
$L86529:
; Line 2752
	cmp	DWORD PTR _onlygood$[ebp], 0
	je	SHORT $L86530
; Line 2753
	or	BYTE PTR _item[esi+4], 64		; 00000040H
$L86530:
; Line 2755
	cmp	DWORD PTR _uper$[ebp], 15		; 0000000fH
	jne	SHORT $L86531
; Line 2756
	or	BYTE PTR _item[esi+4], -128		; ffffff80H
; Line 2757
	jmp	SHORT $L86533
$L86531:
	cmp	DWORD PTR _uper$[ebp], 1
	jne	SHORT $L86533
; Line 2758
	or	BYTE PTR _item[esi+5], 1
$L86533:
; Line 2760
	cmp	DWORD PTR _item[esi+220], 27		; 0000001bH
	jne	SHORT $L86534
; Line 2761
	cmp	BYTE PTR _item[esi+189], 7
	je	$L86550
; Line 2762
	mov	ecx, DWORD PTR _ii$[ebp]
	mov	edx, edi
	call	@GetUniqueItem@8
; Line 2763
	jmp	$L86550
$L86534:
; Line 2765
	push	100					; 00000064H
	mov	cl, 32					; 00000020H
	pop	edx
	or	edi, -1
	call	@random@8
	cmp	eax, 10					; 0000000aH
	jle	SHORT $L86539
	push	100					; 00000064H
	mov	cl, 33					; 00000021H
	pop	edx
	call	@random@8
	cmp	eax, ebx
	jg	SHORT $L86538
$L86539:
	cmp	ebx, -1
	mov	edi, ebx
	jne	SHORT $L86544
$L86538:
; Line 2767
	mov	eax, DWORD PTR _item[esi+220]
	cmp	eax, 23					; 00000017H
	jne	SHORT $L86541
	cmp	ebx, -1
	mov	edi, ebx
	jne	SHORT $L86544
$L86541:
; Line 2768
	cmp	eax, 25					; 00000019H
	jne	SHORT $L86543
	cmp	ebx, -1
	mov	edi, ebx
	jne	SHORT $L86544
$L86543:
; Line 2769
	cmp	eax, 26					; 0000001aH
	jne	SHORT $L86544
; Line 2770
	mov	edi, ebx
$L86544:
; Line 2774
	cmp	DWORD PTR _onlygood$[ebp], 0
	je	SHORT $L86545
; Line 2775
	mov	edi, ebx
$L86545:
; Line 2776
	cmp	DWORD PTR _uper$[ebp], 15		; 0000000fH
	jne	SHORT $L86546
; Line 2777
	lea	edi, DWORD PTR [ebx+4]
$L86546:
; Line 2778
	cmp	edi, -1
	je	SHORT $L86549
; Line 2779
	push	DWORD PTR _recreate$[ebp]
	mov	ecx, DWORD PTR _ii$[ebp]
	mov	edx, edi
	push	DWORD PTR _uper$[ebp]
	call	@CheckUnique@16
; Line 2781
	mov	ecx, DWORD PTR _ii$[ebp]
	cmp	eax, -1
	jne	SHORT $L86548
	push	DWORD PTR _onlygood$[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	push	edi
	sar	edi, 1
	push	edi
	call	@GetItemBonus@20
; Line 2782
	jmp	SHORT $L86549
$L86548:
; Line 2783
	mov	edx, eax
	call	@GetUniqueItem@8
; Line 2784
	or	BYTE PTR _item[esi+5], 2
$L86549:
; Line 2787
	cmp	BYTE PTR _item[esi+60], 2
	je	SHORT $L86550
; Line 2788
	mov	ecx, DWORD PTR _ii$[ebp]
	call	@ItemRndDur@4
$L86550:
; Line 2790
	mov	ecx, DWORD PTR _ii$[ebp]
	call	@SetupItem@4
	pop	edi
	pop	esi
	pop	ebx
; Line 2791
	leave
	ret	24					; 00000018H
@SetupAllItems@32 ENDP
_TEXT	ENDS
PUBLIC	@SpawnItem@16
EXTRN	_quests:BYTE
EXTRN	@NetSendCmdDItem@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT @SpawnItem@16
_TEXT	SEGMENT
_x$ = -12
_y$ = 8
_sendmsg$ = 12
_onlygood$ = -8
_idx$ = -4
@SpawnItem@16 PROC NEAR					; COMDAT
; _m$ = ecx
; _x$ = edx
; Line 2794
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
; Line 2799
	mov	esi, ecx
	xor	ebx, ebx
	imul	esi, 228				; 000000e4H
	push	edi
	mov	DWORD PTR _x$[ebp], edx
	cmp	BYTE PTR _monster[esi+188], bl
	jne	SHORT $L86563
	mov	eax, DWORD PTR _monster[esi+224]
	test	BYTE PTR [eax+121], -128		; ffffff80H
	je	SHORT $L86564
	cmp	BYTE PTR _gbMaxPlayers, 1
	jne	SHORT $L86563
$L86564:
; Line 2800
	cmp	BYTE PTR _quests+26, 2
	jne	SHORT $L86565
	cmp	BYTE PTR _quests+39, 5
	jne	SHORT $L86565
; Line 2801
	mov	DWORD PTR _idx$[ebp], 18		; 00000012H
; Line 2802
	mov	BYTE PTR _quests+39, 6
; Line 2803
	jmp	SHORT $LABEL_13$86566
$L86565:
; Line 2805
	call	@RndItem@4
; Line 2806
	cmp	eax, ebx
	mov	DWORD PTR _idx$[ebp], eax
	je	$L86574
; Line 2808
	jle	SHORT $LABEL_10$86569
; Line 2810
	dec	eax
	mov	DWORD PTR _onlygood$[ebp], ebx
	mov	DWORD PTR _idx$[ebp], eax
; Line 2811
	jmp	SHORT $LABEL_13$86566
$L86563:
; Line 2817
	call	@RndUItem@4
; Line 2818
	cmp	eax, ebx
	mov	DWORD PTR _idx$[ebp], eax
	jge	SHORT $L86570
$LABEL_10$86569:
; Line 2814
	push	DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	or	ecx, -1
	sub	ecx, DWORD PTR _idx$[ebp]
	call	@SpawnUnique@12
; Line 2815
	jmp	$L86574
$L86570:
; Line 2820
	mov	DWORD PTR _onlygood$[ebp], 1
$LABEL_13$86566:
; Line 2822
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	jge	SHORT $L86574
; Line 2823
	mov	eax, DWORD PTR _itemavail
; Line 2824
	mov	edx, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	push	eax
	mov	edi, eax
	call	@GetSuperItemSpace@12
; Line 2825
	mov	eax, DWORD PTR _numitems
; Line 2826
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
; Line 2828
	cmp	BYTE PTR _monster[esi+188], bl
	mov	DWORD PTR _itemactive[eax], edi
; Line 2829
	push	ebx
	mov	eax, DWORD PTR [ecx]
	push	ebx
	push	DWORD PTR _onlygood$[ebp]
	mov	DWORD PTR _itemavail, eax
	mov	eax, DWORD PTR _monster[esi+224]
	movsx	eax, BYTE PTR [eax+86]
	jne	SHORT $L86572
	push	1
; Line 2830
	jmp	SHORT $L88734
$L86572:
; Line 2831
	push	15					; 0000000fH
$L88734:
	push	eax
	call	_GetRndSeed
	mov	edx, DWORD PTR _idx$[ebp]
	mov	ecx, edi
	push	eax
	call	@SetupAllItems@32
; Line 2833
	inc	DWORD PTR _numitems
; Line 2834
	cmp	DWORD PTR _sendmsg$[ebp], ebx
	je	SHORT $L86574
; Line 2835
	mov	edx, edi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L86574:
	pop	edi
	pop	esi
	pop	ebx
; Line 2837
	leave
	ret	8
@SpawnItem@16 ENDP
_TEXT	ENDS
PUBLIC	@CreateItem@12
; Function compile flags: /Ogsy
;	COMDAT @CreateItem@12
_TEXT	SEGMENT
_y$ = 8
@CreateItem@12 PROC NEAR				; COMDAT
; _uid$ = ecx
; _x$ = edx
; Line 2845
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	push	ebx
	push	edi
	mov	ebx, edx
	mov	edi, ecx
	jge	$L86584
; Line 2846
	mov	eax, DWORD PTR _itemavail
; Line 2847
	mov	edx, DWORD PTR _y$[esp+4]
	push	esi
	push	eax
	mov	ecx, ebx
	mov	esi, eax
	call	@GetSuperItemSpace@12
; Line 2849
	mov	eax, DWORD PTR _numitems
; Line 2850
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
	xor	edx, edx
	mov	DWORD PTR _itemactive[eax], esi
	mov	eax, DWORD PTR [ecx]
; Line 2852
	mov	cl, BYTE PTR _AllItemsList+13
	mov	DWORD PTR _itemavail, eax
	mov	eax, edi
	imul	eax, 84					; 00000054H
	mov	al, BYTE PTR _UniqueItemList[eax+4]
	cmp	cl, al
	je	SHORT $L86588
; Line 2853
	mov	ecx, OFFSET FLAT:_AllItemsList+13
$L86587:
; Line 2854
	add	ecx, 76					; 0000004cH
	inc	edx
	cmp	BYTE PTR [ecx], al
	jne	SHORT $L86587
$L86588:
; Line 2858
	movzx	eax, BYTE PTR _currlevel
	push	eax
	mov	ecx, esi
	call	@GetItemAttrs@12
; Line 2859
	mov	edx, edi
	mov	ecx, esi
	call	@GetUniqueItem@8
; Line 2860
	mov	ecx, esi
	call	@SetupItem@4
; Line 2861
	inc	DWORD PTR _numitems
; Line 2862
	imul	esi, 368				; 00000170H
	mov	BYTE PTR _item[esi+60], 2
	pop	esi
$L86584:
	pop	edi
	pop	ebx
; Line 2864
	ret	4
@CreateItem@12 ENDP
_TEXT	ENDS
PUBLIC	@CreateRndItem@20
; Function compile flags: /Ogsy
;	COMDAT @CreateRndItem@20
_TEXT	SEGMENT
_x$ = -4
_onlygood$ = 8
_sendmsg$ = 12
_delta$ = 16
@CreateRndItem@20 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 2868
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2872
	cmp	BYTE PTR _onlygood$[ebp], 0
	push	ebx
	push	edi
	mov	ebx, edx
	mov	DWORD PTR _x$[ebp], ecx
	je	SHORT $L86602
; Line 2873
	or	ecx, -1
	call	@RndUItem@4
; Line 2874
	jmp	SHORT $L88742
$L86602:
; Line 2875
	call	_RndAllItems
$L88742:
; Line 2877
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	mov	edi, eax
	jge	SHORT $L86604
; Line 2878
	mov	eax, DWORD PTR _itemavail
; Line 2879
	mov	ecx, DWORD PTR _x$[ebp]
	push	esi
	push	eax
	mov	edx, ebx
	mov	esi, eax
	call	@GetSuperItemSpace@12
; Line 2880
	mov	eax, DWORD PTR _numitems
; Line 2881
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
; Line 2882
	push	DWORD PTR _delta$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _itemactive[eax], esi
	mov	eax, DWORD PTR [ecx]
	push	0
	mov	DWORD PTR _itemavail, eax
	movzx	eax, BYTE PTR _onlygood$[ebp]
	push	eax
	push	1
	movzx	eax, BYTE PTR _currlevel
	add	eax, eax
	push	eax
	call	_GetRndSeed
	push	eax
	mov	edx, edi
	mov	ecx, esi
	call	@SetupAllItems@32
; Line 2884
	cmp	BYTE PTR _sendmsg$[ebp], 0
	je	SHORT $L86605
; Line 2885
	mov	edx, esi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L86605:
; Line 2886
	cmp	DWORD PTR _delta$[ebp], 0
	je	SHORT $L86606
; Line 2887
	mov	ecx, esi
	call	@DeltaAddItem@4
$L86606:
; Line 2889
	inc	DWORD PTR _numitems
	pop	esi
$L86604:
	pop	edi
	pop	ebx
; Line 2891
	leave
	ret	12					; 0000000cH
@CreateRndItem@20 ENDP
_TEXT	ENDS
PUBLIC	@SetupAllUseful@12
; Function compile flags: /Ogsy
;	COMDAT @SetupAllUseful@12
_TEXT	SEGMENT
_lvl$ = 8
@SetupAllUseful@12 PROC NEAR				; COMDAT
; _ii$ = ecx
; _iseed$ = edx
; Line 2894
	push	ebx
	push	ebp
	mov	ebx, ecx
	push	esi
; Line 2897
	mov	esi, ebx
	push	edi
	imul	esi, 368				; 00000170H
; Line 2898
	mov	ecx, edx
	mov	DWORD PTR _item[esi], edx
	call	@SetRndSeed@4
; Line 2899
	mov	cl, 34					; 00000022H
	push	2
	pop	edx
	call	@random@8
; Line 2901
	mov	ebp, DWORD PTR _lvl$[esp+12]
	neg	eax
	sbb	eax, eax
	push	25					; 00000019H
	neg	eax
	pop	edi
	sub	edi, eax
	cmp	ebp, 1
	jle	SHORT $L86616
; Line 2902
	push	3
	mov	cl, 34					; 00000022H
	pop	edx
	call	@random@8
	test	eax, eax
	jne	SHORT $L86616
; Line 2903
	push	27					; 0000001bH
	pop	edi
$L86616:
; Line 2906
	push	ebp
	mov	edx, edi
	mov	ecx, ebx
	call	@GetItemAttrs@12
; Line 2907
	add	ebp, 384				; 00000180H
; Line 2908
	mov	ecx, ebx
	mov	WORD PTR _item[esi+4], bp
	call	@SetupItem@4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2909
	ret	4
@SetupAllUseful@12 ENDP
_TEXT	ENDS
PUBLIC	@CreateRndUseful@16
; Function compile flags: /Ogsy
;	COMDAT @CreateRndUseful@16
_TEXT	SEGMENT
_y$ = 8
_sendmsg$ = 12
@CreateRndUseful@16 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _x$ = edx
; Line 2915
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	mov	ecx, edx
	jge	SHORT $L86627
; Line 2916
	mov	eax, DWORD PTR _itemavail
; Line 2917
	mov	edx, DWORD PTR _y$[esp-4]
	push	esi
	push	eax
	mov	esi, eax
	call	@GetSuperItemSpace@12
; Line 2918
	mov	eax, DWORD PTR _numitems
; Line 2919
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
	mov	DWORD PTR _itemactive[eax], esi
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _itemavail, eax
; Line 2920
	movzx	eax, BYTE PTR _currlevel
	push	eax
	call	_GetRndSeed
	mov	edx, eax
	mov	ecx, esi
	call	@SetupAllUseful@12
; Line 2922
	cmp	BYTE PTR _sendmsg$[esp], 0
	je	SHORT $L86628
; Line 2923
	mov	edx, esi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L86628:
; Line 2925
	inc	DWORD PTR _numitems
	pop	esi
$L86627:
; Line 2927
	ret	8
@CreateRndUseful@16 ENDP
_TEXT	ENDS
PUBLIC	@CreateTypeItem@28
; Function compile flags: /Ogsy
;	COMDAT @CreateTypeItem@28
_TEXT	SEGMENT
_x$ = -4
_onlygood$ = 8
_itype$ = 12
_imisc$ = 16
_sendmsg$ = 20
_delta$ = 24
@CreateTypeItem@28 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 2930
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _x$[ebp], ecx
; Line 2934
	mov	ecx, DWORD PTR _itype$[ebp]
	push	ebx
	cmp	ecx, 11					; 0000000bH
	push	edi
	mov	ebx, edx
	jne	SHORT $L86646
; Line 2935
	xor	edi, edi
; Line 2936
	jmp	SHORT $L86647
$L86646:
; Line 2937
	mov	edx, DWORD PTR _imisc$[ebp]
	call	@RndTypeItems@8
	mov	edi, eax
$L86647:
; Line 2939
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	jge	SHORT $L86648
; Line 2940
	mov	eax, DWORD PTR _itemavail
; Line 2941
	mov	ecx, DWORD PTR _x$[ebp]
	push	esi
	push	eax
	mov	edx, ebx
	mov	esi, eax
	call	@GetSuperItemSpace@12
; Line 2942
	mov	eax, DWORD PTR _numitems
; Line 2943
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
; Line 2944
	push	DWORD PTR _delta$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _itemactive[eax], esi
	xor	ebx, ebx
	mov	eax, DWORD PTR [ecx]
	push	ebx
	mov	DWORD PTR _itemavail, eax
	movzx	eax, BYTE PTR _onlygood$[ebp]
	push	eax
	push	1
	movzx	eax, BYTE PTR _currlevel
	add	eax, eax
	push	eax
	call	_GetRndSeed
	push	eax
	mov	edx, edi
	mov	ecx, esi
	call	@SetupAllItems@32
; Line 2946
	cmp	DWORD PTR _sendmsg$[ebp], ebx
	je	SHORT $L86649
; Line 2947
	mov	edx, esi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L86649:
; Line 2948
	cmp	DWORD PTR _delta$[ebp], ebx
	je	SHORT $L86650
; Line 2949
	mov	ecx, esi
	call	@DeltaAddItem@4
$L86650:
; Line 2951
	inc	DWORD PTR _numitems
	pop	esi
$L86648:
	pop	edi
	pop	ebx
; Line 2953
	leave
	ret	20					; 00000014H
@CreateTypeItem@28 ENDP
_TEXT	ENDS
PUBLIC	@RecreateTownItem@20
PUBLIC	@RecreateItem@20
; Function compile flags: /Ogsy
;	COMDAT @RecreateItem@20
_TEXT	SEGMENT
_idx$ = -4
_ic$ = 8
_iseed$ = 12
_ivalue$ = 16
@RecreateItem@20 PROC NEAR				; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 2956
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 2962
	test	edx, edx
	mov	DWORD PTR _idx$[ebp], edx
	je	$L86666
; Line 2963
	mov	eax, DWORD PTR _ic$[ebp]
	test	ax, ax
	je	SHORT $L86667
; Line 2964
	test	ah, 124					; 0000007cH
	je	SHORT $L86668
; Line 2965
	push	DWORD PTR _ivalue$[ebp]
	push	DWORD PTR _iseed$[ebp]
	push	eax
	call	@RecreateTownItem@20
; Line 2966
	jmp	$L86682
$L86668:
	mov	edx, eax
	and	dx, 384					; 00000180H
	cmp	dx, 384					; 00000180H
	jne	SHORT $L86670
; Line 2967
	mov	edx, DWORD PTR _iseed$[ebp]
	and	eax, 63					; 0000003fH
	push	eax
	call	@SetupAllUseful@12
; Line 2968
	jmp	$L86682
$L86670:
	push	ebx
; Line 2969
	xor	esi, esi
; Line 2970
	xor	edx, edx
; Line 2971
	xor	ebx, ebx
; Line 2972
	xor	edi, edi
; Line 2973
	test	ah, 1
	je	SHORT $L86672
; Line 2974
	inc	esi
$L86672:
; Line 2975
	test	al, al
	jns	SHORT $L86673
; Line 2976
	push	15					; 0000000fH
	pop	esi
$L86673:
; Line 2977
	test	al, 64					; 00000040H
	je	SHORT $L86674
; Line 2978
	xor	edx, edx
	inc	edx
$L86674:
; Line 2979
	test	ah, 2
	je	SHORT $L86675
; Line 2980
	xor	ebx, ebx
	inc	ebx
$L86675:
; Line 2981
	test	ah, ah
	jns	SHORT $L86676
; Line 2982
	xor	edi, edi
	inc	edi
$L86676:
; Line 2983
	push	edi
	push	ebx
	push	edx
	mov	edx, DWORD PTR _idx$[ebp]
	and	eax, 63					; 0000003fH
	push	esi
	push	eax
	push	DWORD PTR _iseed$[ebp]
	call	@SetupAllItems@32
	pop	ebx
; Line 2985
	jmp	SHORT $L86682
$L86667:
; Line 2986
	imul	ecx, 368				; 00000170H
	lea	esi, DWORD PTR _item[ecx]
	mov	ecx, esi
	call	@SetPlrHandItem@8
; Line 2987
	mov	edx, DWORD PTR _iseed$[ebp]
	mov	ecx, esi
	call	@SetPlrHandSeed@8
; Line 2989
	jmp	SHORT $L86682
$L86666:
; Line 2990
	mov	esi, ecx
	xor	edx, edx
	imul	esi, 368				; 00000170H
	lea	edi, DWORD PTR _item[esi]
	mov	ecx, edi
	call	@SetPlrHandItem@8
; Line 2991
	mov	eax, DWORD PTR _iseed$[ebp]
	mov	DWORD PTR [edi], eax
; Line 2992
	mov	ax, WORD PTR _ic$[ebp]
	mov	WORD PTR _item[esi+4], ax
; Line 2993
	mov	eax, DWORD PTR _ivalue$[ebp]
; Line 2994
	cmp	eax, 2500				; 000009c4H
	mov	DWORD PTR _item[esi+196], eax
	jge	SHORT $L86679
; Line 2995
	cmp	eax, 1000				; 000003e8H
	jle	SHORT $L86680
; Line 2996
	mov	DWORD PTR _item[esi+192], 5
; Line 2997
	jmp	SHORT $L86682
$L86680:
; Line 2998
	mov	DWORD PTR _item[esi+192], 4
; Line 2999
	jmp	SHORT $L86682
$L86679:
; Line 3000
	mov	DWORD PTR _item[esi+192], 6
$L86682:
	pop	edi
	pop	esi
; Line 3003
	leave
	ret	12					; 0000000cH
@RecreateItem@20 ENDP
_TEXT	ENDS
PUBLIC	??_C@_09FPPI@Ear?5of?5?$CFs?$AA@		; `string'
PUBLIC	@RecreateEar@40
EXTRN	_tempstr:BYTE
;	COMDAT ??_C@_09FPPI@Ear?5of?5?$CFs?$AA@
_DATA	SEGMENT
??_C@_09FPPI@Ear?5of?5?$CFs?$AA@ DB 'Ear of %s', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @RecreateEar@40
_TEXT	SEGMENT
_ic$ = -4
_iseed$ = 8
_Id$ = 12
_dur$ = 16
_mdur$ = 20
_ch$ = 24
_mch$ = 28
_ivalue$ = 32
_ibuff$ = 36
@RecreateEar@40 PROC NEAR				; COMDAT
; _ii$ = ecx
; _ic$ = dx
; Line 3006
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 3007
	imul	esi, 368				; 00000170H
	push	23					; 00000017H
	mov	WORD PTR _ic$[ebp], dx
	lea	ebx, DWORD PTR _item[esi]
	pop	edx
	mov	ecx, ebx
	call	@SetPlrHandItem@8
; Line 3008
	xor	ecx, ecx
	mov	al, 127					; 0000007fH
	mov	cl, BYTE PTR _ic$[ebp+1]
; Line 3019
	mov	edi, DWORD PTR _ivalue$[ebp]
	and	cl, al
; Line 3024
	and	BYTE PTR _tempstr+16, 0
	mov	BYTE PTR _tempstr, cl
	mov	cl, BYTE PTR _ic$[ebp]
	and	cl, al
; Line 3025
	push	OFFSET FLAT:_tempstr
	mov	BYTE PTR _tempstr+1, cl
	mov	ecx, DWORD PTR _iseed$[ebp]
	mov	edx, ecx
	push	OFFSET FLAT:??_C@_09FPPI@Ear?5of?5?$CFs?$AA@ ; `string'
	sar	edx, 24					; 00000018H
	and	dl, al
	mov	BYTE PTR _tempstr+2, dl
	mov	edx, ecx
	sar	edx, 16					; 00000010H
	and	dl, al
	mov	BYTE PTR _tempstr+3, dl
	mov	edx, ecx
	and	cl, al
	mov	BYTE PTR _tempstr+5, cl
	mov	cl, BYTE PTR _Id$[ebp]
	and	cl, al
	mov	BYTE PTR _tempstr+6, cl
	mov	cl, BYTE PTR _dur$[ebp]
	and	cl, al
	mov	BYTE PTR _tempstr+7, cl
	mov	cl, BYTE PTR _mdur$[ebp]
	and	cl, al
	mov	BYTE PTR _tempstr+8, cl
	mov	cl, BYTE PTR _ch$[ebp]
	and	cl, al
	mov	BYTE PTR _tempstr+9, cl
	mov	cl, BYTE PTR _mch$[ebp]
	and	cl, al
	mov	BYTE PTR _tempstr+10, cl
	mov	ecx, edi
	sar	ecx, 8
	sar	edx, 8
	and	cl, al
	and	dl, al
	mov	BYTE PTR _tempstr+11, cl
	mov	ecx, DWORD PTR _ibuff$[ebp]
	mov	BYTE PTR _tempstr+4, dl
	mov	edx, ecx
	sar	edx, 24					; 00000018H
	and	dl, al
	mov	BYTE PTR _tempstr+12, dl
	mov	edx, ecx
	sar	edx, 16					; 00000010H
	and	dl, al
	mov	BYTE PTR _tempstr+13, dl
	mov	edx, ecx
	sar	edx, 8
	and	dl, al
	and	cl, al
	lea	eax, DWORD PTR _item[esi+61]
	mov	BYTE PTR _tempstr+14, dl
	push	eax
	mov	BYTE PTR _tempstr+15, cl
	call	_sprintf
; Line 3026
	mov	eax, edi
	add	esp, 12					; 0000000cH
	sar	eax, 6
	and	eax, 3
	add	eax, 19					; 00000013H
	mov	DWORD PTR _item[esi+192], eax
; Line 3027
	mov	ax, WORD PTR _ic$[ebp]
; Line 3028
	and	edi, 63					; 0000003fH
	mov	WORD PTR _item[esi+4], ax
; Line 3029
	mov	eax, DWORD PTR _iseed$[ebp]
	mov	DWORD PTR _item[esi+196], edi
	pop	edi
	mov	DWORD PTR [ebx], eax
	pop	esi
	pop	ebx
; Line 3030
	leave
	ret	32					; 00000020H
@RecreateEar@40 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @SpawnQuestItem@20
_TEXT	SEGMENT
_itemid$ = -8
_y$ = 8
_randarea$ = 12
_selflag$ = 16
_i$ = 8
_v12$ = 12
_tries$ = -4
@SpawnQuestItem@20 PROC NEAR				; COMDAT
; _itemid$ = ecx
; _x$ = edx
; Line 3033
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 3041
	cmp	DWORD PTR _randarea$[ebp], 0
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	DWORD PTR _itemid$[ebp], ecx
	je	SHORT $L88766
; Line 3042
	and	DWORD PTR _tries$[ebp], 0
$LABEL_3$86726:
; Line 3045
	inc	DWORD PTR _tries$[ebp]
	cmp	DWORD PTR _tries$[ebp], 1000		; 000003e8H
	jle	SHORT $L86727
	cmp	DWORD PTR _randarea$[ebp], 1
	jle	SHORT $L86727
; Line 3046
	dec	DWORD PTR _randarea$[ebp]
$L86727:
; Line 3048
	push	112					; 00000070H
	xor	cl, cl
	pop	edx
	call	@random@8
; Line 3049
	xor	cl, cl
	mov	edi, eax
	push	112					; 00000070H
	pop	edx
	call	@random@8
	mov	ebx, eax
; Line 3050
	xor	eax, eax
; Line 3052
	cmp	DWORD PTR _randarea$[ebp], eax
	mov	DWORD PTR _i$[ebp], eax
	jle	SHORT $LABEL_13$86738
$L86730:
; Line 3054
	test	eax, eax
	jne	SHORT $LABEL_3$86726
; Line 3055
	xor	esi, esi
	cmp	DWORD PTR _randarea$[ebp], esi
	jle	SHORT $L88761
$L86732:
; Line 3056
	test	eax, eax
	jne	SHORT $L88761
; Line 3059
	mov	eax, DWORD PTR _i$[ebp]
	lea	edx, DWORD PTR [esi+ebx]
	lea	ecx, DWORD PTR [eax+edi]
	call	@ItemSpaceOk@8
	neg	eax
	sbb	eax, eax
	inc	eax
	inc	esi
	cmp	esi, DWORD PTR _randarea$[ebp]
	jl	SHORT $L86732
$L88761:
; Line 3062
	inc	DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _randarea$[ebp]
	jl	SHORT $L86730
; Line 3063
	test	eax, eax
; Line 3064
	jne	SHORT $LABEL_3$86726
	jmp	SHORT $LABEL_13$86738
$L88766:
	mov	ebx, DWORD PTR _y$[ebp]
$LABEL_13$86738:
; Line 3071
	mov	eax, DWORD PTR _numitems
	cmp	eax, 127				; 0000007fH
	jge	$L86739
; Line 3072
	mov	esi, DWORD PTR _itemavail
; Line 3077
	mov	edx, OFFSET FLAT:_itemavail+504
	mov	ecx, esi
	imul	esi, 368				; 00000170H
	mov	DWORD PTR _item[esi+12], edi
; Line 3078
	imul	edi, 112				; 00000070H
	shl	eax, 2
	sub	edx, eax
	mov	DWORD PTR _v12$[ebp], ecx
	mov	DWORD PTR _itemactive[eax], ecx
	mov	DWORD PTR _item[esi+16], ebx
	mov	eax, DWORD PTR [edx]
; Line 3079
	mov	edx, DWORD PTR _itemid$[ebp]
	mov	DWORD PTR _itemavail, eax
	mov	al, cl
	inc	al
	mov	BYTE PTR _dItem[edi+ebx], al
	movzx	eax, BYTE PTR _currlevel
	push	eax
	call	@GetItemAttrs@12
; Line 3080
	mov	ecx, DWORD PTR _v12$[ebp]
	call	@SetupItem@4
; Line 3082
	mov	eax, DWORD PTR _selflag$[ebp]
	mov	DWORD PTR _item[esi+52], 1
	test	eax, eax
	je	SHORT $L86740
; Line 3083
	and	DWORD PTR _item[esi+20], 0
; Line 3084
	mov	BYTE PTR _item[esi+48], al
; Line 3085
	mov	eax, DWORD PTR _item[esi+28]
	mov	DWORD PTR _item[esi+32], eax
$L86740:
; Line 3087
	inc	DWORD PTR _numitems
$L86739:
	pop	edi
	pop	esi
	pop	ebx
; Line 3089
	leave
	ret	12					; 0000000cH
@SpawnQuestItem@20 ENDP
_TEXT	ENDS
EXTRN	_objectactive:BYTE
EXTRN	_nobjects:DWORD
; Function compile flags: /Ogsy
;	COMDAT _SpawnRock
_TEXT	SEGMENT
_SpawnRock PROC NEAR					; COMDAT
; Line 3108
	mov	eax, DWORD PTR _nobjects
	push	esi
	xor	esi, esi
	test	eax, eax
	jle	$L86753
$L86755:
; Line 3111
	mov	ecx, DWORD PTR _objectactive[esi*4]
; Line 3112
	mov	edx, ecx
	imul	edx, 120				; 00000078H
	inc	esi
	cmp	DWORD PTR _object[edx], 23		; 00000017H
	jne	SHORT $L88774
	xor	edx, edx
	inc	edx
	jmp	SHORT $L88775
$L88774:
	xor	edx, edx
$L88775:
; Line 3114
	cmp	esi, eax
	jge	SHORT $L88777
; Line 3110
	test	edx, edx
	je	SHORT $L86755
; Line 3114
	jmp	SHORT $L86758
$L88777:
; Line 3115
	test	edx, edx
	je	$L86753
$L86758:
; Line 3124
	mov	eax, DWORD PTR _numitems
	mov	esi, DWORD PTR _itemavail
	mov	edx, eax
	push	ebx
	shl	edx, 2
; Line 3125
	imul	ecx, 120				; 00000078H
	mov	ebx, esi
	mov	DWORD PTR _itemactive[edx], esi
; Line 3126
	imul	esi, 368				; 00000170H
	mov	eax, DWORD PTR _object[ecx+4]
	push	edi
	mov	DWORD PTR _item[esi+12], eax
	mov	edi, OFFSET FLAT:_itemavail+504
; Line 3129
	imul	eax, 112				; 00000070H
	mov	ecx, DWORD PTR _object[ecx+8]
	sub	edi, edx
; Line 3131
	mov	DWORD PTR _item[esi+16], ecx
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR _itemavail, edx
	mov	dl, bl
	inc	dl
	mov	BYTE PTR _dItem[eax+ecx], dl
; Line 3132
	mov	ecx, ebx
	movzx	eax, BYTE PTR _currlevel
	push	eax
	push	9
	pop	edx
	call	@GetItemAttrs@12
; Line 3133
	mov	ecx, ebx
	call	@SetupItem@4
; Line 3134
	inc	DWORD PTR _numitems
	pop	edi
; Line 3135
	mov	BYTE PTR _item[esi+48], 2
; Line 3136
	mov	DWORD PTR _item[esi+52], 1
; Line 3137
	mov	DWORD PTR _item[esi+32], 11		; 0000000bH
	pop	ebx
$L86753:
	pop	esi
; Line 3139
	ret	0
_SpawnRock ENDP
_TEXT	ENDS
PUBLIC	@RespawnItem@8
EXTRN	@PlaySfxLoc@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @RespawnItem@8
_TEXT	SEGMENT
@RespawnItem@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _FlipFlag$ = edx
; Line 3142
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 3146
	imul	esi, 368				; 00000170H
; Line 3148
	mov	edi, DWORD PTR _item[esi+192]
	mov	DWORD PTR _item[esi+36], 96		; 00000060H
	mov	DWORD PTR _item[esi+40], 16		; 00000010H
	movzx	eax, BYTE PTR _ItemCAnimTbl[edi]
; Line 3149
	movzx	ecx, BYTE PTR _ItemAnimLs[eax]
; Line 3151
	shl	eax, 2
	mov	DWORD PTR _item[esi+28], ecx
	mov	ebx, DWORD PTR _Item2Frm[eax]
	mov	DWORD PTR _item[esi+24], ebx
; Line 3152
	xor	ebx, ebx
; Line 3155
	cmp	edx, ebx
	mov	DWORD PTR _item[esi+52], ebx
	mov	BYTE PTR _item[esi+305], bl
	je	SHORT $L86766
; Line 3157
	xor	ecx, ecx
	mov	BYTE PTR _item[esi+48], bl
	inc	ecx
; Line 3158
	mov	DWORD PTR _item[esi+20], ecx
; Line 3159
	jmp	SHORT $L86767
$L86766:
; Line 3160
	mov	DWORD PTR _item[esi+20], ebx
; Line 3161
	mov	BYTE PTR _item[esi+48], 1
$L86767:
; Line 3166
	cmp	edi, 76					; 0000004cH
	mov	DWORD PTR _item[esi+32], ecx
	jne	SHORT $L86768
; Line 3168
	push	DWORD PTR _item[esi+16]
	mov	edx, DWORD PTR _item[esi+12]
	mov	ecx, DWORD PTR _ItemDropSnds[eax]
	mov	BYTE PTR _item[esi+48], 1
	call	@PlaySfxLoc@12
$L86768:
; Line 3170
	mov	eax, DWORD PTR _item[esi+192]
	cmp	eax, 126				; 0000007eH
	jne	SHORT $L86769
; Line 3171
	mov	BYTE PTR _item[esi+48], 1
$L86769:
; Line 3172
	cmp	eax, 140				; 0000008cH
	jne	SHORT $L86770
; Line 3173
	mov	BYTE PTR _item[esi+48], 1
$L86770:
	pop	edi
	pop	esi
	pop	ebx
; Line 3174
	ret	0
@RespawnItem@8 ENDP
_TEXT	ENDS
PUBLIC	@DeleteItem@8
; Function compile flags: /Ogsy
;	COMDAT @DeleteItem@8
_TEXT	SEGMENT
_v3$ = -1
@DeleteItem@8 PROC NEAR					; COMDAT
; _ii$ = ecx
; _i$ = edx
; Line 3177
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3182
	mov	eax, DWORD PTR _numitems
	push	ebx
	push	esi
; Line 3183
	cmp	eax, 1
	lea	esi, DWORD PTR [eax-1]
	push	edi
	sete	BYTE PTR _v3$[ebp]
; Line 3184
	test	esi, esi
	mov	edi, edx
; Line 3185
	mov	edx, OFFSET FLAT:_itemavail+508
	setl	bl
	shl	eax, 2
	sub	edx, eax
; Line 3186
	mov	DWORD PTR _numitems, esi
; Line 3187
	test	bl, bl
	mov	DWORD PTR [edx], ecx
	jne	SHORT $L86779
	cmp	BYTE PTR _v3$[ebp], bl
	jne	SHORT $L86779
	cmp	edi, esi
	je	SHORT $L86779
; Line 3188
	mov	eax, DWORD PTR _itemactive[esi*4]
	mov	DWORD PTR _itemactive[edi*4], eax
$L86779:
	pop	edi
	pop	esi
	pop	ebx
; Line 3189
	leave
	ret	0
@DeleteItem@8 ENDP
_TEXT	ENDS
PUBLIC	_ItemDoppel
; Function compile flags: /Ogsy
;	COMDAT _ItemDoppel
_TEXT	SEGMENT
_ItemDoppel PROC NEAR					; COMDAT
; Line 3196
	cmp	BYTE PTR _gbMaxPlayers, 1
	je	SHORT $L86790
; Line 3197
	mov	ecx, DWORD PTR _idoppely
	push	esi
	push	16					; 00000010H
	pop	esi
	lea	eax, DWORD PTR _dItem[ecx+1792]
$L86784:
; Line 3198
	mov	dl, BYTE PTR [eax]
	test	dl, dl
	je	SHORT $L86785
; Line 3199
	movsx	edx, dl
	imul	edx, 368				; 00000170H
	lea	edx, DWORD PTR _item[edx-368]
; Line 3200
	cmp	DWORD PTR [edx+12], esi
	jne	SHORT $L86789
	cmp	DWORD PTR [edx+16], ecx
	je	SHORT $L86785
$L86789:
; Line 3201
	and	BYTE PTR [eax], 0
$L86785:
; Line 3197
	inc	esi
	add	eax, 112				; 00000070H
	cmp	esi, 96					; 00000060H
	jl	SHORT $L86784
; Line 3205
	mov	eax, ecx
	inc	ecx
	cmp	eax, 95					; 0000005fH
	mov	DWORD PTR _idoppely, ecx
	pop	esi
	jne	SHORT $L86790
; Line 3206
	mov	DWORD PTR _idoppely, 16			; 00000010H
$L86790:
; Line 3208
	ret	0
_ItemDoppel ENDP
_TEXT	ENDS
PUBLIC	_ProcessItems
; Function compile flags: /Ogsy
;	COMDAT _ProcessItems
_TEXT	SEGMENT
_ProcessItems PROC NEAR					; COMDAT
; Line 3213
	push	edi
; Line 3217
	xor	edi, edi
	cmp	DWORD PTR _numitems, edi
	jle	$L86796
	push	esi
$L86794:
; Line 3218
	mov	esi, DWORD PTR _itemactive[edi*4]
; Line 3219
	imul	esi, 368				; 00000170H
	cmp	DWORD PTR _item[esi+20], 0
	je	$L86795
; Line 3221
	mov	eax, DWORD PTR _item[esi+192]
	inc	DWORD PTR _item[esi+32]
	mov	ecx, DWORD PTR _item[esi+32]
	cmp	eax, 76					; 0000004cH
	jne	SHORT $L86798
; Line 3222
	mov	al, BYTE PTR _item[esi+48]
	cmp	al, 1
	jne	SHORT $L86799
	cmp	ecx, 11					; 0000000bH
	jne	SHORT $L86799
; Line 3223
	mov	DWORD PTR _item[esi+32], 1
$L86799:
; Line 3224
	cmp	al, 2
	jne	SHORT $L86795
	cmp	DWORD PTR _item[esi+32], 21		; 00000015H
	jne	SHORT $L86795
; Line 3225
	mov	DWORD PTR _item[esi+32], 11		; 0000000bH
; Line 3226
	jmp	SHORT $L86795
$L86798:
; Line 3227
	mov	edx, DWORD PTR _item[esi+28]
	sar	edx, 1
	cmp	ecx, edx
	jne	SHORT $L86802
; Line 3228
	movzx	eax, BYTE PTR _ItemCAnimTbl[eax]
	push	DWORD PTR _item[esi+16]
	mov	edx, DWORD PTR _item[esi+12]
	mov	ecx, DWORD PTR _ItemDropSnds[eax*4]
	call	@PlaySfxLoc@12
$L86802:
; Line 3230
	mov	eax, DWORD PTR _item[esi+28]
	cmp	DWORD PTR _item[esi+32], eax
	jl	SHORT $L86795
; Line 3231
	and	DWORD PTR _item[esi+20], 0
; Line 3232
	mov	DWORD PTR _item[esi+32], eax
; Line 3233
	mov	BYTE PTR _item[esi+48], 1
$L86795:
	inc	edi
	cmp	edi, DWORD PTR _numitems
	jl	$L86794
	pop	esi
$L86796:
	pop	edi
; Line 3238
	jmp	_ItemDoppel
_ProcessItems ENDP
_TEXT	ENDS
PUBLIC	_FreeItemGFX
EXTRN	@mem_free_dbg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _FreeItemGFX
_TEXT	SEGMENT
_FreeItemGFX PROC NEAR					; COMDAT
; Line 3242
	push	esi
; Line 3246
	mov	esi, OFFSET FLAT:_Item2Frm
$L86807:
; Line 3247
	mov	ecx, DWORD PTR [esi]
; Line 3248
	and	DWORD PTR [esi], 0
; Line 3249
	call	@mem_free_dbg@4
	add	esi, 4
	cmp	esi, OFFSET FLAT:_Item2Frm+140
	jl	SHORT $L86807
	pop	esi
; Line 3251
	ret	0
_FreeItemGFX ENDP
_TEXT	ENDS
PUBLIC	@GetItemFrm@4
; Function compile flags: /Ogsy
;	COMDAT @GetItemFrm@4
_TEXT	SEGMENT
@GetItemFrm@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3255
	imul	ecx, 368				; 00000170H
	mov	eax, DWORD PTR _item[ecx+192]
	movzx	eax, BYTE PTR _ItemCAnimTbl[eax]
	mov	eax, DWORD PTR _Item2Frm[eax*4]
	mov	DWORD PTR _item[ecx+24], eax
; Line 3256
	ret	0
@GetItemFrm@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@PMKP@?$CFi?5gold?5?$CFs?$AA@		; `string'
PUBLIC	@GetItemStr@4
EXTRN	@get_pieces_str@4:NEAR
EXTRN	_infoclr:DWORD
EXTRN	_infostr:BYTE
;	COMDAT ??_C@_0L@PMKP@?$CFi?5gold?5?$CFs?$AA@
_DATA	SEGMENT
??_C@_0L@PMKP@?$CFi?5gold?5?$CFs?$AA@ DB '%i gold %s', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @GetItemStr@4
_TEXT	SEGMENT
@GetItemStr@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3259
	push	esi
	mov	esi, ecx
; Line 3262
	imul	esi, 368				; 00000170H
	cmp	DWORD PTR _item[esi+8], 11		; 0000000bH
	jne	SHORT $L86818
; Line 3263
	mov	esi, DWORD PTR _item[esi+196]
; Line 3264
	mov	ecx, esi
	call	@get_pieces_str@4
	push	eax
	push	esi
	push	OFFSET FLAT:??_C@_0L@PMKP@?$CFi?5gold?5?$CFs?$AA@ ; `string'
	push	OFFSET FLAT:_infostr
	call	_sprintf
	add	esp, 16					; 00000010H
	pop	esi
; Line 3276
	ret	0
$L86818:
; Line 3266
	cmp	DWORD PTR _item[esi+56], 0
; Line 3267
	lea	eax, DWORD PTR _item[esi+61]
	je	SHORT $L88808
; Line 3269
	lea	eax, DWORD PTR _item[esi+125]
$L88808:
	push	eax
	push	OFFSET FLAT:_infostr
	call	_strcpy
; Line 3271
	mov	al, BYTE PTR _item[esi+60]
	pop	ecx
	pop	ecx
	xor	ecx, ecx
	inc	ecx
	cmp	al, cl
	jne	SHORT $L86823
; Line 3272
	mov	DWORD PTR _infoclr, ecx
$L86823:
; Line 3273
	cmp	al, 2
	jne	SHORT $L86824
; Line 3274
	mov	DWORD PTR _infoclr, 3
$L86824:
	pop	esi
; Line 3276
	ret	0
@GetItemStr@4 ENDP
_TEXT	ENDS
PUBLIC	@CheckIdentify@8
EXTRN	@SetCursor_@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @CheckIdentify@8
_TEXT	SEGMENT
@CheckIdentify@8 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _cii$ = edx
; Line 3280
	push	esi
	mov	esi, ecx
; Line 3283
	mov	eax, esi
	imul	edx, 368				; 00000170H
	imul	eax, 21720				; 000054d8H
; Line 3284
	mov	DWORD PTR _plr[eax+edx+948], 1
; Line 3286
	xor	edx, edx
	inc	edx
	call	@CalcPlrInv@8
; Line 3288
	cmp	esi, DWORD PTR _myplr
	pop	esi
	jne	SHORT $L86831
; Line 3289
	xor	ecx, ecx
	inc	ecx
	jmp	@SetCursor_@4
$L86831:
; Line 3290
	ret	0
@CheckIdentify@8 ENDP
_TEXT	ENDS
PUBLIC	@DoRepair@8
PUBLIC	@RepairItem@8
; Function compile flags: /Ogsy
;	COMDAT @DoRepair@8
_TEXT	SEGMENT
@DoRepair@8 PROC NEAR					; COMDAT
; _pnum$ = ecx
; _cii$ = edx
; Line 3293
	push	ebx
	mov	ebx, ecx
	push	esi
; Line 3297
	mov	esi, ebx
	imul	esi, 21720				; 000054d8H
	add	esi, OFFSET FLAT:_plr
	push	edi
	mov	edi, edx
; Line 3300
	push	DWORD PTR [esi+60]
	mov	edx, DWORD PTR [esi+56]
	push	85					; 00000055H
	pop	ecx
	call	@PlaySfxLoc@12
	imul	edi, 368				; 00000170H
; Line 3301
	movsx	edx, BYTE PTR [esi+440]
	lea	ecx, DWORD PTR [edi+esi+892]
	call	@RepairItem@8
; Line 3302
	xor	edx, edx
	mov	ecx, ebx
	inc	edx
	call	@CalcPlrInv@8
; Line 3304
	cmp	ebx, DWORD PTR _myplr
	pop	edi
	pop	esi
	pop	ebx
	jne	SHORT $L86839
; Line 3305
	xor	ecx, ecx
	inc	ecx
	jmp	@SetCursor_@4
$L86839:
; Line 3306
	ret	0
@DoRepair@8 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @RepairItem@8
_TEXT	SEGMENT
@RepairItem@8 PROC NEAR					; COMDAT
; _i$ = ecx
; _lvl$ = edx
; Line 3309
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi
	mov	ebx, edx
; Line 3313
	mov	eax, DWORD PTR [esi+240]
	cmp	DWORD PTR [esi+236], eax
	je	SHORT $L86847
; Line 3314
	test	eax, eax
	jle	SHORT $L86851
; Line 3315
	xor	edi, edi
	lea	ebp, DWORD PTR [ebx+9]
$L86850:
; Line 3317
	mov	edx, ebx
	mov	cl, 37					; 00000025H
	call	@random@8
	add	eax, ebx
	add	edi, eax
; Line 3318
	mov	eax, DWORD PTR [esi+240]
	cdq
	idiv	ebp
; Line 3320
	cmp	eax, 1
	jge	SHORT $L86852
; Line 3321
	xor	eax, eax
	inc	eax
$L86852:
; Line 3322
	mov	ecx, DWORD PTR [esi+240]
	cmp	ecx, eax
	je	SHORT $L86851
; Line 3325
	sub	ecx, eax
; Line 3327
	mov	eax, DWORD PTR [esi+236]
	add	eax, edi
	mov	DWORD PTR [esi+240], ecx
	cmp	eax, ecx
	jl	SHORT $L86850
; Line 3328
	add	DWORD PTR [esi+236], edi
; Line 3329
	cmp	DWORD PTR [esi+236], ecx
	jle	SHORT $L86847
; Line 3330
	mov	DWORD PTR [esi+236], ecx
; Line 3331
	jmp	SHORT $L86847
$L86851:
; Line 3335
	or	DWORD PTR [esi+8], -1
$L86847:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3337
	ret	0
@RepairItem@8 ENDP
_TEXT	ENDS
PUBLIC	@DoRecharge@8
PUBLIC	@RechargeItem@8
; Function compile flags: /Ogsy
;	COMDAT @DoRecharge@8
_TEXT	SEGMENT
@DoRecharge@8 PROC NEAR					; COMDAT
; _pnum$ = ecx
; _cii$ = edx
; Line 3340
	push	esi
	push	edi
	mov	edi, ecx
; Line 3345
	imul	edx, 368				; 00000170H
	mov	eax, edi
	imul	eax, 21720				; 000054d8H
	add	eax, OFFSET FLAT:_plr
	lea	esi, DWORD PTR [edx+eax+892]
; Line 3347
	cmp	DWORD PTR [esi+8], 10			; 0000000aH
	jne	SHORT $L86863
	mov	ecx, DWORD PTR [esi+224]
	test	ecx, ecx
	je	SHORT $L86863
; Line 3348
	movsx	eax, BYTE PTR [eax+440]
	imul	ecx, 56					; 00000038H
	cdq
	idiv	DWORD PTR _spelldata[ecx+12]
	mov	cl, 38					; 00000026H
	mov	edx, eax
	call	@random@8
	mov	edx, eax
	mov	ecx, esi
	inc	edx
	call	@RechargeItem@8
; Line 3349
	xor	edx, edx
	mov	ecx, edi
	inc	edx
	call	@CalcPlrInv@8
$L86863:
; Line 3352
	cmp	edi, DWORD PTR _myplr
	pop	edi
	pop	esi
	jne	SHORT $L86864
; Line 3353
	xor	ecx, ecx
	inc	ecx
	jmp	@SetCursor_@4
$L86864:
; Line 3354
	ret	0
@DoRecharge@8 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @RechargeItem@8
_TEXT	SEGMENT
@RechargeItem@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _r$ = edx
; Line 3358
	mov	eax, DWORD PTR [ecx+228]
	push	esi
	cmp	eax, DWORD PTR [ecx+232]
	je	SHORT $L86876
$L86872:
; Line 3360
	mov	esi, DWORD PTR [ecx+232]
	cmp	esi, 1
	lea	eax, DWORD PTR [esi-1]
	mov	DWORD PTR [ecx+232], eax
	je	SHORT $L86876
; Line 3363
	add	DWORD PTR [ecx+228], edx
	mov	esi, DWORD PTR [ecx+228]
; Line 3365
	cmp	esi, eax
	jl	SHORT $L86872
; Line 3366
	jle	SHORT $L86876
; Line 3367
	mov	DWORD PTR [ecx+228], eax
$L86876:
	pop	esi
; Line 3372
	ret	0
@RechargeItem@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@EAIB@fully?5recover?5life?$AA@	; `string'
PUBLIC	??_C@_0BF@GNJJ@recover?5partial?5life?$AA@	; `string'
PUBLIC	??_C@_0N@KDLO@recover?5life?$AA@		; `string'
PUBLIC	??_C@_0M@LNHC@deadly?5heal?$AA@			; `string'
PUBLIC	??_C@_0N@JFB@recover?5mana?$AA@			; `string'
PUBLIC	??_C@_0BD@OKGO@fully?5recover?5mana?$AA@	; `string'
PUBLIC	??_C@_0BC@IJLM@increase?5strength?$AA@		; `string'
PUBLIC	??_C@_0P@KAJB@increase?5magic?$AA@		; `string'
PUBLIC	??_C@_0BD@EANF@increase?5dexterity?$AA@		; `string'
PUBLIC	??_C@_0BC@CAMI@increase?5vitality?$AA@		; `string'
PUBLIC	??_C@_0BC@GAEG@decrease?5strength?$AA@		; `string'
PUBLIC	??_C@_0BD@BADM@decrease?5dexterity?$AA@		; `string'
PUBLIC	??_C@_0BC@MJDC@decrease?5vitality?$AA@		; `string'
PUBLIC	??_C@_0BG@MNGE@recover?5life?5and?5mana?$AA@	; `string'
PUBLIC	??_C@_0BM@IENB@fully?5recover?5life?5and?5mana?$AA@ ; `string'
PUBLIC	@PrintItemOil@4
EXTRN	@AddPanelString@8:NEAR
;	COMDAT ??_C@_0BD@EAIB@fully?5recover?5life?$AA@
_DATA	SEGMENT
??_C@_0BD@EAIB@fully?5recover?5life?$AA@ DB 'fully recover life', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@GNJJ@recover?5partial?5life?$AA@
_DATA	SEGMENT
??_C@_0BF@GNJJ@recover?5partial?5life?$AA@ DB 'recover partial life', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@KDLO@recover?5life?$AA@
_DATA	SEGMENT
??_C@_0N@KDLO@recover?5life?$AA@ DB 'recover life', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@LNHC@deadly?5heal?$AA@
_DATA	SEGMENT
??_C@_0M@LNHC@deadly?5heal?$AA@ DB 'deadly heal', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@JFB@recover?5mana?$AA@
_DATA	SEGMENT
??_C@_0N@JFB@recover?5mana?$AA@ DB 'recover mana', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OKGO@fully?5recover?5mana?$AA@
_DATA	SEGMENT
??_C@_0BD@OKGO@fully?5recover?5mana?$AA@ DB 'fully recover mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@IJLM@increase?5strength?$AA@
_DATA	SEGMENT
??_C@_0BC@IJLM@increase?5strength?$AA@ DB 'increase strength', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@KAJB@increase?5magic?$AA@
_DATA	SEGMENT
??_C@_0P@KAJB@increase?5magic?$AA@ DB 'increase magic', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EANF@increase?5dexterity?$AA@
_DATA	SEGMENT
??_C@_0BD@EANF@increase?5dexterity?$AA@ DB 'increase dexterity', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@CAMI@increase?5vitality?$AA@
_DATA	SEGMENT
??_C@_0BC@CAMI@increase?5vitality?$AA@ DB 'increase vitality', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@GAEG@decrease?5strength?$AA@
_DATA	SEGMENT
??_C@_0BC@GAEG@decrease?5strength?$AA@ DB 'decrease strength', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@BADM@decrease?5dexterity?$AA@
_DATA	SEGMENT
??_C@_0BD@BADM@decrease?5dexterity?$AA@ DB 'decrease dexterity', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@MJDC@decrease?5vitality?$AA@
_DATA	SEGMENT
??_C@_0BC@MJDC@decrease?5vitality?$AA@ DB 'decrease vitality', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@MNGE@recover?5life?5and?5mana?$AA@
_DATA	SEGMENT
??_C@_0BG@MNGE@recover?5life?5and?5mana?$AA@ DB 'recover life and mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@IENB@fully?5recover?5life?5and?5mana?$AA@
_DATA	SEGMENT
??_C@_0BM@IENB@fully?5recover?5life?5and?5mana?$AA@ DB 'fully recover lif'
	DB	'e and mana', 00H				; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @PrintItemOil@4
_TEXT	SEGMENT
@PrintItemOil@4 PROC NEAR				; COMDAT
; _IDidx$ = cl
; Line 3376
	movsx	eax, cl
	add	eax, -2					; fffffffeH
	cmp	eax, 17					; 00000011H
	ja	$L86914
	jmp	DWORD PTR $L88834[eax*4]
$L86884:
; Line 3378
	push	OFFSET FLAT:??_C@_0BD@EAIB@fully?5recover?5life?$AA@ ; `string'
; Line 3379
	jmp	SHORT $L88833
$L86886:
; Line 3381
	push	OFFSET FLAT:??_C@_0BF@GNJJ@recover?5partial?5life?$AA@ ; `string'
; Line 3382
	jmp	SHORT $L88833
$L86888:
; Line 3384
	push	OFFSET FLAT:??_C@_0N@KDLO@recover?5life?$AA@ ; `string'
; Line 3385
	jmp	SHORT $L88833
$L86890:
; Line 3387
	push	OFFSET FLAT:??_C@_0M@LNHC@deadly?5heal?$AA@ ; `string'
; Line 3388
	jmp	SHORT $L88833
$L86892:
; Line 3390
	push	OFFSET FLAT:??_C@_0N@JFB@recover?5mana?$AA@ ; `string'
; Line 3391
	jmp	SHORT $L88833
$L86894:
; Line 3393
	push	OFFSET FLAT:??_C@_0BD@OKGO@fully?5recover?5mana?$AA@ ; `string'
; Line 3394
	jmp	SHORT $L88833
$L86896:
; Line 3396
	push	OFFSET FLAT:??_C@_0BC@IJLM@increase?5strength?$AA@ ; `string'
; Line 3397
	jmp	SHORT $L88833
$L86898:
; Line 3399
	push	OFFSET FLAT:??_C@_0P@KAJB@increase?5magic?$AA@ ; `string'
; Line 3400
	jmp	SHORT $L88833
$L86900:
; Line 3402
	push	OFFSET FLAT:??_C@_0BD@EANF@increase?5dexterity?$AA@ ; `string'
; Line 3403
	jmp	SHORT $L88833
$L86902:
; Line 3405
	push	OFFSET FLAT:??_C@_0BC@CAMI@increase?5vitality?$AA@ ; `string'
; Line 3406
	jmp	SHORT $L88833
$L86904:
; Line 3409
	push	OFFSET FLAT:??_C@_0BC@GAEG@decrease?5strength?$AA@ ; `string'
; Line 3410
	jmp	SHORT $L88833
$L86906:
; Line 3412
	push	OFFSET FLAT:??_C@_0BD@BADM@decrease?5dexterity?$AA@ ; `string'
; Line 3413
	jmp	SHORT $L88833
$L86908:
; Line 3415
	push	OFFSET FLAT:??_C@_0BC@MJDC@decrease?5vitality?$AA@ ; `string'
; Line 3416
	jmp	SHORT $L88833
$L86910:
; Line 3418
	push	OFFSET FLAT:??_C@_0BG@MNGE@recover?5life?5and?5mana?$AA@ ; `string'
; Line 3419
	jmp	SHORT $L88833
$L86912:
; Line 3421
	push	OFFSET FLAT:??_C@_0BM@IENB@fully?5recover?5life?5and?5mana?$AA@ ; `string'
$L88833:
	push	OFFSET FLAT:_tempstr
	call	_strcpy
	pop	ecx
; Line 3427
	xor	edx, edx
	pop	ecx
	inc	edx
	mov	ecx, OFFSET FLAT:_tempstr
	jmp	@AddPanelString@8
$L86914:
; Line 3428
	ret	0
$L88834:
	DD	$L86884
	DD	$L86886
	DD	$L86888
	DD	$L86890
	DD	$L86892
	DD	$L86894
	DD	$L86914
	DD	$L86914
	DD	$L86896
	DD	$L86898
	DD	$L86900
	DD	$L86902
	DD	$L86904
	DD	$L86904
	DD	$L86906
	DD	$L86908
	DD	$L86910
	DD	$L86912
@PrintItemOil@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@NHAN@chance?5to?5hit?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
PUBLIC	??_C@_0N@KGKI@?$CF?$CLi?$CF?$CF?5damage?$AA@	; `string'
PUBLIC	??_C@_0BM@PKFE@to?5hit?3?5?$CF?$CLi?$CF?$CF?0?5?$CF?$CLi?$CF?$CF?5damage?$AA@ ; `string'
PUBLIC	??_C@_0M@DCPA@?$CF?$CLi?$CF?$CF?5armor?$AA@	; `string'
PUBLIC	??_C@_0BE@INMC@Resist?5Fire?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
PUBLIC	??_C@_0BH@DMII@Resist?5Fire?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IJJI@Resist?5Lightning?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
PUBLIC	??_C@_0BM@EKLI@Resist?5Lightning?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
PUBLIC	??_C@_0BF@FGAC@Resist?5Magic?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
PUBLIC	??_C@_0BI@CKDF@Resist?5Magic?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
PUBLIC	??_C@_0BD@LJPI@Resist?5All?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
PUBLIC	??_C@_0BG@NMHF@Resist?5All?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
PUBLIC	??_C@_0BN@NICN@spells?5are?5increased?51?5level?$AA@ ; `string'
PUBLIC	??_C@_0BO@GOEC@spells?5are?5increased?52?5levels?$AA@ ; `string'
PUBLIC	??_C@_0BN@DBNH@spells?5are?5decreased?51?5level?$AA@ ; `string'
PUBLIC	??_C@_0O@OMHN@Extra?5charges?$AA@		; `string'
PUBLIC	??_C@_0BH@LII@Fire?5hit?5damage?3?5?$CFi?9?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0BM@OGOK@Lightning?5hit?5damage?3?5?$CFi?9?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0BA@GLFH@?$CF?$CLi?5to?5strength?$AA@	; `string'
PUBLIC	??_C@_0N@GFMP@?$CF?$CLi?5to?5magic?$AA@		; `string'
PUBLIC	??_C@_0BB@MEDH@?$CF?$CLi?5to?5dexterity?$AA@	; `string'
PUBLIC	??_C@_0BA@MCCD@?$CF?$CLi?5to?5vitality?$AA@	; `string'
PUBLIC	??_C@_0BG@LLMG@?$CF?$CLi?5to?5all?5attributes?$AA@ ; `string'
PUBLIC	??_C@_0BI@OKFD@?$CF?$CLi?5damage?5from?5enemies?$AA@ ; `string'
PUBLIC	??_C@_0BB@NKBF@Hit?5Points?5?3?5?$CF?$CLi?$AA@	; `string'
PUBLIC	??_C@_0L@NCBG@Mana?5?3?5?$CF?$CLi?$AA@		; `string'
PUBLIC	??_C@_0BA@NKGA@high?5durability?$AA@		; `string'
PUBLIC	??_C@_0BF@MLFF@decreased?5durability?$AA@	; `string'
PUBLIC	??_C@_0P@PIHN@indestructible?$AA@		; `string'
PUBLIC	??_C@_0BD@KHON@?$CL?$CFi?$CF?$CF?5light?5radius?$AA@ ; `string'
PUBLIC	??_C@_0BD@NLNF@?9?$CFi?$CF?$CF?5light?5radius?$AA@ ; `string'
PUBLIC	??_C@_0BK@KNMA@fire?5arrows?5damage?3?5?$CFi?9?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0BO@OKME@lightning?5arrows?5damage?5?$CFi?9?$CFi?$AA@ ; `string'
PUBLIC	??_C@_01FCOA@?5?$AA@				; `string'
PUBLIC	??_C@_0BK@BPDC@attacker?5takes?51?93?5damage?$AA@ ; `string'
PUBLIC	??_C@_0BE@MCFM@user?5loses?5all?5mana?$AA@	; `string'
PUBLIC	??_C@_0P@LIEK@you?5can?8t?5heal?$AA@		; `string'
PUBLIC	??_C@_0BM@BOFO@absorbs?5half?5of?5trap?5damage?$AA@ ; `string'
PUBLIC	??_C@_0BD@HJHA@knocks?5target?5back?$AA@	; `string'
PUBLIC	??_C@_0BJ@OIOH@hit?5monster?5doesn?8t?5heal?$AA@ ; `string'
PUBLIC	??_C@_0BD@DGMD@hit?5steals?53?$CF?5mana?$AA@	; `string'
PUBLIC	??_C@_0BD@NBLO@hit?5steals?55?$CF?5mana?$AA@	; `string'
PUBLIC	??_C@_0BD@JMCM@hit?5steals?53?$CF?5life?$AA@	; `string'
PUBLIC	??_C@_0BD@HLFB@hit?5steals?55?$CF?5life?$AA@	; `string'
PUBLIC	??_C@_0BH@ENGD@damages?5target?8s?5armor?$AA@	; `string'
PUBLIC	??_C@_0N@DKJA@quick?5attack?$AA@		; `string'
PUBLIC	??_C@_0M@LIII@fast?5attack?$AA@			; `string'
PUBLIC	??_C@_0O@DOEN@faster?5attack?$AA@		; `string'
PUBLIC	??_C@_0P@KNDM@fastest?5attack?$AA@		; `string'
PUBLIC	??_C@_0BC@FNCP@fast?5hit?5recovery?$AA@		; `string'
PUBLIC	??_C@_0BE@HAJD@faster?5hit?5recovery?$AA@	; `string'
PUBLIC	??_C@_0BF@GDDN@fastest?5hit?5recovery?$AA@	; `string'
PUBLIC	??_C@_0L@IAA@fast?5block?$AA@			; `string'
PUBLIC	??_C@_0BJ@MLPI@adds?5?$CFi?5points?5to?5damage?$AA@ ; `string'
PUBLIC	??_C@_0BK@CKCL@fires?5random?5speed?5arrows?$AA@ ; `string'
PUBLIC	??_C@_0BE@JEIK@unusual?5item?5damage?$AA@	; `string'
PUBLIC	??_C@_0BD@GCGN@altered?5durability?$AA@		; `string'
PUBLIC	??_C@_0BI@JEHF@no?5strength?5requirement?$AA@	; `string'
PUBLIC	??_C@_0O@ILCA@?$CFi?5?$CFs?5charges?$AA@	; `string'
PUBLIC	??_C@_0BE@CKKG@Faster?5attack?5swing?$AA@	; `string'
PUBLIC	??_C@_0BB@MOMA@one?5handed?5sword?$AA@		; `string'
PUBLIC	??_C@_0BI@GCPK@?$CL200?$CF?5damage?5vs?4?5demons?$AA@ ; `string'
PUBLIC	??_C@_0BI@MAJM@All?5Resistance?5equals?50?$AA@	; `string'
PUBLIC	??_C@_0BL@MJCM@constantly?5lose?5hit?5points?$AA@ ; `string'
PUBLIC	??_C@_0O@JIPP@life?5stealing?$AA@		; `string'
PUBLIC	??_C@_0BF@BHCJ@see?5with?5infravision?$AA@	; `string'
PUBLIC	??_C@_0BA@GDEN@armor?5class?3?5?$CFi?$AA@	; `string'
PUBLIC	??_C@_0BK@EHGP@Armor?5class?5added?5to?5life?$AA@ ; `string'
PUBLIC	??_C@_0BL@CKFN@10?$CF?5of?5mana?5added?5to?5armor?$AA@ ; `string'
PUBLIC	??_C@_0BF@EJEO@Another?5ability?5?$CINW?$CJ?$AA@ ; `string'
PUBLIC	@PrintItemPower@8
;	COMDAT ??_C@_0BG@NHAN@chance?5to?5hit?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT
??_C@_0BG@NHAN@chance?5to?5hit?5?3?5?$CF?$CLi?$CF?$CF?$AA@ DB 'chance to '
	DB	'hit : %+i%%', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@KGKI@?$CF?$CLi?$CF?$CF?5damage?$AA@
_DATA	SEGMENT
??_C@_0N@KGKI@?$CF?$CLi?$CF?$CF?5damage?$AA@ DB '%+i%% damage', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@PKFE@to?5hit?3?5?$CF?$CLi?$CF?$CF?0?5?$CF?$CLi?$CF?$CF?5damage?$AA@
_DATA	SEGMENT
??_C@_0BM@PKFE@to?5hit?3?5?$CF?$CLi?$CF?$CF?0?5?$CF?$CLi?$CF?$CF?5damage?$AA@ DB 't'
	DB	'o hit: %+i%%, %+i%% damage', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@DCPA@?$CF?$CLi?$CF?$CF?5armor?$AA@
_DATA	SEGMENT
??_C@_0M@DCPA@?$CF?$CLi?$CF?$CF?5armor?$AA@ DB '%+i%% armor', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@INMC@Resist?5Fire?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT
??_C@_0BE@INMC@Resist?5Fire?5?3?5?$CF?$CLi?$CF?$CF?$AA@ DB 'Resist Fire :'
	DB	' %+i%%', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@DMII@Resist?5Fire?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT
??_C@_0BH@DMII@Resist?5Fire?5?3?575?$CF?$CF?5MAX?$AA@ DB 'Resist Fire : 7'
	DB	'5%% MAX', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@IJJI@Resist?5Lightning?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT
??_C@_0BJ@IJJI@Resist?5Lightning?5?3?5?$CF?$CLi?$CF?$CF?$AA@ DB 'Resist L'
	DB	'ightning : %+i%%', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@EKLI@Resist?5Lightning?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT
??_C@_0BM@EKLI@Resist?5Lightning?5?3?575?$CF?$CF?5MAX?$AA@ DB 'Resist Lig'
	DB	'htning : 75%% MAX', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@FGAC@Resist?5Magic?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT
??_C@_0BF@FGAC@Resist?5Magic?5?3?5?$CF?$CLi?$CF?$CF?$AA@ DB 'Resist Magic'
	DB	' : %+i%%', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@CKDF@Resist?5Magic?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT
??_C@_0BI@CKDF@Resist?5Magic?5?3?575?$CF?$CF?5MAX?$AA@ DB 'Resist Magic :'
	DB	' 75%% MAX', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@LJPI@Resist?5All?5?3?5?$CF?$CLi?$CF?$CF?$AA@
_DATA	SEGMENT
??_C@_0BD@LJPI@Resist?5All?5?3?5?$CF?$CLi?$CF?$CF?$AA@ DB 'Resist All : %'
	DB	'+i%%', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@NMHF@Resist?5All?5?3?575?$CF?$CF?5MAX?$AA@
_DATA	SEGMENT
??_C@_0BG@NMHF@Resist?5All?5?3?575?$CF?$CF?5MAX?$AA@ DB 'Resist All : 75%'
	DB	'% MAX', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BN@NICN@spells?5are?5increased?51?5level?$AA@
_DATA	SEGMENT
??_C@_0BN@NICN@spells?5are?5increased?51?5level?$AA@ DB 'spells are incre'
	DB	'ased 1 level', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BO@GOEC@spells?5are?5increased?52?5levels?$AA@
_DATA	SEGMENT
??_C@_0BO@GOEC@spells?5are?5increased?52?5levels?$AA@ DB 'spells are incr'
	DB	'eased 2 levels', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BN@DBNH@spells?5are?5decreased?51?5level?$AA@
_DATA	SEGMENT
??_C@_0BN@DBNH@spells?5are?5decreased?51?5level?$AA@ DB 'spells are decre'
	DB	'ased 1 level', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@OMHN@Extra?5charges?$AA@
_DATA	SEGMENT
??_C@_0O@OMHN@Extra?5charges?$AA@ DB 'Extra charges', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@LII@Fire?5hit?5damage?3?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BH@LII@Fire?5hit?5damage?3?5?$CFi?9?$CFi?$AA@ DB 'Fire hit damage:'
	DB	' %i-%i', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@OGOK@Lightning?5hit?5damage?3?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BM@OGOK@Lightning?5hit?5damage?3?5?$CFi?9?$CFi?$AA@ DB 'Lightning '
	DB	'hit damage: %i-%i', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GLFH@?$CF?$CLi?5to?5strength?$AA@
_DATA	SEGMENT
??_C@_0BA@GLFH@?$CF?$CLi?5to?5strength?$AA@ DB '%+i to strength', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@GFMP@?$CF?$CLi?5to?5magic?$AA@
_DATA	SEGMENT
??_C@_0N@GFMP@?$CF?$CLi?5to?5magic?$AA@ DB '%+i to magic', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MEDH@?$CF?$CLi?5to?5dexterity?$AA@
_DATA	SEGMENT
??_C@_0BB@MEDH@?$CF?$CLi?5to?5dexterity?$AA@ DB '%+i to dexterity', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@MCCD@?$CF?$CLi?5to?5vitality?$AA@
_DATA	SEGMENT
??_C@_0BA@MCCD@?$CF?$CLi?5to?5vitality?$AA@ DB '%+i to vitality', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@LLMG@?$CF?$CLi?5to?5all?5attributes?$AA@
_DATA	SEGMENT
??_C@_0BG@LLMG@?$CF?$CLi?5to?5all?5attributes?$AA@ DB '%+i to all attribu'
	DB	'tes', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@OKFD@?$CF?$CLi?5damage?5from?5enemies?$AA@
_DATA	SEGMENT
??_C@_0BI@OKFD@?$CF?$CLi?5damage?5from?5enemies?$AA@ DB '%+i damage from '
	DB	'enemies', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NKBF@Hit?5Points?5?3?5?$CF?$CLi?$AA@
_DATA	SEGMENT
??_C@_0BB@NKBF@Hit?5Points?5?3?5?$CF?$CLi?$AA@ DB 'Hit Points : %+i', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@NCBG@Mana?5?3?5?$CF?$CLi?$AA@
_DATA	SEGMENT
??_C@_0L@NCBG@Mana?5?3?5?$CF?$CLi?$AA@ DB 'Mana : %+i', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@NKGA@high?5durability?$AA@
_DATA	SEGMENT
??_C@_0BA@NKGA@high?5durability?$AA@ DB 'high durability', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MLFF@decreased?5durability?$AA@
_DATA	SEGMENT
??_C@_0BF@MLFF@decreased?5durability?$AA@ DB 'decreased durability', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@PIHN@indestructible?$AA@
_DATA	SEGMENT
??_C@_0P@PIHN@indestructible?$AA@ DB 'indestructible', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@KHON@?$CL?$CFi?$CF?$CF?5light?5radius?$AA@
_DATA	SEGMENT
??_C@_0BD@KHON@?$CL?$CFi?$CF?$CF?5light?5radius?$AA@ DB '+%i%% light radi'
	DB	'us', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NLNF@?9?$CFi?$CF?$CF?5light?5radius?$AA@
_DATA	SEGMENT
??_C@_0BD@NLNF@?9?$CFi?$CF?$CF?5light?5radius?$AA@ DB '-%i%% light radius'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@KNMA@fire?5arrows?5damage?3?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BK@KNMA@fire?5arrows?5damage?3?5?$CFi?9?$CFi?$AA@ DB 'fire arrows '
	DB	'damage: %i-%i', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BO@OKME@lightning?5arrows?5damage?5?$CFi?9?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BO@OKME@lightning?5arrows?5damage?5?$CFi?9?$CFi?$AA@ DB 'lightning'
	DB	' arrows damage %i-%i', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_01FCOA@?5?$AA@
_DATA	SEGMENT
??_C@_01FCOA@?5?$AA@ DB ' ', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@BPDC@attacker?5takes?51?93?5damage?$AA@
_DATA	SEGMENT
??_C@_0BK@BPDC@attacker?5takes?51?93?5damage?$AA@ DB 'attacker takes 1-3 '
	DB	'damage', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@MCFM@user?5loses?5all?5mana?$AA@
_DATA	SEGMENT
??_C@_0BE@MCFM@user?5loses?5all?5mana?$AA@ DB 'user loses all mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@LIEK@you?5can?8t?5heal?$AA@
_DATA	SEGMENT
??_C@_0P@LIEK@you?5can?8t?5heal?$AA@ DB 'you can''t heal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BM@BOFO@absorbs?5half?5of?5trap?5damage?$AA@
_DATA	SEGMENT
??_C@_0BM@BOFO@absorbs?5half?5of?5trap?5damage?$AA@ DB 'absorbs half of t'
	DB	'rap damage', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@HJHA@knocks?5target?5back?$AA@
_DATA	SEGMENT
??_C@_0BD@HJHA@knocks?5target?5back?$AA@ DB 'knocks target back', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@OIOH@hit?5monster?5doesn?8t?5heal?$AA@
_DATA	SEGMENT
??_C@_0BJ@OIOH@hit?5monster?5doesn?8t?5heal?$AA@ DB 'hit monster doesn''t'
	DB	' heal', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@DGMD@hit?5steals?53?$CF?5mana?$AA@
_DATA	SEGMENT
??_C@_0BD@DGMD@hit?5steals?53?$CF?5mana?$AA@ DB 'hit steals 3% mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@NBLO@hit?5steals?55?$CF?5mana?$AA@
_DATA	SEGMENT
??_C@_0BD@NBLO@hit?5steals?55?$CF?5mana?$AA@ DB 'hit steals 5% mana', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@JMCM@hit?5steals?53?$CF?5life?$AA@
_DATA	SEGMENT
??_C@_0BD@JMCM@hit?5steals?53?$CF?5life?$AA@ DB 'hit steals 3% life', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@HLFB@hit?5steals?55?$CF?5life?$AA@
_DATA	SEGMENT
??_C@_0BD@HLFB@hit?5steals?55?$CF?5life?$AA@ DB 'hit steals 5% life', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@ENGD@damages?5target?8s?5armor?$AA@
_DATA	SEGMENT
??_C@_0BH@ENGD@damages?5target?8s?5armor?$AA@ DB 'damages target''s armor'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@DKJA@quick?5attack?$AA@
_DATA	SEGMENT
??_C@_0N@DKJA@quick?5attack?$AA@ DB 'quick attack', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@LIII@fast?5attack?$AA@
_DATA	SEGMENT
??_C@_0M@LIII@fast?5attack?$AA@ DB 'fast attack', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@DOEN@faster?5attack?$AA@
_DATA	SEGMENT
??_C@_0O@DOEN@faster?5attack?$AA@ DB 'faster attack', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@KNDM@fastest?5attack?$AA@
_DATA	SEGMENT
??_C@_0P@KNDM@fastest?5attack?$AA@ DB 'fastest attack', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FNCP@fast?5hit?5recovery?$AA@
_DATA	SEGMENT
??_C@_0BC@FNCP@fast?5hit?5recovery?$AA@ DB 'fast hit recovery', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HAJD@faster?5hit?5recovery?$AA@
_DATA	SEGMENT
??_C@_0BE@HAJD@faster?5hit?5recovery?$AA@ DB 'faster hit recovery', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@GDDN@fastest?5hit?5recovery?$AA@
_DATA	SEGMENT
??_C@_0BF@GDDN@fastest?5hit?5recovery?$AA@ DB 'fastest hit recovery', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@IAA@fast?5block?$AA@
_DATA	SEGMENT
??_C@_0L@IAA@fast?5block?$AA@ DB 'fast block', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@MLPI@adds?5?$CFi?5points?5to?5damage?$AA@
_DATA	SEGMENT
??_C@_0BJ@MLPI@adds?5?$CFi?5points?5to?5damage?$AA@ DB 'adds %i points to'
	DB	' damage', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CKCL@fires?5random?5speed?5arrows?$AA@
_DATA	SEGMENT
??_C@_0BK@CKCL@fires?5random?5speed?5arrows?$AA@ DB 'fires random speed a'
	DB	'rrows', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@JEIK@unusual?5item?5damage?$AA@
_DATA	SEGMENT
??_C@_0BE@JEIK@unusual?5item?5damage?$AA@ DB 'unusual item damage', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@GCGN@altered?5durability?$AA@
_DATA	SEGMENT
??_C@_0BD@GCGN@altered?5durability?$AA@ DB 'altered durability', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@JEHF@no?5strength?5requirement?$AA@
_DATA	SEGMENT
??_C@_0BI@JEHF@no?5strength?5requirement?$AA@ DB 'no strength requirement'
	DB	00H						; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@ILCA@?$CFi?5?$CFs?5charges?$AA@
_DATA	SEGMENT
??_C@_0O@ILCA@?$CFi?5?$CFs?5charges?$AA@ DB '%i %s charges', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@CKKG@Faster?5attack?5swing?$AA@
_DATA	SEGMENT
??_C@_0BE@CKKG@Faster?5attack?5swing?$AA@ DB 'Faster attack swing', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MOMA@one?5handed?5sword?$AA@
_DATA	SEGMENT
??_C@_0BB@MOMA@one?5handed?5sword?$AA@ DB 'one handed sword', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@GCPK@?$CL200?$CF?5damage?5vs?4?5demons?$AA@
_DATA	SEGMENT
??_C@_0BI@GCPK@?$CL200?$CF?5damage?5vs?4?5demons?$AA@ DB '+200% damage vs'
	DB	'. demons', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@MAJM@All?5Resistance?5equals?50?$AA@
_DATA	SEGMENT
??_C@_0BI@MAJM@All?5Resistance?5equals?50?$AA@ DB 'All Resistance equals '
	DB	'0', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BL@MJCM@constantly?5lose?5hit?5points?$AA@
_DATA	SEGMENT
??_C@_0BL@MJCM@constantly?5lose?5hit?5points?$AA@ DB 'constantly lose hit'
	DB	' points', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@JIPP@life?5stealing?$AA@
_DATA	SEGMENT
??_C@_0O@JIPP@life?5stealing?$AA@ DB 'life stealing', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BHCJ@see?5with?5infravision?$AA@
_DATA	SEGMENT
??_C@_0BF@BHCJ@see?5with?5infravision?$AA@ DB 'see with infravision', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GDEN@armor?5class?3?5?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BA@GDEN@armor?5class?3?5?$CFi?$AA@ DB 'armor class: %i', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@EHGP@Armor?5class?5added?5to?5life?$AA@
_DATA	SEGMENT
??_C@_0BK@EHGP@Armor?5class?5added?5to?5life?$AA@ DB 'Armor class added t'
	DB	'o life', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BL@CKFN@10?$CF?5of?5mana?5added?5to?5armor?$AA@
_DATA	SEGMENT
??_C@_0BL@CKFN@10?$CF?5of?5mana?5added?5to?5armor?$AA@ DB '10% of mana ad'
	DB	'ded to armor', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@EJEO@Another?5ability?5?$CINW?$CJ?$AA@
_DATA	SEGMENT
??_C@_0BF@EJEO@Another?5ability?5?$CINW?$CJ?$AA@ DB 'Another ability (NW)'
	DB	00H						; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @PrintItemPower@8
_TEXT	SEGMENT
@PrintItemPower@8 PROC NEAR				; COMDAT
; _plidx$ = cl
; _x$ = edx
; Line 3442
	movsx	eax, cl
	push	esi
	cmp	eax, 79					; 0000004fH
	push	edi
	mov	esi, edx
	ja	$L87089
	movzx	eax, BYTE PTR $L88838[eax]
	jmp	DWORD PTR $L88844[eax*4]
$L86932:
; Line 3445
	push	DWORD PTR [esi+248]
	push	OFFSET FLAT:??_C@_0BG@NHAN@chance?5to?5hit?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
; Line 3446
	jmp	$L88842
$L86934:
; Line 3449
	push	DWORD PTR [esi+244]
	push	OFFSET FLAT:??_C@_0N@KGKI@?$CF?$CLi?$CF?$CF?5damage?$AA@ ; `string'
; Line 3450
	jmp	$L88842
$L86936:
; Line 3453
	push	DWORD PTR [esi+244]
	push	DWORD PTR [esi+248]
	push	OFFSET FLAT:??_C@_0BM@PKFE@to?5hit?3?5?$CF?$CLi?$CF?$CF?0?5?$CF?$CLi?$CF?$CF?5damage?$AA@ ; `string'
$L88843:
	push	OFFSET FLAT:_tempstr
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 3454
	jmp	$L86929
$L86938:
; Line 3457
	push	DWORD PTR [esi+252]
	push	OFFSET FLAT:??_C@_0M@DCPA@?$CF?$CLi?$CF?$CF?5armor?$AA@ ; `string'
; Line 3458
	jmp	$L88842
$L86940:
; Line 3460
	mov	eax, DWORD PTR [esi+272]
	mov	edi, OFFSET FLAT:_tempstr
	cmp	eax, 75					; 0000004bH
	jge	SHORT $L86941
; Line 3461
	push	eax
	push	OFFSET FLAT:??_C@_0BE@INMC@Resist?5Fire?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 12					; 0000000cH
$L86941:
; Line 3462
	cmp	DWORD PTR [esi+272], 75			; 0000004bH
	jl	$L86929
; Line 3463
	mov	eax, OFFSET FLAT:??_C@_0BH@DMII@Resist?5Fire?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
; Line 3464
	jmp	$LABEL_11$86945
$L86946:
; Line 3468
	mov	eax, DWORD PTR [esi+276]
	mov	edi, OFFSET FLAT:_tempstr
	cmp	eax, 75					; 0000004bH
	jge	SHORT $L86947
; Line 3469
	push	eax
	push	OFFSET FLAT:??_C@_0BJ@IJJI@Resist?5Lightning?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 12					; 0000000cH
$L86947:
; Line 3470
	cmp	DWORD PTR [esi+276], 75			; 0000004bH
	jl	$L86929
; Line 3471
	mov	eax, OFFSET FLAT:??_C@_0BM@EKLI@Resist?5Lightning?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
; Line 3472
	jmp	SHORT $LABEL_11$86945
$L86951:
; Line 3476
	mov	eax, DWORD PTR [esi+280]
	mov	edi, OFFSET FLAT:_tempstr
	cmp	eax, 75					; 0000004bH
	jge	SHORT $L86952
; Line 3477
	push	eax
	push	OFFSET FLAT:??_C@_0BF@FGAC@Resist?5Magic?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 12					; 0000000cH
$L86952:
; Line 3478
	cmp	DWORD PTR [esi+280], 75			; 0000004bH
	jl	$L86929
; Line 3479
	mov	eax, OFFSET FLAT:??_C@_0BI@CKDF@Resist?5Magic?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
; Line 3480
	jmp	SHORT $LABEL_11$86945
$L86956:
; Line 3484
	mov	eax, DWORD PTR [esi+272]
	mov	edi, OFFSET FLAT:_tempstr
	cmp	eax, 75					; 0000004bH
	jge	SHORT $L86957
; Line 3485
	push	eax
	push	OFFSET FLAT:??_C@_0BD@LJPI@Resist?5All?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 12					; 0000000cH
$L86957:
; Line 3486
	cmp	DWORD PTR [esi+272], 75			; 0000004bH
	jl	$L86929
; Line 3487
	mov	eax, OFFSET FLAT:??_C@_0BG@NMHF@Resist?5All?5?3?575?$CF?$CF?5MAX?$AA@ ; `string'
$LABEL_11$86945:
; Line 3489
	push	eax
	push	edi
; Line 3491
	jmp	$L88841
$L86961:
; Line 3493
	cmp	BYTE PTR [esi+304], 1
	mov	edi, OFFSET FLAT:_tempstr
	jne	SHORT $L86962
; Line 3494
	push	OFFSET FLAT:??_C@_0BN@NICN@spells?5are?5increased?51?5level?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L86962:
; Line 3495
	cmp	BYTE PTR [esi+304], 2
	jne	SHORT $L86964
; Line 3496
	push	OFFSET FLAT:??_C@_0BO@GOEC@spells?5are?5increased?52?5levels?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L86964:
; Line 3497
	cmp	BYTE PTR [esi+304], 1
	jge	$L86929
; Line 3498
	mov	eax, OFFSET FLAT:??_C@_0BN@DBNH@spells?5are?5decreased?51?5level?$AA@ ; `string'
; Line 3499
	jmp	$LABEL_81$86968
$L86969:
; Line 3503
	mov	eax, OFFSET FLAT:??_C@_0O@OMHN@Extra?5charges?$AA@ ; `string'
; Line 3504
	jmp	$LABEL_104$86971
$L86972:
; Line 3506
	push	DWORD PTR [esi+316]
	push	DWORD PTR [esi+312]
	push	OFFSET FLAT:??_C@_0BH@LII@Fire?5hit?5damage?3?5?$CFi?9?$CFi?$AA@ ; `string'
; Line 3507
	jmp	$L88843
$L86974:
; Line 3509
	push	DWORD PTR [esi+324]
	push	DWORD PTR [esi+320]
	push	OFFSET FLAT:??_C@_0BM@OGOK@Lightning?5hit?5damage?3?5?$CFi?9?$CFi?$AA@ ; `string'
; Line 3510
	jmp	$L88843
$L86976:
; Line 3513
	push	DWORD PTR [esi+256]
	push	OFFSET FLAT:??_C@_0BA@GLFH@?$CF?$CLi?5to?5strength?$AA@ ; `string'
; Line 3514
	jmp	$L88842
$L86978:
; Line 3517
	push	DWORD PTR [esi+260]
	push	OFFSET FLAT:??_C@_0N@GFMP@?$CF?$CLi?5to?5magic?$AA@ ; `string'
; Line 3518
	jmp	$L88842
$L86980:
; Line 3521
	push	DWORD PTR [esi+264]
	push	OFFSET FLAT:??_C@_0BB@MEDH@?$CF?$CLi?5to?5dexterity?$AA@ ; `string'
; Line 3522
	jmp	$L88842
$L86982:
; Line 3525
	push	DWORD PTR [esi+268]
	push	OFFSET FLAT:??_C@_0BA@MCCD@?$CF?$CLi?5to?5vitality?$AA@ ; `string'
; Line 3526
	jmp	$L88842
$L86984:
; Line 3529
	push	DWORD PTR [esi+256]
	push	OFFSET FLAT:??_C@_0BG@LLMG@?$CF?$CLi?5to?5all?5attributes?$AA@ ; `string'
; Line 3530
	jmp	$L88842
$L86986:
; Line 3533
	push	DWORD PTR [esi+296]
	push	OFFSET FLAT:??_C@_0BI@OKFD@?$CF?$CLi?5damage?5from?5enemies?$AA@ ; `string'
; Line 3534
	jmp	$L88842
$L86988:
; Line 3537
	mov	eax, DWORD PTR [esi+288]
	sar	eax, 6
	push	eax
	push	OFFSET FLAT:??_C@_0BB@NKBF@Hit?5Points?5?3?5?$CF?$CLi?$AA@ ; `string'
; Line 3538
	jmp	$L88842
$L86990:
; Line 3541
	mov	eax, DWORD PTR [esi+284]
	sar	eax, 6
	push	eax
	push	OFFSET FLAT:??_C@_0L@NCBG@Mana?5?3?5?$CF?$CLi?$AA@ ; `string'
; Line 3542
	jmp	$L88842
$L86992:
; Line 3544
	mov	eax, OFFSET FLAT:??_C@_0BA@NKGA@high?5durability?$AA@ ; `string'
; Line 3545
	jmp	$LABEL_104$86971
$L86994:
; Line 3547
	mov	eax, OFFSET FLAT:??_C@_0BF@MLFF@decreased?5durability?$AA@ ; `string'
; Line 3548
	jmp	$LABEL_104$86971
$L86996:
; Line 3550
	mov	eax, OFFSET FLAT:??_C@_0P@PIHN@indestructible?$AA@ ; `string'
; Line 3551
	jmp	$LABEL_104$86971
$L86998:
; Line 3553
	mov	esi, DWORD PTR [esi+300]
	lea	eax, DWORD PTR [esi+esi*4]
	add	eax, eax
	push	eax
	push	OFFSET FLAT:??_C@_0BD@KHON@?$CL?$CFi?$CF?$CF?5light?5radius?$AA@ ; `string'
; Line 3554
	jmp	$L88842
$L87000:
; Line 3556
	mov	eax, DWORD PTR [esi+300]
	imul	eax, -10				; fffffff6H
	push	eax
	push	OFFSET FLAT:??_C@_0BD@NLNF@?9?$CFi?$CF?$CF?5light?5radius?$AA@ ; `string'
; Line 3557
	jmp	$L88842
$L87002:
; Line 3559
	push	DWORD PTR [esi+316]
	push	DWORD PTR [esi+312]
	push	OFFSET FLAT:??_C@_0BK@KNMA@fire?5arrows?5damage?3?5?$CFi?9?$CFi?$AA@ ; `string'
; Line 3560
	jmp	$L88843
$L87004:
; Line 3562
	push	DWORD PTR [esi+324]
	push	DWORD PTR [esi+320]
	push	OFFSET FLAT:??_C@_0BO@OKME@lightning?5arrows?5damage?5?$CFi?9?$CFi?$AA@ ; `string'
; Line 3563
	jmp	$L88843
$L87006:
; Line 3565
	mov	eax, OFFSET FLAT:??_C@_01FCOA@?5?$AA@	; `string'
; Line 3566
	jmp	$LABEL_104$86971
$L87008:
; Line 3568
	mov	eax, OFFSET FLAT:??_C@_0BK@BPDC@attacker?5takes?51?93?5damage?$AA@ ; `string'
; Line 3569
	jmp	$LABEL_104$86971
$L87010:
; Line 3571
	mov	eax, OFFSET FLAT:??_C@_0BE@MCFM@user?5loses?5all?5mana?$AA@ ; `string'
; Line 3572
	jmp	$LABEL_104$86971
$L87012:
; Line 3574
	mov	eax, OFFSET FLAT:??_C@_0P@LIEK@you?5can?8t?5heal?$AA@ ; `string'
; Line 3575
	jmp	$LABEL_104$86971
$L87014:
; Line 3577
	mov	eax, OFFSET FLAT:??_C@_0BM@BOFO@absorbs?5half?5of?5trap?5damage?$AA@ ; `string'
; Line 3578
	jmp	$LABEL_104$86971
$L87016:
; Line 3580
	mov	eax, OFFSET FLAT:??_C@_0BD@HJHA@knocks?5target?5back?$AA@ ; `string'
; Line 3581
	jmp	$LABEL_104$86971
$L87018:
; Line 3583
	mov	eax, OFFSET FLAT:??_C@_0BJ@OIOH@hit?5monster?5doesn?8t?5heal?$AA@ ; `string'
; Line 3584
	jmp	$LABEL_104$86971
$L87020:
; Line 3586
	add	esi, 216				; 000000d8H
; Line 3587
	mov	edi, OFFSET FLAT:_tempstr
	test	BYTE PTR [esi+1], 32			; 00000020H
	je	SHORT $L87021
; Line 3588
	push	OFFSET FLAT:??_C@_0BD@DGMD@hit?5steals?53?$CF?5mana?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87021:
; Line 3589
	test	BYTE PTR [esi+1], 64			; 00000040H
	je	$L86929
; Line 3591
	mov	eax, OFFSET FLAT:??_C@_0BD@NBLO@hit?5steals?55?$CF?5mana?$AA@ ; `string'
; Line 3592
	jmp	$LABEL_81$86968
$L87026:
; Line 3594
	add	esi, 216				; 000000d8H
; Line 3595
	mov	edi, OFFSET FLAT:_tempstr
	test	BYTE PTR [esi+1], -128			; ffffff80H
	je	SHORT $L87027
; Line 3596
	push	OFFSET FLAT:??_C@_0BD@JMCM@hit?5steals?53?$CF?5life?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87027:
; Line 3597
	test	BYTE PTR [esi+2], 1
	je	$L86929
; Line 3599
	mov	eax, OFFSET FLAT:??_C@_0BD@HLFB@hit?5steals?55?$CF?5life?$AA@ ; `string'
; Line 3600
	jmp	$LABEL_81$86968
$L87032:
; Line 3602
	mov	eax, OFFSET FLAT:??_C@_0BH@ENGD@damages?5target?8s?5armor?$AA@ ; `string'
; Line 3603
	jmp	$LABEL_104$86971
$L87034:
; Line 3605
	test	BYTE PTR [esi+218], 2
	mov	edi, OFFSET FLAT:_tempstr
	je	SHORT $L87035
; Line 3606
	push	OFFSET FLAT:??_C@_0N@DKJA@quick?5attack?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87035:
; Line 3607
	test	BYTE PTR [esi+218], 4
	je	SHORT $L87037
; Line 3608
	push	OFFSET FLAT:??_C@_0M@LIII@fast?5attack?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87037:
; Line 3609
	test	BYTE PTR [esi+218], 8
	je	SHORT $L87039
; Line 3610
	push	OFFSET FLAT:??_C@_0O@DOEN@faster?5attack?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87039:
; Line 3611
	test	BYTE PTR [esi+218], 16			; 00000010H
	je	$L86929
; Line 3613
	mov	eax, OFFSET FLAT:??_C@_0P@KNDM@fastest?5attack?$AA@ ; `string'
; Line 3614
	jmp	SHORT $LABEL_81$86968
$L87043:
; Line 3616
	test	BYTE PTR [esi+218], 32			; 00000020H
	mov	edi, OFFSET FLAT:_tempstr
	je	SHORT $L87044
; Line 3617
	push	OFFSET FLAT:??_C@_0BC@FNCP@fast?5hit?5recovery?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87044:
; Line 3618
	test	BYTE PTR [esi+218], 64			; 00000040H
	je	SHORT $L87046
; Line 3619
	push	OFFSET FLAT:??_C@_0BE@HAJD@faster?5hit?5recovery?$AA@ ; `string'
	push	edi
	call	_strcpy
	pop	ecx
	pop	ecx
$L87046:
; Line 3620
	test	BYTE PTR [esi+218], -128		; ffffff80H
	je	$L86929
; Line 3621
	mov	eax, OFFSET FLAT:??_C@_0BF@GDDN@fastest?5hit?5recovery?$AA@ ; `string'
$LABEL_81$86968:
; Line 3623
	push	eax
	push	edi
; Line 3625
	jmp	$L88840
$L87050:
; Line 3627
	mov	eax, OFFSET FLAT:??_C@_0L@IAA@fast?5block?$AA@ ; `string'
; Line 3628
	jmp	$LABEL_104$86971
$L87052:
; Line 3630
	push	DWORD PTR [esi+292]
	push	OFFSET FLAT:??_C@_0BJ@MLPI@adds?5?$CFi?5points?5to?5damage?$AA@ ; `string'
; Line 3631
	jmp	$L88842
$L87054:
; Line 3633
	mov	eax, OFFSET FLAT:??_C@_0BK@CKCL@fires?5random?5speed?5arrows?$AA@ ; `string'
; Line 3634
	jmp	$LABEL_104$86971
$L87056:
; Line 3636
	mov	eax, OFFSET FLAT:??_C@_0BE@JEIK@unusual?5item?5damage?$AA@ ; `string'
; Line 3637
	jmp	$LABEL_98$87058
$L87059:
; Line 3639
	mov	eax, OFFSET FLAT:??_C@_0BD@GCGN@altered?5durability?$AA@ ; `string'
; Line 3640
	jmp	$LABEL_104$86971
$L87061:
; Line 3642
	mov	eax, OFFSET FLAT:??_C@_0BI@JEHF@no?5strength?5requirement?$AA@ ; `string'
; Line 3643
	jmp	$LABEL_104$86971
$L87063:
; Line 3645
	mov	eax, DWORD PTR [esi+224]
	imul	eax, 56					; 00000038H
	push	DWORD PTR _spelldata[eax+4]
	push	DWORD PTR [esi+232]
	push	OFFSET FLAT:??_C@_0O@ILCA@?$CFi?5?$CFs?5charges?$AA@ ; `string'
; Line 3646
	jmp	$L88843
$L87065:
; Line 3648
	mov	eax, OFFSET FLAT:??_C@_0BE@CKKG@Faster?5attack?5swing?$AA@ ; `string'
; Line 3649
	jmp	$LABEL_104$86971
$L87067:
; Line 3651
	mov	eax, OFFSET FLAT:??_C@_0BB@MOMA@one?5handed?5sword?$AA@ ; `string'
; Line 3652
	jmp	SHORT $LABEL_104$86971
$L87069:
; Line 3654
	mov	eax, OFFSET FLAT:??_C@_0BI@GCPK@?$CL200?$CF?5damage?5vs?4?5demons?$AA@ ; `string'
; Line 3655
	jmp	SHORT $LABEL_104$86971
$L87071:
; Line 3657
	mov	eax, OFFSET FLAT:??_C@_0BI@MAJM@All?5Resistance?5equals?50?$AA@ ; `string'
; Line 3658
	jmp	SHORT $LABEL_104$86971
$L87073:
; Line 3660
	mov	eax, OFFSET FLAT:??_C@_0BL@MJCM@constantly?5lose?5hit?5points?$AA@ ; `string'
; Line 3661
	jmp	SHORT $LABEL_104$86971
$L87075:
; Line 3663
	mov	eax, OFFSET FLAT:??_C@_0O@JIPP@life?5stealing?$AA@ ; `string'
; Line 3664
	jmp	SHORT $LABEL_104$86971
$L87077:
; Line 3666
	mov	eax, OFFSET FLAT:??_C@_0BF@BHCJ@see?5with?5infravision?$AA@ ; `string'
; Line 3667
	jmp	SHORT $LABEL_104$86971
$L87079:
; Line 3670
	push	DWORD PTR [esi+212]
	push	OFFSET FLAT:??_C@_0BA@GDEN@armor?5class?3?5?$CFi?$AA@ ; `string'
; Line 3671
	jmp	SHORT $L88842
$L87081:
; Line 3673
	mov	eax, OFFSET FLAT:??_C@_0BK@EHGP@Armor?5class?5added?5to?5life?$AA@ ; `string'
; Line 3674
	jmp	SHORT $LABEL_104$86971
$L87083:
; Line 3676
	mov	eax, OFFSET FLAT:??_C@_0BL@CKFN@10?$CF?5of?5mana?5added?5to?5armor?$AA@ ; `string'
; Line 3677
	jmp	SHORT $LABEL_104$86971
$L87085:
; Line 3679
	mov	esi, DWORD PTR [esi+272]
; Line 3680
	test	esi, esi
	jle	SHORT $L87086
; Line 3681
	cmp	esi, 1
	jl	SHORT $L86929
; Line 3682
	push	esi
	push	OFFSET FLAT:??_C@_0BE@INMC@Resist?5Fire?5?3?5?$CF?$CLi?$CF?$CF?$AA@ ; `string'
$L88842:
	push	OFFSET FLAT:_tempstr
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3683
	jmp	SHORT $L86929
$L87086:
; Line 3684
	mov	eax, OFFSET FLAT:??_C@_01FCOA@?5?$AA@	; `string'
$LABEL_98$87058:
; Line 3686
	push	eax
	push	OFFSET FLAT:_tempstr
$L88841:
	call	_sprintf
; Line 3688
	jmp	SHORT $L88839
$L87089:
; Line 3690
	mov	eax, OFFSET FLAT:??_C@_0BF@EJEO@Another?5ability?5?$CINW?$CJ?$AA@ ; `string'
$LABEL_104$86971:
; Line 3692
	push	eax
	push	OFFSET FLAT:_tempstr
$L88840:
	call	_strcpy
$L88839:
	pop	ecx
	pop	ecx
$L86929:
	pop	edi
	pop	esi
; Line 3695
	ret	0
$L88844:
	DD	$L86932
	DD	$L86934
	DD	$L86936
	DD	$L86938
	DD	$L86940
	DD	$L86946
	DD	$L86951
	DD	$L86956
	DD	$L86961
	DD	$L86969
	DD	$L86972
	DD	$L86974
	DD	$L86976
	DD	$L86978
	DD	$L86980
	DD	$L86982
	DD	$L86984
	DD	$L86986
	DD	$L86988
	DD	$L86990
	DD	$L86992
	DD	$L86994
	DD	$L86996
	DD	$L86998
	DD	$L87000
	DD	$L87002
	DD	$L87004
	DD	$L87006
	DD	$L87008
	DD	$L87010
	DD	$L87012
	DD	$L87014
	DD	$L87016
	DD	$L87018
	DD	$L87020
	DD	$L87026
	DD	$L87032
	DD	$L87034
	DD	$L87043
	DD	$L87050
	DD	$L87052
	DD	$L87054
	DD	$L87056
	DD	$L87059
	DD	$L87061
	DD	$L87063
	DD	$L87065
	DD	$L87067
	DD	$L87069
	DD	$L87071
	DD	$L87073
	DD	$L87075
	DD	$L87077
	DD	$L87079
	DD	$L87081
	DD	$L87083
	DD	$L87085
	DD	$L87089
$L88838:
	DB	0
	DB	0
	DB	1
	DB	1
	DB	2
	DB	2
	DB	3
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	57					; 00000039H
	DB	57					; 00000039H
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	57					; 00000039H
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	21					; 00000015H
	DB	22					; 00000016H
	DB	23					; 00000017H
	DB	24					; 00000018H
	DB	57					; 00000039H
	DB	57					; 00000039H
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	27					; 0000001bH
	DB	28					; 0000001cH
	DB	29					; 0000001dH
	DB	30					; 0000001eH
	DB	57					; 00000039H
	DB	57					; 00000039H
	DB	57					; 00000039H
	DB	57					; 00000039H
	DB	31					; 0000001fH
	DB	32					; 00000020H
	DB	33					; 00000021H
	DB	34					; 00000022H
	DB	35					; 00000023H
	DB	36					; 00000024H
	DB	37					; 00000025H
	DB	38					; 00000026H
	DB	39					; 00000027H
	DB	40					; 00000028H
	DB	41					; 00000029H
	DB	42					; 0000002aH
	DB	43					; 0000002bH
	DB	44					; 0000002cH
	DB	45					; 0000002dH
	DB	46					; 0000002eH
	DB	47					; 0000002fH
	DB	48					; 00000030H
	DB	49					; 00000031H
	DB	57					; 00000039H
	DB	50					; 00000032H
	DB	51					; 00000033H
	DB	52					; 00000034H
	DB	53					; 00000035H
	DB	54					; 00000036H
	DB	55					; 00000037H
	DB	56					; 00000038H
	DB	53					; 00000035H
@PrintItemPower@8 ENDP
_TEXT	ENDS
PUBLIC	_DrawUBack
EXTRN	_gpBuffer:DWORD
EXTRN	@CelDecodeOnly@20:NEAR
EXTRN	_pSTextBoxCels:DWORD
; Function compile flags: /Ogsy
;	COMDAT _DrawUBack
_TEXT	SEGMENT
_DrawUBack PROC NEAR					; COMDAT
; Line 3698
	push	edi
; Line 3699
	push	271					; 0000010fH
	push	1
	mov	edx, 487				; 000001e7H
	push	DWORD PTR _pSTextBoxCels
	push	88					; 00000058H
	pop	ecx
	call	@CelDecodeOnly@20
; File Source/asm_trans_rect.inc
; Line 16
	mov	edi, DWORD PTR _gpBuffer
; Line 18
	add	edi, 371803				; 0005ac5bH
; Line 19
	xor	eax, eax
; Line 20
	mov	edx, 148				; 00000094H
$yloop$87093:
; Line 22
	mov	ecx, 132				; 00000084H
$x0loop$87094:
; Line 24
	stosb
; Line 25
	inc	edi
; Line 26
	loop	$x0loop$87094
; Line 28
	stosb
; Line 30
	sub	edi, 1033				; 00000409H
; Line 31
	mov	ecx, 132				; 00000084H
$x1loop$87095:
; Line 33
	inc	edi
; Line 34
	stosb
; Line 35
	loop	$x1loop$87095
; Line 36
	sub	edi, 1032				; 00000408H
; Line 37
	dec	edx
; Line 38
	jne	SHORT $yloop$87093
; Line 40
	mov	ecx, 132				; 00000084H
$x2loop$87096:
; Line 42
	stosb
; Line 43
	inc	edi
; Line 44
	loop	$x2loop$87096
; Line 46
	stosb
; Line 15
	pop	edi
; File Source/items.cpp
; Line 3706
	ret	0
_DrawUBack ENDP
_TEXT	ENDS
PUBLIC	@PrintUString@20
EXTRN	_SStringY:BYTE
EXTRN	_fontframe:BYTE
EXTRN	_fontkern:BYTE
EXTRN	_fontidx:BYTE
EXTRN	_screen_y_times_768:BYTE
EXTRN	_strlen:NEAR
EXTRN	@CPrintString@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @PrintUString@20
_TEXT	SEGMENT
_cjustflag$ = 8
_str$ = 12
_col$ = 16
_v15$ = -4
_a3$ = 8
@PrintUString@20 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 3709
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3724
	mov	eax, DWORD PTR _SStringY[edx*4]
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR _screen_y_times_768[eax*4+816]
; Line 3725
	push	DWORD PTR _str$[ebp]
; Line 3726
	xor	edi, edi
; Line 3727
	xor	esi, esi
	lea	ebx, DWORD PTR [eax+ecx+96]
	call	_strlen
; Line 3728
	mov	edx, eax
; Line 3729
	xor	eax, eax
	cmp	DWORD PTR _cjustflag$[ebp], eax
	pop	ecx
	mov	DWORD PTR _v15$[ebp], edx
	je	SHORT $L87120
; Line 3731
	cmp	edx, eax
	jle	SHORT $LABEL_16$87122
$L87123:
; Line 3734
	mov	ecx, DWORD PTR _str$[ebp]
	movzx	ecx, BYTE PTR [esi+ecx]
	inc	esi
; Line 3735
	movzx	ecx, BYTE PTR _fontidx[ecx]
; Line 3736
	cmp	esi, edx
	movzx	ecx, BYTE PTR _fontframe[ecx]
	movzx	ecx, BYTE PTR _fontkern[ecx]
	lea	eax, DWORD PTR [eax+ecx+1]
	jl	SHORT $L87123
; Line 3737
	cmp	eax, 257				; 00000101H
	jge	SHORT $L87127
$LABEL_16$87122:
; Line 3739
	mov	edi, 257				; 00000101H
	sub	edi, eax
	sar	edi, 1
$L87127:
; Line 3740
	add	ebx, edi
$L87120:
; Line 3742
	xor	eax, eax
; Line 3744
	cmp	edx, eax
	mov	DWORD PTR _a3$[ebp], eax
	jle	SHORT $L88853
$L87130:
; Line 3746
	mov	ecx, DWORD PTR _str$[ebp]
	movzx	eax, BYTE PTR [eax+ecx]
	movzx	eax, BYTE PTR _fontidx[eax]
	mov	al, BYTE PTR _fontframe[eax]
; Line 3747
	movzx	esi, al
; Line 3749
	test	al, al
	movzx	ecx, BYTE PTR _fontkern[esi]
	lea	edi, DWORD PTR [edi+ecx+1]
	je	SHORT $L87134
; Line 3750
	cmp	edi, 257				; 00000101H
	jg	SHORT $L87134
; Line 3751
	push	DWORD PTR _col$[ebp]
	mov	edx, esi
	mov	ecx, ebx
	call	@CPrintString@12
$L87134:
; Line 3753
	movzx	eax, BYTE PTR _fontkern[esi]
	lea	ebx, DWORD PTR [ebx+eax+1]
; Line 3754
	mov	eax, DWORD PTR _a3$[ebp]
	inc	eax
	mov	ecx, eax
; Line 3755
	cmp	ecx, DWORD PTR _v15$[ebp]
	mov	DWORD PTR _a3$[ebp], ecx
	jl	SHORT $L87130
$L88853:
	pop	edi
	pop	esi
	pop	ebx
; Line 3760
	leave
	ret	12					; 0000000cH
@PrintUString@20 ENDP
_TEXT	ENDS
PUBLIC	@DrawULine@4
; Function compile flags: /Ogsy
;	COMDAT @DrawULine@4
_TEXT	SEGMENT
@DrawULine@4 PROC NEAR					; COMDAT
; _y$ = ecx
; Line 3763
	push	ecx
	push	ecx
; Line 3769
	mov	ecx, DWORD PTR _SStringY[ecx*4]
	mov	eax, DWORD PTR _gpBuffer
	push	ebx
	push	ebp
	mov	ecx, DWORD PTR _screen_y_times_768[ecx*4+792]
	lea	edx, DWORD PTR [eax+142170]
	push	esi
	push	edi
	lea	eax, DWORD PTR [ecx+eax+90]
	mov	DWORD PTR -4+[esp+24], 3
	mov	ecx, 264				; 00000108H
	mov	ebp, 504				; 000001f8H
$L87142:
; Line 3772
	mov	edi, edx
	mov	esi, eax
	sub	edi, eax
	mov	DWORD PTR -8+[esp+24], 266		; 0000010aH
$L88866:
	mov	bl, BYTE PTR [edi+esi]
	mov	BYTE PTR [esi], bl
	inc	esi
	dec	DWORD PTR -8+[esp+24]
	jne	SHORT $L88866
; Line 3773
	add	edx, ecx
; Line 3774
	add	eax, ecx
; Line 3775
	mov	bl, BYTE PTR [edx]
; Line 3776
	add	edx, ebp
	mov	BYTE PTR [eax], bl
; Line 3777
	add	eax, ebp
; Line 3779
	dec	DWORD PTR -4+[esp+24]
	jne	SHORT $L87142
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3780
	pop	ecx
	pop	ecx
	ret	0
@DrawULine@4 ENDP
_TEXT	ENDS
PUBLIC	_DrawUniqueInfo
EXTRN	_questlog:DWORD
EXTRN	_chrflag:DWORD
; Function compile flags: /Ogsy
;	COMDAT _DrawUniqueInfo
_TEXT	SEGMENT
_DrawUniqueInfo PROC NEAR				; COMDAT
; Line 3783
	push	ebx
	push	ebp
; Line 3788
	xor	ebp, ebp
	push	esi
	cmp	DWORD PTR _chrflag, ebp
	push	edi
	jne	$L87155
	cmp	DWORD PTR _questlog, ebp
	jne	$L87155
; Line 3789
	mov	esi, DWORD PTR _curruitem+308
; Line 3790
	call	_DrawUBack
; Line 3792
	imul	esi, 84					; 00000054H
	push	3
	xor	ecx, ecx
	push	DWORD PTR _UniqueItemList[esi]
	push	1
	push	2
	pop	edx
	call	@PrintUString@20
; Line 3793
	push	5
	pop	ecx
	call	@DrawULine@4
; Line 3794
	mov	cl, BYTE PTR _UniqueItemList[esi+12]
	mov	ebx, OFFSET FLAT:_curruitem
	mov	edx, ebx
	call	@PrintItemPower@8
; Line 3795
	movsx	eax, BYTE PTR _UniqueItemList[esi+6]
	push	14					; 0000000eH
; Line 3796
	xor	ecx, ecx
	pop	edi
	push	ebp
	mov	ebp, OFFSET FLAT:_tempstr
	sub	edi, eax
	push	ebp
	push	1
	mov	edx, edi
	call	@PrintUString@20
; Line 3797
	cmp	BYTE PTR _UniqueItemList[esi+6], 1
	jle	SHORT $L87151
; Line 3798
	mov	cl, BYTE PTR _UniqueItemList[esi+24]
	mov	edx, ebx
	call	@PrintItemPower@8
; Line 3799
	push	0
	push	ebp
	push	1
	lea	edx, DWORD PTR [edi+2]
	xor	ecx, ecx
	call	@PrintUString@20
$L87151:
; Line 3801
	cmp	BYTE PTR _UniqueItemList[esi+6], 2
	jle	SHORT $L87152
; Line 3802
	mov	cl, BYTE PTR _UniqueItemList[esi+36]
	mov	edx, ebx
	call	@PrintItemPower@8
; Line 3803
	push	0
	push	ebp
	push	1
	lea	edx, DWORD PTR [edi+4]
	xor	ecx, ecx
	call	@PrintUString@20
$L87152:
; Line 3805
	cmp	BYTE PTR _UniqueItemList[esi+6], 3
	jle	SHORT $L87153
; Line 3806
	mov	cl, BYTE PTR _UniqueItemList[esi+48]
	mov	edx, ebx
	call	@PrintItemPower@8
; Line 3807
	push	0
	push	ebp
	push	1
	lea	edx, DWORD PTR [edi+6]
	xor	ecx, ecx
	call	@PrintUString@20
$L87153:
; Line 3809
	cmp	BYTE PTR _UniqueItemList[esi+6], 4
	jle	SHORT $L87154
; Line 3810
	mov	cl, BYTE PTR _UniqueItemList[esi+60]
	mov	edx, ebx
	call	@PrintItemPower@8
; Line 3811
	push	0
	push	ebp
	push	1
	lea	edx, DWORD PTR [edi+8]
	xor	ecx, ecx
	call	@PrintUString@20
$L87154:
; Line 3813
	cmp	BYTE PTR _UniqueItemList[esi+6], 5
	jle	SHORT $L87155
; Line 3814
	mov	cl, BYTE PTR _UniqueItemList[esi+72]
	mov	edx, ebx
	call	@PrintItemPower@8
; Line 3815
	push	0
	push	ebp
	push	1
	lea	edx, DWORD PTR [edi+10]
	xor	ecx, ecx
	call	@PrintUString@20
$L87155:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3818
	ret	0
_DrawUniqueInfo ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@GHKG@Right?9click?5to?5read?$AA@	; `string'
PUBLIC	??_C@_0BK@KNNO@Right?9click?5to?5read?0?5then?$AA@ ; `string'
PUBLIC	??_C@_0BF@MLOA@left?9click?5to?5target?$AA@	; `string'
PUBLIC	??_C@_0BD@EMJN@Right?5click?5to?5use?$AA@	; `string'
PUBLIC	??_C@_0BE@EEDJ@Right?5click?5to?5read?$AA@	; `string'
PUBLIC	??_C@_0BE@FPN@Right?5click?5to?5view?$AA@	; `string'
PUBLIC	??_C@_0L@BAHA@Level?5?3?5?$CFi?$AA@		; `string'
PUBLIC	@PrintItemMisc@4
;	COMDAT ??_C@_0BE@GHKG@Right?9click?5to?5read?$AA@
_DATA	SEGMENT
??_C@_0BE@GHKG@Right?9click?5to?5read?$AA@ DB 'Right-click to read', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@KNNO@Right?9click?5to?5read?0?5then?$AA@
_DATA	SEGMENT
??_C@_0BK@KNNO@Right?9click?5to?5read?0?5then?$AA@ DB 'Right-click to rea'
	DB	'd, then', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MLOA@left?9click?5to?5target?$AA@
_DATA	SEGMENT
??_C@_0BF@MLOA@left?9click?5to?5target?$AA@ DB 'left-click to target', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@EMJN@Right?5click?5to?5use?$AA@
_DATA	SEGMENT
??_C@_0BD@EMJN@Right?5click?5to?5use?$AA@ DB 'Right click to use', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EEDJ@Right?5click?5to?5read?$AA@
_DATA	SEGMENT
??_C@_0BE@EEDJ@Right?5click?5to?5read?$AA@ DB 'Right click to read', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@FPN@Right?5click?5to?5view?$AA@
_DATA	SEGMENT
??_C@_0BE@FPN@Right?5click?5to?5view?$AA@ DB 'Right click to view', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@BAHA@Level?5?3?5?$CFi?$AA@
_DATA	SEGMENT
??_C@_0L@BAHA@Level?5?3?5?$CFi?$AA@ DB 'Level : %i', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @PrintItemMisc@4
_TEXT	SEGMENT
@PrintItemMisc@4 PROC NEAR				; COMDAT
; _x$ = ecx
; Line 3822
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 3823
	xor	ebx, ebx
	mov	esi, OFFSET FLAT:_tempstr
	inc	ebx
	cmp	DWORD PTR [edi+220], 21			; 00000015H
	jne	SHORT $L87159
; Line 3824
	push	OFFSET FLAT:??_C@_0BE@GHKG@Right?9click?5to?5read?$AA@ ; `string'
	push	esi
	call	_strcpy
	pop	ecx
; Line 3825
	mov	edx, ebx
	pop	ecx
	mov	ecx, esi
	call	@AddPanelString@8
$L87159:
; Line 3827
	cmp	DWORD PTR [edi+220], 22			; 00000016H
	jne	SHORT $L87161
; Line 3828
	push	OFFSET FLAT:??_C@_0BK@KNNO@Right?9click?5to?5read?0?5then?$AA@ ; `string'
	push	esi
	call	_strcpy
	pop	ecx
; Line 3829
	mov	edx, ebx
	pop	ecx
	mov	ecx, esi
	call	@AddPanelString@8
; Line 3830
	push	OFFSET FLAT:??_C@_0BF@MLOA@left?9click?5to?5target?$AA@ ; `string'
	push	esi
	call	_strcpy
	pop	ecx
; Line 3831
	mov	edx, ebx
	pop	ecx
	mov	ecx, esi
	call	@AddPanelString@8
$L87161:
; Line 3833
	mov	eax, DWORD PTR [edi+220]
	cmp	eax, ebx
	jl	SHORT $L87164
	cmp	eax, 20					; 00000014H
	jg	SHORT $L87164
; Line 3834
	mov	cl, al
	call	@PrintItemOil@4
; Line 3835
	push	OFFSET FLAT:??_C@_0BD@EMJN@Right?5click?5to?5use?$AA@ ; `string'
	push	esi
	call	_strcpy
	pop	ecx
; Line 3836
	mov	edx, ebx
	pop	ecx
	mov	ecx, esi
	call	@AddPanelString@8
$L87164:
; Line 3838
	cmp	DWORD PTR [edi+220], 24			; 00000018H
	jne	SHORT $L87166
; Line 3839
	push	OFFSET FLAT:??_C@_0BE@EEDJ@Right?5click?5to?5read?$AA@ ; `string'
	push	esi
	call	_strcpy
	pop	ecx
; Line 3840
	mov	edx, ebx
	pop	ecx
	mov	ecx, esi
	call	@AddPanelString@8
$L87166:
; Line 3842
	cmp	DWORD PTR [edi+220], 42			; 0000002aH
	jne	SHORT $L87168
; Line 3843
	push	OFFSET FLAT:??_C@_0BE@FPN@Right?5click?5to?5view?$AA@ ; `string'
	push	esi
	call	_strcpy
	pop	ecx
; Line 3844
	mov	edx, ebx
	pop	ecx
	mov	ecx, esi
	call	@AddPanelString@8
$L87168:
; Line 3846
	cmp	DWORD PTR [edi+220], 43			; 0000002bH
	jne	SHORT $L87170
; Line 3847
	push	DWORD PTR [edi+196]
	push	OFFSET FLAT:??_C@_0L@BAHA@Level?5?3?5?$CFi?$AA@ ; `string'
	push	esi
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3848
	mov	ecx, esi
	mov	edx, ebx
	pop	edi
	pop	esi
	pop	ebx
	jmp	@AddPanelString@8
$L87170:
	pop	edi
	pop	esi
	pop	ebx
; Line 3850
	ret	0
@PrintItemMisc@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BO@JJFH@damage?3?5?$CFi?9?$CFi?5?5Indestructible?$AA@ ; `string'
PUBLIC	??_C@_0BK@FAGK@damage?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0BK@ICJI@armor?3?5?$CFi?5?5Indestructible?$AA@ ; `string'
PUBLIC	??_C@_0BG@BMGD@armor?3?5?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0BH@BLJA@dam?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0P@EAMD@Charges?3?5?$CFi?1?$CFi?$AA@	; `string'
PUBLIC	??_C@_0M@FNJL@unique?5item?$AA@			; `string'
PUBLIC	??_C@_09OOBN@Required?3?$AA@			; `string'
PUBLIC	??_C@_09GDNC@?$CFs?5?$CFi?5Str?$AA@		; `string'
PUBLIC	??_C@_09LBGI@?$CFs?5?$CFi?5Mag?$AA@		; `string'
PUBLIC	??_C@_09IBEM@?$CFs?5?$CFi?5Dex?$AA@		; `string'
PUBLIC	@PrintItemDetails@4
EXTRN	_pinfoflag:DWORD
;	COMDAT ??_C@_0BO@JJFH@damage?3?5?$CFi?9?$CFi?5?5Indestructible?$AA@
; File Source/../defs.h
_DATA	SEGMENT
??_C@_0BO@JJFH@damage?3?5?$CFi?9?$CFi?5?5Indestructible?$AA@ DB 'damage: '
	DB	'%i-%i  Indestructible', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@FAGK@damage?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BK@FAGK@damage?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ DB 'dam'
	DB	'age: %i-%i  Dur: %i/%i', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BK@ICJI@armor?3?5?$CFi?5?5Indestructible?$AA@
_DATA	SEGMENT
??_C@_0BK@ICJI@armor?3?5?$CFi?5?5Indestructible?$AA@ DB 'armor: %i  Indes'
	DB	'tructible', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@BMGD@armor?3?5?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BG@BMGD@armor?3?5?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ DB 'armor: %i  '
	DB	'Dur: %i/%i', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@BLJA@dam?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT
??_C@_0BH@BLJA@dam?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ DB 'dam: %'
	DB	'i-%i  Dur: %i/%i', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@EAMD@Charges?3?5?$CFi?1?$CFi?$AA@
_DATA	SEGMENT
??_C@_0P@EAMD@Charges?3?5?$CFi?1?$CFi?$AA@ DB 'Charges: %i/%i', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@unique?5item?$AA@
_DATA	SEGMENT
??_C@_0M@FNJL@unique?5item?$AA@ DB 'unique item', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09OOBN@Required?3?$AA@
_DATA	SEGMENT
??_C@_09OOBN@Required?3?$AA@ DB 'Required:', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09GDNC@?$CFs?5?$CFi?5Str?$AA@
_DATA	SEGMENT
??_C@_09GDNC@?$CFs?5?$CFi?5Str?$AA@ DB '%s %i Str', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09LBGI@?$CFs?5?$CFi?5Mag?$AA@
_DATA	SEGMENT
??_C@_09LBGI@?$CFs?5?$CFi?5Mag?$AA@ DB '%s %i Mag', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09IBEM@?$CFs?5?$CFi?5Dex?$AA@
_DATA	SEGMENT
??_C@_09IBEM@?$CFs?5?$CFi?5Dex?$AA@ DB '%s %i Dex', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @PrintItemDetails@4
_TEXT	SEGMENT
@PrintItemDetails@4 PROC NEAR				; COMDAT
; _x$ = ecx
; File Source/items.cpp
; Line 3853
	push	ebx
	push	ebp
	push	esi
; Line 3862
	xor	ebx, ebx
	mov	esi, ecx
	inc	ebx
	push	edi
	mov	ebp, 255				; 000000ffH
	cmp	BYTE PTR [esi+190], bl
	mov	edi, OFFSET FLAT:_tempstr
	jne	SHORT $L87181
; Line 3863
	mov	eax, DWORD PTR [esi+240]
	cmp	eax, ebp
	jne	SHORT $L87182
; Line 3864
	push	DWORD PTR [esi+208]
	push	DWORD PTR [esi+204]
	push	OFFSET FLAT:??_C@_0BO@JJFH@damage?3?5?$CFi?9?$CFi?5?5Indestructible?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 3865
	jmp	SHORT $L87184
$L87182:
; Line 3866
	push	eax
	push	DWORD PTR [esi+236]
	push	DWORD PTR [esi+208]
	push	DWORD PTR [esi+204]
	push	OFFSET FLAT:??_C@_0BK@FAGK@damage?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 24					; 00000018H
$L87184:
; Line 3867
	mov	edx, ebx
	mov	ecx, edi
	call	@AddPanelString@8
$L87181:
; Line 3869
	cmp	BYTE PTR [esi+190], 2
	jne	SHORT $L87186
; Line 3870
	mov	eax, DWORD PTR [esi+240]
	cmp	eax, ebp
	jne	SHORT $L87187
; Line 3871
	push	DWORD PTR [esi+212]
	push	OFFSET FLAT:??_C@_0BK@ICJI@armor?3?5?$CFi?5?5Indestructible?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3872
	jmp	SHORT $L87189
$L87187:
; Line 3873
	push	eax
	push	DWORD PTR [esi+236]
	push	DWORD PTR [esi+212]
	push	OFFSET FLAT:??_C@_0BG@BMGD@armor?3?5?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 20					; 00000014H
$L87189:
; Line 3874
	mov	edx, ebx
	mov	ecx, edi
	call	@AddPanelString@8
$L87186:
; Line 3876
	cmp	DWORD PTR [esi+220], 23			; 00000017H
	jne	SHORT $L87191
	cmp	DWORD PTR [esi+232], 0
	je	SHORT $L87191
; Line 3877
	push	DWORD PTR [esi+240]
	push	DWORD PTR [esi+236]
	push	DWORD PTR [esi+208]
	push	DWORD PTR [esi+204]
	push	OFFSET FLAT:??_C@_0BH@BLJA@dam?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
	push	edi
	call	_sprintf
; Line 3878
	push	DWORD PTR [esi+232]
	push	DWORD PTR [esi+228]
	push	OFFSET FLAT:??_C@_0P@EAMD@Charges?3?5?$CFi?1?$CFi?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 40					; 00000028H
; Line 3879
	mov	edx, ebx
	mov	ecx, edi
	call	@AddPanelString@8
$L87191:
; Line 3881
	mov	cl, BYTE PTR [esi+332]
; Line 3882
	cmp	cl, -1
	je	SHORT $L87194
; Line 3883
	mov	edx, esi
	call	@PrintItemPower@8
; Line 3884
	mov	edx, ebx
	mov	ecx, edi
	call	@AddPanelString@8
$L87194:
; Line 3886
	mov	cl, BYTE PTR [esi+333]
; Line 3887
	cmp	cl, -1
	je	SHORT $L87195
; Line 3888
	mov	edx, esi
	call	@PrintItemPower@8
; Line 3889
	mov	edx, ebx
	mov	ecx, edi
	call	@AddPanelString@8
$L87195:
; Line 3891
	cmp	BYTE PTR [esi+60], 2
	jne	SHORT $L88888
; Line 3892
	mov	edx, ebx
	mov	ecx, OFFSET FLAT:??_C@_0M@FNJL@unique?5item?$AA@ ; `string'
	call	@AddPanelString@8
; Line 3894
	mov	eax, OFFSET FLAT:_curruitem
	mov	ecx, esi
	mov	DWORD PTR _uitemflag, ebx
	sub	ecx, eax
	mov	ebp, 368				; 00000170H
$L88887:
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], dl
	inc	eax
	dec	ebp
	jne	SHORT $L88887
$L88888:
; Line 3896
	mov	ecx, esi
	call	@PrintItemMisc@4
; Line 3897
	movsx	eax, BYTE PTR [esi+354]
	movsx	ecx, BYTE PTR [esi+352]
	add	eax, ecx
	movzx	ecx, BYTE PTR [esi+353]
	add	eax, ecx
	je	SHORT $L87199
; Line 3898
	push	OFFSET FLAT:??_C@_09OOBN@Required?3?$AA@ ; `string'
	push	edi
	call	_strcpy
; Line 3899
	mov	al, BYTE PTR [esi+352]
	pop	ecx
; Line 3900
	test	al, al
	pop	ecx
	je	SHORT $L87201
; Line 3901
	movsx	eax, al
	push	eax
	push	edi
	push	OFFSET FLAT:??_C@_09GDNC@?$CFs?5?$CFi?5Str?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
$L87201:
; Line 3902
	mov	al, BYTE PTR [esi+353]
; Line 3903
	test	al, al
	je	SHORT $L87203
; Line 3904
	movzx	eax, al
	push	eax
	push	edi
	push	OFFSET FLAT:??_C@_09LBGI@?$CFs?5?$CFi?5Mag?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
$L87203:
; Line 3905
	mov	al, BYTE PTR [esi+354]
; Line 3906
	test	al, al
	je	SHORT $L87205
; Line 3907
	movsx	eax, al
	push	eax
	push	edi
	push	OFFSET FLAT:??_C@_09IBEM@?$CFs?5?$CFi?5Dex?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
$L87205:
; Line 3908
	mov	edx, ebx
	mov	ecx, edi
	call	@AddPanelString@8
$L87199:
	pop	edi
	pop	esi
; Line 3910
	mov	DWORD PTR _pinfoflag, ebx
	pop	ebp
	pop	ebx
; Line 3911
	ret	0
@PrintItemDetails@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0P@EBH@Not?5Identified?$AA@		; `string'
PUBLIC	@PrintItemDur@4
;	COMDAT ??_C@_0P@EBH@Not?5Identified?$AA@
_DATA	SEGMENT
??_C@_0P@EBH@Not?5Identified?$AA@ DB 'Not Identified', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @PrintItemDur@4
_TEXT	SEGMENT
@PrintItemDur@4 PROC NEAR				; COMDAT
; _x$ = ecx
; Line 3914
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi
; Line 3922
	mov	ebp, 255				; 000000ffH
	cmp	BYTE PTR [esi+190], 1
	mov	edi, OFFSET FLAT:_tempstr
	mov	ebx, OFFSET FLAT:??_C@_0P@EAMD@Charges?3?5?$CFi?1?$CFi?$AA@ ; `string'
	jne	$L87219
; Line 3923
	mov	eax, DWORD PTR [esi+240]
	cmp	eax, ebp
	jne	SHORT $L87216
; Line 3924
	push	DWORD PTR [esi+208]
	push	DWORD PTR [esi+204]
	push	OFFSET FLAT:??_C@_0BO@JJFH@damage?3?5?$CFi?9?$CFi?5?5Indestructible?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 3925
	jmp	SHORT $L87217
$L87216:
; Line 3926
	push	eax
	push	DWORD PTR [esi+236]
	push	DWORD PTR [esi+208]
	push	DWORD PTR [esi+204]
	push	OFFSET FLAT:??_C@_0BK@FAGK@damage?3?5?$CFi?9?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 24					; 00000018H
$L87217:
; Line 3927
	xor	edx, edx
	mov	ecx, edi
	inc	edx
	call	@AddPanelString@8
; Line 3928
	cmp	DWORD PTR [esi+220], 23			; 00000017H
	jne	SHORT $L87218
	mov	eax, DWORD PTR [esi+232]
	test	eax, eax
	je	SHORT $L87218
; Line 3929
	push	eax
	push	DWORD PTR [esi+228]
	push	ebx
	push	edi
	call	_sprintf
; Line 3930
	xor	edx, edx
	add	esp, 16					; 00000010H
	inc	edx
	mov	ecx, edi
	call	@AddPanelString@8
$L87218:
; Line 3932
	cmp	BYTE PTR [esi+60], 0
	je	SHORT $L87219
; Line 3933
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0P@EBH@Not?5Identified?$AA@ ; `string'
	inc	edx
	call	@AddPanelString@8
$L87219:
; Line 3935
	cmp	BYTE PTR [esi+190], 2
	jne	$L88897
; Line 3936
	mov	eax, DWORD PTR [esi+240]
	cmp	eax, ebp
	jne	SHORT $L87222
; Line 3937
	push	DWORD PTR [esi+212]
	push	OFFSET FLAT:??_C@_0BK@ICJI@armor?3?5?$CFi?5?5Indestructible?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3938
	jmp	SHORT $L87223
$L87222:
; Line 3939
	push	eax
	push	DWORD PTR [esi+236]
	push	DWORD PTR [esi+212]
	push	OFFSET FLAT:??_C@_0BG@BMGD@armor?3?5?$CFi?5?5Dur?3?5?$CFi?1?$CFi?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 20					; 00000014H
$L87223:
; Line 3940
	xor	ebp, ebp
	mov	ecx, edi
	inc	ebp
	mov	edx, ebp
	call	@AddPanelString@8
; Line 3941
	cmp	BYTE PTR [esi+60], 0
	je	SHORT $L87224
; Line 3942
	mov	edx, ebp
	mov	ecx, OFFSET FLAT:??_C@_0P@EBH@Not?5Identified?$AA@ ; `string'
	call	@AddPanelString@8
$L87224:
; Line 3943
	cmp	DWORD PTR [esi+220], 23			; 00000017H
	jne	SHORT $L87225
	mov	eax, DWORD PTR [esi+232]
	test	eax, eax
	je	SHORT $L87225
; Line 3944
	push	eax
	push	DWORD PTR [esi+228]
	push	ebx
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 3945
	mov	edx, ebp
	mov	ecx, edi
	call	@AddPanelString@8
	jmp	SHORT $L87225
$L88897:
	xor	ebp, ebp
	inc	ebp
$L87225:
; Line 3948
	mov	eax, DWORD PTR [esi+8]
; Line 3949
	cmp	eax, 12					; 0000000cH
	je	SHORT $L87227
	cmp	eax, 13					; 0000000dH
	jne	SHORT $L87226
$L87227:
; Line 3950
	mov	edx, ebp
	mov	ecx, OFFSET FLAT:??_C@_0P@EBH@Not?5Identified?$AA@ ; `string'
	call	@AddPanelString@8
$L87226:
; Line 3951
	mov	ecx, esi
	call	@PrintItemMisc@4
; Line 3952
	movsx	eax, BYTE PTR [esi+354]
	movsx	ecx, BYTE PTR [esi+352]
	add	eax, ecx
	movzx	ecx, BYTE PTR [esi+353]
	add	eax, ecx
	je	SHORT $L87229
; Line 3953
	push	OFFSET FLAT:??_C@_09OOBN@Required?3?$AA@ ; `string'
	push	edi
	call	_strcpy
; Line 3954
	mov	al, BYTE PTR [esi+352]
	pop	ecx
; Line 3955
	test	al, al
	pop	ecx
	je	SHORT $L87230
; Line 3956
	movsx	eax, al
	push	eax
	push	edi
	push	OFFSET FLAT:??_C@_09GDNC@?$CFs?5?$CFi?5Str?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
$L87230:
; Line 3957
	mov	al, BYTE PTR [esi+353]
; Line 3958
	test	al, al
	je	SHORT $L87231
; Line 3959
	movzx	eax, al
	push	eax
	push	edi
	push	OFFSET FLAT:??_C@_09LBGI@?$CFs?5?$CFi?5Mag?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
$L87231:
; Line 3960
	mov	al, BYTE PTR [esi+354]
; Line 3961
	test	al, al
	je	SHORT $L87232
; Line 3962
	movsx	eax, al
	push	eax
	push	edi
	push	OFFSET FLAT:??_C@_09IBEM@?$CFs?5?$CFi?5Dex?$AA@ ; `string'
	push	edi
	call	_sprintf
	add	esp, 16					; 00000010H
$L87232:
; Line 3963
	mov	edx, ebp
	mov	ecx, edi
	call	@AddPanelString@8
$L87229:
	pop	edi
; Line 3965
	mov	DWORD PTR _pinfoflag, ebp
	pop	esi
	pop	ebp
	pop	ebx
; Line 3966
	ret	0
@PrintItemDur@4 ENDP
_TEXT	ENDS
PUBLIC	@UseItem@12
EXTRN	@ClrPlrPath@4:NEAR
EXTRN	@ModifyPlrStr@8:NEAR
EXTRN	@ModifyPlrMag@8:NEAR
EXTRN	@ModifyPlrDex@8:NEAR
EXTRN	@ModifyPlrVit@8:NEAR
EXTRN	_cursmx:DWORD
EXTRN	_cursmy:DWORD
EXTRN	@NewCursor@4:NEAR
EXTRN	_doom_init:NEAR
EXTRN	@NetSendCmdLoc@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @UseItem@12
_TEXT	SEGMENT
_p$ = -4
_spl$ = 8
@UseItem@12 PROC NEAR					; COMDAT
; _p$ = ecx
; _Mid$ = edx
; Line 3969
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
; Line 3972
	cmp	edx, 28					; 0000001cH
	push	edi
	mov	DWORD PTR _p$[ebp], esi
	jg	$L88901
	je	$L87246
	push	12					; 0000000cH
	pop	ebx
	cmp	edx, ebx
	jg	$L88902
	je	$L87262
	dec	edx
	dec	edx
	je	$L87251
	dec	edx
	je	$L87246
	sub	edx, 3
	je	SHORT $L87252
	dec	edx
	je	SHORT $L87258
	sub	edx, 3
	je	SHORT $L87260
	dec	edx
	jne	$L87243
; Line 4022
	xor	edx, edx
	inc	edx
	call	@ModifyPlrMag@8
; Line 4023
	jmp	$L87243
$L87260:
; Line 4019
	xor	edx, edx
	mov	ecx, esi
	inc	edx
	call	@ModifyPlrStr@8
; Line 4020
	jmp	$L87243
$L87258:
; Line 4012
	imul	esi, 21720				; 000054d8H
	test	BYTE PTR _plr[esi+21587], 8
	jne	$L87243
; Line 4013
	mov	eax, DWORD PTR _plr[esi+432]
	mov	DWORD PTR _plr[esi+428], eax
; Line 4014
	mov	eax, DWORD PTR _plr[esi+424]
	mov	DWORD PTR _plr[esi+420], eax
; Line 4017
	jmp	$L87290
$L87252:
; Line 3995
	imul	esi, 21720				; 000054d8H
; Line 3996
	mov	cl, 40					; 00000028H
	mov	edi, DWORD PTR _plr[esi+432]
	sar	edi, 8
	mov	edx, edi
	call	@random@8
	and	edi, -2					; fffffffeH
	lea	edi, DWORD PTR [edi+eax*2]
; Line 3997
	mov	al, BYTE PTR _plr[esi+352]
	shl	edi, 5
	cmp	al, 2
	jne	SHORT $L87253
; Line 3998
	add	edi, edi
$L87253:
; Line 3999
	cmp	al, 1
	jne	SHORT $L87254
; Line 4000
	mov	eax, edi
	sar	eax, 1
	add	edi, eax
$L87254:
; Line 4001
	test	BYTE PTR _plr[esi+21587], 8
	jne	$L87243
; Line 4003
	mov	ecx, DWORD PTR _plr[esi+432]
	lea	eax, DWORD PTR _plr[esi+428]
	add	DWORD PTR [eax], edi
	mov	edx, DWORD PTR [eax]
	cmp	edx, ecx
	jle	SHORT $L87256
; Line 4004
	mov	DWORD PTR [eax], ecx
$L87256:
; Line 4005
	lea	eax, DWORD PTR _plr[esi+420]
; Line 4006
	mov	esi, DWORD PTR _plr[esi+424]
	add	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, esi
	jle	$L87290
; Line 4007
	mov	DWORD PTR [eax], esi
; Line 4010
	jmp	$L87290
$L87251:
; Line 3990
	imul	esi, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[esi+412]
	mov	DWORD PTR _plr[esi+408], eax
; Line 3991
	mov	eax, DWORD PTR _plr[esi+404]
	mov	DWORD PTR _plr[esi+400], eax
$L87250:
; Line 3992
	mov	DWORD PTR _drawhpflag, 1
; Line 3993
	jmp	$L87243
$L87262:
; Line 4025
	xor	edx, edx
	mov	ecx, esi
	inc	edx
	call	@ModifyPlrDex@8
; Line 4026
	jmp	$L87243
$L88902:
; Line 3972
	sub	edx, 13					; 0000000dH
	je	$L87263
	sub	edx, 5
	je	$L87264
	dec	edx
	je	$L87274
	dec	edx
	dec	edx
	je	$L87276
	dec	edx
	je	$L87281
	dec	edx
	dec	edx
	jne	$L87243
; Line 4105
	mov	edi, esi
	mov	ebx, DWORD PTR _spl$[ebp]
	imul	edi, 21720				; 000054d8H
	xor	eax, eax
	lea	ecx, DWORD PTR [ebx-1]
	inc	eax
	xor	edx, edx
	lea	esi, DWORD PTR _plr[edi+264]
	call	__allshl
	or	DWORD PTR [esi], eax
	or	DWORD PTR [esi+4], edx
; Line 4106
	lea	eax, DWORD PTR _plr[edi+ebx+193]
	mov	cl, BYTE PTR [eax]
	cmp	cl, 15					; 0000000fH
	jge	SHORT $L87287
; Line 4107
	inc	cl
	mov	BYTE PTR [eax], cl
$L87287:
; Line 4108
	imul	ebx, 56					; 00000038H
; Line 4109
	mov	edx, DWORD PTR _plr[edi+432]
	lea	ecx, DWORD PTR _plr[edi+428]
	movzx	eax, BYTE PTR _spelldata[ebx+1]
	shl	eax, 6
	add	DWORD PTR [ecx], eax
	mov	esi, DWORD PTR [ecx]
	cmp	esi, edx
	jle	SHORT $L87288
; Line 4110
	mov	DWORD PTR [ecx], edx
$L87288:
; Line 4111
	lea	ecx, DWORD PTR _plr[edi+420]
; Line 4112
	mov	edi, DWORD PTR _plr[edi+424]
	add	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [ecx]
	cmp	eax, edi
	jle	SHORT $L87289
; Line 4113
	mov	DWORD PTR [ecx], edi
$L87289:
; Line 4114
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	ecx, DWORD PTR _myplr
	jne	SHORT $L87290
; Line 4115
	call	@CalcPlrBookVals@4
$L87290:
; Line 4116
	mov	DWORD PTR _drawmanaflag, 1
; Line 4117
	jmp	$L87243
$L87281:
; Line 4089
	mov	edi, DWORD PTR _spl$[ebp]
	mov	eax, edi
	imul	eax, 56					; 00000038H
	cmp	DWORD PTR _spelldata[eax+20], 0
; Line 4094
	jne	SHORT $L88903
; Line 4095
	mov	ecx, esi
	call	@ClrPlrPath@4
; Line 4096
	mov	eax, esi
; Line 4100
	mov	ecx, DWORD PTR _cursmx
	imul	eax, 21720				; 000054d8H
	mov	DWORD PTR _plr[eax+36], ecx
; Line 4101
	mov	ecx, DWORD PTR _cursmy
	mov	DWORD PTR _plr[eax+164], edi
	mov	BYTE PTR _plr[eax+168], 4
	mov	BYTE PTR _plr[eax+169], 3
	mov	DWORD PTR _plr[eax+32], ebx
	mov	DWORD PTR _plr[eax+40], ecx
; Line 4103
	jmp	$L87243
$L87276:
; Line 4071
	mov	edi, DWORD PTR _spl$[ebp]
	mov	eax, edi
	imul	eax, 56					; 00000038H
	cmp	DWORD PTR _spelldata[eax+20], 0
	je	SHORT $L87277
$L88903:
; Line 4072
	mov	eax, esi
	imul	eax, 21720				; 000054d8H
; Line 4074
	cmp	esi, DWORD PTR _myplr
	mov	DWORD PTR _plr[eax+172], edi
	mov	BYTE PTR _plr[eax+176], 4
	jne	$L87243
; Line 4075
	push	9
	pop	ecx
	call	@NewCursor@4
; Line 4076
	jmp	$L87243
$L87277:
; Line 4077
	mov	ecx, esi
	call	@ClrPlrPath@4
; Line 4078
	mov	eax, esi
; Line 4082
	mov	ecx, DWORD PTR _cursmx
	imul	eax, 21720				; 000054d8H
; Line 4083
	mov	edx, DWORD PTR _cursmy
; Line 4084
	cmp	esi, DWORD PTR _myplr
	mov	DWORD PTR _plr[eax+164], edi
	mov	BYTE PTR _plr[eax+168], 4
	mov	BYTE PTR _plr[eax+169], 3
	mov	DWORD PTR _plr[eax+32], ebx
	mov	DWORD PTR _plr[eax+36], ecx
	mov	DWORD PTR _plr[eax+40], edx
	jne	$L87243
	cmp	edi, 18					; 00000012H
	jne	$L87243
; Line 4085
	push	edx
	push	ecx
	xor	ecx, ecx
	mov	dl, 91					; 0000005bH
	inc	ecx
	call	@NetSendCmdLoc@16
; Line 4087
	jmp	$L87243
$L87274:
; Line 4061
	mov	eax, esi
	imul	eax, 21720				; 000054d8H
	mov	ecx, DWORD PTR _plr[eax+412]
	mov	DWORD PTR _plr[eax+408], ecx
; Line 4062
	mov	ecx, DWORD PTR _plr[eax+404]
	mov	DWORD PTR _plr[eax+400], ecx
; Line 4063
	xor	ecx, ecx
	inc	ecx
; Line 4064
	test	BYTE PTR _plr[eax+21587], 8
	mov	DWORD PTR _drawhpflag, ecx
	jne	$L87243
; Line 4065
	mov	edx, DWORD PTR _plr[eax+432]
; Line 4067
	mov	DWORD PTR _drawmanaflag, ecx
	mov	DWORD PTR _plr[eax+428], edx
	mov	edx, DWORD PTR _plr[eax+424]
	mov	DWORD PTR _plr[eax+420], edx
; Line 4069
	jmp	$L87243
$L87264:
; Line 4031
	imul	esi, 21720				; 000054d8H
; Line 4032
	mov	cl, 39					; 00000027H
	mov	edi, DWORD PTR _plr[esi+412]
	sar	edi, 8
	mov	edx, edi
	call	@random@8
	and	edi, -2					; fffffffeH
	lea	edi, DWORD PTR [edi+eax*2]
; Line 4033
	mov	al, BYTE PTR _plr[esi+352]
	shl	edi, 5
	test	al, al
	jne	SHORT $L87265
; Line 4034
	add	edi, edi
$L87265:
; Line 4035
	cmp	al, 1
	jne	SHORT $L87266
; Line 4036
	mov	eax, edi
	sar	eax, 1
	add	edi, eax
$L87266:
; Line 4038
	mov	ecx, DWORD PTR _plr[esi+412]
	lea	eax, DWORD PTR _plr[esi+408]
	add	DWORD PTR [eax], edi
	mov	edx, DWORD PTR [eax]
	cmp	edx, ecx
	jle	SHORT $L87267
; Line 4039
	mov	DWORD PTR [eax], ecx
$L87267:
; Line 4041
	mov	ecx, DWORD PTR _plr[esi+404]
	lea	eax, DWORD PTR _plr[esi+400]
	add	DWORD PTR [eax], edi
	mov	edx, DWORD PTR [eax]
	cmp	edx, ecx
	jle	SHORT $L87268
; Line 4042
	mov	DWORD PTR [eax], ecx
$L87268:
; Line 4044
	mov	edi, DWORD PTR _plr[esi+432]
	xor	ebx, ebx
	sar	edi, 8
	inc	ebx
; Line 4045
	mov	edx, edi
	mov	cl, 40					; 00000028H
	mov	DWORD PTR _drawhpflag, ebx
	call	@random@8
	and	edi, -2					; fffffffeH
	lea	edi, DWORD PTR [edi+eax*2]
; Line 4046
	mov	al, BYTE PTR _plr[esi+352]
	shl	edi, 5
	cmp	al, 2
	jne	SHORT $L87269
; Line 4047
	add	edi, edi
$L87269:
; Line 4048
	cmp	al, 1
	jne	SHORT $L87270
; Line 4049
	mov	eax, edi
	sar	eax, 1
	add	edi, eax
$L87270:
; Line 4050
	test	BYTE PTR _plr[esi+21587], 8
	jne	$L87243
; Line 4052
	mov	ecx, DWORD PTR _plr[esi+432]
	lea	eax, DWORD PTR _plr[esi+428]
	add	DWORD PTR [eax], edi
	mov	edx, DWORD PTR [eax]
	cmp	edx, ecx
	jle	SHORT $L87272
; Line 4053
	mov	DWORD PTR [eax], ecx
$L87272:
; Line 4054
	lea	eax, DWORD PTR _plr[esi+420]
; Line 4055
	mov	esi, DWORD PTR _plr[esi+424]
	add	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, esi
	jle	SHORT $L87273
; Line 4056
	mov	DWORD PTR [eax], esi
$L87273:
; Line 4057
	mov	DWORD PTR _drawmanaflag, ebx
; Line 4059
	jmp	$L87243
$L87263:
; Line 4028
	xor	edx, edx
	inc	edx
; Line 4029
	jmp	$L88904
$L87246:
; Line 3975
	imul	esi, 21720				; 000054d8H
; Line 3976
	mov	cl, 39					; 00000027H
	mov	edi, DWORD PTR _plr[esi+412]
	sar	edi, 8
	mov	edx, edi
	call	@random@8
	and	edi, -2					; fffffffeH
	lea	edi, DWORD PTR [edi+eax*2]
; Line 3977
	mov	al, BYTE PTR _plr[esi+352]
	shl	edi, 5
	test	al, al
	jne	SHORT $L87247
; Line 3978
	add	edi, edi
$L87247:
; Line 3979
	cmp	al, 1
	jne	SHORT $L87248
; Line 3980
	mov	eax, edi
	sar	eax, 1
	add	edi, eax
$L87248:
; Line 3982
	mov	ecx, DWORD PTR _plr[esi+412]
	lea	eax, DWORD PTR _plr[esi+408]
	add	DWORD PTR [eax], edi
	mov	edx, DWORD PTR [eax]
	cmp	edx, ecx
	jle	SHORT $L87249
; Line 3983
	mov	DWORD PTR [eax], ecx
$L87249:
; Line 3984
	lea	eax, DWORD PTR _plr[esi+400]
; Line 3985
	mov	esi, DWORD PTR _plr[esi+404]
	add	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, esi
	jle	$L87250
; Line 3986
	mov	DWORD PTR [eax], esi
; Line 3988
	jmp	$L87250
$L88901:
; Line 3972
	sub	edx, 42					; 0000002aH
	je	SHORT $L87291
	dec	edx
	dec	edx
	jne	SHORT $L87243
; Line 4122
	push	3
	mov	ecx, esi
	pop	edx
	call	@ModifyPlrStr@8
; Line 4123
	mov	ecx, esi
	push	3
	pop	edx
	call	@ModifyPlrMag@8
; Line 4124
	mov	ecx, esi
	push	3
	pop	edx
	call	@ModifyPlrDex@8
; Line 4125
	push	3
	pop	edx
$L88904:
	mov	ecx, esi
	call	@ModifyPlrVit@8
; Line 4126
	jmp	SHORT $L87243
$L87291:
; Line 4119
	call	_doom_init
$L87243:
	pop	edi
	pop	esi
	pop	ebx
; Line 4128
	leave
	ret	4
@UseItem@12 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @StoreStatOk@4
_TEXT	SEGMENT
@StoreStatOk@4 PROC NEAR				; COMDAT
; _h$ = ecx
; Line 4137
	mov	edx, DWORD PTR _myplr
	push	esi
	imul	edx, 21720				; 000054d8H
	movsx	esi, BYTE PTR [ecx+352]
	cmp	DWORD PTR _plr[edx+356], esi
	mov	al, 1
	jl	SHORT $L87298
	movzx	esi, BYTE PTR [ecx+353]
	cmp	DWORD PTR _plr[edx+364], esi
	jl	SHORT $L87298
	movsx	ecx, BYTE PTR [ecx+354]
	cmp	DWORD PTR _plr[edx+372], ecx
	jge	SHORT $L87297
$L87298:
; Line 4138
	xor	al, al
$L87297:
	pop	esi
; Line 4140
	ret	0
@StoreStatOk@4 ENDP
_TEXT	ENDS
PUBLIC	@SmithItemOk@4
; Function compile flags: /Ogsy
;	COMDAT @SmithItemOk@4
_TEXT	SEGMENT
@SmithItemOk@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4147
	imul	ecx, 76					; 0000004cH
	xor	eax, eax
	mov	cl, BYTE PTR _AllItemsList[ecx+12]
	inc	eax
	test	cl, cl
	jne	SHORT $L87303
; Line 4148
	xor	eax, eax
$L87303:
; Line 4149
	cmp	cl, 11					; 0000000bH
	jne	SHORT $L87304
; Line 4150
	xor	eax, eax
$L87304:
; Line 4151
	cmp	cl, 14					; 0000000eH
	jne	SHORT $L87305
; Line 4152
	xor	eax, eax
$L87305:
; Line 4153
	cmp	cl, 10					; 0000000aH
	jne	SHORT $L87306
; Line 4154
	xor	eax, eax
$L87306:
; Line 4155
	cmp	cl, 12					; 0000000cH
	jne	SHORT $L87307
; Line 4156
	xor	eax, eax
$L87307:
; Line 4157
	cmp	cl, 13					; 0000000dH
	jne	SHORT $L87308
; Line 4158
	xor	eax, eax
$L87308:
; Line 4161
	ret	0
@SmithItemOk@4 ENDP
_TEXT	ENDS
PUBLIC	@RndSmithItem@4
; Function compile flags: /Ogsy
;	COMDAT @RndSmithItem@4
_TEXT	SEGMENT
_lvl$ = -4
_ril$ = -2052
@RndSmithItem@4 PROC NEAR				; COMDAT
; _lvl$ = ecx
; Line 4164
	push	ebp
	mov	ebp, esp
	sub	esp, 2052				; 00000804H
	push	edi
; Line 4169
	xor	edi, edi
	xor	edx, edx
	inc	edi
	cmp	BYTE PTR _AllItemsList+81, -1
	mov	DWORD PTR _lvl$[ebp], ecx
	je	SHORT $L87317
	push	ebx
	push	esi
	mov	esi, OFFSET FLAT:_AllItemsList+76
$L87315:
; Line 4170
	mov	ebx, DWORD PTR [esi]
	test	ebx, ebx
	je	SHORT $L87316
	mov	ecx, edi
	call	@SmithItemOk@4
	test	eax, eax
	je	SHORT $L87316
	movsx	eax, BYTE PTR [esi+24]
	cmp	DWORD PTR _lvl$[ebp], eax
	jl	SHORT $L87316
; Line 4171
	mov	DWORD PTR _ril$[ebp+edx*4], edi
; Line 4172
	inc	edx
; Line 4173
	cmp	ebx, 2
	jne	SHORT $L87316
; Line 4174
	mov	DWORD PTR _ril$[ebp+edx*4], edi
; Line 4175
	inc	edx
$L87316:
	add	esi, 76					; 0000004cH
	inc	edi
	cmp	BYTE PTR [esi+5], -1
	jne	SHORT $L87315
	pop	esi
	pop	ebx
$L87317:
; Line 4180
	mov	cl, 50					; 00000032H
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	inc	eax
	pop	edi
; Line 4181
	leave
	ret	0
@RndSmithItem@4 ENDP
_TEXT	ENDS
PUBLIC	@BubbleSwapItem@8
; Function compile flags: /Ogsy
;	COMDAT @BubbleSwapItem@8
_TEXT	SEGMENT
_h$ = -368
@BubbleSwapItem@8 PROC NEAR				; COMDAT
; _a$ = ecx
; _b$ = edx
; Line 4184
	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	mov	eax, ecx
; Line 4187
	push	92					; 0000005cH
	mov	esi, eax
	pop	ecx
	lea	edi, DWORD PTR _h$[ebp]
	rep movsd
; Line 4188
	mov	ecx, edx
	mov	esi, 368				; 00000170H
	sub	ecx, eax
$L88931:
	mov	bl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], bl
	inc	eax
	dec	esi
	jne	SHORT $L88931
; Line 4189
	push	92					; 0000005cH
	lea	esi, DWORD PTR _h$[ebp]
	pop	ecx
	mov	edi, edx
	rep movsd
	pop	edi
	pop	esi
	pop	ebx
; Line 4190
	leave
	ret	0
@BubbleSwapItem@8 ENDP
_TEXT	ENDS
PUBLIC	_SortSmith
EXTRN	_smithitem:BYTE
; Function compile flags: /Ogsy
;	COMDAT _SortSmith
_TEXT	SEGMENT
_SortSmith PROC NEAR					; COMDAT
; Line 4193
	push	ebx
	push	esi
; Line 4197
	xor	esi, esi
; Line 4198
	cmp	DWORD PTR _smithitem+376, -1
	push	edi
	je	SHORT $L87334
; Line 4197
	mov	eax, OFFSET FLAT:_smithitem+376
$L87333:
; Line 4199
	add	eax, 368				; 00000170H
	inc	esi
	cmp	DWORD PTR [eax], -1
	jne	SHORT $L87333
$L87334:
; Line 4202
	xor	ecx, ecx
	jmp	SHORT $L88957
$L87336:
; Line 4203
	test	ecx, ecx
	jne	SHORT $L87337
; Line 4204
	inc	ecx
; Line 4205
	test	esi, esi
	jle	SHORT $L87341
; Line 4206
	mov	eax, OFFSET FLAT:_smithitem+360
	mov	ebx, esi
$L87339:
; Line 4207
	mov	edx, DWORD PTR [eax]
	lea	edi, DWORD PTR [eax+368]
	cmp	edx, DWORD PTR [edi]
	jle	SHORT $L87340
; Line 4208
	lea	edx, DWORD PTR [eax+8]
	lea	ecx, DWORD PTR [eax-360]
	call	@BubbleSwapItem@8
; Line 4209
	xor	ecx, ecx
$L87340:
	dec	ebx
	mov	eax, edi
	jne	SHORT $L87339
$L87341:
; Line 4213
	dec	esi
$L88957:
; Line 4203
	test	esi, esi
	jg	SHORT $L87336
$L87337:
	pop	edi
	pop	esi
	pop	ebx
; Line 4215
	ret	0
_SortSmith ENDP
_TEXT	ENDS
PUBLIC	@SpawnSmith@4
; Function compile flags: /Ogsy
;	COMDAT @SpawnSmith@4
_TEXT	SEGMENT
_lvl$ = -4
_v9$ = -8
@SpawnSmith@4 PROC NEAR					; COMDAT
; _lvl$ = ecx
; Line 4218
	sub	esp, 12					; 0000000cH
	push	ebp
	push	esi
; Line 4223
	push	10					; 0000000aH
	mov	esi, ecx
	pop	edx
	mov	cl, 50					; 00000032H
	mov	DWORD PTR _lvl$[esp+20], esi
	call	@random@8
	mov	ebp, eax
	add	ebp, 10					; 0000000aH
; Line 4224
	test	ebp, ebp
	jle	$L88973
; Line 4226
	mov	DWORD PTR -12+[esp+20], esi
	push	ebx
	or	BYTE PTR -12+[esp+25], 4
	push	edi
	mov	DWORD PTR _v9$[esp+28], ebp
	mov	ebx, OFFSET FLAT:_smithitem+56
	jmp	SHORT $L87353
$L88975:
; Line 4225
	mov	esi, DWORD PTR _lvl$[esp+28]
$L87353:
; Line 4229
	call	_GetRndSeed
; Line 4230
	mov	ecx, eax
	mov	DWORD PTR _item, eax
	call	@SetRndSeed@4
; Line 4231
	mov	ecx, esi
	push	esi
	call	@RndSmithItem@4
	mov	edx, eax
	xor	ecx, ecx
	dec	edx
	call	@GetItemAttrs@12
; Line 4232
	cmp	DWORD PTR _item+200, 140000		; 000222e0H
	jg	SHORT $L87353
; Line 4233
	lea	eax, DWORD PTR [ebx-56]
	push	92					; 0000005cH
	pop	ecx
	mov	esi, OFFSET FLAT:_item
	mov	edi, eax
	rep movsd
; Line 4234
	mov	cx, WORD PTR -12+[esp+28]
; Line 4235
	mov	DWORD PTR [ebx], 1
	mov	WORD PTR [ebx-52], cx
; Line 4236
	mov	ecx, eax
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR [ebx+300], eax
; Line 4237
	add	ebx, 368				; 00000170H
; Line 4238
	dec	DWORD PTR _v9$[esp+28]
	jne	SHORT $L88975
	pop	edi
	pop	ebx
$L88973:
; Line 4242
	cmp	ebp, 20					; 00000014H
	jge	SHORT $L87361
	imul	ebp, 368				; 00000170H
	add	ebp, OFFSET FLAT:_smithitem+8
$L87359:
; Line 4244
	or	DWORD PTR [ebp], -1
; Line 4245
	add	ebp, 368				; 00000170H
; Line 4246
	cmp	ebp, OFFSET FLAT:_smithitem+7368
	jl	SHORT $L87359
$L87361:
	pop	esi
	pop	ebp
; Line 4249
	add	esp, 12					; 0000000cH
	jmp	_SortSmith
@SpawnSmith@4 ENDP
_TEXT	ENDS
PUBLIC	@PremiumItemOk@4
; Function compile flags: /Ogsy
;	COMDAT @PremiumItemOk@4
_TEXT	SEGMENT
@PremiumItemOk@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4256
	imul	ecx, 76					; 0000004cH
	xor	eax, eax
	mov	cl, BYTE PTR _AllItemsList[ecx+12]
	inc	eax
	test	cl, cl
	jne	SHORT $L87366
; Line 4257
	xor	eax, eax
$L87366:
; Line 4258
	cmp	cl, 11					; 0000000bH
	jne	SHORT $L87367
; Line 4259
	xor	eax, eax
$L87367:
; Line 4260
	cmp	cl, 14					; 0000000eH
	jne	SHORT $L87368
; Line 4261
	xor	eax, eax
$L87368:
; Line 4262
	cmp	cl, 10					; 0000000aH
	jne	SHORT $L87369
; Line 4263
	xor	eax, eax
$L87369:
; Line 4265
	cmp	BYTE PTR _gbMaxPlayers, 1
	je	SHORT $L87372
; Line 4266
	cmp	cl, 12					; 0000000cH
	jne	SHORT $L87371
; Line 4267
	xor	eax, eax
$L87371:
; Line 4268
	cmp	cl, 13					; 0000000dH
	jne	SHORT $L87372
; Line 4269
	xor	eax, eax
$L87372:
; Line 4273
	ret	0
@PremiumItemOk@4 ENDP
_TEXT	ENDS
PUBLIC	@RndPremiumItem@8
; Function compile flags: /Ogsy
;	COMDAT @RndPremiumItem@8
_TEXT	SEGMENT
_ril$ = -2052
_maxlvl$ = -4
@RndPremiumItem@8 PROC NEAR				; COMDAT
; _minlvl$ = ecx
; _maxlvl$ = edx
; Line 4277
	push	ebp
	mov	ebp, esp
	sub	esp, 2052				; 00000804H
	push	ebx
	push	edi
; Line 4282
	xor	edi, edi
	mov	DWORD PTR _maxlvl$[ebp], edx
	xor	edx, edx
	inc	edi
	cmp	BYTE PTR _AllItemsList+81, -1
	mov	ebx, ecx
	je	SHORT $L87383
	push	esi
	mov	esi, OFFSET FLAT:_AllItemsList+100
$L87381:
; Line 4283
	cmp	DWORD PTR [esi-24], 0
	je	SHORT $L87382
; Line 4284
	mov	ecx, edi
	call	@PremiumItemOk@4
	test	eax, eax
	je	SHORT $L87382
; Line 4285
	movsx	eax, BYTE PTR [esi]
	cmp	eax, ebx
	jl	SHORT $L87382
	cmp	eax, DWORD PTR _maxlvl$[ebp]
	jg	SHORT $L87382
; Line 4286
	mov	DWORD PTR _ril$[ebp+edx*4], edi
	inc	edx
$L87382:
	add	esi, 76					; 0000004cH
	inc	edi
	cmp	BYTE PTR [esi-19], -1
	jne	SHORT $L87381
	pop	esi
$L87383:
; Line 4291
	mov	cl, 50					; 00000032H
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	pop	edi
	inc	eax
	pop	ebx
; Line 4292
	leave
	ret	0
@RndPremiumItem@8 ENDP
_TEXT	ENDS
PUBLIC	@SpawnOnePremium@8
EXTRN	_premiumitem:BYTE
; Function compile flags: /Ogsy
;	COMDAT @SpawnOnePremium@8
_TEXT	SEGMENT
_i$ = -8
_plvl$ = -4
_holditem$ = -376
@SpawnOnePremium@8 PROC NEAR				; COMDAT
; _i$ = ecx
; _plvl$ = edx
; Line 4296
	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
; Line 4300
	push	92					; 0000005cH
	mov	DWORD PTR _i$[ebp], ecx
	pop	ecx
; Line 4301
	push	30					; 0000001eH
	mov	esi, OFFSET FLAT:_item
	pop	eax
	lea	edi, DWORD PTR _holditem$[ebp]
	cmp	edx, eax
	mov	DWORD PTR _plvl$[ebp], edx
	rep movsd
	jle	SHORT $L87395
; Line 4302
	mov	DWORD PTR _plvl$[ebp], eax
$L87395:
; Line 4303
	xor	eax, eax
	inc	eax
	cmp	DWORD PTR _plvl$[ebp], eax
	jge	SHORT $L89021
; Line 4304
	mov	DWORD PTR _plvl$[ebp], eax
$L89021:
	mov	ebx, DWORD PTR _plvl$[ebp]
	mov	edi, ebx
	sar	edi, 2
	sar	ebx, 1
$L87397:
; Line 4306
	call	_GetRndSeed
; Line 4307
	mov	ecx, eax
	mov	DWORD PTR _item, eax
	call	@SetRndSeed@4
; Line 4308
	mov	edx, DWORD PTR _plvl$[ebp]
	mov	ecx, edi
	call	@RndPremiumItem@8
	mov	esi, eax
; Line 4309
	xor	ecx, ecx
	push	DWORD PTR _plvl$[ebp]
	dec	esi
	mov	edx, esi
	call	@GetItemAttrs@12
; Line 4310
	mov	edx, esi
	xor	ecx, ecx
	push	1
	push	DWORD PTR _plvl$[ebp]
	push	ebx
	call	@GetItemBonus@20
; Line 4311
	cmp	DWORD PTR _item+200, 140000		; 000222e0H
	jg	SHORT $L87397
; Line 4312
	mov	ebx, DWORD PTR _i$[ebp]
	push	92					; 0000005cH
	imul	ebx, 368				; 00000170H
	pop	ecx
	lea	eax, DWORD PTR _premiumitem[ebx]
	mov	esi, eax
	mov	edi, eax
	sub	esi, ebx
	sub	esi, OFFSET FLAT:_premiumitem
	add	esi, OFFSET FLAT:_item
	rep movsd
; Line 4313
	mov	ecx, DWORD PTR _plvl$[ebp]
; Line 4314
	mov	DWORD PTR _premiumitem[ebx+56], 1
	or	ch, 8
	mov	WORD PTR _premiumitem[ebx+4], cx
; Line 4315
	mov	ecx, eax
	call	@StoreStatOk@4
; Line 4316
	lea	esi, DWORD PTR _holditem$[ebp]
	mov	edi, OFFSET FLAT:_item
	push	92					; 0000005cH
	pop	ecx
	movzx	eax, al
	rep movsd
	pop	edi
	mov	DWORD PTR _premiumitem[ebx+356], eax
	pop	esi
	pop	ebx
; Line 4317
	leave
	ret	0
@SpawnOnePremium@8 ENDP
_TEXT	ENDS
PUBLIC	@SpawnPremium@4
EXTRN	_premiumlevel:DWORD
EXTRN	_numpremium:DWORD
; Function compile flags: /Ogsy
;	COMDAT @SpawnPremium@4
_TEXT	SEGMENT
_lvl$ = -4
@SpawnPremium@4 PROC NEAR				; COMDAT
; _lvl$ = ecx
; Line 4320
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 4323
	cmp	DWORD PTR _numpremium, 6
	push	esi
	push	edi
	mov	DWORD PTR _lvl$[ebp], ecx
	mov	esi, 368				; 00000170H
	jge	$L87406
	push	ebx
; Line 4324
	xor	ebx, ebx
	mov	edi, OFFSET FLAT:_premiumitem+8
$L87407:
; Line 4325
	cmp	DWORD PTR [edi], -1
	jne	SHORT $L87408
; Line 4326
	mov	edx, DWORD PTR _premiumlvladd[ebx*4]
	mov	ecx, ebx
	add	edx, DWORD PTR _premiumlevel
	call	@SpawnOnePremium@8
$L87408:
	add	edi, esi
	inc	ebx
	cmp	edi, OFFSET FLAT:_premiumitem+2216
	jl	SHORT $L87407
; Line 4328
	mov	DWORD PTR _numpremium, 6
	pop	ebx
; Line 4330
	jmp	SHORT $L87406
$L87411:
; Line 4331
	mov	ecx, OFFSET FLAT:_premiumitem
	mov	edi, esi
$L89030:
	mov	dl, BYTE PTR [ecx+736]
	mov	BYTE PTR [ecx], dl
	inc	ecx
	dec	edi
	jne	SHORT $L89030
; Line 4332
	mov	ecx, OFFSET FLAT:_premiumitem+368
	mov	edi, esi
$L89038:
	mov	dl, BYTE PTR [ecx+736]
	mov	BYTE PTR [ecx], dl
	inc	ecx
	dec	edi
	jne	SHORT $L89038
; Line 4333
	mov	ecx, OFFSET FLAT:_premiumitem+736
	mov	edi, esi
$L89047:
	mov	dl, BYTE PTR [ecx+736]
	mov	BYTE PTR [ecx], dl
	inc	ecx
	dec	edi
	jne	SHORT $L89047
; Line 4334
	lea	ecx, DWORD PTR [eax+1]
; Line 4335
	push	3
	mov	DWORD PTR _premiumlevel, ecx
	mov	ecx, DWORD PTR _premiumlvladd+12
	lea	edx, DWORD PTR [ecx+eax+1]
	pop	ecx
	call	@SpawnOnePremium@8
; Line 4336
	mov	eax, OFFSET FLAT:_premiumitem+1472
	mov	ecx, esi
$L89056:
	mov	dl, BYTE PTR [eax+368]
	mov	BYTE PTR [eax], dl
	inc	eax
	dec	ecx
	jne	SHORT $L89056
; Line 4337
	mov	eax, DWORD PTR _premiumlevel
	mov	ecx, DWORD PTR _premiumlvladd+20
	push	5
	lea	edx, DWORD PTR [ecx+eax]
	pop	ecx
	call	@SpawnOnePremium@8
$L87406:
	mov	eax, DWORD PTR _premiumlevel
	cmp	eax, DWORD PTR _lvl$[ebp]
	jl	$L87411
	pop	edi
	pop	esi
; Line 4339
	leave
	ret	0
@SpawnPremium@4 ENDP
_TEXT	ENDS
PUBLIC	@WitchItemOk@4
; Function compile flags: /Ogsy
;	COMDAT @WitchItemOk@4
_TEXT	SEGMENT
@WitchItemOk@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4347
	imul	ecx, 76					; 0000004cH
	xor	eax, eax
	mov	dl, BYTE PTR _AllItemsList[ecx+12]
	test	dl, dl
	jne	SHORT $L87422
; Line 4348
	inc	eax
$L87422:
; Line 4349
	cmp	dl, 10					; 0000000aH
	jne	SHORT $L87423
; Line 4350
	xor	eax, eax
	inc	eax
$L87423:
; Line 4351
	mov	edx, DWORD PTR _AllItemsList[ecx+56]
	cmp	edx, 6
	jne	SHORT $L87424
; Line 4352
	xor	eax, eax
$L87424:
; Line 4353
	cmp	edx, 7
	jne	SHORT $L87425
; Line 4354
	xor	eax, eax
$L87425:
; Line 4355
	mov	ecx, DWORD PTR _AllItemsList[ecx+60]
	cmp	ecx, 7
	jne	SHORT $L87426
; Line 4356
	xor	eax, eax
$L87426:
; Line 4357
	cmp	edx, 2
	jne	SHORT $L87427
; Line 4358
	xor	eax, eax
$L87427:
; Line 4359
	cmp	edx, 3
	jne	SHORT $L87428
; Line 4360
	xor	eax, eax
$L87428:
; Line 4361
	mov	dl, BYTE PTR _gbMaxPlayers
	cmp	ecx, 32					; 00000020H
	jne	SHORT $L87429
	cmp	dl, 1
	jne	SHORT $L87429
; Line 4362
	xor	eax, eax
$L87429:
; Line 4363
	cmp	ecx, 34					; 00000022H
	jne	SHORT $L87430
	cmp	dl, 1
	jne	SHORT $L87430
; Line 4364
	xor	eax, eax
$L87430:
; Line 4367
	ret	0
@WitchItemOk@4 ENDP
_TEXT	ENDS
PUBLIC	@RndWitchItem@4
; Function compile flags: /Ogsy
;	COMDAT @RndWitchItem@4
_TEXT	SEGMENT
_lvl$ = -4
_ril$ = -2052
@RndWitchItem@4 PROC NEAR				; COMDAT
; _lvl$ = ecx
; Line 4371
	push	ebp
	mov	ebp, esp
	sub	esp, 2052				; 00000804H
	push	ebx
	push	edi
; Line 4376
	xor	edi, edi
	xor	ebx, ebx
	inc	edi
	cmp	BYTE PTR _AllItemsList+81, -1
	mov	DWORD PTR _lvl$[ebp], ecx
	je	SHORT $L87439
	push	esi
	mov	esi, OFFSET FLAT:_AllItemsList+100
$L87437:
; Line 4377
	cmp	DWORD PTR [esi-24], 0
	je	SHORT $L87438
	mov	ecx, edi
	call	@WitchItemOk@4
	test	eax, eax
	je	SHORT $L87438
	movsx	eax, BYTE PTR [esi]
	cmp	DWORD PTR _lvl$[ebp], eax
	jl	SHORT $L87438
; Line 4378
	mov	DWORD PTR _ril$[ebp+ebx*4], edi
; Line 4379
	inc	ebx
$L87438:
	add	esi, 76					; 0000004cH
	inc	edi
	cmp	BYTE PTR [esi-19], -1
	jne	SHORT $L87437
	pop	esi
$L87439:
; Line 4383
	mov	edx, ebx
	mov	cl, 51					; 00000033H
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	pop	edi
	inc	eax
	pop	ebx
; Line 4384
	leave
	ret	0
@RndWitchItem@4 ENDP
_TEXT	ENDS
PUBLIC	_SortWitch
; Function compile flags: /Ogsy
;	COMDAT _SortWitch
_TEXT	SEGMENT
_SortWitch PROC NEAR					; COMDAT
; Line 4392
	cmp	DWORD PTR _witchitem+1480, -1
	push	ebx
	push	esi
	push	edi
	push	3
	pop	esi
	je	SHORT $L87447
; Line 4391
	mov	eax, OFFSET FLAT:_witchitem+1480
$L87446:
; Line 4393
	add	eax, 368				; 00000170H
	inc	esi
	cmp	DWORD PTR [eax], -1
	jne	SHORT $L87446
$L87447:
; Line 4396
	xor	ecx, ecx
	jmp	SHORT $L89092
$L87449:
; Line 4397
	test	ecx, ecx
	jne	SHORT $L87450
; Line 4398
	inc	ecx
; Line 4399
	cmp	esi, 3
	jle	SHORT $L87454
; Line 4400
	mov	eax, OFFSET FLAT:_witchitem+1464
	lea	ebx, DWORD PTR [esi-3]
$L87452:
; Line 4401
	mov	edx, DWORD PTR [eax]
	lea	edi, DWORD PTR [eax+368]
	cmp	edx, DWORD PTR [edi]
	jle	SHORT $L87453
; Line 4402
	lea	edx, DWORD PTR [eax+8]
	lea	ecx, DWORD PTR [eax-360]
	call	@BubbleSwapItem@8
; Line 4403
	xor	ecx, ecx
$L87453:
	dec	ebx
	mov	eax, edi
	jne	SHORT $L87452
$L87454:
; Line 4407
	dec	esi
$L89092:
; Line 4397
	cmp	esi, 3
	jg	SHORT $L87449
$L87450:
	pop	edi
	pop	esi
	pop	ebx
; Line 4409
	ret	0
_SortWitch ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @WitchBookLevel@4
_TEXT	SEGMENT
@WitchBookLevel@4 PROC NEAR				; COMDAT
; _ii$ = ecx
; Line 4415
	imul	ecx, 368				; 00000170H
	push	esi
	cmp	DWORD PTR _witchitem[ecx+220], 24	; 00000018H
	jne	SHORT $L87464
; Line 4417
	mov	esi, DWORD PTR _myplr
	mov	eax, DWORD PTR _witchitem[ecx+224]
	imul	esi, 21720				; 000054d8H
	mov	edx, eax
	imul	edx, 56					; 00000038H
	movsx	esi, BYTE PTR _plr[esi+eax+193]
	mov	dl, BYTE PTR _spelldata[edx+28]
; Line 4418
	test	esi, esi
	mov	BYTE PTR _witchitem[ecx+353], dl
	je	SHORT $L87464
	push	ebx
	push	edi
; Line 4426
	mov	bl, dl
$L87462:
	movzx	eax, bl
	push	100					; 00000064H
	lea	eax, DWORD PTR [eax+eax*4]
	pop	edi
	shl	eax, 2
	cdq
	idiv	edi
	add	bl, al
	dec	esi
	cmp	bl, 255					; 000000ffH
	jbe	SHORT $L87463
	or	bl, 255					; 000000ffH
	xor	esi, esi
$L87463:
	test	esi, esi
	jne	SHORT $L87462
	mov	BYTE PTR _witchitem[ecx+353], bl
	pop	edi
	pop	ebx
$L87464:
	pop	esi
; Line 4429
	ret	0
@WitchBookLevel@4 ENDP
_TEXT	ENDS
PUBLIC	@SpawnWitch@4
; Function compile flags: /Ogsy
;	COMDAT @SpawnWitch@4
_TEXT	SEGMENT
_v2$ = -4
_ii$ = -8
@SpawnWitch@4 PROC NEAR					; COMDAT
; _lvl$ = ecx
; Line 4432
	push	ecx
	push	ecx
	push	ebx
	push	ebp
; Line 4439
	xor	ebp, ebp
	push	esi
	inc	ebp
	push	edi
	push	ebp
	push	25					; 00000019H
	mov	ebx, ecx
	pop	edx
	xor	ecx, ecx
	call	@GetItemAttrs@12
; Line 4440
	mov	esi, OFFSET FLAT:_item
	mov	edi, OFFSET FLAT:_witchitem
	push	92					; 0000005cH
	pop	ecx
; Line 4443
	push	ebp
	push	30					; 0000001eH
	rep movsd
	pop	edx
	xor	ecx, ecx
	mov	WORD PTR _witchitem+4, bx
	mov	DWORD PTR _witchitem+356, ebp
	call	@GetItemAttrs@12
; Line 4444
	mov	esi, OFFSET FLAT:_item
	mov	edi, OFFSET FLAT:_witchitem+368
	push	92					; 0000005cH
	pop	ecx
; Line 4447
	push	ebp
	push	27					; 0000001bH
	rep movsd
	pop	edx
	xor	ecx, ecx
	mov	WORD PTR _witchitem+372, bx
	mov	DWORD PTR _witchitem+724, ebp
	call	@GetItemAttrs@12
; Line 4448
	mov	esi, OFFSET FLAT:_item
	mov	edi, OFFSET FLAT:_witchitem+736
	push	92					; 0000005cH
	pop	ecx
	rep movsd
; Line 4451
	push	8
	mov	cl, 51					; 00000033H
	pop	edx
	mov	WORD PTR _witchitem+740, bx
	mov	DWORD PTR _witchitem+1092, ebp
	call	@random@8
	add	eax, 10					; 0000000aH
; Line 4452
	push	3
	mov	DWORD PTR _v2$[esp+28], eax
	pop	ecx
; Line 4453
	cmp	eax, ecx
	mov	DWORD PTR _ii$[esp+24], ecx
	jle	$L89140
; Line 4454
	mov	ebp, OFFSET FLAT:_witchitem+1108
$L87479:
; Line 4456
	call	_GetRndSeed
; Line 4457
	mov	ecx, eax
	mov	DWORD PTR _item, eax
	call	@SetRndSeed@4
; Line 4458
	mov	ecx, ebx
	call	@RndWitchItem@4
	mov	esi, eax
; Line 4459
	xor	ecx, ecx
	dec	esi
	push	ebx
	mov	edx, esi
	call	@GetItemAttrs@12
; Line 4460
	mov	cl, 51					; 00000033H
	push	100					; 00000064H
	pop	edx
	call	@random@8
	cmp	eax, 5
	jg	SHORT $L87482
	lea	eax, DWORD PTR [ebx+ebx]
	cmp	eax, -1
	jne	SHORT $L87484
$L87482:
; Line 4461
	cmp	DWORD PTR _item+220, 23			; 00000017H
	jne	SHORT $L87479
; Line 4463
	lea	eax, DWORD PTR [ebx+ebx]
; Line 4464
	cmp	eax, -1
	je	SHORT $L87479
$L87484:
; Line 4467
	push	1
	push	eax
	sar	eax, 1
	push	eax
	mov	edx, esi
	xor	ecx, ecx
	call	@GetItemBonus@20
; Line 4468
	cmp	DWORD PTR _item+200, 140000		; 000222e0H
	jg	SHORT $L87479
; Line 4469
	push	92					; 0000005cH
	lea	edi, DWORD PTR [ebp-4]
	pop	ecx
	mov	esi, OFFSET FLAT:_item
	rep movsd
; Line 4472
	mov	esi, DWORD PTR _ii$[esp+24]
	mov	eax, ebx
	or	ah, 32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR [ebp+52], 1
	mov	WORD PTR [ebp], ax
	call	@WitchBookLevel@4
; Line 4473
	inc	esi
; Line 4474
	lea	ecx, DWORD PTR [ebp-4]
	mov	DWORD PTR _ii$[esp+24], esi
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR [ebp+352], eax
; Line 4475
	add	ebp, 368				; 00000170H
; Line 4476
	cmp	esi, DWORD PTR _v2$[esp+24]
	jl	$L87479
; Line 4455
	mov	eax, DWORD PTR _v2$[esp+24]
$L89140:
	pop	edi
	pop	esi
	pop	ebp
; Line 4481
	cmp	eax, 20					; 00000014H
	pop	ebx
	jge	SHORT $L87491
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_witchitem+8
$L87489:
; Line 4483
	or	DWORD PTR [eax], -1
; Line 4484
	add	eax, 368				; 00000170H
; Line 4485
	cmp	eax, OFFSET FLAT:_witchitem+7368
	jl	SHORT $L87489
$L87491:
; Line 4488
	add	esp, 8
; Line 4487
	jmp	_SortWitch
@SpawnWitch@4 ENDP
_TEXT	ENDS
PUBLIC	@RndBoyItem@4
; Function compile flags: /Ogsy
;	COMDAT @RndBoyItem@4
_TEXT	SEGMENT
_ril$ = -2048
@RndBoyItem@4 PROC NEAR					; COMDAT
; _lvl$ = ecx
; Line 4491
	push	ebp
	mov	ebp, esp
	sub	esp, 2048				; 00000800H
	push	ebx
	push	edi
; Line 4496
	xor	edi, edi
	xor	edx, edx
	inc	edi
	cmp	BYTE PTR _AllItemsList+81, -1
	mov	ebx, ecx
	je	SHORT $L87500
	push	esi
	mov	esi, OFFSET FLAT:_AllItemsList+100
$L87498:
; Line 4497
	cmp	DWORD PTR [esi-24], 0
	je	SHORT $L87499
	mov	ecx, edi
	call	@PremiumItemOk@4
	test	eax, eax
	je	SHORT $L87499
	movsx	eax, BYTE PTR [esi]
	cmp	ebx, eax
	jl	SHORT $L87499
; Line 4498
	mov	DWORD PTR _ril$[ebp+edx*4], edi
; Line 4499
	inc	edx
$L87499:
	add	esi, 76					; 0000004cH
	inc	edi
	cmp	BYTE PTR [esi-19], -1
	jne	SHORT $L87498
	pop	esi
$L87500:
; Line 4503
	mov	cl, 49					; 00000031H
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	pop	edi
	inc	eax
	pop	ebx
; Line 4504
	leave
	ret	0
@RndBoyItem@4 ENDP
_TEXT	ENDS
PUBLIC	@SpawnBoy@4
EXTRN	_boyitem:BYTE
EXTRN	_boylevel:DWORD
; Function compile flags: /Ogsy
;	COMDAT @SpawnBoy@4
_TEXT	SEGMENT
@SpawnBoy@4 PROC NEAR					; COMDAT
; _lvl$ = ecx
; Line 4508
	push	ebx
	mov	ebx, ecx
	push	ebp
; Line 4511
	mov	ebp, ebx
	sar	ebp, 1
	cmp	DWORD PTR _boylevel, ebp
	jl	SHORT $L89166
	cmp	DWORD PTR _boyitem+8, -1
	jne	SHORT $L87506
$L89166:
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebx+ebx]
$L87508:
; Line 4513
	call	_GetRndSeed
; Line 4514
	mov	ecx, eax
	mov	DWORD PTR _item, eax
	call	@SetRndSeed@4
; Line 4515
	mov	ecx, ebx
	call	@RndBoyItem@4
	mov	esi, eax
; Line 4516
	xor	ecx, ecx
	dec	esi
	push	ebx
	mov	edx, esi
	call	@GetItemAttrs@12
; Line 4517
	mov	edx, esi
	xor	ecx, ecx
	push	1
	push	edi
	push	ebx
	call	@GetItemBonus@20
; Line 4518
	cmp	DWORD PTR _item+200, 90000		; 00015f90H
	jg	SHORT $L87508
; Line 4519
	push	92					; 0000005cH
	mov	eax, OFFSET FLAT:_boyitem
	pop	ecx
	mov	esi, OFFSET FLAT:_item
	mov	edi, eax
; Line 4520
	or	ebx, 16					; 00000010H
	rep movsd
; Line 4522
	mov	ecx, eax
	mov	WORD PTR _boyitem+4, bx
	mov	DWORD PTR _boyitem+56, 1
	call	@StoreStatOk@4
	movzx	eax, al
	pop	edi
	mov	DWORD PTR _boyitem+356, eax
; Line 4523
	mov	DWORD PTR _boylevel, ebp
	pop	esi
$L87506:
	pop	ebp
	pop	ebx
; Line 4525
	ret	0
@SpawnBoy@4 ENDP
_TEXT	ENDS
PUBLIC	@HealerItemOk@4
; Function compile flags: /Ogsy
;	COMDAT @HealerItemOk@4
_TEXT	SEGMENT
@HealerItemOk@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4529
	mov	eax, ecx
; Line 4535
	xor	dl, dl
; Line 4536
	imul	eax, 76					; 0000004cH
	cmp	BYTE PTR _AllItemsList[eax+12], dl
; Line 4537
	jne	$L89171
	push	esi
; Line 4538
	mov	esi, DWORD PTR _AllItemsList[eax+56]
; Line 4539
	cmp	esi, 21					; 00000015H
	jne	SHORT $L87518
	cmp	DWORD PTR _AllItemsList[eax+60], 2
	jne	SHORT $L87518
; Line 4540
	inc	dl
$L87518:
; Line 4541
	mov	cl, BYTE PTR _gbMaxPlayers
	cmp	esi, 22					; 00000016H
	jne	SHORT $LABEL_12$87520
; Line 4543
	mov	eax, DWORD PTR _AllItemsList[eax+60]
	cmp	eax, 32					; 00000020H
	jne	SHORT $L87521
	cmp	cl, 1
	je	SHORT $L87521
; Line 4544
	xor	dl, dl
$L87521:
; Line 4545
	cmp	eax, 34					; 00000022H
	jne	SHORT $LABEL_12$87520
; Line 4551
	cmp	cl, 1
	je	SHORT $LABEL_13$87525
; Line 4552
	mov	dl, 1
$LABEL_12$87520:
; Line 4547
	cmp	cl, 1
	jne	SHORT $LABEL_21$87524
$LABEL_13$87525:
; Line 4556
	cmp	esi, 10					; 0000000aH
	jne	SHORT $L87527
; Line 4557
	mov	dl, 1
$L87527:
; Line 4558
	cmp	esi, 11					; 0000000bH
	jne	SHORT $L87528
; Line 4559
	mov	dl, 1
$L87528:
; Line 4560
	cmp	esi, 12					; 0000000cH
	jne	SHORT $L87529
; Line 4561
	mov	dl, 1
$L87529:
; Line 4562
	cmp	esi, 13					; 0000000dH
	jne	SHORT $LABEL_21$87524
; Line 4563
	mov	dl, 1
$LABEL_21$87524:
; Line 4565
	cmp	esi, 2
	jne	SHORT $L87531
; Line 4566
	mov	dl, 1
$L87531:
; Line 4567
	cmp	esi, 18					; 00000012H
	jne	SHORT $L87532
; Line 4568
	mov	dl, 1
$L87532:
; Line 4569
	cmp	esi, 19					; 00000013H
	jne	SHORT $L87533
; Line 4570
	mov	dl, 1
$L87533:
; Line 4571
	cmp	esi, 3
	jne	SHORT $L87534
; Line 4572
	xor	dl, dl
$L87534:
; Line 4573
	cmp	esi, 2
	jne	SHORT $L87535
; Line 4574
	xor	dl, dl
$L87535:
; Line 4575
	cmp	esi, 6
	jne	SHORT $L87536
; Line 4576
	xor	dl, dl
$L87536:
; Line 4577
	cmp	esi, 7
	pop	esi
	jne	SHORT $L87537
$L89171:
; Line 4578
	xor	eax, eax
; Line 4580
	ret	0
$L87537:
; Line 4579
	movzx	eax, dl
; Line 4580
	ret	0
@HealerItemOk@4 ENDP
_TEXT	ENDS
PUBLIC	@RndHealerItem@4
; Function compile flags: /Ogsy
;	COMDAT @RndHealerItem@4
_TEXT	SEGMENT
_lvl$ = -4
_ril$ = -2052
@RndHealerItem@4 PROC NEAR				; COMDAT
; _lvl$ = ecx
; Line 4584
	push	ebp
	mov	ebp, esp
	sub	esp, 2052				; 00000804H
	push	ebx
	push	edi
; Line 4589
	xor	edi, edi
	xor	ebx, ebx
	inc	edi
	cmp	BYTE PTR _AllItemsList+81, -1
	mov	DWORD PTR _lvl$[ebp], ecx
	je	SHORT $L87546
	push	esi
	mov	esi, OFFSET FLAT:_AllItemsList+100
$L87544:
; Line 4590
	cmp	DWORD PTR [esi-24], 0
	je	SHORT $L87545
	mov	ecx, edi
	call	@HealerItemOk@4
	test	eax, eax
	je	SHORT $L87545
	movsx	eax, BYTE PTR [esi]
	cmp	DWORD PTR _lvl$[ebp], eax
	jl	SHORT $L87545
; Line 4591
	mov	DWORD PTR _ril$[ebp+ebx*4], edi
; Line 4592
	inc	ebx
$L87545:
	add	esi, 76					; 0000004cH
	inc	edi
	cmp	BYTE PTR [esi-19], -1
	jne	SHORT $L87544
	pop	esi
$L87546:
; Line 4596
	mov	edx, ebx
	mov	cl, 50					; 00000032H
	call	@random@8
	mov	eax, DWORD PTR _ril$[ebp+eax*4]
	pop	edi
	inc	eax
	pop	ebx
; Line 4597
	leave
	ret	0
@RndHealerItem@4 ENDP
_TEXT	ENDS
PUBLIC	_SortHealer
EXTRN	_healitem:BYTE
; Function compile flags: /Ogsy
;	COMDAT _SortHealer
_TEXT	SEGMENT
_SortHealer PROC NEAR					; COMDAT
; Line 4605
	cmp	DWORD PTR _healitem+1112, -1
	push	ebx
	push	esi
	push	edi
	push	2
	pop	esi
	je	SHORT $L87554
; Line 4604
	mov	eax, OFFSET FLAT:_healitem+1112
$L87553:
; Line 4606
	add	eax, 368				; 00000170H
	inc	esi
	cmp	DWORD PTR [eax], -1
	jne	SHORT $L87553
$L87554:
; Line 4609
	xor	ecx, ecx
	jmp	SHORT $L89188
$L87556:
; Line 4610
	test	ecx, ecx
	jne	SHORT $L87557
; Line 4611
	inc	ecx
; Line 4612
	cmp	esi, 2
	jle	SHORT $L87561
; Line 4613
	mov	eax, OFFSET FLAT:_healitem+1096
	lea	ebx, DWORD PTR [esi-2]
$L87559:
; Line 4614
	mov	edx, DWORD PTR [eax]
	lea	edi, DWORD PTR [eax+368]
	cmp	edx, DWORD PTR [edi]
	jle	SHORT $L87560
; Line 4615
	lea	edx, DWORD PTR [eax+8]
	lea	ecx, DWORD PTR [eax-360]
	call	@BubbleSwapItem@8
; Line 4616
	xor	ecx, ecx
$L87560:
	dec	ebx
	mov	eax, edi
	jne	SHORT $L87559
$L87561:
; Line 4620
	dec	esi
$L89188:
; Line 4610
	cmp	esi, 2
	jg	SHORT $L87556
$L87557:
	pop	edi
	pop	esi
	pop	ebx
; Line 4622
	ret	0
_SortHealer ENDP
_TEXT	ENDS
PUBLIC	@SpawnHealer@4
; Function compile flags: /Ogsy
;	COMDAT @SpawnHealer@4
_TEXT	SEGMENT
_v3$ = -4
_v10$ = -8
@SpawnHealer@4 PROC NEAR				; COMDAT
; _lvl$ = ecx
; Line 4625
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 4631
	push	1
	push	24					; 00000018H
	mov	ebx, ecx
	pop	edx
	xor	ecx, ecx
	call	@GetItemAttrs@12
; Line 4634
	xor	eax, eax
	mov	ebp, OFFSET FLAT:_item
	push	92					; 0000005cH
	inc	eax
	pop	ecx
	mov	esi, ebp
	mov	edi, OFFSET FLAT:_healitem
; Line 4635
	push	eax
	rep movsd
	push	29					; 0000001dH
	xor	ecx, ecx
	pop	edx
	mov	WORD PTR _healitem+4, bx
	mov	DWORD PTR _healitem+356, eax
	call	@GetItemAttrs@12
; Line 4638
	xor	eax, eax
	mov	esi, ebp
	push	92					; 0000005cH
	mov	edi, OFFSET FLAT:_healitem+368
	pop	ecx
	inc	eax
; Line 4639
	cmp	BYTE PTR _gbMaxPlayers, al
	rep movsd
	mov	WORD PTR _healitem+372, bx
	mov	DWORD PTR _healitem+724, eax
	jne	SHORT $L87572
; Line 4640
	push	2
; Line 4641
	jmp	SHORT $L89237
$L87572:
; Line 4642
	push	eax
	push	34					; 00000022H
	pop	edx
	xor	ecx, ecx
	call	@GetItemAttrs@12
; Line 4643
	mov	esi, ebp
	mov	edi, OFFSET FLAT:_healitem+736
	push	92					; 0000005cH
	pop	ecx
	rep movsd
; Line 4644
	mov	WORD PTR _healitem+740, bx
; Line 4645
	mov	DWORD PTR _healitem+1092, 1
; Line 4646
	push	3
$L89237:
	pop	esi
; Line 4648
	mov	cl, 50					; 00000032H
	push	8
	pop	edx
	call	@random@8
	add	eax, 10					; 0000000aH
; Line 4649
	cmp	esi, eax
	mov	DWORD PTR _v3$[esp+28], eax
	jge	SHORT $L87578
; Line 4650
	mov	ebp, esi
; Line 4651
	sub	eax, esi
	imul	ebp, 368				; 00000170H
	mov	DWORD PTR -12+[esp+28], ebx
	add	ebp, OFFSET FLAT:_healitem
	or	BYTE PTR -12+[esp+29], 64		; 00000040H
	mov	DWORD PTR _v10$[esp+28], eax
$L87576:
; Line 4653
	call	_GetRndSeed
; Line 4654
	mov	ecx, eax
	mov	DWORD PTR _item, eax
	call	@SetRndSeed@4
; Line 4655
	mov	ecx, ebx
	push	ebx
	call	@RndHealerItem@4
	mov	edx, eax
	xor	ecx, ecx
	dec	edx
	call	@GetItemAttrs@12
; Line 4656
	mov	esi, OFFSET FLAT:_item
	mov	edi, ebp
; Line 4657
	mov	ax, WORD PTR -12+[esp+28]
	push	92					; 0000005cH
	pop	ecx
	rep movsd
; Line 4659
	mov	ecx, ebp
	mov	WORD PTR [ebp+4], ax
	mov	DWORD PTR [ebp+56], 1
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR [ebp+356], eax
; Line 4660
	add	ebp, 368				; 00000170H
; Line 4661
	dec	DWORD PTR _v10$[esp+28]
; Line 4662
	jne	SHORT $L87576
	mov	eax, DWORD PTR _v3$[esp+28]
$L87578:
	pop	edi
	pop	esi
	pop	ebp
; Line 4664
	cmp	eax, 20					; 00000014H
	pop	ebx
	jge	SHORT $L87583
	imul	eax, 368				; 00000170H
	add	eax, OFFSET FLAT:_healitem+8
$L87581:
; Line 4666
	or	DWORD PTR [eax], -1
; Line 4667
	add	eax, 368				; 00000170H
; Line 4668
	cmp	eax, OFFSET FLAT:_healitem+7368
	jl	SHORT $L87581
$L87583:
; Line 4671
	add	esp, 12					; 0000000cH
; Line 4670
	jmp	_SortHealer
@SpawnHealer@4 ENDP
_TEXT	ENDS
PUBLIC	_SpawnStoreGold
; Function compile flags: /Ogsy
;	COMDAT _SpawnStoreGold
_TEXT	SEGMENT
_SpawnStoreGold PROC NEAR				; COMDAT
; Line 4675
	push	esi
	push	edi
; Line 4676
	push	1
	xor	edx, edx
	xor	ecx, ecx
	call	@GetItemAttrs@12
; Line 4677
	push	92					; 0000005cH
	mov	esi, OFFSET FLAT:_item
	pop	ecx
	mov	edi, OFFSET FLAT:_golditem
	rep movsd
	pop	edi
; Line 4678
	mov	DWORD PTR _golditem+356, 1
	pop	esi
; Line 4679
	ret	0
_SpawnStoreGold ENDP
_TEXT	ENDS
PUBLIC	@RecreateSmithItem@16
; Function compile flags: /Ogsy
;	COMDAT @RecreateSmithItem@16
_TEXT	SEGMENT
_plvl$ = 8
_iseed$ = 12
@RecreateSmithItem@16 PROC NEAR				; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 4682
	push	ebx
	push	esi
	push	edi
; Line 4683
	mov	edi, DWORD PTR _iseed$[esp+8]
	mov	ebx, ecx
	mov	ecx, edi
	call	@SetRndSeed@4
; Line 4684
	mov	esi, DWORD PTR _plvl$[esp+8]
	push	esi
	mov	ecx, esi
	call	@RndSmithItem@4
	mov	edx, eax
	mov	ecx, ebx
	dec	edx
	call	@GetItemAttrs@12
; Line 4685
	mov	eax, ebx
; Line 4686
	or	esi, 1024				; 00000400H
	imul	eax, 368				; 00000170H
	mov	DWORD PTR _item[eax], edi
	mov	WORD PTR _item[eax+4], si
	pop	edi
	pop	esi
; Line 4687
	mov	DWORD PTR _item[eax+56], 1
	pop	ebx
; Line 4688
	ret	8
@RecreateSmithItem@16 ENDP
_TEXT	ENDS
PUBLIC	@RecreatePremiumItem@16
; Function compile flags: /Ogsy
;	COMDAT @RecreatePremiumItem@16
_TEXT	SEGMENT
_lvl$ = 8
_iseed$ = 12
@RecreatePremiumItem@16 PROC NEAR			; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 4691
	push	ebx
	push	esi
	mov	ebx, ecx
; Line 4694
	mov	ecx, DWORD PTR _iseed$[esp+4]
	push	edi
	call	@SetRndSeed@4
; Line 4695
	mov	esi, DWORD PTR _lvl$[esp+8]
	mov	ecx, esi
	mov	edx, esi
	sar	ecx, 2
	call	@RndPremiumItem@8
	mov	edi, eax
; Line 4696
	mov	ecx, ebx
	dec	edi
	push	esi
	mov	edx, edi
	call	@GetItemAttrs@12
; Line 4697
	mov	eax, esi
	mov	edx, edi
	push	1
	push	esi
	sar	eax, 1
	push	eax
	mov	ecx, ebx
	call	@GetItemBonus@20
; Line 4698
	mov	eax, ebx
	or	esi, 2048				; 00000800H
	imul	eax, 368				; 00000170H
; Line 4699
	mov	ecx, DWORD PTR _iseed$[esp+8]
	pop	edi
	mov	WORD PTR _item[eax+4], si
	pop	esi
	mov	DWORD PTR _item[eax], ecx
; Line 4700
	mov	DWORD PTR _item[eax+56], 1
	pop	ebx
; Line 4701
	ret	8
@RecreatePremiumItem@16 ENDP
_TEXT	ENDS
PUBLIC	@RecreateBoyItem@16
; Function compile flags: /Ogsy
;	COMDAT @RecreateBoyItem@16
_TEXT	SEGMENT
_lvl$ = 8
_iseed$ = 12
@RecreateBoyItem@16 PROC NEAR				; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 4704
	push	ebx
	push	esi
	mov	ebx, ecx
; Line 4707
	mov	ecx, DWORD PTR _iseed$[esp+4]
	push	edi
	call	@SetRndSeed@4
; Line 4708
	mov	esi, DWORD PTR _lvl$[esp+8]
	mov	ecx, esi
	call	@RndBoyItem@4
	mov	edi, eax
; Line 4709
	mov	ecx, ebx
	dec	edi
	push	esi
	mov	edx, edi
	call	@GetItemAttrs@12
; Line 4710
	lea	eax, DWORD PTR [esi+esi]
	mov	edx, edi
	push	1
	push	eax
	push	esi
	mov	ecx, ebx
	call	@GetItemBonus@20
; Line 4711
	mov	eax, ebx
	or	esi, 4096				; 00001000H
	imul	eax, 368				; 00000170H
; Line 4712
	mov	ecx, DWORD PTR _iseed$[esp+8]
	pop	edi
	mov	WORD PTR _item[eax+4], si
	pop	esi
	mov	DWORD PTR _item[eax], ecx
; Line 4713
	mov	DWORD PTR _item[eax+56], 1
	pop	ebx
; Line 4714
	ret	8
@RecreateBoyItem@16 ENDP
_TEXT	ENDS
PUBLIC	@RecreateWitchItem@16
; Function compile flags: /Ogsy
;	COMDAT @RecreateWitchItem@16
_TEXT	SEGMENT
_ii$ = -4
_lvl$ = 8
_iseed$ = 12
@RecreateWitchItem@16 PROC NEAR				; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 4717
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 4721
	cmp	edx, 25					; 00000019H
	push	edi
	mov	DWORD PTR _ii$[ebp], ecx
	je	SHORT $L87626
	cmp	edx, 30					; 0000001eH
	je	SHORT $L87626
	cmp	edx, 27					; 0000001bH
	je	SHORT $L87626
; Line 4724
	mov	ecx, DWORD PTR _iseed$[ebp]
	call	@SetRndSeed@4
; Line 4725
	mov	esi, DWORD PTR _lvl$[ebp]
	mov	ecx, esi
	call	@RndWitchItem@4
; Line 4726
	mov	ecx, DWORD PTR _ii$[ebp]
	mov	ebx, eax
	dec	ebx
	push	esi
	mov	edx, ebx
	call	@GetItemAttrs@12
; Line 4727
	lea	edi, DWORD PTR [esi+esi]
; Line 4728
	cmp	edi, -1
	je	SHORT $L87628
	push	100					; 00000064H
	mov	cl, 51					; 00000033H
	pop	edx
	call	@random@8
	cmp	eax, 5
	jle	SHORT $L87629
	mov	eax, DWORD PTR _ii$[ebp]
	imul	eax, 368				; 00000170H
	cmp	DWORD PTR _item[eax+220], 23		; 00000017H
	jne	SHORT $L87628
$L87629:
; Line 4729
	mov	ecx, DWORD PTR _ii$[ebp]
	push	1
	push	edi
	mov	edx, ebx
	sar	edi, 1
	push	edi
	call	@GetItemBonus@20
	jmp	SHORT $L87628
$L87626:
; Line 4722
	mov	esi, DWORD PTR _lvl$[ebp]
	mov	ecx, DWORD PTR _ii$[ebp]
	push	esi
	call	@GetItemAttrs@12
$L87628:
; Line 4732
	mov	eax, DWORD PTR _ii$[ebp]
; Line 4733
	mov	ecx, DWORD PTR _iseed$[ebp]
	imul	eax, 368				; 00000170H
	or	esi, 8192				; 00002000H
	pop	edi
	mov	WORD PTR _item[eax+4], si
	pop	esi
	mov	DWORD PTR _item[eax], ecx
; Line 4734
	mov	DWORD PTR _item[eax+56], 1
	pop	ebx
; Line 4735
	leave
	ret	8
@RecreateWitchItem@16 ENDP
_TEXT	ENDS
PUBLIC	@RecreateHealerItem@16
; Function compile flags: /Ogsy
;	COMDAT @RecreateHealerItem@16
_TEXT	SEGMENT
_lvl$ = 8
_iseed$ = 12
@RecreateHealerItem@16 PROC NEAR			; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 4738
	push	ebx
	push	esi
; Line 4739
	mov	esi, DWORD PTR _lvl$[esp+4]
	push	edi
	mov	edi, DWORD PTR _iseed$[esp+8]
	cmp	edx, 24					; 00000018H
	mov	ebx, ecx
	je	SHORT $L87639
	cmp	edx, 29					; 0000001dH
	je	SHORT $L87639
	cmp	edx, 34					; 00000022H
	je	SHORT $L87639
; Line 4740
	mov	ecx, edi
	call	@SetRndSeed@4
; Line 4741
	mov	ecx, esi
	call	@RndHealerItem@4
	mov	edx, eax
	dec	edx
$L87639:
; Line 4743
	push	esi
	mov	ecx, ebx
	call	@GetItemAttrs@12
; Line 4744
	mov	eax, ebx
	or	esi, 16384				; 00004000H
	imul	eax, 368				; 00000170H
; Line 4745
	mov	DWORD PTR _item[eax], edi
	mov	WORD PTR _item[eax+4], si
	pop	edi
	pop	esi
; Line 4746
	mov	DWORD PTR _item[eax+56], 1
	pop	ebx
; Line 4747
	ret	8
@RecreateHealerItem@16 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @RecreateTownItem@20
_TEXT	SEGMENT
_icreateinfo$ = 8
_iseed$ = 12
@RecreateTownItem@20 PROC NEAR				; COMDAT
; _ii$ = ecx
; _idx$ = edx
; Line 4750
	push	ebp
	mov	ebp, esp
; Line 4751
	mov	eax, DWORD PTR _icreateinfo$[ebp]
	test	ah, 4
	je	SHORT $L87651
; Line 4752
	push	DWORD PTR _iseed$[ebp]
	and	eax, 63					; 0000003fH
	push	eax
	call	@RecreateSmithItem@16
; Line 4753
	jmp	SHORT $L87659
$L87651:
	test	ah, 8
	je	SHORT $L87653
; Line 4754
	push	DWORD PTR _iseed$[ebp]
	and	eax, 63					; 0000003fH
	push	eax
	call	@RecreatePremiumItem@16
; Line 4755
	jmp	SHORT $L87659
$L87653:
	test	ah, 16					; 00000010H
	je	SHORT $L87655
; Line 4756
	push	DWORD PTR _iseed$[ebp]
	and	eax, 63					; 0000003fH
	push	eax
	call	@RecreateBoyItem@16
; Line 4757
	jmp	SHORT $L87659
$L87655:
	test	ah, 32					; 00000020H
	je	SHORT $L87657
; Line 4758
	push	DWORD PTR _iseed$[ebp]
	and	eax, 63					; 0000003fH
	push	eax
	call	@RecreateWitchItem@16
; Line 4759
	jmp	SHORT $L87659
$L87657:
	test	ah, 64					; 00000040H
	je	SHORT $L87659
; Line 4760
	push	DWORD PTR _iseed$[ebp]
	and	eax, 63					; 0000003fH
	push	eax
	call	@RecreateHealerItem@16
$L87659:
; Line 4761
	pop	ebp
	ret	12					; 0000000cH
@RecreateTownItem@20 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _RecalcStoreStats
_TEXT	SEGMENT
_RecalcStoreStats PROC NEAR				; COMDAT
; Line 4764
	push	ebx
	push	esi
; Line 4767
	xor	esi, esi
	mov	ebx, 368				; 00000170H
	push	edi
$L87662:
; Line 4768
	lea	edi, DWORD PTR _smithitem[esi]
	cmp	DWORD PTR [edi+8], -1
	je	SHORT $L87665
; Line 4769
	mov	ecx, edi
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR [edi+356], eax
$L87665:
; Line 4770
	cmp	DWORD PTR _witchitem[esi+8], -1
	je	SHORT $L87666
; Line 4771
	lea	ecx, DWORD PTR _witchitem[esi]
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR _witchitem[esi+356], eax
$L87666:
; Line 4772
	cmp	DWORD PTR _healitem[esi+8], -1
	je	SHORT $L87663
; Line 4773
	lea	ecx, DWORD PTR _healitem[esi]
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR _healitem[esi+356], eax
$L87663:
	add	esi, ebx
	cmp	esi, 7360				; 00001cc0H
	jl	SHORT $L87662
; Line 4776
	mov	esi, OFFSET FLAT:_premiumitem
	pop	edi
$L87668:
; Line 4777
	cmp	DWORD PTR [esi+8], -1
	je	SHORT $L87669
; Line 4778
	mov	ecx, esi
	call	@StoreStatOk@4
	movzx	eax, al
	mov	DWORD PTR [esi+356], eax
$L87669:
	add	esi, ebx
	cmp	esi, OFFSET FLAT:_premiumitem+2208
	jl	SHORT $L87668
; Line 4781
	mov	ecx, OFFSET FLAT:_boyitem
	call	@StoreStatOk@4
	movzx	eax, al
	pop	esi
	mov	DWORD PTR _boyitem+356, eax
	pop	ebx
; Line 4782
	ret	0
_RecalcStoreStats ENDP
_TEXT	ENDS
PUBLIC	_ItemNoFlippy
; Function compile flags: /Ogsy
;	COMDAT _ItemNoFlippy
_TEXT	SEGMENT
_ItemNoFlippy PROC NEAR					; COMDAT
; Line 4790
	mov	eax, DWORD PTR _numitems
	mov	eax, DWORD PTR _itemactive[eax*4-4]
; Line 4791
	mov	ecx, eax
	imul	ecx, 368				; 00000170H
; Line 4792
	mov	edx, DWORD PTR _item[ecx+28]
	and	DWORD PTR _item[ecx+20], 0
	mov	DWORD PTR _item[ecx+32], edx
; Line 4793
	mov	BYTE PTR _item[ecx+48], 1
; Line 4796
	ret	0
_ItemNoFlippy ENDP
_TEXT	ENDS
PUBLIC	@CreateSpellBook@20
; Function compile flags: /Ogsy
;	COMDAT @CreateSpellBook@20
_TEXT	SEGMENT
_ispell$ = 8
_sendmsg$ = 12
_delta$ = 16
_idx$ = -8
_done$ = -1
@CreateSpellBook@20 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 4799
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 4804
	and	BYTE PTR _done$[ebp], 0
	push	ebx
	push	esi
; Line 4805
	push	24					; 00000018H
	mov	esi, edx
	mov	ebx, ecx
	pop	edx
	xor	ecx, ecx
	call	@RndTypeItems@8
; Line 4806
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	mov	DWORD PTR _idx$[ebp], eax
	jge	$L87688
; Line 4807
	mov	eax, DWORD PTR _itemavail
	push	edi
; Line 4808
	push	eax
	mov	edx, esi
	mov	ecx, ebx
	mov	edi, eax
	call	@GetSuperItemSpace@12
; Line 4809
	mov	eax, DWORD PTR _numitems
; Line 4810
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
	mov	esi, edi
	mov	DWORD PTR _itemactive[eax], edi
	imul	esi, 368				; 00000170H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _itemavail, eax
$L87689:
; Line 4812
	push	DWORD PTR _delta$[ebp]
	movzx	eax, BYTE PTR _currlevel
	push	0
	push	1
	add	eax, eax
	push	1
	push	eax
	call	_GetRndSeed
	mov	edx, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, edi
	call	@SetupAllItems@32
; Line 4813
	cmp	DWORD PTR _item[esi+220], 24		; 00000018H
	jne	SHORT $L87690
	mov	eax, DWORD PTR _item[esi+224]
	cmp	eax, DWORD PTR _ispell$[ebp]
	jne	SHORT $L87690
; Line 4814
	mov	BYTE PTR _done$[ebp], 1
$L87690:
; Line 4815
	cmp	BYTE PTR _done$[ebp], 0
	je	SHORT $L87689
; Line 4816
	cmp	BYTE PTR _sendmsg$[ebp], 0
	je	SHORT $L87693
; Line 4817
	mov	edx, edi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L87693:
; Line 4818
	cmp	DWORD PTR _delta$[ebp], 0
	je	SHORT $L87694
; Line 4819
	mov	ecx, edi
	call	@DeltaAddItem@4
$L87694:
; Line 4820
	inc	DWORD PTR _numitems
	pop	edi
$L87688:
	pop	esi
	pop	ebx
; Line 4822
	leave
	ret	12					; 0000000cH
@CreateSpellBook@20 ENDP
_TEXT	ENDS
PUBLIC	@CreateMagicArmor@24
; Function compile flags: /Ogsy
;	COMDAT @CreateMagicArmor@24
_TEXT	SEGMENT
_imisc$ = 8
_icurs$ = 12
_sendmsg$ = 16
_delta$ = 20
@CreateMagicArmor@24 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 4825
	push	ebp
	mov	ebp, esp
; Line 4831
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	jge	$L87711
	push	ebx
	push	esi
; Line 4832
	mov	esi, DWORD PTR _itemavail
	push	edi
; Line 4833
	push	esi
	call	@GetSuperItemSpace@12
; Line 4834
	mov	eax, DWORD PTR _numitems
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
; Line 4836
	xor	edx, edx
	mov	DWORD PTR _itemactive[eax], esi
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _itemavail, ecx
	mov	ecx, DWORD PTR _imisc$[ebp]
	call	@RndTypeItems@8
	mov	ebx, eax
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	edi, DWORD PTR _item[eax+192]
$L87712:
; Line 4838
	push	DWORD PTR _delta$[ebp]
	movzx	eax, BYTE PTR _currlevel
	push	0
	push	1
	add	eax, eax
	push	1
	push	eax
	call	_GetRndSeed
	push	eax
	mov	edx, ebx
	mov	ecx, esi
	call	@SetupAllItems@32
; Line 4839
	mov	eax, DWORD PTR [edi]
	cmp	eax, DWORD PTR _icurs$[ebp]
	je	SHORT $L89287
; Line 4842
	mov	ecx, DWORD PTR _imisc$[ebp]
	xor	edx, edx
	call	@RndTypeItems@8
	mov	ebx, eax
; Line 4843
	jmp	SHORT $L87712
$L89287:
; Line 4844
	cmp	DWORD PTR _sendmsg$[ebp], 0
	je	SHORT $L87717
; Line 4845
	mov	edx, esi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L87717:
; Line 4846
	cmp	DWORD PTR _delta$[ebp], 0
	je	SHORT $L87718
; Line 4847
	mov	ecx, esi
	call	@DeltaAddItem@4
$L87718:
; Line 4848
	inc	DWORD PTR _numitems
	pop	edi
	pop	esi
	pop	ebx
$L87711:
; Line 4850
	pop	ebp
	ret	16					; 00000010H
@CreateMagicArmor@24 ENDP
_TEXT	ENDS
PUBLIC	@CreateMagicWeapon@24
; Function compile flags: /Ogsy
;	COMDAT @CreateMagicWeapon@24
_TEXT	SEGMENT
_imisc$ = 8
_icurs$ = 12
_sendmsg$ = 16
_delta$ = 20
@CreateMagicWeapon@24 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 4853
	push	ebp
	mov	ebp, esp
; Line 4859
	cmp	DWORD PTR _numitems, 127		; 0000007fH
	jge	$L87735
	push	ebx
	push	esi
; Line 4860
	mov	esi, DWORD PTR _itemavail
	push	edi
; Line 4861
	push	esi
	call	@GetSuperItemSpace@12
; Line 4862
	mov	eax, DWORD PTR _numitems
	mov	ecx, OFFSET FLAT:_itemavail+504
	shl	eax, 2
	sub	ecx, eax
; Line 4864
	xor	edx, edx
	mov	DWORD PTR _itemactive[eax], esi
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _itemavail, ecx
	mov	ecx, DWORD PTR _imisc$[ebp]
	call	@RndTypeItems@8
	mov	ebx, eax
	mov	eax, esi
	imul	eax, 368				; 00000170H
	lea	edi, DWORD PTR _item[eax+192]
$L87736:
; Line 4866
	push	DWORD PTR _delta$[ebp]
	movzx	eax, BYTE PTR _currlevel
	push	0
	push	1
	add	eax, eax
	push	1
	push	eax
	call	_GetRndSeed
	push	eax
	mov	edx, ebx
	mov	ecx, esi
	call	@SetupAllItems@32
; Line 4867
	mov	eax, DWORD PTR [edi]
	cmp	eax, DWORD PTR _icurs$[ebp]
	je	SHORT $L89292
; Line 4870
	mov	ecx, DWORD PTR _imisc$[ebp]
	xor	edx, edx
	call	@RndTypeItems@8
	mov	ebx, eax
; Line 4871
	jmp	SHORT $L87736
$L89292:
; Line 4872
	cmp	DWORD PTR _sendmsg$[ebp], 0
	je	SHORT $L87741
; Line 4873
	mov	edx, esi
	xor	ecx, ecx
	call	@NetSendCmdDItem@8
$L87741:
; Line 4874
	cmp	DWORD PTR _delta$[ebp], 0
	je	SHORT $L87742
; Line 4875
	mov	ecx, esi
	call	@DeltaAddItem@4
$L87742:
; Line 4876
	inc	DWORD PTR _numitems
	pop	edi
	pop	esi
	pop	ebx
$L87735:
; Line 4878
	pop	ebp
	ret	16					; 00000010H
@CreateMagicWeapon@24 ENDP
_TEXT	ENDS
PUBLIC	@GetItemRecord@12
PUBLIC	@NextItemRecord@4
EXTRN	__imp__GetTickCount@0:NEAR
; Function compile flags: /Ogsy
;	COMDAT @GetItemRecord@12
_TEXT	SEGMENT
_dwSeed$ = -24
_CI$ = -4
_indx$ = 8
_v4$ = -16
_v7$ = -20
_v8$ = -12
_v9$ = -8
@GetItemRecord@12 PROC NEAR				; COMDAT
; _dwSeed$ = ecx
; _CI$ = dx
; Line 4881
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	WORD PTR _CI$[ebp], dx
	mov	DWORD PTR _dwSeed$[ebp], ecx
; Line 4893
	xor	edi, edi
; Line 4894
	call	DWORD PTR __imp__GetTickCount@0
; Line 4895
	cmp	DWORD PTR _gnNumGetRecords, edi
	mov	DWORD PTR _v7$[ebp], eax
; Line 4896
	jle	SHORT $L89297
; Line 4900
	push	16					; 00000010H
	mov	DWORD PTR _v8$[ebp], OFFSET FLAT:_itemrecord+8
	mov	DWORD PTR _v9$[ebp], OFFSET FLAT:_itemrecord+4
	mov	ebx, OFFSET FLAT:_itemrecord
	mov	DWORD PTR _v4$[ebp], OFFSET FLAT:_itemrecord+12
	pop	esi
$L87760:
; Line 4901
	mov	ecx, DWORD PTR _v4$[ebp]
	mov	eax, DWORD PTR _v7$[ebp]
	sub	eax, DWORD PTR [ecx]
	cmp	eax, 6000				; 00001770H
	jbe	SHORT $L87761
; Line 4902
	mov	ecx, edi
	call	@NextItemRecord@4
; Line 4904
	sub	DWORD PTR _v9$[ebp], esi
; Line 4906
	sub	DWORD PTR _v4$[ebp], esi
	sub	ebx, esi
	dec	edi
; Line 4907
	sub	DWORD PTR _v8$[ebp], esi
	jmp	SHORT $LABEL_8$87762
$L87761:
; Line 4917
	mov	eax, DWORD PTR _dwSeed$[ebp]
	cmp	eax, DWORD PTR [ebx]
	jne	SHORT $LABEL_8$87762
	mov	eax, DWORD PTR _v9$[ebp]
	movsx	ecx, WORD PTR _CI$[ebp]
	movzx	eax, WORD PTR [eax]
	cmp	ecx, eax
	jne	SHORT $LABEL_8$87762
	mov	ecx, DWORD PTR _v8$[ebp]
	mov	eax, DWORD PTR _indx$[ebp]
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $L87764
$LABEL_8$87762:
; Line 4910
	add	DWORD PTR _v9$[ebp], esi
; Line 4911
	add	DWORD PTR _v8$[ebp], esi
; Line 4913
	add	DWORD PTR _v4$[ebp], esi
	add	ebx, esi
	inc	edi
; Line 4914
	cmp	edi, DWORD PTR _gnNumGetRecords
	jl	SHORT $L87760
$L89297:
; Line 4915
	xor	eax, eax
	inc	eax
$L87749:
	pop	edi
	pop	esi
	pop	ebx
; Line 4920
	leave
	ret	4
$L87764:
; Line 4919
	xor	eax, eax
	jmp	SHORT $L87749
@GetItemRecord@12 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @NextItemRecord@4
_TEXT	SEGMENT
@NextItemRecord@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4926
	mov	eax, DWORD PTR _gnNumGetRecords
	dec	eax
; Line 4927
	test	eax, eax
	mov	DWORD PTR _gnNumGetRecords, eax
	je	SHORT $L87770
; Line 4928
	shl	eax, 4
	shl	ecx, 4
	mov	edx, DWORD PTR _itemrecord[eax+8]
	mov	DWORD PTR _itemrecord[ecx+8], edx
; Line 4929
	mov	edx, DWORD PTR _itemrecord[eax]
	mov	DWORD PTR _itemrecord[ecx], edx
; Line 4930
	mov	dx, WORD PTR _itemrecord[eax+4]
	mov	WORD PTR _itemrecord[ecx+4], dx
; Line 4931
	mov	eax, DWORD PTR _itemrecord[eax+12]
	mov	DWORD PTR _itemrecord[ecx+12], eax
$L87770:
; Line 4933
	ret	0
@NextItemRecord@4 ENDP
_TEXT	ENDS
PUBLIC	@SetItemRecord@12
; Function compile flags: /Ogsy
;	COMDAT @SetItemRecord@12
_TEXT	SEGMENT
_indx$ = 8
@SetItemRecord@12 PROC NEAR				; COMDAT
; _dwSeed$ = ecx
; _CI$ = dx
; Line 4939
	cmp	DWORD PTR _gnNumGetRecords, 127		; 0000007fH
	push	ebx
	push	edi
	mov	di, dx
	mov	ebx, ecx
	je	SHORT $L87779
	push	esi
; Line 4940
	mov	esi, DWORD PTR _gnNumGetRecords
	inc	DWORD PTR _gnNumGetRecords
; Line 4941
	shl	esi, 4
	call	DWORD PTR __imp__GetTickCount@0
	mov	DWORD PTR _itemrecord[esi+12], eax
; Line 4944
	mov	eax, DWORD PTR _indx$[esp+8]
	mov	DWORD PTR _itemrecord[esi], ebx
	mov	WORD PTR _itemrecord[esi+4], di
	mov	DWORD PTR _itemrecord[esi+8], eax
	pop	esi
$L87779:
	pop	edi
	pop	ebx
; Line 4946
	ret	4
@SetItemRecord@12 ENDP
_TEXT	ENDS
PUBLIC	@PutItemRecord@12
; Function compile flags: /Ogsy
;	COMDAT @PutItemRecord@12
_TEXT	SEGMENT
_seed$ = -24
_ci$ = -4
_index$ = 8
_v4$ = -16
_v6$ = -20
_v7$ = -12
_v8$ = -8
@PutItemRecord@12 PROC NEAR				; COMDAT
; _seed$ = ecx
; _ci$ = dx
; Line 4949
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	WORD PTR _ci$[ebp], dx
	mov	DWORD PTR _seed$[ebp], ecx
; Line 4961
	xor	edi, edi
; Line 4962
	call	DWORD PTR __imp__GetTickCount@0
; Line 4963
	cmp	DWORD PTR _gnNumGetRecords, edi
	mov	DWORD PTR _v6$[ebp], eax
	jle	SHORT $L87798
; Line 4967
	push	16					; 00000010H
	mov	DWORD PTR _v7$[ebp], OFFSET FLAT:_itemrecord+8
	mov	DWORD PTR _v8$[ebp], OFFSET FLAT:_itemrecord+4
	mov	ebx, OFFSET FLAT:_itemrecord
	mov	DWORD PTR _v4$[ebp], OFFSET FLAT:_itemrecord+12
	pop	esi
$L87796:
; Line 4969
	mov	ecx, DWORD PTR _v4$[ebp]
	mov	eax, DWORD PTR _v6$[ebp]
	sub	eax, DWORD PTR [ecx]
	cmp	eax, 6000				; 00001770H
	ja	SHORT $L87799
; Line 4970
	mov	eax, DWORD PTR _seed$[ebp]
	cmp	eax, DWORD PTR [ebx]
	jne	SHORT $L87801
	mov	eax, DWORD PTR _v8$[ebp]
	movsx	ecx, WORD PTR _ci$[ebp]
	movzx	eax, WORD PTR [eax]
	cmp	ecx, eax
	jne	SHORT $L87801
	mov	ecx, DWORD PTR _v7$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $L87801
; Line 4971
	mov	ecx, edi
	call	@NextItemRecord@4
$L87798:
	pop	edi
	pop	esi
	pop	ebx
; Line 4989
	leave
	ret	4
$L87799:
; Line 4975
	mov	ecx, edi
	call	@NextItemRecord@4
; Line 4977
	sub	DWORD PTR _v8$[ebp], esi
; Line 4979
	sub	DWORD PTR _v4$[ebp], esi
	sub	ebx, esi
	dec	edi
; Line 4980
	sub	DWORD PTR _v7$[ebp], esi
$L87801:
; Line 4983
	add	DWORD PTR _v8$[ebp], esi
; Line 4984
	add	DWORD PTR _v7$[ebp], esi
; Line 4986
	add	DWORD PTR _v4$[ebp], esi
	add	ebx, esi
	inc	edi
; Line 4987
	cmp	edi, DWORD PTR _gnNumGetRecords
	jl	SHORT $L87796
	jmp	SHORT $L87798
@PutItemRecord@12 ENDP
_TEXT	ENDS
END
