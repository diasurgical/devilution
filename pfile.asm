; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/pfile.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0CE@NGOL@Unable?5to?5initialize?5save?5direct@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08GCMM@xrgyrkj1?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MNCD@szqnlsk1?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MHBC@hero?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@BGMD@?2multi_?$CFd?4sv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@KHJP@?2single_?$CFd?4sv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BN@IBBL@Unable?5to?5get?5save?5directory?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KHEP@Diablo?2Converted?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@HDM@?2dlinfo_?$CFd?4drv?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04OAFI@game?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09NCJK@perml?$CF02d?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09LBBP@perms?$CF02d?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@EOAE@Unable?5to?5open?5archive?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@FGGK@Unable?5to?5load?5character?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09NIAD@temps?$CF02d?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09LLIG@templ?$CF02d?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CE@GINK@Unable?5to?5read?5to?5save?5file?5arch@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CF@JCEG@Unable?5to?5write?5to?5save?5file?5arc@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CF@FJLM@Unable?5to?5write?5so?5save?5file?5arc@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CB@DOGD@Unable?5to?5open?5save?5file?5archive@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@PJHJ@Unable?5to?5open?5save?5file?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@DLIN@Invalid?5save?5file?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _pfile_init_save_directory
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_check_available_space@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_write_hero
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_get_save_num_from_name@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_encode_hero@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_open_archive@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_get_save_path@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_flush@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_create_player_description@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_create_save_file@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_flush_W
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @game_2_ui_player@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @game_2_ui_class@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_ui_set_hero_infos@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetSaveDirectory@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_read_hero@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_open_save_archive@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_SFileCloseArchive@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_archive_contains_game@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_ui_set_class_stats@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_get_player_class@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_ui_save_create@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_get_file_name@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_delete_save@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_read_player_from_save
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetTempLevelNames@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetPermLevelNames@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_get_game_name@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_remove_temp_files
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _GetTempSaveNames@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _pfile_rename_temp_to_perm
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _GetPermSaveNames@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_write_save_file@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_strcpy@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_read@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @pfile_update@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_gbValidSaveFile:DWORD
_DATA	ENDS
PUBLIC	_pfile_init_save_directory
PUBLIC	@pfile_check_available_space@4
PUBLIC	??_C@_0CE@NGOL@Unable?5to?5initialize?5save?5direct@ ; `string'
EXTRN	_ghInst:DWORD
EXTRN	__imp__GetWindowsDirectoryA@8:NEAR
EXTRN	__imp__GetModuleFileNameA@12:NEAR
EXTRN	_TermMsg:NEAR
;	COMDAT ??_C@_0CE@NGOL@Unable?5to?5initialize?5save?5direct@
; File Source/pfile.cpp
_DATA	SEGMENT
??_C@_0CE@NGOL@Unable?5to?5initialize?5save?5direct@ DB 'Unable to initia'
	DB	'lize save directory', 00H			; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _pfile_init_save_directory
_TEXT	SEGMENT
_Buffer$ = -260
_pfile_init_save_directory PROC NEAR			; COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	esi
; Line 16
	mov	esi, 260				; 00000104H
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	esi
	push	eax
	call	DWORD PTR __imp__GetWindowsDirectoryA@8
; Line 17
	test	eax, eax
	je	SHORT $L85467
; Line 18
	lea	ecx, DWORD PTR _Buffer$[ebp]
	call	@pfile_check_available_space@4
; Line 19
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	esi
	push	eax
	push	DWORD PTR _ghInst
	call	DWORD PTR __imp__GetModuleFileNameA@12
; Line 22
	test	eax, eax
	jne	SHORT $L84987
$L85467:
; Line 23
	push	OFFSET FLAT:??_C@_0CE@NGOL@Unable?5to?5initialize?5save?5direct@ ; `string'
	call	_TermMsg
	pop	ecx
; Line 24
	jmp	SHORT $L84989
$L84987:
; Line 25
	lea	ecx, DWORD PTR _Buffer$[ebp]
	call	@pfile_check_available_space@4
$L84989:
	pop	esi
; Line 26
	leave
	ret	0
_pfile_init_save_directory ENDP
_TEXT	ENDS
EXTRN	__allmul:NEAR
EXTRN	__imp__GetDiskFreeSpaceA@20:NEAR
EXTRN	@DiskFreeDlg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_check_available_space@4
_TEXT	SEGMENT
_TotalNumberOfClusters$ = -16
_NumberOfFreeClusters$ = -12
_BytesPerSector$ = -8
_SectorsPerCluster$ = -4
@pfile_check_available_space@4 PROC NEAR		; COMDAT
; _pszDir$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	edi, ecx
; Line 37
	mov	eax, edi
$L85000:
; Line 38
	mov	cl, BYTE PTR [eax]
	test	cl, cl
	je	SHORT $L85001
; Line 39
	inc	eax
	cmp	cl, 92					; 0000005cH
	jne	SHORT $L85000
; Line 41
	and	BYTE PTR [eax], 0
$L85001:
; Line 45
	lea	eax, DWORD PTR _TotalNumberOfClusters$[ebp]
	push	eax
	lea	eax, DWORD PTR _NumberOfFreeClusters$[ebp]
	push	eax
	lea	eax, DWORD PTR _BytesPerSector$[ebp]
	push	eax
	lea	eax, DWORD PTR _SectorsPerCluster$[ebp]
	push	eax
	push	edi
	call	DWORD PTR __imp__GetDiskFreeSpaceA@20
	mov	esi, eax
; Line 46
	test	esi, esi
	je	SHORT $L85471
; Line 48
	mov	eax, DWORD PTR _SectorsPerCluster$[ebp]
	push	0
	mul	DWORD PTR _BytesPerSector$[ebp]
	push	DWORD PTR _NumberOfFreeClusters$[ebp]
	push	edx
	push	eax
	call	__allmul
	test	edx, edx
	jg	SHORT $L85006
	jl	SHORT $L85473
	cmp	eax, 10485760				; 00a00000H
	jae	SHORT $L85006
$L85473:
; Line 49
	xor	esi, esi
$L85006:
; Line 52
	test	esi, esi
	jne	SHORT $L85007
$L85471:
; Line 53
	mov	ecx, edi
	call	@DiskFreeDlg@4
$L85007:
	pop	edi
	pop	esi
; Line 54
	leave
	ret	0
@pfile_check_available_space@4 ENDP
_TEXT	ENDS
PUBLIC	_pfile_write_hero
PUBLIC	@pfile_get_save_num_from_name@4
PUBLIC	@pfile_encode_hero@4
PUBLIC	@pfile_open_archive@8
PUBLIC	@pfile_flush@8
EXTRN	@PackPlayer@12:NEAR
EXTRN	_gbMaxPlayers:BYTE
EXTRN	_myplr:DWORD
EXTRN	_plr:BYTE
; Function compile flags: /Ogsy
;	COMDAT _pfile_write_hero
_TEXT	SEGMENT
_pkplr$ = -1268
_pfile_write_hero PROC NEAR				; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 1268				; 000004f4H
; Line 61
	mov	ecx, DWORD PTR _myplr
	push	esi
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
	mov	esi, eax
; Line 62
	xor	ecx, ecx
	mov	edx, esi
	inc	ecx
	call	@pfile_open_archive@8
	test	eax, eax
	je	SHORT $L85011
; Line 63
	mov	edx, DWORD PTR _myplr
	xor	eax, eax
	cmp	BYTE PTR _gbMaxPlayers, 1
	lea	ecx, DWORD PTR _pkplr$[ebp]
	sete	al
	push	eax
	call	@PackPlayer@12
; Line 64
	lea	ecx, DWORD PTR _pkplr$[ebp]
	call	@pfile_encode_hero@4
; Line 65
	xor	ecx, ecx
	cmp	BYTE PTR _gbMaxPlayers, 1
	mov	edx, esi
	sete	cl
	call	@pfile_flush@8
$L85011:
	pop	esi
; Line 67
	leave
	ret	0
_pfile_write_hero ENDP
_TEXT	ENDS
EXTRN	__strcmpi:NEAR
_BSS	SEGMENT
_hero_names DB	0140H DUP (?)
; Function compile flags: /Ogsy
_BSS	ENDS
;	COMDAT @pfile_get_save_num_from_name@4
_TEXT	SEGMENT
@pfile_get_save_num_from_name@4 PROC NEAR		; COMDAT
; _name$ = ecx
; Line 70
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
; Line 73
	xor	esi, esi
	mov	edi, OFFSET FLAT:_hero_names
$L85016:
; Line 74
	push	ebx
	push	edi
	call	__strcmpi
	pop	ecx
	test	eax, eax
	pop	ecx
	je	SHORT $L85479
	inc	esi
	add	edi, 32					; 00000020H
	cmp	esi, 10					; 0000000aH
	jb	SHORT $L85016
$L85479:
; Line 78
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 79
	ret	0
@pfile_get_save_num_from_name@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_08GCMM@xrgyrkj1?$AA@			; `string'
PUBLIC	??_C@_08MNCD@szqnlsk1?$AA@			; `string'
PUBLIC	??_C@_04MHBC@hero?$AA@				; `string'
EXTRN	@mpqapi_write_file@12:NEAR
EXTRN	@DiabloAllocPtr@4:NEAR
EXTRN	@mem_free_dbg@4:NEAR
EXTRN	@codec_get_encoded_len@4:NEAR
EXTRN	@codec_encode@16:NEAR
EXTRN	_memcpy:NEAR
EXTRN	_strcpy:NEAR
;	COMDAT ??_C@_08GCMM@xrgyrkj1?$AA@
_DATA	SEGMENT
??_C@_08GCMM@xrgyrkj1?$AA@ DB 'xrgyrkj1', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MNCD@szqnlsk1?$AA@
_DATA	SEGMENT
??_C@_08MNCD@szqnlsk1?$AA@ DB 'szqnlsk1', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04MHBC@hero?$AA@
_DATA	SEGMENT
??_C@_04MHBC@hero?$AA@ DB 'hero', 00H			; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @pfile_encode_hero@4
_TEXT	SEGMENT
_pPack$ = -4
_password$ = -20
@pfile_encode_hero@4 PROC NEAR				; COMDAT
; _pPack$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
; Line 85
	mov	esi, OFFSET FLAT:??_C@_08GCMM@xrgyrkj1?$AA@ ; `string'
	lea	edi, DWORD PTR _password$[ebp]
	xor	eax, eax
	movsd
	movsd
	movsb
	lea	edi, DWORD PTR _password$[ebp+9]
; Line 87
	cmp	BYTE PTR _gbMaxPlayers, 1
	stosd
	stosw
	mov	DWORD PTR _pPack$[ebp], ecx
	stosb
	jbe	SHORT $L85027
; Line 88
	lea	eax, DWORD PTR _password$[ebp]
	push	OFFSET FLAT:??_C@_08MNCD@szqnlsk1?$AA@	; `string'
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
$L85027:
; Line 90
	mov	esi, 1266				; 000004f2H
	mov	ecx, esi
	call	@codec_get_encoded_len@4
	mov	ebx, eax
; Line 91
	mov	ecx, ebx
	call	@DiabloAllocPtr@4
	mov	edi, eax
; Line 92
	push	esi
	push	DWORD PTR _pPack$[ebp]
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 93
	lea	eax, DWORD PTR _password$[ebp]
	mov	edx, esi
	mov	ecx, edi
	push	eax
	push	ebx
	call	@codec_encode@16
; Line 94
	mov	edx, edi
	mov	ecx, OFFSET FLAT:??_C@_04MHBC@hero?$AA@	; `string'
	push	ebx
	call	@mpqapi_write_file@12
; Line 95
	mov	ecx, edi
	call	@mem_free_dbg@4
	pop	edi
	pop	esi
	pop	ebx
; Line 96
	leave
	ret	0
@pfile_encode_hero@4 ENDP
_TEXT	ENDS
PUBLIC	@pfile_get_save_path@12
EXTRN	@mpqapi_update_multi_creation_time@4:NEAR
EXTRN	@mpqapi_open_archive@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_open_archive@8
_TEXT	SEGMENT
_FileName$ = -260
@pfile_open_archive@8 PROC NEAR				; COMDAT
; _a1$ = ecx
; _save_num$ = edx
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	esi
	push	edi
	mov	esi, edx
	mov	edi, ecx
; Line 102
	push	esi
	mov	edx, 260				; 00000104H
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@pfile_get_save_path@12
; Line 103
	xor	edx, edx
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	esi
	call	@mpqapi_open_archive@12
	test	eax, eax
	je	SHORT $L85037
; Line 104
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85035
$L85037:
; Line 106
	test	edi, edi
	je	SHORT $L85038
	cmp	BYTE PTR _gbMaxPlayers, 1
	jbe	SHORT $L85038
; Line 107
	mov	ecx, esi
	call	@mpqapi_update_multi_creation_time@4
$L85038:
; Line 108
	xor	eax, eax
$L85035:
	pop	edi
	pop	esi
; Line 109
	leave
	ret	0
@pfile_open_archive@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0N@BGMD@?2multi_?$CFd?4sv?$AA@		; `string'
PUBLIC	??_C@_0O@KHJP@?2single_?$CFd?4sv?$AA@		; `string'
PUBLIC	??_C@_0BN@IBBL@Unable?5to?5get?5save?5directory?$AA@ ; `string'
EXTRN	_strrchr:NEAR
EXTRN	_sprintf:NEAR
EXTRN	_strcat:NEAR
EXTRN	__strlwr:NEAR
;	COMDAT ??_C@_0N@BGMD@?2multi_?$CFd?4sv?$AA@
_DATA	SEGMENT
??_C@_0N@BGMD@?2multi_?$CFd?4sv?$AA@ DB '\multi_%d.sv', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@KHJP@?2single_?$CFd?4sv?$AA@
_DATA	SEGMENT
??_C@_0O@KHJP@?2single_?$CFd?4sv?$AA@ DB '\single_%d.sv', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BN@IBBL@Unable?5to?5get?5save?5directory?$AA@
_DATA	SEGMENT
??_C@_0BN@IBBL@Unable?5to?5get?5save?5directory?$AA@ DB 'Unable to get sa'
	DB	've directory', 00H				; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @pfile_get_save_path@12
_TEXT	SEGMENT
_save_num$ = 8
_path$ = -260
@pfile_get_save_path@12 PROC NEAR			; COMDAT
; _pszBuf$ = ecx
; _dwBufSize$ = edx
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
; Line 118
	cmp	BYTE PTR _gbMaxPlayers, 1
	push	ebx
	push	esi
	mov	esi, ecx
	mov	ebx, OFFSET FLAT:??_C@_0N@BGMD@?2multi_?$CFd?4sv?$AA@ ; `string'
	ja	SHORT $L85051
; Line 119
	mov	ebx, OFFSET FLAT:??_C@_0O@KHJP@?2single_?$CFd?4sv?$AA@ ; `string'
$L85051:
	push	edi
; Line 122
	push	260					; 00000104H
	push	esi
	push	DWORD PTR _ghInst
	call	DWORD PTR __imp__GetModuleFileNameA@12
	mov	edi, eax
; Line 123
	push	92					; 0000005cH
	push	esi
	call	_strrchr
	pop	ecx
; Line 124
	test	eax, eax
	pop	ecx
	je	SHORT $L85053
; Line 125
	and	BYTE PTR [eax], 0
$L85053:
; Line 127
	test	edi, edi
	pop	edi
	jne	SHORT $L85054
; Line 128
	push	OFFSET FLAT:??_C@_0BN@IBBL@Unable?5to?5get?5save?5directory?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85054:
; Line 130
	push	DWORD PTR _save_num$[ebp]
	lea	eax, DWORD PTR _path$[ebp]
	push	ebx
	push	eax
	call	_sprintf
; Line 131
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	push	esi
	call	_strcat
; Line 132
	push	esi
	call	__strlwr
	add	esp, 24					; 00000018H
	pop	esi
	pop	ebx
; Line 133
	leave
	ret	4
@pfile_get_save_path@12 ENDP
_TEXT	ENDS
EXTRN	@mpqapi_flush_and_close@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_flush@8
_TEXT	SEGMENT
_FileName$ = -260
@pfile_flush@8 PROC NEAR				; COMDAT
; _is_single_player$ = ecx
; _save_num$ = edx
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	esi
	push	edi
	mov	esi, edx
	mov	edi, ecx
; Line 139
	push	esi
	mov	edx, 260				; 00000104H
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@pfile_get_save_path@12
; Line 140
	mov	edx, edi
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	esi
	call	@mpqapi_flush_and_close@12
	pop	edi
	pop	esi
; Line 141
	leave
	ret	0
@pfile_flush@8 ENDP
_TEXT	ENDS
PUBLIC	@pfile_create_player_description@8
PUBLIC	@game_2_ui_player@12
PUBLIC	_pfile_read_player_from_save
EXTRN	_SStrCopy@12:NEAR
EXTRN	_gszHero:BYTE
EXTRN	_UiCreatePlayerDescription@12:NEAR
EXTRN	_UiSetupPlayerInfo@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_create_player_description@8
_TEXT	SEGMENT
_desc$ = -172
_uihero$ = -44
@pfile_create_player_description@8 PROC NEAR		; COMDAT
; _dst$ = ecx
; _len$ = edx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 172				; 000000acH
; Line 148
	and	DWORD PTR _myplr, 0
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	ebx, ecx
; Line 149
	call	_pfile_read_player_from_save
; Line 150
	push	DWORD PTR _gbValidSaveFile
	lea	edx, DWORD PTR _uihero$[ebp]
	mov	ecx, OFFSET FLAT:_plr
	call	@game_2_ui_player@12
; Line 151
	mov	esi, 1146246220				; 4452544cH
	lea	eax, DWORD PTR _uihero$[ebp]
	push	esi
	push	eax
	push	OFFSET FLAT:_gszHero
	call	_UiSetupPlayerInfo@12
; Line 153
	test	ebx, ebx
	je	SHORT $L85071
	test	edi, edi
	je	SHORT $L85071
; Line 154
	lea	eax, DWORD PTR _desc$[ebp]
	push	eax
	lea	eax, DWORD PTR _uihero$[ebp]
	push	esi
	push	eax
	call	_UiCreatePlayerDescription@12
	test	eax, eax
	je	SHORT $L85066
$L85073:
; Line 156
	lea	eax, DWORD PTR _desc$[ebp]
	push	edi
	push	eax
	push	ebx
	call	_SStrCopy@12
$L85071:
; Line 158
	xor	eax, eax
	inc	eax
$L85066:
	pop	edi
	pop	esi
	pop	ebx
; Line 159
	leave
	ret	0
@pfile_create_player_description@8 ENDP
_TEXT	ENDS
PUBLIC	@pfile_create_save_file@8
; Function compile flags: /Ogsy
;	COMDAT @pfile_create_save_file@8
_TEXT	SEGMENT
_uihero$ = -44
@pfile_create_save_file@8 PROC NEAR			; COMDAT
; _name_1$ = ecx
; _name_2$ = edx
; Line 162
	sub	esp, 48					; 00000030H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, edx
	mov	ebp, ecx
; Line 168
	mov	ecx, edi
	call	@pfile_get_save_num_from_name@4
	cmp	eax, 10					; 0000000aH
	jne	SHORT $L85497
; Line 169
	mov	ebx, OFFSET FLAT:_plr+320
	xor	esi, esi
	mov	DWORD PTR -48+[esp+64], ebx
$L85084:
; Line 170
	push	DWORD PTR -48+[esp+64]
	push	ebp
	call	__strcmpi
	pop	ecx
	test	eax, eax
	pop	ecx
	je	SHORT $L85088
	add	DWORD PTR -48+[esp+64], 21720		; 000054d8H
	inc	esi
	cmp	DWORD PTR -48+[esp+64], OFFSET FLAT:_plr+87200
	jne	SHORT $L85084
; Line 178
	jmp	SHORT $L85497
$L85088:
; Line 179
	mov	ecx, ebp
	call	@pfile_get_save_num_from_name@4
; Line 180
	cmp	eax, 10					; 0000000aH
	jne	SHORT $L85089
$L85497:
; Line 181
	xor	eax, eax
	jmp	SHORT $L85078
$L85089:
; Line 183
	shl	eax, 5
	push	32					; 00000020H
	add	eax, OFFSET FLAT:_hero_names
	push	edi
	push	eax
	call	_SStrCopy@12
; Line 184
	imul	esi, 21720				; 000054d8H
	push	32					; 00000020H
	add	esi, ebx
	push	edi
	push	esi
	call	_SStrCopy@12
; Line 185
	mov	esi, OFFSET FLAT:_gszHero
	push	ebp
	push	esi
	call	__strcmpi
	pop	ecx
	test	eax, eax
	pop	ecx
	jne	SHORT $L85090
; Line 186
	push	16					; 00000010H
	push	edi
	push	esi
	call	_SStrCopy@12
$L85090:
; Line 187
	push	DWORD PTR _gbValidSaveFile
	lea	edx, DWORD PTR _uihero$[esp+68]
	mov	ecx, OFFSET FLAT:_plr
	call	@game_2_ui_player@12
; Line 188
	lea	eax, DWORD PTR _uihero$[esp+64]
	push	1146246220				; 4452544cH
	push	eax
	push	esi
	call	_UiSetupPlayerInfo@12
; Line 189
	call	_pfile_write_hero
; Line 190
	xor	eax, eax
	inc	eax
$L85078:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 191
	add	esp, 48					; 00000030H
	ret	0
@pfile_create_save_file@8 ENDP
_TEXT	ENDS
PUBLIC	_pfile_flush_W
; Function compile flags: /Ogsy
;	COMDAT _pfile_flush_W
_TEXT	SEGMENT
_pfile_flush_W PROC NEAR				; COMDAT
; Line 195
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
	xor	ecx, ecx
	mov	edx, eax
	inc	ecx
	jmp	@pfile_flush@8
_pfile_flush_W ENDP
_TEXT	ENDS
PUBLIC	@game_2_ui_class@4
EXTRN	_memset:NEAR
EXTRN	_strncpy:NEAR
; Function compile flags: /Ogsy
;	COMDAT @game_2_ui_player@12
_TEXT	SEGMENT
_bHasSaveFile$ = 8
@game_2_ui_player@12 PROC NEAR				; COMDAT
; _p$ = ecx
; _heroinfo$ = edx
; Line 199
	push	esi
	push	edi
	mov	esi, edx
; Line 200
	push	44					; 0000002cH
	push	0
	push	esi
	mov	edi, ecx
	call	_memset
; Line 201
	lea	eax, DWORD PTR [edi+320]
	push	15					; 0000000fH
	push	eax
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_strncpy
; Line 202
	and	BYTE PTR [esi+19], 0
	add	esp, 24					; 00000018H
; Line 203
	movsx	ax, BYTE PTR [edi+440]
; Line 204
	mov	ecx, edi
	mov	WORD PTR [esi+20], ax
	call	@game_2_ui_class@4
	mov	BYTE PTR [esi+22], al
; Line 205
	mov	ax, WORD PTR [edi+356]
	mov	WORD PTR [esi+24], ax
; Line 206
	mov	ax, WORD PTR [edi+364]
	mov	WORD PTR [esi+26], ax
; Line 207
	mov	ax, WORD PTR [edi+372]
	mov	WORD PTR [esi+28], ax
; Line 208
	mov	ax, WORD PTR [edi+380]
	mov	WORD PTR [esi+30], ax
; Line 209
	mov	eax, DWORD PTR [edi+460]
	mov	DWORD PTR [esi+32], eax
; Line 210
	mov	eax, DWORD PTR _bHasSaveFile$[esp+4]
	mov	DWORD PTR [esi+36], eax
; Line 211
	mov	al, BYTE PTR [edi+21648]
; Line 212
	and	DWORD PTR [esi+40], 0
	mov	BYTE PTR [esi+23], al
	pop	edi
	pop	esi
; Line 213
	ret	4
@game_2_ui_player@12 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @game_2_ui_class@4
_TEXT	SEGMENT
@game_2_ui_class@4 PROC NEAR				; COMDAT
; _p$ = ecx
; Line 218
	mov	al, BYTE PTR [ecx+352]
	test	al, al
	jne	SHORT $L85105
; Line 226
	ret	0
$L85105:
; Line 220
	cmp	al, 1
	setne	al
	inc	al
; Line 226
	ret	0
@game_2_ui_class@4 ENDP
_TEXT	ENDS
PUBLIC	_pfile_ui_set_hero_infos@4
PUBLIC	@GetSaveDirectory@12
PUBLIC	@pfile_read_hero@8
PUBLIC	@pfile_open_save_archive@8
PUBLIC	@pfile_SFileCloseArchive@4
PUBLIC	@pfile_archive_contains_game@8
PUBLIC	??_C@_0BB@KHEP@Diablo?2Converted?$AA@		; `string'
EXTRN	_SRegLoadString@20:NEAR
EXTRN	_SRegSaveString@16:NEAR
EXTRN	__imp__OpenFile@12:NEAR
EXTRN	@UnPackPlayer@12:NEAR
EXTRN	__imp__SetFileAttributesA@8:NEAR
EXTRN	__imp__GetFileAttributesA@4:NEAR
EXTRN	__imp__CopyFileA@12:NEAR
;	COMDAT ??_C@_0BB@KHEP@Diablo?2Converted?$AA@
_DATA	SEGMENT
??_C@_0BB@KHEP@Diablo?2Converted?$AA@ DB 'Diablo\Converted', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _pfile_ui_set_hero_infos@4
_TEXT	SEGMENT
_ui_add_hero_info$ = 8
_i$ = -8
_save_num$ = -4
_FileName$ = -576
_NewFileName$ = -316
_a1$ = -12
_ReOpenBuff$85122 = -712
_pkplr$85142 = -1980
_uihero$85146 = -56
_pfile_ui_set_hero_infos@4 PROC NEAR			; COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 1980				; 000007bcH
	push	ebx
	push	esi
	push	edi
; Line 235
	xor	esi, esi
	push	320					; 00000140H
	push	esi
	push	OFFSET FLAT:_hero_names
	call	_memset
	add	esp, 12					; 0000000cH
; Line 236
	cmp	BYTE PTR _gbMaxPlayers, 1
	jbe	$L85121
; Line 237
	mov	DWORD PTR _i$[ebp], esi
	mov	DWORD PTR _save_num$[ebp], esi
	mov	edi, 260				; 00000104H
	mov	ebx, OFFSET FLAT:??_C@_0BB@KHEP@Diablo?2Converted?$AA@ ; `string'
$L85119:
	cmp	DWORD PTR _save_num$[ebp], 10		; 0000000aH
	jae	$L85121
; Line 241
	push	DWORD PTR _i$[ebp]
	mov	edx, edi
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@GetSaveDirectory@12
; Line 242
	lea	eax, DWORD PTR _FileName$[ebp]
	push	92					; 0000005cH
	push	eax
	call	_strrchr
	mov	esi, eax
	pop	ecx
	inc	esi
	pop	ecx
; Line 243
	cmp	esi, 1
	je	$L85120
; Line 245
	lea	eax, DWORD PTR _ReOpenBuff$85122[ebp]
	push	16384					; 00004000H
	push	eax
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__OpenFile@12
	cmp	eax, -1
	je	$L85120
; Line 247
	lea	eax, DWORD PTR _NewFileName$[ebp]
	push	edi
	push	eax
	push	0
	push	esi
	push	ebx
	call	_SRegLoadString@20
	test	eax, eax
	jne	$L85120
$L85131:
; Line 249
	mov	eax, DWORD PTR _save_num$[ebp]
	inc	DWORD PTR _save_num$[ebp]
	push	eax
	mov	edx, edi
	lea	ecx, DWORD PTR _NewFileName$[ebp]
	call	@pfile_get_save_path@12
; Line 250
	lea	eax, DWORD PTR _ReOpenBuff$85122[ebp]
	push	16384					; 00004000H
	push	eax
	lea	eax, DWORD PTR _NewFileName$[ebp]
	push	eax
	call	DWORD PTR __imp__OpenFile@12
	cmp	eax, -1
	je	SHORT $L85514
; Line 248
	cmp	DWORD PTR _save_num$[ebp], 10		; 0000000aH
	jb	SHORT $L85131
; Line 250
	jmp	SHORT $L85120
$L85514:
; Line 251
	lea	eax, DWORD PTR _NewFileName$[ebp]
	push	1
	push	eax
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__CopyFileA@12
	test	eax, eax
	je	SHORT $L85120
; Line 253
	lea	eax, DWORD PTR _NewFileName$[ebp]
	push	eax
	push	0
	push	esi
	push	ebx
	call	_SRegSaveString@16
; Line 254
	lea	eax, DWORD PTR _NewFileName$[ebp]
	push	eax
	call	DWORD PTR __imp__GetFileAttributesA@4
; Line 255
	cmp	eax, -1
	je	SHORT $L85120
; Line 256
	and	al, -7					; fffffff9H
; Line 257
	push	eax
	lea	eax, DWORD PTR _NewFileName$[ebp]
	push	eax
	call	DWORD PTR __imp__SetFileAttributesA@8
$L85120:
	inc	DWORD PTR _i$[ebp]
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jb	$L85119
$L85121:
; Line 267
	mov	DWORD PTR _a1$[ebp], 1
; Line 268
	xor	esi, esi
	mov	ebx, OFFSET FLAT:_hero_names
$L85139:
; Line 270
	mov	edx, esi
	lea	ecx, DWORD PTR _a1$[ebp]
	call	@pfile_open_save_archive@8
	mov	edi, eax
; Line 271
	test	edi, edi
	je	SHORT $L85140
; Line 272
	lea	edx, DWORD PTR _pkplr$85142[ebp]
	mov	ecx, edi
	call	@pfile_read_hero@8
	test	eax, eax
	je	SHORT $L85145
; Line 274
	lea	eax, DWORD PTR _pkplr$85142[ebp+16]
	push	eax
	push	ebx
	call	_strcpy
	pop	ecx
; Line 275
	xor	edx, edx
	pop	ecx
	push	0
	lea	ecx, DWORD PTR _pkplr$85142[ebp]
	call	@UnPackPlayer@12
; Line 276
	mov	edx, esi
	mov	ecx, edi
	call	@pfile_archive_contains_game@8
	push	eax
	lea	edx, DWORD PTR _uihero$85146[ebp]
	mov	ecx, OFFSET FLAT:_plr
	call	@game_2_ui_player@12
; Line 277
	lea	eax, DWORD PTR _uihero$85146[ebp]
	push	eax
	call	DWORD PTR _ui_add_hero_info$[ebp]
$L85145:
; Line 279
	mov	ecx, edi
	call	@pfile_SFileCloseArchive@4
$L85140:
	inc	esi
	add	ebx, 32					; 00000020H
	cmp	esi, 10					; 0000000aH
	jb	SHORT $L85139
; Line 283
	xor	eax, eax
	pop	edi
	pop	esi
	inc	eax
	pop	ebx
; Line 284
	leave
	ret	4
_pfile_ui_set_hero_infos@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0P@HDM@?2dlinfo_?$CFd?4drv?$AA@		; `string'
;	COMDAT ??_C@_0P@HDM@?2dlinfo_?$CFd?4drv?$AA@
_DATA	SEGMENT
??_C@_0P@HDM@?2dlinfo_?$CFd?4drv?$AA@ DB '\dlinfo_%d.drv', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @GetSaveDirectory@12
_TEXT	SEGMENT
_save_num$ = 8
_FileName$ = -260
@GetSaveDirectory@12 PROC NEAR				; COMDAT
; _dst$ = ecx
; _dst_size$ = edx
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
; Line 293
	cmp	BYTE PTR _gbMaxPlayers, 1
	push	ebx
	push	esi
	push	edi
	mov	esi, ecx
; Line 295
	push	260					; 00000104H
	push	esi
	jbe	SHORT $L85157
	mov	ebx, OFFSET FLAT:??_C@_0P@HDM@?2dlinfo_?$CFd?4drv?$AA@ ; `string'
	call	DWORD PTR __imp__GetWindowsDirectoryA@8
	mov	edi, eax
; Line 296
	jmp	SHORT $L85161
$L85157:
; Line 299
	push	DWORD PTR _ghInst
	mov	ebx, OFFSET FLAT:??_C@_0O@KHJP@?2single_?$CFd?4sv?$AA@ ; `string'
	call	DWORD PTR __imp__GetModuleFileNameA@12
	mov	edi, eax
; Line 300
	push	92					; 0000005cH
	push	esi
	call	_strrchr
	pop	ecx
; Line 301
	test	eax, eax
	pop	ecx
	je	SHORT $L85161
; Line 302
	and	BYTE PTR [eax], 0
$L85161:
; Line 305
	test	edi, edi
	jne	SHORT $L85162
; Line 306
	push	OFFSET FLAT:??_C@_0BN@IBBL@Unable?5to?5get?5save?5directory?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85162:
; Line 308
	push	DWORD PTR _save_num$[ebp]
	lea	eax, DWORD PTR _FileName$[ebp]
	push	ebx
	push	eax
	call	_sprintf
; Line 309
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	push	esi
	call	_strcat
; Line 310
	push	esi
	call	__strlwr
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebx
; Line 311
	leave
	ret	4
@GetSaveDirectory@12 ENDP
_TEXT	ENDS
EXTRN	_SFileSetFilePointer@16:NEAR
EXTRN	_SFileCloseFile@4:NEAR
EXTRN	_SFileGetFileSize@8:NEAR
EXTRN	_SFileOpenFileEx@16:NEAR
EXTRN	_SFileReadFile@20:NEAR
EXTRN	__imp__GetComputerNameA@8:NEAR
EXTRN	@codec_decode@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_read_hero@8
_TEXT	SEGMENT
_pPack$ = -20
_file$ = -4
_nSize$ = -16
_ret$85175 = -12
_password$85176 = -36
_read$85180 = -8
@pfile_read_hero@8 PROC NEAR				; COMDAT
; _archive$ = ecx
; _pPack$ = edx
; Line 314
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
; Line 320
	lea	eax, DWORD PTR _file$[ebp]
	xor	ebx, ebx
	push	eax
	push	ebx
	push	OFFSET FLAT:??_C@_04MHBC@hero?$AA@	; `string'
	push	ecx
	mov	DWORD PTR _pPack$[ebp], edx
	call	_SFileOpenFileEx@16
	test	eax, eax
	je	$L85174
$L85173:
	push	esi
	push	edi
; Line 324
	mov	esi, OFFSET FLAT:??_C@_08GCMM@xrgyrkj1?$AA@ ; `string'
	lea	edi, DWORD PTR _password$85176[ebp]
	movsd
	movsd
	movsb
	xor	eax, eax
	lea	edi, DWORD PTR _password$85176[ebp+9]
; Line 327
	cmp	BYTE PTR _gbMaxPlayers, 1
	mov	DWORD PTR _ret$85175[ebp], ebx
	stosd
	stosw
	stosb
	mov	DWORD PTR _nSize$[ebp], 16		; 00000010H
	jbe	SHORT $L85177
; Line 328
	lea	eax, DWORD PTR _password$85176[ebp]
	push	OFFSET FLAT:??_C@_08MNCD@szqnlsk1?$AA@	; `string'
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
$L85177:
; Line 330
	push	ebx
	push	DWORD PTR _file$[ebp]
	call	_SFileGetFileSize@8
	mov	edi, eax
; Line 331
	cmp	edi, ebx
	je	$L85190
; Line 333
	mov	ecx, edi
	call	@DiabloAllocPtr@4
	mov	esi, eax
; Line 334
	lea	eax, DWORD PTR _read$85180[ebp]
	push	ebx
	push	eax
	push	edi
	push	esi
	push	DWORD PTR _file$[ebp]
	call	_SFileReadFile@20
	test	eax, eax
	je	SHORT $L85189
; Line 336
	lea	eax, DWORD PTR _password$85176[ebp]
	mov	edx, edi
	push	eax
	mov	ecx, esi
	call	@codec_decode@12
; Line 337
	cmp	eax, ebx
	mov	DWORD PTR _read$85180[ebp], eax
	jne	SHORT $L85525
	cmp	BYTE PTR _gbMaxPlayers, 1
	jbe	SHORT $L85189
; Line 338
	lea	eax, DWORD PTR _nSize$[ebp]
	push	eax
	lea	eax, DWORD PTR _password$85176[ebp]
	push	eax
	call	DWORD PTR __imp__GetComputerNameA@8
; Line 339
	push	ebx
	push	ebx
	push	ebx
	push	DWORD PTR _file$[ebp]
	call	_SFileSetFilePointer@16
	test	eax, eax
	jne	SHORT $L85189
	lea	eax, DWORD PTR _read$85180[ebp]
	push	ebx
	push	eax
	push	edi
	push	esi
	push	DWORD PTR _file$[ebp]
	call	_SFileReadFile@20
	test	eax, eax
	je	SHORT $L85189
; Line 342
	lea	eax, DWORD PTR _password$85176[ebp]
	mov	edx, edi
	push	eax
	mov	ecx, esi
	call	@codec_decode@12
	mov	DWORD PTR _read$85180[ebp], eax
$L85525:
; Line 344
	mov	eax, 1266				; 000004f2H
	cmp	DWORD PTR _read$85180[ebp], eax
	jne	SHORT $L85189
; Line 345
	push	eax
	push	esi
	push	DWORD PTR _pPack$[ebp]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 346
	mov	DWORD PTR _ret$85175[ebp], 1
$L85189:
; Line 349
	cmp	esi, ebx
	je	SHORT $L85190
; Line 350
	mov	ecx, esi
	call	@mem_free_dbg@4
$L85190:
; Line 352
	push	DWORD PTR _file$[ebp]
	call	_SFileCloseFile@4
; Line 353
	mov	eax, DWORD PTR _ret$85175[ebp]
	pop	edi
	pop	esi
$L85174:
	pop	ebx
; Line 355
	leave
	ret	0
@pfile_read_hero@8 ENDP
_TEXT	ENDS
EXTRN	_SFileOpenArchive@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_open_save_archive@8
_TEXT	SEGMENT
_SrcStr$ = -264
_archive$ = -4
@pfile_open_save_archive@8 PROC NEAR			; COMDAT
; _unused$ = ecx
; _save_num$ = edx
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
; Line 362
	push	edx
	mov	edx, 260				; 00000104H
	lea	ecx, DWORD PTR _SrcStr$[ebp]
	call	@pfile_get_save_path@12
; Line 363
	lea	eax, DWORD PTR _archive$[ebp]
	push	eax
	push	0
	lea	eax, DWORD PTR _SrcStr$[ebp]
	push	28672					; 00007000H
	push	eax
	call	_SFileOpenArchive@16
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _archive$[ebp]
; Line 366
	leave
	ret	0
@pfile_open_save_archive@8 ENDP
_TEXT	ENDS
EXTRN	_SFileCloseArchive@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @pfile_SFileCloseArchive@4
_TEXT	SEGMENT
@pfile_SFileCloseArchive@4 PROC NEAR			; COMDAT
; _hsArchive$ = ecx
; Line 370
	push	ecx
	call	_SFileCloseArchive@4
; Line 371
	ret	0
@pfile_SFileCloseArchive@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_04OAFI@game?$AA@				; `string'
;	COMDAT ??_C@_04OAFI@game?$AA@
_DATA	SEGMENT
??_C@_04OAFI@game?$AA@ DB 'game', 00H			; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @pfile_archive_contains_game@8
_TEXT	SEGMENT
_file$ = -4
@pfile_archive_contains_game@8 PROC NEAR		; COMDAT
; _hsArchive$ = ecx
; _save_num$ = edx
; Line 374
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 377
	cmp	BYTE PTR _gbMaxPlayers, 1
; Line 378
	jne	SHORT $L85535
; Line 380
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	push	0
	push	OFFSET FLAT:??_C@_04OAFI@game?$AA@	; `string'
	push	ecx
	call	_SFileOpenFileEx@16
	test	eax, eax
	jne	SHORT $L85210
$L85535:
; Line 381
	xor	eax, eax
; Line 385
	leave
	ret	0
$L85210:
; Line 383
	push	DWORD PTR _file$[ebp]
	call	_SFileCloseFile@4
; Line 384
	xor	eax, eax
	inc	eax
; Line 385
	leave
	ret	0
@pfile_archive_contains_game@8 ENDP
_TEXT	ENDS
PUBLIC	_pfile_ui_set_class_stats@8
PUBLIC	@pfile_get_player_class@4
EXTRN	_StrengthTbl:BYTE
EXTRN	_MagicTbl:BYTE
EXTRN	_DexterityTbl:BYTE
EXTRN	_VitalityTbl:BYTE
; Function compile flags: /Ogsy
;	COMDAT _pfile_ui_set_class_stats@8
_TEXT	SEGMENT
_player_class_nr$ = 8
_class_stats$ = 12
_pfile_ui_set_class_stats@8 PROC NEAR			; COMDAT
; Line 391
	mov	ecx, DWORD PTR _player_class_nr$[esp-4]
	call	@pfile_get_player_class@4
; Line 392
	mov	ecx, DWORD PTR _class_stats$[esp-4]
	movsx	eax, al
	shl	eax, 2
	mov	dx, WORD PTR _StrengthTbl[eax]
	mov	WORD PTR [ecx], dx
; Line 393
	mov	dx, WORD PTR _MagicTbl[eax]
	mov	WORD PTR [ecx+2], dx
; Line 394
	mov	dx, WORD PTR _DexterityTbl[eax]
	mov	WORD PTR [ecx+4], dx
; Line 395
	mov	ax, WORD PTR _VitalityTbl[eax]
	mov	WORD PTR [ecx+6], ax
; Line 396
	xor	eax, eax
	inc	eax
; Line 397
	ret	8
_pfile_ui_set_class_stats@8 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @pfile_get_player_class@4
_TEXT	SEGMENT
@pfile_get_player_class@4 PROC NEAR			; COMDAT
; _player_class_nr$ = ecx
; Line 403
	test	ecx, ecx
	jne	SHORT $L85222
; Line 404
	xor	al, al
; Line 410
	ret	0
$L85222:
; Line 405
	cmp	ecx, 1
	setne	al
	inc	al
; Line 410
	ret	0
@pfile_get_player_class@4 ENDP
_TEXT	ENDS
PUBLIC	_pfile_ui_save_create@4
PUBLIC	_pfile_get_file_name@8
EXTRN	@mpqapi_remove_hash_entries@4:NEAR
EXTRN	@CreatePlayer@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT _pfile_ui_save_create@4
_TEXT	SEGMENT
_heroinfo$ = 8
_pkplr$ = -1268
_pfile_ui_save_create@4 PROC NEAR			; COMDAT
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 1268				; 000004f4H
	push	ebx
; Line 418
	mov	ebx, DWORD PTR _heroinfo$[ebp]
	push	edi
	lea	ecx, DWORD PTR [ebx+4]
	call	@pfile_get_save_num_from_name@4
	mov	edi, eax
; Line 419
	cmp	edi, 10					; 0000000aH
	jne	SHORT $L85237
; Line 420
	xor	edi, edi
	mov	eax, OFFSET FLAT:_hero_names
$L85233:
; Line 421
	cmp	BYTE PTR [eax], 0
	je	SHORT $L85545
	inc	edi
	add	eax, 32					; 00000020H
	cmp	edi, 10					; 0000000aH
	jb	SHORT $L85233
$L85545:
; Line 424
	cmp	edi, 10					; 0000000aH
; Line 425
	je	SHORT $L85547
$L85237:
; Line 427
	mov	edx, edi
	xor	ecx, ecx
	call	@pfile_open_archive@8
	test	eax, eax
	jne	SHORT $L85238
$L85547:
; Line 428
	xor	eax, eax
	jmp	$L85228
$L85238:
	push	esi
; Line 429
	mov	ecx, OFFSET FLAT:_pfile_get_file_name@8
	call	@mpqapi_remove_hash_entries@4
; Line 430
	mov	esi, edi
	lea	eax, DWORD PTR [ebx+4]
	shl	esi, 5
	push	32					; 00000020H
	push	eax
	lea	eax, DWORD PTR _hero_names[esi]
	push	eax
	call	_strncpy
; Line 431
	and	BYTE PTR _hero_names[esi+31], 0
	add	esp, 12					; 0000000cH
; Line 433
	movzx	ecx, BYTE PTR [ebx+22]
	call	@pfile_get_player_class@4
	mov	dl, al
	xor	ecx, ecx
	call	@CreatePlayer@8
; Line 434
	lea	eax, DWORD PTR [ebx+4]
	push	32					; 00000020H
	push	eax
	push	OFFSET FLAT:_plr+320
	call	_strncpy
; Line 435
	and	BYTE PTR _plr+351, 0
	add	esp, 12					; 0000000cH
; Line 436
	xor	edx, edx
	lea	ecx, DWORD PTR _pkplr$[ebp]
	push	1
	call	@PackPlayer@12
; Line 437
	lea	ecx, DWORD PTR _pkplr$[ebp]
	call	@pfile_encode_hero@4
; Line 438
	push	0
	mov	edx, ebx
	mov	ecx, OFFSET FLAT:_plr
	call	@game_2_ui_player@12
; Line 439
	xor	ecx, ecx
	mov	edx, edi
	inc	ecx
	call	@pfile_flush@8
; Line 440
	xor	eax, eax
	pop	esi
	inc	eax
$L85228:
	pop	edi
	pop	ebx
; Line 441
	leave
	ret	4
_pfile_ui_save_create@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_09NCJK@perml?$CF02d?$AA@			; `string'
PUBLIC	??_C@_09LBBP@perms?$CF02d?$AA@			; `string'
;	COMDAT ??_C@_09NCJK@perml?$CF02d?$AA@
_DATA	SEGMENT
??_C@_09NCJK@perml?$CF02d?$AA@ DB 'perml%02d', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09LBBP@perms?$CF02d?$AA@
_DATA	SEGMENT
??_C@_09LBBP@perms?$CF02d?$AA@ DB 'perms%02d', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _pfile_get_file_name@8
_TEXT	SEGMENT
_lvl$ = 8
_dst$ = 12
_pfile_get_file_name@8 PROC NEAR			; COMDAT
; Line 447
	cmp	BYTE PTR _gbMaxPlayers, 1
; Line 448
	mov	ecx, DWORD PTR _lvl$[esp-4]
	jbe	SHORT $L85245
	test	ecx, ecx
; Line 451
	jmp	SHORT $L85550
$L85245:
; Line 452
	cmp	ecx, 17					; 00000011H
	jae	SHORT $L85248
; Line 453
	mov	eax, OFFSET FLAT:??_C@_09NCJK@perml?$CF02d?$AA@ ; `string'
; Line 454
	jmp	SHORT $L85257
$L85248:
	cmp	ecx, 34					; 00000022H
	jae	SHORT $L85551
; Line 455
	sub	ecx, 17					; 00000011H
; Line 456
	mov	eax, OFFSET FLAT:??_C@_09LBBP@perms?$CF02d?$AA@ ; `string'
; Line 457
	jmp	SHORT $L85257
$L85551:
	jne	SHORT $L85254
; Line 458
	mov	eax, OFFSET FLAT:??_C@_04OAFI@game?$AA@	; `string'
; Line 459
	jmp	SHORT $L85257
$L85254:
	cmp	ecx, 35					; 00000023H
$L85550:
	jne	SHORT $L85256
; Line 460
	mov	eax, OFFSET FLAT:??_C@_04MHBC@hero?$AA@	; `string'
$L85257:
; Line 464
	push	ecx
	push	eax
	push	DWORD PTR _dst$[esp+4]
	call	_sprintf
; Line 465
	xor	eax, eax
	add	esp, 12					; 0000000cH
	inc	eax
	jmp	SHORT $L85243
$L85256:
; Line 462
	xor	eax, eax
$L85243:
; Line 466
	ret	8
_pfile_get_file_name@8 ENDP
_TEXT	ENDS
PUBLIC	_pfile_delete_save@4
EXTRN	__imp__DeleteFileA@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _pfile_delete_save@4
_TEXT	SEGMENT
_hero_info$ = 8
_FileName$ = -260
_pfile_delete_save@4 PROC NEAR				; COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
; Line 473
	mov	eax, DWORD PTR _hero_info$[ebp]
	lea	ecx, DWORD PTR [eax+4]
	call	@pfile_get_save_num_from_name@4
; Line 474
	cmp	eax, 10					; 0000000aH
	jae	SHORT $L85263
; Line 475
	mov	ecx, eax
; Line 476
	push	eax
	shl	ecx, 5
	mov	edx, 260				; 00000104H
	and	BYTE PTR _hero_names[ecx], 0
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@pfile_get_save_path@12
; Line 477
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteFileA@4
$L85263:
; Line 479
	xor	eax, eax
	inc	eax
; Line 480
	leave
	ret	4
_pfile_delete_save@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@EOAE@Unable?5to?5open?5archive?$AA@	; `string'
PUBLIC	??_C@_0BJ@FGGK@Unable?5to?5load?5character?$AA@	; `string'
;	COMDAT ??_C@_0BH@EOAE@Unable?5to?5open?5archive?$AA@
_DATA	SEGMENT
??_C@_0BH@EOAE@Unable?5to?5open?5archive?$AA@ DB 'Unable to open archive', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@FGGK@Unable?5to?5load?5character?$AA@
_DATA	SEGMENT
??_C@_0BJ@FGGK@Unable?5to?5load?5character?$AA@ DB 'Unable to load charac'
	DB	'ter', 00H					; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _pfile_read_player_from_save
_TEXT	SEGMENT
_pkplr$ = -1268
_pfile_read_player_from_save PROC NEAR			; COMDAT
; Line 483
	push	ebp
	mov	ebp, esp
	sub	esp, 1268				; 000004f4H
	push	esi
	push	edi
; Line 488
	mov	ecx, OFFSET FLAT:_gszHero
	call	@pfile_get_save_num_from_name@4
	mov	edi, eax
; Line 489
	xor	ecx, ecx
	mov	edx, edi
	call	@pfile_open_save_archive@8
	mov	esi, eax
; Line 490
	test	esi, esi
	jne	SHORT $L85270
; Line 491
	push	OFFSET FLAT:??_C@_0BH@EOAE@Unable?5to?5open?5archive?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85270:
; Line 492
	lea	edx, DWORD PTR _pkplr$[ebp]
	mov	ecx, esi
	call	@pfile_read_hero@8
	test	eax, eax
	jne	SHORT $L85272
; Line 493
	push	OFFSET FLAT:??_C@_0BJ@FGGK@Unable?5to?5load?5character?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85272:
; Line 495
	mov	edx, DWORD PTR _myplr
	push	0
	lea	ecx, DWORD PTR _pkplr$[ebp]
	call	@UnPackPlayer@12
; Line 496
	mov	edx, edi
	mov	ecx, esi
	call	@pfile_archive_contains_game@8
; Line 497
	mov	ecx, esi
	mov	DWORD PTR _gbValidSaveFile, eax
	call	@pfile_SFileCloseArchive@4
	pop	edi
	pop	esi
; Line 498
	leave
	ret	0
_pfile_read_player_from_save ENDP
_TEXT	ENDS
PUBLIC	@GetTempLevelNames@4
PUBLIC	??_C@_09NIAD@temps?$CF02d?$AA@			; `string'
PUBLIC	??_C@_09LLIG@templ?$CF02d?$AA@			; `string'
EXTRN	_setlvlnum:BYTE
EXTRN	_setlevel:BYTE
EXTRN	_currlevel:BYTE
;	COMDAT ??_C@_09NIAD@temps?$CF02d?$AA@
_DATA	SEGMENT
??_C@_09NIAD@temps?$CF02d?$AA@ DB 'temps%02d', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09LLIG@templ?$CF02d?$AA@
_DATA	SEGMENT
??_C@_09LLIG@templ?$CF02d?$AA@ DB 'templ%02d', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @GetTempLevelNames@4
_TEXT	SEGMENT
@GetTempLevelNames@4 PROC NEAR				; COMDAT
; _szTemp$ = ecx
; Line 501
	push	esi
	mov	esi, ecx
; Line 503
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
; Line 504
	cmp	BYTE PTR _setlevel, 0
	je	SHORT $L85277
; Line 505
	movzx	eax, BYTE PTR _setlvlnum
	push	eax
	push	OFFSET FLAT:??_C@_09NIAD@temps?$CF02d?$AA@ ; `string'
; Line 506
	jmp	SHORT $L85559
$L85277:
; Line 507
	movzx	eax, BYTE PTR _currlevel
	push	eax
	push	OFFSET FLAT:??_C@_09LLIG@templ?$CF02d?$AA@ ; `string'
$L85559:
	push	esi
	call	_sprintf
	add	esp, 12					; 0000000cH
	pop	esi
; Line 508
	ret	0
@GetTempLevelNames@4 ENDP
_TEXT	ENDS
PUBLIC	@GetPermLevelNames@4
PUBLIC	??_C@_0CE@GINK@Unable?5to?5read?5to?5save?5file?5arch@ ; `string'
EXTRN	@mpqapi_has_file@4:NEAR
;	COMDAT ??_C@_0CE@GINK@Unable?5to?5read?5to?5save?5file?5arch@
_DATA	SEGMENT
??_C@_0CE@GINK@Unable?5to?5read?5to?5save?5file?5arch@ DB 'Unable to read'
	DB	' to save file archive', 00H			; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @GetPermLevelNames@4
_TEXT	SEGMENT
@GetPermLevelNames@4 PROC NEAR				; COMDAT
; _szPerm$ = ecx
; Line 511
	push	ebx
	push	esi
	mov	esi, ecx
; Line 515
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	push	edi
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
; Line 516
	mov	ecx, esi
	mov	ebx, eax
	call	@GetTempLevelNames@4
; Line 517
	mov	edx, ebx
	xor	ecx, ecx
	call	@pfile_open_archive@8
	test	eax, eax
	jne	SHORT $L85286
; Line 518
	push	OFFSET FLAT:??_C@_0CE@GINK@Unable?5to?5read?5to?5save?5file?5arch@ ; `string'
	call	_TermMsg
	pop	ecx
$L85286:
; Line 520
	mov	ecx, esi
	call	@mpqapi_has_file@4
; Line 521
	xor	ecx, ecx
	mov	edx, ebx
	inc	ecx
	mov	edi, eax
	call	@pfile_flush@8
; Line 522
	test	edi, edi
	jne	SHORT $L85290
; Line 523
	cmp	BYTE PTR _setlevel, 0
	je	SHORT $L85289
; Line 524
	movzx	eax, BYTE PTR _setlvlnum
	push	eax
	push	OFFSET FLAT:??_C@_09LBBP@perms?$CF02d?$AA@ ; `string'
; Line 525
	jmp	SHORT $L85563
$L85289:
; Line 526
	movzx	eax, BYTE PTR _currlevel
	push	eax
	push	OFFSET FLAT:??_C@_09NCJK@perml?$CF02d?$AA@ ; `string'
$L85563:
	push	esi
	call	_sprintf
	add	esp, 12					; 0000000cH
$L85290:
	pop	edi
	pop	esi
	pop	ebx
; Line 528
	ret	0
@GetPermLevelNames@4 ENDP
_TEXT	ENDS
PUBLIC	@pfile_get_game_name@4
; Function compile flags: /Ogsy
;	COMDAT @pfile_get_game_name@4
_TEXT	SEGMENT
@pfile_get_game_name@4 PROC NEAR			; COMDAT
; _dst$ = ecx
; Line 531
	push	esi
	mov	esi, ecx
; Line 533
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
; Line 534
	push	OFFSET FLAT:??_C@_04OAFI@game?$AA@	; `string'
	push	esi
	call	_strcpy
	pop	ecx
	pop	ecx
	pop	esi
; Line 535
	ret	0
@pfile_get_game_name@4 ENDP
_TEXT	ENDS
PUBLIC	_pfile_remove_temp_files
PUBLIC	_GetTempSaveNames@8
PUBLIC	??_C@_0CF@JCEG@Unable?5to?5write?5to?5save?5file?5arc@ ; `string'
;	COMDAT ??_C@_0CF@JCEG@Unable?5to?5write?5to?5save?5file?5arc@
_DATA	SEGMENT
??_C@_0CF@JCEG@Unable?5to?5write?5to?5save?5file?5arc@ DB 'Unable to writ'
	DB	'e to save file archive', 00H		; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _pfile_remove_temp_files
_TEXT	SEGMENT
_pfile_remove_temp_files PROC NEAR			; COMDAT
; Line 539
	cmp	BYTE PTR _gbMaxPlayers, 1
	ja	SHORT $L85295
; Line 540
	mov	ecx, DWORD PTR _myplr
	push	esi
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
	mov	esi, eax
; Line 541
	xor	ecx, ecx
	mov	edx, esi
	call	@pfile_open_archive@8
	test	eax, eax
	jne	SHORT $L85297
; Line 542
	push	OFFSET FLAT:??_C@_0CF@JCEG@Unable?5to?5write?5to?5save?5file?5arc@ ; `string'
	call	_TermMsg
	pop	ecx
$L85297:
; Line 543
	mov	ecx, OFFSET FLAT:_GetTempSaveNames@8
	call	@mpqapi_remove_hash_entries@4
; Line 544
	xor	ecx, ecx
	mov	edx, esi
	inc	ecx
	pop	esi
	jmp	@pfile_flush@8
$L85295:
; Line 546
	ret	0
_pfile_remove_temp_files ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _GetTempSaveNames@8
_TEXT	SEGMENT
_dwIndex$ = 8
_szTemp$ = 12
_GetTempSaveNames@8 PROC NEAR				; COMDAT
; Line 552
	mov	eax, DWORD PTR _dwIndex$[esp-4]
	cmp	eax, 17					; 00000011H
	jae	SHORT $L85305
; Line 553
	mov	ecx, OFFSET FLAT:??_C@_09LLIG@templ?$CF02d?$AA@ ; `string'
; Line 554
	jmp	SHORT $L85308
$L85305:
	cmp	eax, 34					; 00000022H
	jae	SHORT $L85307
; Line 555
	sub	eax, 17					; 00000011H
; Line 556
	mov	ecx, OFFSET FLAT:??_C@_09NIAD@temps?$CF02d?$AA@ ; `string'
$L85308:
; Line 560
	push	eax
	push	ecx
	push	DWORD PTR _szTemp$[esp+4]
	call	_sprintf
; Line 561
	xor	eax, eax
	add	esp, 12					; 0000000cH
	inc	eax
	jmp	SHORT $L85303
$L85307:
; Line 558
	xor	eax, eax
$L85303:
; Line 562
	ret	8
_GetTempSaveNames@8 ENDP
_TEXT	ENDS
PUBLIC	_pfile_rename_temp_to_perm
PUBLIC	_GetPermSaveNames@8
EXTRN	@mpqapi_remove_hash_entry@4:NEAR
EXTRN	@mpqapi_rename@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT _pfile_rename_temp_to_perm
_TEXT	SEGMENT
_TempName$ = -520
_PermName$ = -260
_pfile_rename_temp_to_perm PROC NEAR			; COMDAT
; Line 565
	push	ebp
	mov	ebp, esp
	sub	esp, 520				; 00000208H
; Line 571
	mov	ecx, DWORD PTR _myplr
	push	esi
	imul	ecx, 21720				; 000054d8H
	push	edi
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
	mov	edi, eax
; Line 572
	xor	ecx, ecx
	mov	edx, edi
	call	@pfile_open_archive@8
	test	eax, eax
	jne	SHORT $L85314
; Line 573
	push	OFFSET FLAT:??_C@_0CF@JCEG@Unable?5to?5write?5to?5save?5file?5arc@ ; `string'
	call	_TermMsg
	pop	ecx
$L85314:
; Line 575
	xor	esi, esi
; Line 576
	jmp	SHORT $L85318
$L85316:
; Line 577
	call	_GetPermSaveNames@8
; Line 579
	lea	ecx, DWORD PTR _TempName$[ebp]
	inc	esi
	call	@mpqapi_has_file@4
	test	eax, eax
	je	SHORT $L85318
; Line 580
	lea	ecx, DWORD PTR _PermName$[ebp]
	call	@mpqapi_has_file@4
	test	eax, eax
	je	SHORT $L85319
; Line 581
	lea	ecx, DWORD PTR _PermName$[ebp]
	call	@mpqapi_remove_hash_entry@4
$L85319:
; Line 582
	lea	edx, DWORD PTR _PermName$[ebp]
	lea	ecx, DWORD PTR _TempName$[ebp]
	call	@mpqapi_rename@8
$L85318:
	lea	eax, DWORD PTR _TempName$[ebp]
	push	eax
	push	esi
	call	_GetTempSaveNames@8
	test	eax, eax
; Line 585
	lea	eax, DWORD PTR _PermName$[ebp]
	push	eax
	push	esi
	jne	SHORT $L85316
	call	_GetPermSaveNames@8
; Line 586
	xor	ecx, ecx
	mov	edx, edi
	inc	ecx
	call	@pfile_flush@8
	pop	edi
	pop	esi
; Line 587
	leave
	ret	0
_pfile_rename_temp_to_perm ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _GetPermSaveNames@8
_TEXT	SEGMENT
_dwIndex$ = 8
_szPerm$ = 12
_GetPermSaveNames@8 PROC NEAR				; COMDAT
; Line 593
	mov	eax, DWORD PTR _dwIndex$[esp-4]
	cmp	eax, 17					; 00000011H
	jae	SHORT $L85326
; Line 594
	mov	ecx, OFFSET FLAT:??_C@_09NCJK@perml?$CF02d?$AA@ ; `string'
; Line 595
	jmp	SHORT $L85329
$L85326:
	cmp	eax, 34					; 00000022H
	jae	SHORT $L85328
; Line 596
	sub	eax, 17					; 00000011H
; Line 597
	mov	ecx, OFFSET FLAT:??_C@_09LBBP@perms?$CF02d?$AA@ ; `string'
$L85329:
; Line 601
	push	eax
	push	ecx
	push	DWORD PTR _szPerm$[esp+4]
	call	_sprintf
; Line 602
	xor	eax, eax
	add	esp, 12					; 0000000cH
	inc	eax
	jmp	SHORT $L85324
$L85328:
; Line 599
	xor	eax, eax
$L85324:
; Line 603
	ret	8
_GetPermSaveNames@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CF@FJLM@Unable?5to?5write?5so?5save?5file?5arc@ ; `string'
PUBLIC	@pfile_write_save_file@16
PUBLIC	@pfile_strcpy@8
;	COMDAT ??_C@_0CF@FJLM@Unable?5to?5write?5so?5save?5file?5arc@
_DATA	SEGMENT
??_C@_0CF@FJLM@Unable?5to?5write?5so?5save?5file?5arc@ DB 'Unable to writ'
	DB	'e so save file archive', 00H		; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @pfile_write_save_file@16
_TEXT	SEGMENT
_dwLen$ = 8
_qwLen$ = 12
_save_num$ = -4
_FileName$ = -280
_password$85341 = -20
@pfile_write_save_file@16 PROC NEAR			; COMDAT
; _pszName$ = ecx
; _pbData$ = edx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	mov	ebx, edx
	push	esi
; Line 610
	mov	edx, ecx
	push	edi
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@pfile_strcpy@8
; Line 611
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
; Line 613
	mov	esi, OFFSET FLAT:??_C@_08GCMM@xrgyrkj1?$AA@ ; `string'
	lea	edi, DWORD PTR _password$85341[ebp]
	movsd
	movsd
	movsb
	mov	DWORD PTR _save_num$[ebp], eax
	xor	eax, eax
	lea	edi, DWORD PTR _password$85341[ebp+9]
; Line 614
	cmp	BYTE PTR _gbMaxPlayers, 1
	stosd
	stosw
	stosb
	jbe	SHORT $L85342
; Line 615
	lea	eax, DWORD PTR _password$85341[ebp]
	push	OFFSET FLAT:??_C@_08MNCD@szqnlsk1?$AA@	; `string'
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
$L85342:
; Line 617
	mov	edx, DWORD PTR _dwLen$[ebp]
	lea	eax, DWORD PTR _password$85341[ebp]
	push	eax
	mov	ecx, ebx
	push	DWORD PTR _qwLen$[ebp]
	call	@codec_encode@16
; Line 619
	mov	edx, DWORD PTR _save_num$[ebp]
	xor	ecx, ecx
	call	@pfile_open_archive@8
	test	eax, eax
	jne	SHORT $L85343
; Line 620
	push	OFFSET FLAT:??_C@_0CF@FJLM@Unable?5to?5write?5so?5save?5file?5arc@ ; `string'
	call	_TermMsg
	pop	ecx
$L85343:
; Line 621
	push	DWORD PTR _qwLen$[ebp]
	mov	edx, ebx
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@mpqapi_write_file@12
; Line 622
	mov	edx, DWORD PTR _save_num$[ebp]
	xor	ecx, ecx
	inc	ecx
	call	@pfile_flush@8
	pop	edi
	pop	esi
	pop	ebx
; Line 623
	leave
	ret	8
@pfile_write_save_file@16 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @pfile_strcpy@8
_TEXT	SEGMENT
@pfile_strcpy@8 PROC NEAR				; COMDAT
; _dst$ = ecx
; _src$ = edx
; Line 627
	push	edx
	push	ecx
	call	_strcpy
	pop	ecx
	pop	ecx
; Line 628
	ret	0
@pfile_strcpy@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@DOGD@Unable?5to?5open?5save?5file?5archive@ ; `string'
PUBLIC	??_C@_0BJ@PJHJ@Unable?5to?5open?5save?5file?$AA@ ; `string'
PUBLIC	??_C@_0BC@DLIN@Invalid?5save?5file?$AA@		; `string'
PUBLIC	??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@ ; `string'
PUBLIC	@pfile_read@8
;	COMDAT ??_C@_0CB@DOGD@Unable?5to?5open?5save?5file?5archive@
_DATA	SEGMENT
??_C@_0CB@DOGD@Unable?5to?5open?5save?5file?5archive@ DB 'Unable to open '
	DB	'save file archive', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@PJHJ@Unable?5to?5open?5save?5file?$AA@
_DATA	SEGMENT
??_C@_0BJ@PJHJ@Unable?5to?5open?5save?5file?$AA@ DB 'Unable to open save '
	DB	'file', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@DLIN@Invalid?5save?5file?$AA@
_DATA	SEGMENT
??_C@_0BC@DLIN@Invalid?5save?5file?$AA@ DB 'Invalid save file', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@
_DATA	SEGMENT
??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@ DB 'Unable to read save '
	DB	'file', 00H					; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @pfile_read@8
_TEXT	SEGMENT
_FileName$ = -292
_save$ = -4
_buf$ = -16
_nread$ = -12
_password$85374 = -32
_nSize$85375 = -8
@pfile_read@8 PROC NEAR					; COMDAT
; _pszName$ = ecx
; _pdwLen$ = edx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	mov	ebx, edx
	push	esi
; Line 638
	mov	edx, ecx
	push	edi
	lea	ecx, DWORD PTR _FileName$[ebp]
	call	@pfile_strcpy@8
; Line 639
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	add	ecx, OFFSET FLAT:_plr+320
	call	@pfile_get_save_num_from_name@4
; Line 640
	mov	edx, eax
	xor	ecx, ecx
	call	@pfile_open_save_archive@8
	mov	edi, eax
; Line 641
	xor	esi, esi
	cmp	edi, esi
	jne	SHORT $L85363
; Line 642
	push	OFFSET FLAT:??_C@_0CB@DOGD@Unable?5to?5open?5save?5file?5archive@ ; `string'
	call	_TermMsg
	pop	ecx
$L85363:
; Line 644
	lea	eax, DWORD PTR _save$[ebp]
	push	eax
	lea	eax, DWORD PTR _FileName$[ebp]
	push	esi
	push	eax
	push	edi
	call	_SFileOpenFileEx@16
	test	eax, eax
	jne	SHORT $L85365
; Line 645
	push	OFFSET FLAT:??_C@_0BJ@PJHJ@Unable?5to?5open?5save?5file?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85365:
; Line 647
	push	esi
	push	DWORD PTR _save$[ebp]
	call	_SFileGetFileSize@8
; Line 648
	cmp	eax, esi
	mov	DWORD PTR [ebx], eax
	jne	SHORT $L85368
; Line 649
	push	OFFSET FLAT:??_C@_0BC@DLIN@Invalid?5save?5file?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85368:
; Line 651
	mov	ecx, DWORD PTR [ebx]
	call	@DiabloAllocPtr@4
; Line 652
	lea	ecx, DWORD PTR _nread$[ebp]
	mov	DWORD PTR _buf$[ebp], eax
	push	esi
	push	ecx
	push	DWORD PTR [ebx]
	push	eax
	push	DWORD PTR _save$[ebp]
	call	_SFileReadFile@20
	test	eax, eax
	jne	SHORT $L85372
; Line 653
	push	OFFSET FLAT:??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85372:
; Line 654
	push	DWORD PTR _save$[ebp]
	call	_SFileCloseFile@4
; Line 655
	mov	ecx, edi
	call	@pfile_SFileCloseArchive@4
; Line 658
	mov	esi, OFFSET FLAT:??_C@_08GCMM@xrgyrkj1?$AA@ ; `string'
	lea	edi, DWORD PTR _password$85374[ebp]
	movsd
	movsd
	movsb
	xor	eax, eax
	lea	edi, DWORD PTR _password$85374[ebp+9]
; Line 661
	cmp	BYTE PTR _gbMaxPlayers, 1
	mov	DWORD PTR _nSize$85375[ebp], 16		; 00000010H
	stosd
	stosw
	stosb
	jbe	SHORT $L85376
; Line 662
	lea	eax, DWORD PTR _password$85374[ebp]
	push	OFFSET FLAT:??_C@_08MNCD@szqnlsk1?$AA@	; `string'
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
$L85376:
; Line 664
	mov	esi, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ebx]
	lea	eax, DWORD PTR _password$85374[ebp]
	mov	ecx, esi
	push	eax
	call	@codec_decode@12
; Line 665
	xor	edi, edi
	mov	DWORD PTR [ebx], eax
	cmp	eax, edi
	jne	SHORT $L85383
; Line 668
	cmp	BYTE PTR _gbMaxPlayers, 1
	jbe	SHORT $L85378
; Line 669
	lea	eax, DWORD PTR _nSize$85375[ebp]
	push	eax
	lea	eax, DWORD PTR _password$85374[ebp]
	push	eax
	call	DWORD PTR __imp__GetComputerNameA@8
; Line 670
	push	edi
	push	edi
	push	edi
	push	DWORD PTR _save$[ebp]
	call	_SFileSetFilePointer@16
	test	eax, eax
	je	SHORT $L85380
; Line 671
	push	OFFSET FLAT:??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85380:
; Line 673
	lea	eax, DWORD PTR _nread$[ebp]
	push	edi
	push	eax
	push	DWORD PTR [ebx]
	push	esi
	push	DWORD PTR _save$[ebp]
	call	_SFileReadFile@20
	test	eax, eax
	jne	SHORT $L85382
; Line 674
	push	OFFSET FLAT:??_C@_0BJ@OLDP@Unable?5to?5read?5save?5file?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85382:
; Line 675
	mov	edx, DWORD PTR [ebx]
	lea	eax, DWORD PTR _password$85374[ebp]
	push	eax
	mov	ecx, esi
	call	@codec_decode@12
	mov	DWORD PTR [ebx], eax
$L85378:
; Line 677
	cmp	DWORD PTR [ebx], edi
	jne	SHORT $L85383
; Line 678
	push	OFFSET FLAT:??_C@_0BC@DLIN@Invalid?5save?5file?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85383:
; Line 681
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 682
	leave
	ret	0
@pfile_read@8 ENDP
_TEXT	ENDS
PUBLIC	@pfile_update@4
EXTRN	__imp__GetTickCount@0:NEAR
_BSS	SEGMENT
?save_prev_tc@?1??pfile_update@@9@9 DD 01H DUP (?)	; `pfile_update'::`2'::save_prev_tc
; Function compile flags: /Ogsy
_BSS	ENDS
;	COMDAT @pfile_update@4
_TEXT	SEGMENT
@pfile_update@4 PROC NEAR				; COMDAT
; _force_save$ = ecx
; Line 689
	cmp	BYTE PTR _gbMaxPlayers, 1
	push	esi
	mov	esi, ecx
	je	SHORT $L85391
; Line 690
	call	DWORD PTR __imp__GetTickCount@0
; Line 691
	test	esi, esi
	jne	SHORT $L85392
	mov	ecx, eax
	sub	ecx, DWORD PTR ?save_prev_tc@?1??pfile_update@@9@9
	cmp	ecx, 60000				; 0000ea60H
	jle	SHORT $L85391
$L85392:
; Line 692
	mov	DWORD PTR ?save_prev_tc@?1??pfile_update@@9@9, eax
	pop	esi
; Line 693
	jmp	_pfile_write_hero
$L85391:
	pop	esi
; Line 696
	ret	0
@pfile_update@4 ENDP
_TEXT	ENDS
END
