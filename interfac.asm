; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/interfac.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BE@DGOM@Gendata?2Cutgate?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HOHA@Gendata?2Cutgate?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBBF@Gendata?2Cut2?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KJIJ@Gendata?2Cut2?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CKNP@Gendata?2Cutl1d?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@GCED@Gendata?2Cutl1d?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@CJFO@Gendata?2Cutportr?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@GBMC@Gendata?2Cutportr?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@OKPO@Gendata?2Cutportl?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@KCGC@Gendata?2Cutportl?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@CBMK@Gendata?2Cut4?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@GJFG@Gendata?2Cut4?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@EBDA@Gendata?2Cut3?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@JKM@Gendata?2Cut3?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NFKJ@Gendata?2Cuttt?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@JNDF@Gendata?2Cuttt?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@FDJD@Gendata?2Cutstart?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLAP@Gendata?2Cutstart?4pal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@OOLJ@Unknown?5progress?5mode?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _interface_msg_pump
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _IncProgress
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DrawCutscene
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DrawProgress@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ShowProgress@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FreeInterface
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @InitCutscene@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_progress_bar_colours
PUBLIC	_progress_bar_screen_pos
_DATA	SEGMENT
COMM	_progress_id:DWORD
COMM	_sgpBackCel:DWORD
COMM	_sgdwProgress:DWORD
_DATA	ENDS
CONST	SEGMENT
_progress_bar_colours DB 08aH
	DB	02bH
	DB	0feH
	ORG $+1
_progress_bar_screen_pos DD 035H
	DD	025H
	DD	035H
	DD	01a5H
	DD	035H
	DD	025H
CONST	ENDS
PUBLIC	_interface_msg_pump
EXTRN	__imp__TranslateMessage@4:NEAR
EXTRN	__imp__DispatchMessageA@4:NEAR
EXTRN	__imp__PeekMessageA@20:NEAR
; Function compile flags: /Ogsy
;	COMDAT _interface_msg_pump
_TEXT	SEGMENT
_Msg$ = -28
_interface_msg_pump PROC NEAR				; COMDAT
; File Source/interfac.cpp
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
; Line 16
	mov	esi, DWORD PTR __imp__PeekMessageA@20
	push	edi
	xor	edi, edi
	jmp	SHORT $L84990
$L84988:
; Line 17
	cmp	DWORD PTR _Msg$[ebp+4], 18		; 00000012H
	je	SHORT $L84990
; Line 18
	lea	eax, DWORD PTR _Msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
; Line 19
	lea	eax, DWORD PTR _Msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageA@4
$L84990:
	push	1
	push	edi
	push	edi
	lea	eax, DWORD PTR _Msg$[ebp]
	push	edi
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $L84988
	pop	edi
	pop	esi
; Line 22
	leave
	ret	0
_interface_msg_pump ENDP
_TEXT	ENDS
PUBLIC	_IncProgress
PUBLIC	_DrawCutscene
; Function compile flags: /Ogsy
;	COMDAT _IncProgress
_TEXT	SEGMENT
_IncProgress PROC NEAR					; COMDAT
; Line 25
	push	esi
; Line 26
	call	_interface_msg_pump
; Line 27
	add	DWORD PTR _sgdwProgress, 15		; 0000000fH
; Line 28
	mov	esi, 534				; 00000216H
	cmp	DWORD PTR _sgdwProgress, esi
	jbe	SHORT $L84993
; Line 29
	mov	DWORD PTR _sgdwProgress, esi
$L84993:
; Line 30
	cmp	DWORD PTR _sgpBackCel, 0
	je	SHORT $L84994
; Line 31
	call	_DrawCutscene
$L84994:
; Line 32
	cmp	DWORD PTR _sgdwProgress, esi
	pop	esi
	sbb	eax, eax
	inc	eax
; Line 33
	ret	0
_IncProgress ENDP
_TEXT	ENDS
PUBLIC	@DrawProgress@12
EXTRN	@j_lock_buf_priv@4:NEAR
EXTRN	@j_unlock_buf_priv@4:NEAR
EXTRN	_drawpanflag:DWORD
EXTRN	@CelDecodeOnly@20:NEAR
EXTRN	@scrollrt_draw_game_screen@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _DrawCutscene
_TEXT	SEGMENT
_DrawCutscene PROC NEAR					; COMDAT
; Line 36
	push	esi
; Line 39
	mov	cl, 1
	call	@j_lock_buf_priv@4
; Line 40
	push	640					; 00000280H
	push	1
	push	DWORD PTR _sgpBackCel
	mov	edx, 639				; 0000027fH
	push	64					; 00000040H
	pop	ecx
	call	@CelDecodeOnly@20
; Line 41
	xor	esi, esi
; Line 42
	cmp	DWORD PTR _sgdwProgress, esi
	je	SHORT $L85001
$L84999:
; Line 47
	mov	edx, DWORD PTR _progress_id
	mov	eax, edx
	push	edx
	shl	eax, 3
	mov	ecx, DWORD PTR _progress_bar_screen_pos[eax]
	mov	edx, DWORD PTR _progress_bar_screen_pos[eax+4]
	add	edx, 160				; 000000a0H
	lea	ecx, DWORD PTR [ecx+esi+64]
	inc	esi
	call	@DrawProgress@12
; Line 48
	cmp	esi, DWORD PTR _sgdwProgress
	jb	SHORT $L84999
$L85001:
; Line 50
	mov	cl, 1
	call	@j_unlock_buf_priv@4
; Line 51
	mov	DWORD PTR _drawpanflag, 255		; 000000ffH
; Line 52
	xor	ecx, ecx
	pop	esi
	jmp	@scrollrt_draw_game_screen@4
_DrawCutscene ENDP
_TEXT	ENDS
EXTRN	_gpBuffer:DWORD
EXTRN	_screen_y_times_768:BYTE
; Function compile flags: /Ogsy
;	COMDAT @DrawProgress@12
_TEXT	SEGMENT
_progress_id$ = 8
@DrawProgress@12 PROC NEAR				; COMDAT
; _screen_x$ = ecx
; _screen_y$ = edx
; Line 61
	mov	eax, DWORD PTR _screen_y_times_768[edx*4]
	push	22					; 00000016H
	add	eax, DWORD PTR _gpBuffer
	add	eax, ecx
	pop	ecx
$L85012:
; Line 64
	mov	edx, DWORD PTR _progress_id$[esp-4]
	mov	dl, BYTE PTR _progress_bar_colours[edx]
	mov	BYTE PTR [eax], dl
; Line 65
	add	eax, 768				; 00000300H
; Line 67
	dec	ecx
	jne	SHORT $L85012
; Line 68
	ret	4
@DrawProgress@12 ENDP
_TEXT	ENDS
PUBLIC	@ShowProgress@4
PUBLIC	_FreeInterface
PUBLIC	@InitCutscene@4
EXTRN	_setlvltype:BYTE
EXTRN	_setlevel:BYTE
EXTRN	@plrmsg_delay@4:NEAR
EXTRN	_GetPortalLevel:NEAR
EXTRN	_gnLevelTypeTbl:BYTE
EXTRN	_FreeGameMem:NEAR
EXTRN	_PrepDoEnding:NEAR
EXTRN	_stream_update:NEAR
EXTRN	_DisableInputWndProc@16:NEAR
EXTRN	_SetReturnLvlPos:NEAR
EXTRN	_GetReturnLvlPos:NEAR
EXTRN	@LoadGame@4:NEAR
EXTRN	@LoadGameLevel@8:NEAR
EXTRN	@SetWindowProc@4:NEAR
EXTRN	_SaveLevel:NEAR
EXTRN	_ResetPal:NEAR
EXTRN	_BlackPalette:NEAR
EXTRN	@PaletteFadeIn@4:NEAR
EXTRN	@PaletteFadeOut@4:NEAR
EXTRN	_gbSomebodyWonGameKludge:BYTE
EXTRN	_gbMaxPlayers:BYTE
EXTRN	_ClearScreenBuffer:NEAR
EXTRN	_pfile_remove_temp_files:NEAR
EXTRN	_myplr:DWORD
EXTRN	_plr:BYTE
EXTRN	_DeltaSaveLevel:NEAR
EXTRN	@NetSendCmdLocParam1@20:NEAR
EXTRN	_leveltype:BYTE
EXTRN	_currlevel:BYTE
; Function compile flags: /Ogsy
;	COMDAT @ShowProgress@4
_TEXT	SEGMENT
@ShowProgress@4 PROC NEAR				; COMDAT
; _uMsg$ = ecx
; Line 78
	and	BYTE PTR _gbSomebodyWonGameKludge, 0
	push	ebx
; Line 79
	xor	ebx, ebx
	push	esi
	inc	ebx
	mov	esi, ecx
	push	edi
	mov	ecx, ebx
	call	@plrmsg_delay@4
; Line 80
	mov	ecx, OFFSET FLAT:_DisableInputWndProc@16
	call	@SetWindowProc@4
	mov	edi, eax
; Line 81
	call	_interface_msg_pump
; Line 82
	call	_ClearScreenBuffer
; Line 83
	mov	ecx, ebx
	call	@scrollrt_draw_game_screen@4
; Line 84
	mov	ecx, esi
	call	@InitCutscene@4
; Line 85
	call	_BlackPalette
; Line 86
	call	_DrawCutscene
; Line 87
	push	8
	pop	ecx
	call	@PaletteFadeIn@4
; Line 88
	call	_IncProgress
; Line 89
	call	_stream_update
; Line 90
	call	_IncProgress
; Line 91
	lea	eax, DWORD PTR [esi-1026]
	cmp	eax, 9
	ja	$L85059
	jmp	DWORD PTR $L85189[eax*4]
$L85027:
; Line 93
	call	_IncProgress
; Line 94
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85028
; Line 95
	call	_SaveLevel
; Line 96
	jmp	SHORT $L85029
$L85028:
; Line 97
	call	_DeltaSaveLevel
$L85029:
; Line 98
	call	_FreeGameMem
; Line 99
	inc	BYTE PTR _currlevel
	movzx	eax, BYTE PTR _currlevel
; Line 100
	jmp	$LABEL_38$85030
$L85031:
; Line 102
	call	_IncProgress
; Line 103
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85032
; Line 104
	call	_SaveLevel
; Line 105
	jmp	SHORT $L85033
$L85032:
; Line 106
	call	_DeltaSaveLevel
$L85033:
; Line 107
	call	_IncProgress
; Line 108
	call	_FreeGameMem
; Line 109
	dec	BYTE PTR _currlevel
	movzx	eax, BYTE PTR _currlevel
	mov	al, BYTE PTR _gnLevelTypeTbl[eax*4]
	mov	BYTE PTR _leveltype, al
; Line 110
	call	_IncProgress
; Line 111
	mov	eax, ebx
; Line 112
	jmp	$LABEL_33$85034
$L85035:
; Line 114
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85036
; Line 115
	call	_SaveLevel
; Line 116
	jmp	SHORT $L85037
$L85036:
; Line 117
	call	_DeltaSaveLevel
$L85037:
; Line 118
	and	BYTE PTR _setlevel, 0
; Line 119
	call	_FreeGameMem
; Line 120
	call	_IncProgress
; Line 121
	call	_GetReturnLvlPos
; Line 122
	push	3
; Line 123
	jmp	$L85188
$L85039:
; Line 125
	call	_SetReturnLvlPos
; Line 126
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85040
; Line 127
	call	_SaveLevel
; Line 128
	jmp	SHORT $L85041
$L85040:
; Line 129
	call	_DeltaSaveLevel
$L85041:
; Line 131
	mov	al, BYTE PTR _setlvltype
	mov	BYTE PTR _setlevel, bl
	mov	BYTE PTR _leveltype, al
; Line 132
	call	_FreeGameMem
; Line 133
	call	_IncProgress
; Line 134
	push	2
; Line 135
	jmp	$L85188
$L85042:
; Line 137
	call	_IncProgress
; Line 138
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85043
; Line 139
	call	_SaveLevel
; Line 140
	jmp	SHORT $L85044
$L85043:
; Line 141
	call	_DeltaSaveLevel
$L85044:
; Line 142
	call	_FreeGameMem
; Line 143
	call	_GetPortalLevel
; Line 144
	call	_IncProgress
; Line 145
	push	5
; Line 146
	jmp	$L85188
$L85045:
; Line 148
	call	_IncProgress
; Line 149
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85046
; Line 150
	call	_SaveLevel
; Line 151
	jmp	SHORT $L85047
$L85046:
; Line 152
	call	_DeltaSaveLevel
$L85047:
; Line 153
	call	_FreeGameMem
; Line 154
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	al, BYTE PTR _plr[eax+52]
	mov	BYTE PTR _currlevel, al
; Line 155
	movzx	eax, al
	mov	al, BYTE PTR _gnLevelTypeTbl[eax*4]
	mov	BYTE PTR _leveltype, al
; Line 156
	call	_IncProgress
; Line 157
	push	6
; Line 158
	jmp	SHORT $L85188
$L85048:
; Line 160
	call	_IncProgress
; Line 161
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85049
; Line 162
	call	_SaveLevel
; Line 163
	jmp	SHORT $L85050
$L85049:
; Line 164
	call	_DeltaSaveLevel
$L85050:
; Line 165
	call	_FreeGameMem
; Line 166
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	al, BYTE PTR _plr[eax+52]
	mov	BYTE PTR _currlevel, al
; Line 167
	movzx	eax, al
	mov	al, BYTE PTR _gnLevelTypeTbl[eax*4]
	mov	BYTE PTR _leveltype, al
; Line 168
	call	_IncProgress
; Line 169
	push	7
$L85188:
	pop	eax
$LABEL_33$85034:
$LABEL_32$85038:
; Line 173
	xor	ecx, ecx
; Line 174
	jmp	SHORT $LABEL_40$85051
$L85052:
; Line 176
	call	_IncProgress
; Line 177
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	SHORT $L85053
; Line 178
	call	_SaveLevel
; Line 179
	jmp	SHORT $L85054
$L85053:
; Line 180
	call	_DeltaSaveLevel
$L85054:
; Line 181
	call	_FreeGameMem
; Line 182
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	al, BYTE PTR _plr[eax+52]
	mov	BYTE PTR _currlevel, al
; Line 183
	movzx	eax, al
$LABEL_38$85030:
; Line 185
	mov	al, BYTE PTR _gnLevelTypeTbl[eax*4]
	mov	BYTE PTR _leveltype, al
; Line 186
	call	_IncProgress
; Line 187
	xor	ecx, ecx
; Line 188
	jmp	SHORT $LABEL_39$85055
$L85056:
; Line 190
	call	_IncProgress
; Line 191
	call	_FreeGameMem
; Line 192
	call	_IncProgress
; Line 193
	call	_pfile_remove_temp_files
; Line 194
	mov	ecx, ebx
$LABEL_39$85055:
; Line 196
	xor	eax, eax
$LABEL_40$85051:
; Line 198
	mov	edx, eax
	call	@LoadGameLevel@8
; Line 199
	jmp	SHORT $LABEL_41$85057
$L85058:
; Line 201
	call	_IncProgress
; Line 202
	mov	ecx, ebx
	call	@LoadGame@4
$LABEL_41$85057:
; Line 204
	call	_IncProgress
$L85059:
; Line 209
	push	8
	pop	ecx
	call	@PaletteFadeOut@4
; Line 210
	call	_FreeInterface
; Line 211
	mov	ecx, edi
	call	@SetWindowProc@4
; Line 212
	mov	eax, DWORD PTR _myplr
	mov	dl, 53					; 00000035H
	imul	eax, 21720				; 000054d8H
	mov	cx, WORD PTR _plr[eax+52]
	push	ecx
	mov	cl, BYTE PTR _plr[eax+60]
	mov	al, BYTE PTR _plr[eax+56]
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@NetSendCmdLocParam1@20
; Line 213
	xor	ecx, ecx
	call	@plrmsg_delay@4
; Line 214
	call	_ResetPal
; Line 215
	cmp	BYTE PTR _gbSomebodyWonGameKludge, 0
	pop	edi
	pop	esi
	pop	ebx
	je	SHORT $L85060
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	cmp	DWORD PTR _plr[eax+52], 16		; 00000010H
	jne	SHORT $L85060
; Line 216
	call	_PrepDoEnding
$L85060:
; Line 217
	and	BYTE PTR _gbSomebodyWonGameKludge, 0
; Line 218
	ret	0
$L85189:
	DD	$L85027
	DD	$L85031
	DD	$L85035
	DD	$L85039
	DD	$L85042
	DD	$L85045
	DD	$L85048
	DD	$L85052
	DD	$L85056
	DD	$L85058
@ShowProgress@4 ENDP
_TEXT	ENDS
EXTRN	@mem_free_dbg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _FreeInterface
_TEXT	SEGMENT
_FreeInterface PROC NEAR				; COMDAT
; Line 228
	mov	ecx, DWORD PTR _sgpBackCel
; Line 229
	and	DWORD PTR _sgpBackCel, 0
; Line 230
	jmp	@mem_free_dbg@4
_FreeInterface ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@DGOM@Gendata?2Cutgate?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BE@HOHA@Gendata?2Cutgate?4pal?$AA@	; `string'
PUBLIC	??_C@_0BB@OBBF@Gendata?2Cut2?4CEL?$AA@		; `string'
PUBLIC	??_C@_0BB@KJIJ@Gendata?2Cut2?4pal?$AA@		; `string'
PUBLIC	??_C@_0BD@CKNP@Gendata?2Cutl1d?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BD@GCED@Gendata?2Cutl1d?4pal?$AA@	; `string'
PUBLIC	??_C@_0BF@CJFO@Gendata?2Cutportr?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BF@GBMC@Gendata?2Cutportr?4pal?$AA@	; `string'
PUBLIC	??_C@_0BF@OKPO@Gendata?2Cutportl?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BF@KCGC@Gendata?2Cutportl?4pal?$AA@	; `string'
PUBLIC	??_C@_0BB@CBMK@Gendata?2Cut4?4CEL?$AA@		; `string'
PUBLIC	??_C@_0BB@GJFG@Gendata?2Cut4?4pal?$AA@		; `string'
PUBLIC	??_C@_0BB@EBDA@Gendata?2Cut3?4CEL?$AA@		; `string'
PUBLIC	??_C@_0BB@JKM@Gendata?2Cut3?4pal?$AA@		; `string'
PUBLIC	??_C@_0BC@NFKJ@Gendata?2Cuttt?4CEL?$AA@		; `string'
PUBLIC	??_C@_0BC@JNDF@Gendata?2Cuttt?4pal?$AA@		; `string'
PUBLIC	??_C@_0BF@FDJD@Gendata?2Cutstart?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BF@BLAP@Gendata?2Cutstart?4pal?$AA@	; `string'
PUBLIC	??_C@_0BG@OOLJ@Unknown?5progress?5mode?$AA@	; `string'
EXTRN	_setlvlnum:BYTE
EXTRN	@LoadPalette@4:NEAR
EXTRN	@LoadFileInMem@8:NEAR
EXTRN	_TermMsg:NEAR
;	COMDAT ??_C@_0BE@DGOM@Gendata?2Cutgate?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BE@DGOM@Gendata?2Cutgate?4CEL?$AA@ DB 'Gendata\Cutgate.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@HOHA@Gendata?2Cutgate?4pal?$AA@
_DATA	SEGMENT
??_C@_0BE@HOHA@Gendata?2Cutgate?4pal?$AA@ DB 'Gendata\Cutgate.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@CKNP@Gendata?2Cutl1d?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BD@CKNP@Gendata?2Cutl1d?4CEL?$AA@ DB 'Gendata\Cutl1d.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BD@GCED@Gendata?2Cutl1d?4pal?$AA@
_DATA	SEGMENT
??_C@_0BD@GCED@Gendata?2Cutl1d?4pal?$AA@ DB 'Gendata\Cutl1d.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@CJFO@Gendata?2Cutportr?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BF@CJFO@Gendata?2Cutportr?4CEL?$AA@ DB 'Gendata\Cutportr.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@GBMC@Gendata?2Cutportr?4pal?$AA@
_DATA	SEGMENT
??_C@_0BF@GBMC@Gendata?2Cutportr?4pal?$AA@ DB 'Gendata\Cutportr.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@OKPO@Gendata?2Cutportl?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BF@OKPO@Gendata?2Cutportl?4CEL?$AA@ DB 'Gendata\Cutportl.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@KCGC@Gendata?2Cutportl?4pal?$AA@
_DATA	SEGMENT
??_C@_0BF@KCGC@Gendata?2Cutportl?4pal?$AA@ DB 'Gendata\Cutportl.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OBBF@Gendata?2Cut2?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BB@OBBF@Gendata?2Cut2?4CEL?$AA@ DB 'Gendata\Cut2.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KJIJ@Gendata?2Cut2?4pal?$AA@
_DATA	SEGMENT
??_C@_0BB@KJIJ@Gendata?2Cut2?4pal?$AA@ DB 'Gendata\Cut2.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@CBMK@Gendata?2Cut4?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BB@CBMK@Gendata?2Cut4?4CEL?$AA@ DB 'Gendata\Cut4.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@GJFG@Gendata?2Cut4?4pal?$AA@
_DATA	SEGMENT
??_C@_0BB@GJFG@Gendata?2Cut4?4pal?$AA@ DB 'Gendata\Cut4.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@EBDA@Gendata?2Cut3?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BB@EBDA@Gendata?2Cut3?4CEL?$AA@ DB 'Gendata\Cut3.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@JKM@Gendata?2Cut3?4pal?$AA@
_DATA	SEGMENT
??_C@_0BB@JKM@Gendata?2Cut3?4pal?$AA@ DB 'Gendata\Cut3.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NFKJ@Gendata?2Cuttt?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BC@NFKJ@Gendata?2Cuttt?4CEL?$AA@ DB 'Gendata\Cuttt.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@JNDF@Gendata?2Cuttt?4pal?$AA@
_DATA	SEGMENT
??_C@_0BC@JNDF@Gendata?2Cuttt?4pal?$AA@ DB 'Gendata\Cuttt.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@FDJD@Gendata?2Cutstart?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BF@FDJD@Gendata?2Cutstart?4CEL?$AA@ DB 'Gendata\Cutstart.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLAP@Gendata?2Cutstart?4pal?$AA@
_DATA	SEGMENT
??_C@_0BF@BLAP@Gendata?2Cutstart?4pal?$AA@ DB 'Gendata\Cutstart.pal', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BG@OOLJ@Unknown?5progress?5mode?$AA@
_DATA	SEGMENT
??_C@_0BG@OOLJ@Unknown?5progress?5mode?$AA@ DB 'Unknown progress mode', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @InitCutscene@4
_TEXT	SEGMENT
@InitCutscene@4 PROC NEAR				; COMDAT
; _uMsg$ = ecx
; Line 250
	lea	eax, DWORD PTR [ecx-1026]
	push	edi
	cmp	eax, 9
	ja	$L85136
	xor	edi, edi
	inc	edi
	jmp	DWORD PTR $L85196[eax*4]
$L85084:
; Line 252
	mov	cl, BYTE PTR _currlevel
	movzx	eax, cl
	mov	eax, DWORD PTR _gnLevelTypeTbl[eax*4]
; Line 253
	test	eax, eax
	je	$LABEL_31$85086
; Line 255
	dec	eax
; Line 256
	test	eax, eax
	je	$LABEL_10$85088
; Line 258
	dec	eax
; Line 259
	test	eax, eax
	je	$LABEL_21$85113
; Line 261
	dec	eax
; Line 262
	test	eax, eax
	je	$LABEL_29$85092
; Line 264
	cmp	eax, edi
	jne	SHORT $LABEL_10$85088
; Line 266
	cmp	cl, 15					; 0000000fH
	jb	$LABEL_28$85095
; Line 268
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BE@DGOM@Gendata?2Cutgate?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 269
	mov	ecx, OFFSET FLAT:??_C@_0BE@HOHA@Gendata?2Cutgate?4pal?$AA@ ; `string'
; Line 270
	jmp	$LABEL_30$85098
$L85099:
; Line 272
	movzx	eax, BYTE PTR _currlevel
	lea	eax, DWORD PTR _gnLevelTypeTbl[eax*4]
; Line 273
	cmp	DWORD PTR [eax-4], 0
	je	$LABEL_31$85086
; Line 275
	mov	eax, DWORD PTR [eax]
; Line 276
	test	eax, eax
	je	$LABEL_31$85086
; Line 278
	dec	eax
; Line 279
	test	eax, eax
	je	SHORT $LABEL_10$85088
; Line 281
	dec	eax
; Line 282
	test	eax, eax
; Line 287
	je	$LABEL_21$85113
; Line 289
	dec	eax
; Line 290
	test	eax, eax
	je	$LABEL_29$85092
; Line 292
	cmp	eax, edi
	jne	SHORT $LABEL_10$85088
; Line 293
	jmp	$LABEL_28$85095
$L85111:
; Line 301
	mov	al, BYTE PTR _setlvlnum
	cmp	al, 2
	je	SHORT $LABEL_21$85113
; Line 303
	cmp	al, 5
	je	SHORT $L85114
$LABEL_10$85088:
; Line 295
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BD@CKNP@Gendata?2Cutl1d?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 296
	mov	ecx, OFFSET FLAT:??_C@_0BD@GCED@Gendata?2Cutl1d?4pal?$AA@ ; `string'
	mov	DWORD PTR _sgpBackCel, eax
	call	@LoadPalette@4
; Line 297
	and	DWORD PTR _progress_id, 0
; Line 298
	jmp	$LABEL_33$85106
$L85114:
; Line 305
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BF@CJFO@Gendata?2Cutportr?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 306
	mov	ecx, OFFSET FLAT:??_C@_0BF@GBMC@Gendata?2Cutportr?4pal?$AA@ ; `string'
; Line 307
	jmp	$LABEL_30$85098
$L85117:
; Line 309
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BF@OKPO@Gendata?2Cutportl?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 310
	mov	ecx, OFFSET FLAT:??_C@_0BF@KCGC@Gendata?2Cutportl?4pal?$AA@ ; `string'
; Line 311
	jmp	$LABEL_30$85098
$L85120:
; Line 314
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[eax+52]
	mov	eax, DWORD PTR _gnLevelTypeTbl[eax*4]
; Line 315
	test	eax, eax
	je	SHORT $LABEL_31$85086
; Line 317
	add	eax, -2					; fffffffeH
; Line 318
	test	eax, eax
	jne	SHORT $L85122
$LABEL_21$85113:
; Line 320
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BB@OBBF@Gendata?2Cut2?4CEL?$AA@ ; `string'
$LABEL_9$85090:
	call	@LoadFileInMem@8
; Line 321
	mov	ecx, OFFSET FLAT:??_C@_0BB@KJIJ@Gendata?2Cut2?4pal?$AA@ ; `string'
	mov	DWORD PTR _sgpBackCel, eax
	call	@LoadPalette@4
; Line 322
	mov	DWORD PTR _progress_id, 2
; Line 323
	jmp	SHORT $LABEL_33$85106
$L85122:
; Line 325
	dec	eax
; Line 326
	test	eax, eax
	je	SHORT $LABEL_29$85092
; Line 327
	cmp	eax, edi
	jne	SHORT $LABEL_33$85106
$LABEL_28$85095:
; Line 330
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BB@CBMK@Gendata?2Cut4?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 331
	mov	ecx, OFFSET FLAT:??_C@_0BB@GJFG@Gendata?2Cut4?4pal?$AA@ ; `string'
; Line 332
	jmp	SHORT $LABEL_30$85098
$LABEL_29$85092:
; Line 334
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BB@EBDA@Gendata?2Cut3?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 335
	mov	ecx, OFFSET FLAT:??_C@_0BB@JKM@Gendata?2Cut3?4pal?$AA@ ; `string'
	jmp	SHORT $LABEL_30$85098
$LABEL_31$85086:
; Line 346
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BC@NFKJ@Gendata?2Cuttt?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 347
	mov	ecx, OFFSET FLAT:??_C@_0BC@JNDF@Gendata?2Cuttt?4pal?$AA@ ; `string'
; Line 348
	jmp	SHORT $LABEL_30$85098
$L85133:
; Line 351
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BF@FDJD@Gendata?2Cutstart?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
; Line 352
	mov	ecx, OFFSET FLAT:??_C@_0BF@BLAP@Gendata?2Cutstart?4pal?$AA@ ; `string'
$LABEL_30$85098:
	mov	DWORD PTR _sgpBackCel, eax
	call	@LoadPalette@4
	mov	DWORD PTR _progress_id, edi
	jmp	SHORT $LABEL_33$85106
$L85136:
; Line 355
	push	OFFSET FLAT:??_C@_0BG@OOLJ@Unknown?5progress?5mode?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$LABEL_33$85106:
	and	DWORD PTR _sgdwProgress, 0
	pop	edi
; Line 358
	ret	0
$L85196:
	DD	$L85084
	DD	$L85099
	DD	$L85111
	DD	$L85111
	DD	$L85117
	DD	$L85120
	DD	$L85120
	DD	$LABEL_31$85086
	DD	$L85133
	DD	$L85133
@InitCutscene@4 ENDP
_TEXT	ENDS
END
