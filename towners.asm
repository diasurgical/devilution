; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/towners.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BJ@DFOA@Towners?2Smith?2SmithN?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@BCJM@Griswold?5the?5Blacksmith?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@LHPB@Towners?2TwnF?2TwnFN?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@NDJP@Ogden?5the?5Tavern?5owner?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@CCOB@Towners?2Butch?2Deadguy?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MMBP@Wounded?5Townsman?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@IJED@Towners?2TownWmn1?2Witch?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CPFC@Adria?5the?5Witch?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@GLEC@Towners?2TownWmn1?2WmnN?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@BFAJ@Gillian?5the?5Barmaid?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@GMIL@Towners?2TownBoy?2PegKid1?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@DLEO@Wirt?5the?5Peg?9legged?5boy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BK@MAKC@Towners?2Healer?2Healer?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NIBN@Pepin?5the?5Healer?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BO@FKJC@Towners?2Strytell?2Strytell?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@GLC@Cain?5the?5Elder?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HNOF@Towners?2Drunk?2TwnDrunk?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FOH@Farnham?5the?5Drunk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@IABO@Towners?2Animals?2Cow?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03NDNC@Cow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0P@MNCL@Slain?5Townsman?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT @GetActiveTowner@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetTownerGPtrs@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @NewTownerAnim@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @InitTownerInfo@32
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @InitQstSnds@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitSmith
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitBarOwner
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitTownDead
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitWitch
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitBarmaid
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitBoy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitHealer
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitTeller
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitDrunk
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitCows
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitTowners
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FreeTownerGFX
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @TownCtrlMsg@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownBlackSmith
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownBarOwner
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownDead
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownHealer
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownStory
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownDrunk
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownBoy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownWitch
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownBarMaid
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _TownCow
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ProcessTowners
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PlrHasItem@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @TownerTalk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @TalkToTowner@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CowSFX@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_Qtalklist
PUBLIC	_snSFX
PUBLIC	_AnimOrder
PUBLIC	_TownCowX
PUBLIC	_TownCowY
PUBLIC	_TownCowDir
PUBLIC	_cowoffx
PUBLIC	_cowoffy
PUBLIC	_CowPlaying
_DATA	SEGMENT
COMM	_towner:BYTE:0e80H
COMM	_storeflag:DWORD
COMM	_sgnCowMsg:DWORD
COMM	_numtowners:DWORD
COMM	_sgdwCowClicks:DWORD
COMM	_bannerflag:DWORD
COMM	_boyloadflag:DWORD
COMM	_pCowCels:DWORD
_DATA	ENDS
CONST	SEGMENT
_snSFX	DD	0303H
	DD	0296H
	DD	022fH
	DD	0300H
	DD	0293H
	DD	022cH
	DD	0301H
	DD	0294H
	DD	022dH
CONST	ENDS
_DATA	SEGMENT
_AnimOrder DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	05H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	0ffH
	ORG $+17
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	014H
	DB	013H
	DB	013H
	DB	014H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	014H
	DB	013H
	DB	013H
	DB	014H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	014H
	DB	013H
	DB	013H
	DB	014H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	014H
	DB	013H
	DB	013H
	DB	014H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	0ffH
	ORG $+39
	DB	01H
	DB	01H
	DB	019H
	DB	019H
	DB	018H
	DB	017H
	DB	016H
	DB	015H
	DB	014H
	DB	013H
	DB	012H
	DB	011H
	DB	010H
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	019H
	DB	019H
	DB	01H
	DB	01H
	DB	01H
	DB	019H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	09H
	DB	08H
	DB	07H
	DB	06H
	DB	05H
	DB	04H
	DB	03H
	DB	02H
	DB	01H
	DB	0ffH
	ORG $+88
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	02H
	DB	01H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	0ffH
	ORG $+37
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0bH
	DB	0bH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	012H
	DB	01H
	DB	01H
	DB	01H
	DB	012H
	DB	011H
	DB	010H
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	04H
	DB	03H
	DB	02H
	DB	0ffH
	ORG $+93
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	05H
	DB	04H
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	04H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	05H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	05H
	DB	04H
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	04H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	05H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	05H
	DB	04H
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	04H
	DB	05H
	DB	06H
	DB	06H
	DB	06H
	DB	05H
	DB	04H
	DB	03H
	DB	02H
	DB	01H
	DB	013H
	DB	012H
	DB	013H
	DB	01H
	DB	02H
	DB	01H
	DB	013H
	DB	012H
	DB	013H
	DB	01H
	DB	02H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0eH
	DB	0dH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0bH
	DB	0aH
	DB	0aH
	DB	0aH
	DB	09H
	DB	08H
	DB	09H
	DB	0aH
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	01H
	DB	02H
	DB	01H
	DB	013H
	DB	012H
	DB	013H
	DB	01H
	DB	02H
	DB	01H
	DB	02H
	DB	03H
	DB	0ffH
	ORG $+6
_TownCowX DD	03aH
	DD	038H
	DD	03bH
_TownCowY DD	010H
	DD	0eH
	DD	014H
_TownCowDir DD	01H
	DD	03H
	DD	04H
_cowoffx DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
_cowoffy DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	ORG $+4
_Qtalklist DD	074H
	DD	07eH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04dH
	DD	0ffffffffH
	DD	03bH
	DD	010H
	DD	045H
	DD	062H
	DD	059H
	DD	06aH
	DD	06H
	DD	02bH
	DD	033H
	DD	01fH
	DD	071H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04bH
	DD	0ffffffffH
	DD	039H
	DD	0eH
	DD	043H
	DD	060H
	DD	056H
	DD	068H
	DD	04H
	DD	028H
	DD	031H
	DD	01dH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	070H
	DD	07aH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04aH
	DD	0ffffffffH
	DD	038H
	DD	0ffffffffH
	DD	042H
	DD	05fH
	DD	055H
	DD	067H
	DD	02H
	DD	026H
	DD	030H
	DD	01aH
	DD	06fH
	DD	079H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	049H
	DD	019H
	DD	037H
	DD	0bH
	DD	041H
	DD	05eH
	DD	054H
	DD	066H
	DD	00H
	DD	025H
	DD	02fH
	DD	018H
	DD	076H
	DD	07fH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04eH
	DD	0ffffffffH
	DD	03cH
	DD	011H
	DD	046H
	DD	063H
	DD	05bH
	DD	06bH
	DD	07H
	DD	02cH
	DD	034H
	DD	020H
	DD	077H
	DD	081H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04fH
	DD	0ffffffffH
	DD	03dH
	DD	012H
	DD	047H
	DD	064H
	DD	05cH
	DD	06cH
	DD	08H
	DD	02dH
	DD	035H
	DD	021H
	DD	072H
	DD	07dH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04cH
	DD	0ffffffffH
	DD	03aH
	DD	0fH
	DD	044H
	DD	061H
	DD	057H
	DD	069H
	DD	05H
	DD	02aH
	DD	032H
	DD	01eH
	DD	078H
	DD	085H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	050H
	DD	0ffffffffH
	DD	03eH
	DD	013H
	DD	048H
	DD	065H
	DD	05dH
	DD	06dH
	DD	09H
	DD	02eH
	DD	036H
	DD	022H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_CowPlaying DD	0ffffffffH
_DATA	ENDS
PUBLIC	@GetActiveTowner@4
; Function compile flags: /Ogsy
;	COMDAT @GetActiveTowner@4
_TEXT	SEGMENT
@GetActiveTowner@4 PROC NEAR				; COMDAT
; _t$ = ecx
; File Source/towners.cpp
; Line 115
	mov	edx, DWORD PTR _numtowners
	xor	eax, eax
	test	edx, edx
	push	esi
	jle	SHORT $L85003
	mov	esi, OFFSET FLAT:_towner+4
$L85001:
; Line 116
	cmp	DWORD PTR [esi], ecx
	je	SHORT $L84999
	inc	eax
	add	esi, 232				; 000000e8H
	cmp	eax, edx
	jl	SHORT $L85001
$L85003:
; Line 120
	or	eax, -1
$L84999:
	pop	esi
; Line 121
	ret	0
@GetActiveTowner@4 ENDP
_TEXT	ENDS
PUBLIC	@SetTownerGPtrs@8
; Function compile flags: /Ogsy
;	COMDAT @SetTownerGPtrs@8
_TEXT	SEGMENT
@SetTownerGPtrs@8 PROC NEAR				; COMDAT
; _pData$ = ecx
; _pAnim$ = edx
; Line 124
	push	esi
	push	edi
	mov	eax, edx
; Line 127
	mov	esi, ecx
	push	8
	sub	esi, eax
	pop	edx
$L85011:
; Line 128
	mov	edi, DWORD PTR [esi+eax]
	add	edi, ecx
	mov	DWORD PTR [eax], edi
	add	eax, 4
	dec	edx
	jne	SHORT $L85011
	pop	edi
	pop	esi
; Line 130
	ret	0
@SetTownerGPtrs@8 ENDP
_TEXT	ENDS
PUBLIC	@NewTownerAnim@16
; Function compile flags: /Ogsy
;	COMDAT @NewTownerAnim@16
_TEXT	SEGMENT
_numFrames$ = 8
_Delay$ = 12
@NewTownerAnim@16 PROC NEAR				; COMDAT
; _tnum$ = ecx
; _pAnim$ = edx
; Line 134
	imul	ecx, 232				; 000000e8H
; Line 135
	mov	eax, DWORD PTR _numFrames$[esp-4]
	and	DWORD PTR _towner[ecx+44], 0
	mov	DWORD PTR _towner[ecx+48], eax
; Line 138
	mov	eax, DWORD PTR _Delay$[esp-4]
	mov	DWORD PTR _towner[ecx+36], edx
	mov	DWORD PTR _towner[ecx+52], 1
	mov	DWORD PTR _towner[ecx+40], eax
; Line 139
	ret	8
@NewTownerAnim@16 ENDP
_TEXT	ENDS
PUBLIC	@InitTownerInfo@32
EXTRN	_GetRndSeed:NEAR
EXTRN	_memset:NEAR
EXTRN	_dMonster:BYTE
; Function compile flags: /Ogsy
;	COMDAT @InitTownerInfo@32
_TEXT	SEGMENT
_sel$ = 8
_t$ = 12
_x$ = 16
_y$ = 20
_ao$ = 24
_tp$ = 28
@InitTownerInfo@32 PROC NEAR				; COMDAT
; _i$ = ecx
; _w$ = edx
; Line 142
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, ecx
	push	esi
; Line 143
	mov	esi, ebx
	imul	esi, 232				; 000000e8H
	push	edi
	push	232					; 000000e8H
	lea	eax, DWORD PTR _towner[esi]
	push	0
	push	eax
	mov	edi, edx
	call	_memset
; Line 144
	mov	eax, DWORD PTR _sel$[ebp]
; Line 150
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR _towner[esi+84], eax
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR _towner[esi+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _towner[esi+8], eax
; Line 151
	imul	eax, 112				; 00000070H
	and	DWORD PTR _towner[esi+88], 0
	mov	DWORD PTR _towner[esi+64], edi
	add	edi, -64				; ffffffc0H
	add	esp, 12					; 0000000cH
	sar	edi, 1
	add	eax, ecx
	inc	ebx
	mov	DWORD PTR _towner[esi+68], edi
	mov	DWORD PTR _towner[esi+12], ecx
	mov	DWORD PTR _dMonster[eax*4], ebx
; Line 152
	mov	al, BYTE PTR _ao$[ebp]
	mov	BYTE PTR _towner[esi+60], al
; Line 153
	mov	eax, DWORD PTR _tp$[ebp]
	mov	DWORD PTR _towner[esi+72], eax
; Line 154
	call	_GetRndSeed
	mov	DWORD PTR _towner[esi+140], eax
	pop	edi
	pop	esi
	pop	ebx
; Line 155
	pop	ebp
	ret	24					; 00000018H
@InitTownerInfo@32 ENDP
_TEXT	ENDS
PUBLIC	@InitQstSnds@4
EXTRN	_quests:BYTE
; Function compile flags: /Ogsy
;	COMDAT @InitQstSnds@4
_TEXT	SEGMENT
@InitQstSnds@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 166
	cmp	DWORD PTR _boyloadflag, 0
	mov	eax, ecx
	je	SHORT $L85050
; Line 167
	lea	eax, DWORD PTR [ecx+1]
$L85050:
; Line 168
	imul	ecx, 232				; 000000e8H
; Line 170
	shl	eax, 6
	push	esi
	add	ecx, OFFSET FLAT:_towner+94
	mov	esi, OFFSET FLAT:_quests+1
	add	eax, OFFSET FLAT:_Qtalklist
$L85052:
; Line 173
	mov	dl, BYTE PTR [esi]
	cmp	DWORD PTR [eax], -1
	mov	BYTE PTR [ecx-2], dl
; Line 174
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx-1], dl
; Line 175
	setne	dl
	mov	BYTE PTR [ecx], dl
; Line 176
	add	esi, 24					; 00000018H
; Line 177
	add	eax, 4
; Line 178
	add	ecx, 3
; Line 179
	cmp	esi, OFFSET FLAT:_quests+385
	jl	SHORT $L85052
	pop	esi
; Line 180
	ret	0
@InitQstSnds@4 ENDP
_TEXT	ENDS
PUBLIC	_InitSmith
PUBLIC	??_C@_0BJ@DFOA@Towners?2Smith?2SmithN?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BI@BCJM@Griswold?5the?5Blacksmith?$AA@	; `string'
EXTRN	@LoadFileInMem@8:NEAR
EXTRN	_strcpy:NEAR
;	COMDAT ??_C@_0BJ@DFOA@Towners?2Smith?2SmithN?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BJ@DFOA@Towners?2Smith?2SmithN?4CEL?$AA@ DB 'Towners\Smith\SmithN.'
	DB	'CEL', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@BCJM@Griswold?5the?5Blacksmith?$AA@
_DATA	SEGMENT
??_C@_0BI@BCJM@Griswold?5the?5Blacksmith?$AA@ DB 'Griswold the Blacksmith'
	DB	00H						; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitSmith
_TEXT	SEGMENT
_InitSmith PROC NEAR					; COMDAT
; Line 185
	push	esi
; Line 188
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	0
	push	63					; 0000003fH
	push	62					; 0000003eH
	push	0
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 189
	mov	esi, DWORD PTR _numtowners
; Line 190
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 191
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BJ@DFOA@Towners?2Smith?2SmithN?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	push	8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	pop	ecx
$L85063:
; Line 193
	mov	edx, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [eax], edx
	add	eax, 4
	dec	ecx
	jne	SHORT $L85063
; Line 196
	mov	edx, DWORD PTR _towner[esi+196]
	mov	ecx, DWORD PTR _numtowners
	push	16					; 00000010H
	pop	eax
	push	3
	push	eax
	mov	DWORD PTR _towner[esi+224], eax
	call	@NewTownerAnim@16
; Line 197
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BI@BCJM@Griswold?5the?5Blacksmith?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 198
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	esi
; Line 199
	ret	0
_InitSmith ENDP
_TEXT	ENDS
PUBLIC	_InitBarOwner
PUBLIC	??_C@_0BH@LHPB@Towners?2TwnF?2TwnFN?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BH@NDJP@Ogden?5the?5Tavern?5owner?$AA@	; `string'
;	COMDAT ??_C@_0BH@LHPB@Towners?2TwnF?2TwnFN?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BH@LHPB@Towners?2TwnF?2TwnFN?4CEL?$AA@ DB 'Towners\TwnF\TwnFN.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@NDJP@Ogden?5the?5Tavern?5owner?$AA@
_DATA	SEGMENT
??_C@_0BH@NDJP@Ogden?5the?5Tavern?5owner?$AA@ DB 'Ogden the Tavern owner', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitBarOwner
_TEXT	SEGMENT
_InitBarOwner PROC NEAR					; COMDAT
; Line 202
	push	esi
; Line 206
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	and	DWORD PTR _bannerflag, 0
	push	3
	push	62					; 0000003eH
	push	55					; 00000037H
	push	3
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 207
	mov	esi, DWORD PTR _numtowners
; Line 208
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 209
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BH@LHPB@Towners?2TwnF?2TwnFN?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	push	8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	pop	ecx
$L85071:
; Line 211
	mov	edx, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [eax], edx
	add	eax, 4
	dec	ecx
	jne	SHORT $L85071
; Line 214
	mov	edx, DWORD PTR _towner[esi+196]
	mov	ecx, DWORD PTR _numtowners
	push	16					; 00000010H
	pop	eax
	push	3
	push	eax
	mov	DWORD PTR _towner[esi+224], eax
	call	@NewTownerAnim@16
; Line 215
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BH@NDJP@Ogden?5the?5Tavern?5owner?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 216
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	esi
; Line 217
	ret	0
_InitBarOwner ENDP
_TEXT	ENDS
PUBLIC	_InitTownDead
PUBLIC	??_C@_0BK@CCOB@Towners?2Butch?2Deadguy?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BB@MMBP@Wounded?5Townsman?$AA@		; `string'
;	COMDAT ??_C@_0BK@CCOB@Towners?2Butch?2Deadguy?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BK@CCOB@Towners?2Butch?2Deadguy?4CEL?$AA@ DB 'Towners\Butch\Deadgu'
	DB	'y.CEL', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@MMBP@Wounded?5Townsman?$AA@
_DATA	SEGMENT
??_C@_0BB@MMBP@Wounded?5Townsman?$AA@ DB 'Wounded Townsman', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitTownDead
_TEXT	SEGMENT
_InitTownDead PROC NEAR					; COMDAT
; Line 221
	push	esi
	push	edi
; Line 224
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	-1
	push	32					; 00000020H
	push	24					; 00000018H
	push	2
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 225
	mov	esi, DWORD PTR _numtowners
; Line 226
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 227
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BK@CCOB@Towners?2Butch?2Deadguy?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	push	8
	mov	DWORD PTR _towner[esi+228], eax
	pop	edx
	lea	eax, DWORD PTR _towner[esi+192]
	mov	ecx, edx
$L85079:
; Line 229
	mov	edi, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [eax], edi
	add	eax, 4
	dec	ecx
	jne	SHORT $L85079
; Line 232
	mov	ecx, DWORD PTR _numtowners
	push	6
	mov	DWORD PTR _towner[esi+224], edx
	push	edx
	mov	edx, DWORD PTR _towner[esi+208]
	call	@NewTownerAnim@16
; Line 233
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BB@MMBP@Wounded?5Townsman?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 234
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
; Line 235
	ret	0
_InitTownDead ENDP
_TEXT	ENDS
PUBLIC	_InitWitch
PUBLIC	??_C@_0BL@IJED@Towners?2TownWmn1?2Witch?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BA@CPFC@Adria?5the?5Witch?$AA@		; `string'
;	COMDAT ??_C@_0BL@IJED@Towners?2TownWmn1?2Witch?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BL@IJED@Towners?2TownWmn1?2Witch?4CEL?$AA@ DB 'Towners\TownWmn1\Wi'
	DB	'tch.CEL', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CPFC@Adria?5the?5Witch?$AA@
_DATA	SEGMENT
??_C@_0BA@CPFC@Adria?5the?5Witch?$AA@ DB 'Adria the Witch', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitWitch
_TEXT	SEGMENT
_InitWitch PROC NEAR					; COMDAT
; Line 238
	push	esi
	push	edi
; Line 241
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	5
	push	20					; 00000014H
	push	80					; 00000050H
	push	6
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 242
	mov	esi, DWORD PTR _numtowners
; Line 243
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 244
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BL@IJED@Towners?2TownWmn1?2Witch?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	push	8
	mov	ecx, eax
	pop	edx
$L85087:
; Line 246
	mov	edi, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [ecx], edi
	add	ecx, 4
	dec	edx
	jne	SHORT $L85087
; Line 249
	mov	edx, DWORD PTR [eax]
	push	19					; 00000013H
	pop	ecx
	push	6
	mov	DWORD PTR _towner[esi+224], ecx
	push	ecx
	mov	ecx, DWORD PTR _numtowners
	call	@NewTownerAnim@16
; Line 250
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BA@CPFC@Adria?5the?5Witch?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 251
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
; Line 252
	ret	0
_InitWitch ENDP
_TEXT	ENDS
PUBLIC	_InitBarmaid
PUBLIC	??_C@_0BK@GLEC@Towners?2TownWmn1?2WmnN?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BE@BFAJ@Gillian?5the?5Barmaid?$AA@	; `string'
;	COMDAT ??_C@_0BK@GLEC@Towners?2TownWmn1?2WmnN?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BK@GLEC@Towners?2TownWmn1?2WmnN?4CEL?$AA@ DB 'Towners\TownWmn1\Wmn'
	DB	'N.CEL', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@BFAJ@Gillian?5the?5Barmaid?$AA@
_DATA	SEGMENT
??_C@_0BE@BFAJ@Gillian?5the?5Barmaid?$AA@ DB 'Gillian the Barmaid', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitBarmaid
_TEXT	SEGMENT
_InitBarmaid PROC NEAR					; COMDAT
; Line 255
	push	esi
	push	edi
; Line 258
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	-1
	push	66					; 00000042H
	push	43					; 0000002bH
	push	7
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 259
	mov	esi, DWORD PTR _numtowners
; Line 260
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 261
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BK@GLEC@Towners?2TownWmn1?2WmnN?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	push	8
	mov	ecx, eax
	pop	edx
$L85095:
; Line 263
	mov	edi, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [ecx], edi
	add	ecx, 4
	dec	edx
	jne	SHORT $L85095
; Line 266
	mov	edx, DWORD PTR [eax]
	push	18					; 00000012H
	pop	ecx
	push	6
	mov	DWORD PTR _towner[esi+224], ecx
	push	ecx
	mov	ecx, DWORD PTR _numtowners
	call	@NewTownerAnim@16
; Line 267
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BE@BFAJ@Gillian?5the?5Barmaid?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 268
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
; Line 269
	ret	0
_InitBarmaid ENDP
_TEXT	ENDS
PUBLIC	_InitBoy
PUBLIC	??_C@_0BM@GMIL@Towners?2TownBoy?2PegKid1?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BI@DLEO@Wirt?5the?5Peg?9legged?5boy?$AA@	; `string'
;	COMDAT ??_C@_0BM@GMIL@Towners?2TownBoy?2PegKid1?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BM@GMIL@Towners?2TownBoy?2PegKid1?4CEL?$AA@ DB 'Towners\TownBoy\Pe'
	DB	'gKid1.CEL', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@DLEO@Wirt?5the?5Peg?9legged?5boy?$AA@
_DATA	SEGMENT
??_C@_0BI@DLEO@Wirt?5the?5Peg?9legged?5boy?$AA@ DB 'Wirt the Peg-legged b'
	DB	'oy', 00H					; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitBoy
_TEXT	SEGMENT
_InitBoy PROC NEAR					; COMDAT
; Line 272
	push	esi
	push	edi
; Line 276
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	xor	eax, eax
	push	-1
	push	53					; 00000035H
	inc	eax
	push	11					; 0000000bH
	push	8
	push	eax
	push	96					; 00000060H
	pop	edx
	mov	DWORD PTR _boyloadflag, eax
	call	@InitTownerInfo@32
; Line 277
	mov	esi, DWORD PTR _numtowners
; Line 278
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 279
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BM@GMIL@Towners?2TownBoy?2PegKid1?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	push	8
	mov	ecx, eax
	pop	edx
$L85103:
; Line 281
	mov	edi, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [ecx], edi
	add	ecx, 4
	dec	edx
	jne	SHORT $L85103
; Line 284
	mov	edx, DWORD PTR [eax]
	push	20					; 00000014H
	pop	ecx
	push	6
	mov	DWORD PTR _towner[esi+224], ecx
	push	ecx
	mov	ecx, DWORD PTR _numtowners
	call	@NewTownerAnim@16
; Line 285
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BI@DLEO@Wirt?5the?5Peg?9legged?5boy?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 286
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
; Line 287
	ret	0
_InitBoy ENDP
_TEXT	ENDS
PUBLIC	_InitHealer
PUBLIC	??_C@_0BK@MAKC@Towners?2Healer?2Healer?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BB@NIBN@Pepin?5the?5Healer?$AA@		; `string'
;	COMDAT ??_C@_0BK@MAKC@Towners?2Healer?2Healer?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BK@MAKC@Towners?2Healer?2Healer?4CEL?$AA@ DB 'Towners\Healer\Heale'
	DB	'r.CEL', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NIBN@Pepin?5the?5Healer?$AA@
_DATA	SEGMENT
??_C@_0BB@NIBN@Pepin?5the?5Healer?$AA@ DB 'Pepin the Healer', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitHealer
_TEXT	SEGMENT
_InitHealer PROC NEAR					; COMDAT
; Line 291
	push	esi
; Line 294
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	1
	push	79					; 0000004fH
	push	55					; 00000037H
	push	1
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 295
	mov	esi, DWORD PTR _numtowners
; Line 296
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 297
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BK@MAKC@Towners?2Healer?2Healer?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	push	8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	pop	ecx
$L85111:
; Line 299
	mov	edx, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [eax], edx
	add	eax, 4
	dec	ecx
	jne	SHORT $L85111
; Line 302
	mov	edx, DWORD PTR _towner[esi+220]
	mov	ecx, DWORD PTR _numtowners
	push	20					; 00000014H
	pop	eax
	push	6
	push	eax
	mov	DWORD PTR _towner[esi+224], eax
	call	@NewTownerAnim@16
; Line 303
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BB@NIBN@Pepin?5the?5Healer?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 304
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	esi
; Line 305
	ret	0
_InitHealer ENDP
_TEXT	ENDS
PUBLIC	_InitTeller
PUBLIC	??_C@_0BO@FKJC@Towners?2Strytell?2Strytell?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0P@GLC@Cain?5the?5Elder?$AA@		; `string'
;	COMDAT ??_C@_0BO@FKJC@Towners?2Strytell?2Strytell?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BO@FKJC@Towners?2Strytell?2Strytell?4CEL?$AA@ DB 'Towners\Strytell'
	DB	'\Strytell.CEL', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0P@GLC@Cain?5the?5Elder?$AA@
_DATA	SEGMENT
??_C@_0P@GLC@Cain?5the?5Elder?$AA@ DB 'Cain the Elder', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitTeller
_TEXT	SEGMENT
_InitTeller PROC NEAR					; COMDAT
; Line 308
	push	esi
	push	edi
; Line 311
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	2
	push	71					; 00000047H
	push	62					; 0000003eH
	push	4
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 312
	mov	esi, DWORD PTR _numtowners
; Line 313
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 314
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BO@FKJC@Towners?2Strytell?2Strytell?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	push	8
	mov	ecx, eax
	pop	edx
$L85119:
; Line 316
	mov	edi, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [ecx], edi
	add	ecx, 4
	dec	edx
	jne	SHORT $L85119
; Line 319
	mov	edx, DWORD PTR [eax]
	push	25					; 00000019H
	pop	ecx
	push	3
	mov	DWORD PTR _towner[esi+224], ecx
	push	ecx
	mov	ecx, DWORD PTR _numtowners
	call	@NewTownerAnim@16
; Line 320
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0P@GLC@Cain?5the?5Elder?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 321
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
; Line 322
	ret	0
_InitTeller ENDP
_TEXT	ENDS
PUBLIC	_InitDrunk
PUBLIC	??_C@_0BL@HNOF@Towners?2Drunk?2TwnDrunk?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BC@FOH@Farnham?5the?5Drunk?$AA@		; `string'
;	COMDAT ??_C@_0BL@HNOF@Towners?2Drunk?2TwnDrunk?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BL@HNOF@Towners?2Drunk?2TwnDrunk?4CEL?$AA@ DB 'Towners\Drunk\TwnDr'
	DB	'unk.CEL', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FOH@Farnham?5the?5Drunk?$AA@
_DATA	SEGMENT
??_C@_0BC@FOH@Farnham?5the?5Drunk?$AA@ DB 'Farnham the Drunk', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitDrunk
_TEXT	SEGMENT
_InitDrunk PROC NEAR					; COMDAT
; Line 325
	push	esi
	push	edi
; Line 328
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _numtowners
	push	4
	push	84					; 00000054H
	push	71					; 00000047H
	push	5
	push	1
	push	96					; 00000060H
	pop	edx
	call	@InitTownerInfo@32
; Line 329
	mov	esi, DWORD PTR _numtowners
; Line 330
	mov	ecx, esi
	call	@InitQstSnds@4
; Line 331
	imul	esi, 232				; 000000e8H
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BL@HNOF@Towners?2Drunk?2TwnDrunk?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	DWORD PTR _towner[esi+228], eax
	lea	eax, DWORD PTR _towner[esi+192]
	push	8
	mov	ecx, eax
	pop	edx
$L85127:
; Line 333
	mov	edi, DWORD PTR _towner[esi+228]
	mov	DWORD PTR [ecx], edi
	add	ecx, 4
	dec	edx
	jne	SHORT $L85127
; Line 336
	mov	edx, DWORD PTR [eax]
	push	18					; 00000012H
	pop	ecx
	push	3
	mov	DWORD PTR _towner[esi+224], ecx
	push	ecx
	mov	ecx, DWORD PTR _numtowners
	call	@NewTownerAnim@16
; Line 337
	lea	eax, DWORD PTR _towner[esi+160]
	push	OFFSET FLAT:??_C@_0BC@FOH@Farnham?5the?5Drunk?$AA@ ; `string'
	push	eax
	call	_strcpy
; Line 338
	inc	DWORD PTR _numtowners
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
; Line 339
	ret	0
_InitDrunk ENDP
_TEXT	ENDS
PUBLIC	_InitCows
PUBLIC	??_C@_0BI@IABO@Towners?2Animals?2Cow?4CEL?$AA@	; `string'
PUBLIC	??_C@_03NDNC@Cow?$AA@				; `string'
EXTRN	@random@8:NEAR
;	COMDAT ??_C@_0BI@IABO@Towners?2Animals?2Cow?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BI@IABO@Towners?2Animals?2Cow?4CEL?$AA@ DB 'Towners\Animals\Cow.CE'
	DB	'L', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_03NDNC@Cow?$AA@
_DATA	SEGMENT
??_C@_03NDNC@Cow?$AA@ DB 'Cow', 00H			; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitCows
_TEXT	SEGMENT
_tnum$ = -4
_InitCows PROC NEAR					; COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 346
	xor	edx, edx
	mov	ecx, OFFSET FLAT:??_C@_0BI@IABO@Towners?2Animals?2Cow?4CEL?$AA@ ; `string'
	call	@LoadFileInMem@8
	mov	DWORD PTR _pCowCels, eax
; Line 347
	xor	edi, edi
$L85140:
; Line 349
	push	10					; 0000000aH
	push	-1
	push	DWORD PTR _TownCowY[edi]
	mov	ecx, DWORD PTR _numtowners
	mov	ebx, DWORD PTR _TownCowDir[edi]
	mov	edx, 128				; 00000080H
	push	DWORD PTR _TownCowX[edi]
	push	9
	push	0
	call	@InitTownerInfo@32
; Line 350
	mov	esi, DWORD PTR _numtowners
; Line 351
	mov	ecx, DWORD PTR _pCowCels
	mov	DWORD PTR _tnum$[ebp], esi
	imul	esi, 232				; 000000e8H
	lea	eax, DWORD PTR _towner[esi+228]
; Line 352
	lea	edx, DWORD PTR _towner[esi+192]
	mov	DWORD PTR [eax], ecx
	call	@SetTownerGPtrs@8
; Line 353
	push	12					; 0000000cH
; Line 354
	mov	ecx, DWORD PTR _numtowners
	pop	eax
	push	3
	mov	DWORD PTR _towner[esi+224], eax
	push	eax
	mov	eax, DWORD PTR _tnum$[ebp]
	imul	eax, 58					; 0000003aH
	add	eax, ebx
	mov	edx, DWORD PTR _towner[eax*4+192]
	call	@NewTownerAnim@16
; Line 355
	push	11					; 0000000bH
	xor	cl, cl
	pop	edx
	call	@random@8
	inc	eax
; Line 357
	push	OFFSET FLAT:??_C@_03NDNC@Cow?$AA@	; `string'
	mov	DWORD PTR _towner[esi+52], eax
	lea	eax, DWORD PTR _towner[esi+160]
	push	eax
	mov	DWORD PTR _towner[esi+84], 1
	call	_strcpy
	pop	ecx
; Line 359
	mov	eax, DWORD PTR _TownCowX[edi]
	pop	ecx
; Line 360
	mov	esi, DWORD PTR _TownCowY[edi]
; Line 361
	mov	ecx, ebx
	shl	ecx, 2
	mov	edx, DWORD PTR _cowoffx[ecx]
; Line 362
	mov	ecx, DWORD PTR _cowoffy[ecx]
	add	edx, eax
; Line 363
	imul	eax, 112				; 00000070H
	add	ecx, esi
	add	eax, ecx
	lea	eax, DWORD PTR _dMonster[eax*4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L85145
; Line 364
	or	ebx, -1
	sub	ebx, DWORD PTR _tnum$[ebp]
	mov	DWORD PTR [eax], ebx
$L85145:
; Line 365
	imul	edx, 112				; 00000070H
	lea	eax, DWORD PTR [edx+esi]
	lea	eax, DWORD PTR _dMonster[eax*4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L85146
; Line 366
	or	esi, -1
	sub	esi, DWORD PTR _tnum$[ebp]
	mov	DWORD PTR [eax], esi
$L85146:
; Line 367
	add	edx, ecx
	lea	eax, DWORD PTR _dMonster[edx*4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $L85147
; Line 368
	or	ecx, -1
	sub	ecx, DWORD PTR _tnum$[ebp]
	mov	DWORD PTR [eax], ecx
$L85147:
; Line 370
	mov	eax, DWORD PTR _tnum$[ebp]
	add	edi, 4
	inc	eax
	cmp	edi, 12					; 0000000cH
	mov	DWORD PTR _numtowners, eax
	jl	$L85140
	pop	edi
	pop	esi
	pop	ebx
; Line 373
	leave
	ret	0
_InitCows ENDP
_TEXT	ENDS
PUBLIC	_InitTowners
; Function compile flags: /Ogsy
;	COMDAT _InitTowners
_TEXT	SEGMENT
_InitTowners PROC NEAR					; COMDAT
; Line 378
	and	DWORD PTR _numtowners, 0
; Line 379
	and	DWORD PTR _boyloadflag, 0
; Line 380
	call	_InitSmith
; Line 381
	call	_InitHealer
; Line 382
	mov	al, BYTE PTR _quests+146
	test	al, al
	je	SHORT $L85149
	cmp	al, 3
	je	SHORT $L85149
; Line 383
	call	_InitTownDead
$L85149:
; Line 384
	call	_InitBarOwner
; Line 385
	call	_InitTeller
; Line 386
	call	_InitDrunk
; Line 387
	call	_InitWitch
; Line 388
	call	_InitBarmaid
; Line 389
	call	_InitBoy
; Line 390
	jmp	_InitCows
_InitTowners ENDP
_TEXT	ENDS
PUBLIC	_FreeTownerGFX
EXTRN	@mem_free_dbg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _FreeTownerGFX
_TEXT	SEGMENT
_FreeTownerGFX PROC NEAR				; COMDAT
; Line 395
	push	esi
; Line 399
	mov	esi, OFFSET FLAT:_towner+228
$L85153:
; Line 400
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR _pCowCels
	jne	SHORT $L85156
; Line 401
	and	DWORD PTR [esi], 0
; Line 402
	jmp	SHORT $L85154
$L85156:
	test	ecx, ecx
	je	SHORT $L85154
; Line 404
	and	DWORD PTR [esi], 0
; Line 405
	call	@mem_free_dbg@4
$L85154:
	add	esi, 232				; 000000e8H
	cmp	esi, OFFSET FLAT:_towner+3940
	jl	SHORT $L85153
; Line 409
	mov	ecx, DWORD PTR _pCowCels
; Line 410
	and	DWORD PTR _pCowCels, 0
	pop	esi
; Line 411
	jmp	@mem_free_dbg@4
_FreeTownerGFX ENDP
_TEXT	ENDS
PUBLIC	@TownCtrlMsg@4
EXTRN	_sfx_stop:NEAR
EXTRN	_abs:NEAR
EXTRN	_qtextflag:BYTE
EXTRN	_plr:BYTE
; Function compile flags: /Ogsy
;	COMDAT @TownCtrlMsg@4
_TEXT	SEGMENT
@TownCtrlMsg@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 415
	push	esi
	mov	esi, ecx
; Line 419
	imul	esi, 232				; 000000e8H
	cmp	DWORD PTR _towner[esi+80], 0
	je	SHORT $L85171
	push	ebx
	push	edi
; Line 420
	mov	edi, DWORD PTR _towner[esi+144]
; Line 421
	mov	eax, DWORD PTR _towner[esi+8]
	imul	edi, 21720				; 000054d8H
	sub	eax, DWORD PTR _plr[edi+56]
	push	eax
	call	_abs
	mov	ebx, eax
; Line 422
	mov	eax, DWORD PTR _towner[esi+12]
	sub	eax, DWORD PTR _plr[edi+60]
	push	eax
	call	_abs
	pop	ecx
; Line 423
	cmp	ebx, 2
	pop	ecx
	pop	edi
	pop	ebx
	jge	SHORT $L85170
	cmp	eax, 2
	jl	SHORT $L85169
$L85170:
; Line 424
	and	DWORD PTR _towner[esi+80], 0
$L85169:
; Line 425
	cmp	DWORD PTR _towner[esi+80], 0
	jne	SHORT $L85171
; Line 426
	and	BYTE PTR _qtextflag, 0
	pop	esi
; Line 427
	jmp	_sfx_stop
$L85171:
	pop	esi
; Line 430
	ret	0
@TownCtrlMsg@4 ENDP
_TEXT	ENDS
PUBLIC	_TownBlackSmith
; Function compile flags: /Ogsy
;	COMDAT _TownBlackSmith
_TEXT	SEGMENT
_TownBlackSmith PROC NEAR				; COMDAT
; Line 437
	xor	ecx, ecx
	call	@GetActiveTowner@4
; Line 438
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownBlackSmith ENDP
_TEXT	ENDS
PUBLIC	_TownBarOwner
; Function compile flags: /Ogsy
;	COMDAT _TownBarOwner
_TEXT	SEGMENT
_TownBarOwner PROC NEAR					; COMDAT
; Line 445
	push	3
	pop	ecx
	call	@GetActiveTowner@4
; Line 446
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownBarOwner ENDP
_TEXT	ENDS
PUBLIC	_TownDead
PUBLIC	??_C@_0P@MNCL@Slain?5Townsman?$AA@		; `string'
;	COMDAT ??_C@_0P@MNCL@Slain?5Townsman?$AA@
_DATA	SEGMENT
??_C@_0P@MNCL@Slain?5Townsman?$AA@ DB 'Slain Townsman', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _TownDead
_TEXT	SEGMENT
_TownDead PROC NEAR					; COMDAT
; Line 450
	push	esi
; Line 454
	push	2
	pop	ecx
	call	@GetActiveTowner@4
	mov	esi, eax
; Line 455
	mov	ecx, esi
	call	@TownCtrlMsg@4
; Line 456
	cmp	BYTE PTR _qtextflag, 0
	jne	SHORT $LABEL_6$85180
; Line 458
	mov	al, BYTE PTR _quests+146
	cmp	al, 2
	jne	SHORT $L85182
	cmp	DWORD PTR _quests+164, 0
	je	SHORT $L85184
$L85182:
	cmp	al, 1
	je	SHORT $L85184
; Line 460
	mov	eax, esi
; Line 462
	push	OFFSET FLAT:??_C@_0P@MNCL@Slain?5Townsman?$AA@ ; `string'
	imul	eax, 232				; 000000e8H
	mov	DWORD PTR _towner[eax+40], 1000		; 000003e8H
	mov	DWORD PTR _towner[eax+52], 1
	lea	eax, DWORD PTR _towner[eax+160]
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
$LABEL_6$85180:
; Line 464
	cmp	BYTE PTR _quests+146, 1
	je	SHORT $L85184
; Line 465
	imul	esi, 232				; 000000e8H
	and	DWORD PTR _towner[esi+44], 0
$L85184:
	pop	esi
; Line 467
	ret	0
_TownDead ENDP
_TEXT	ENDS
PUBLIC	_TownHealer
; Function compile flags: /Ogsy
;	COMDAT _TownHealer
_TEXT	SEGMENT
_TownHealer PROC NEAR					; COMDAT
; Line 474
	xor	ecx, ecx
	inc	ecx
	call	@GetActiveTowner@4
; Line 475
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownHealer ENDP
_TEXT	ENDS
PUBLIC	_TownStory
; Function compile flags: /Ogsy
;	COMDAT _TownStory
_TEXT	SEGMENT
_TownStory PROC NEAR					; COMDAT
; Line 482
	push	4
	pop	ecx
	call	@GetActiveTowner@4
; Line 483
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownStory ENDP
_TEXT	ENDS
PUBLIC	_TownDrunk
; Function compile flags: /Ogsy
;	COMDAT _TownDrunk
_TEXT	SEGMENT
_TownDrunk PROC NEAR					; COMDAT
; Line 490
	push	5
	pop	ecx
	call	@GetActiveTowner@4
; Line 491
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownDrunk ENDP
_TEXT	ENDS
PUBLIC	_TownBoy
; Function compile flags: /Ogsy
;	COMDAT _TownBoy
_TEXT	SEGMENT
_TownBoy PROC NEAR					; COMDAT
; Line 498
	push	8
	pop	ecx
	call	@GetActiveTowner@4
; Line 499
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownBoy ENDP
_TEXT	ENDS
PUBLIC	_TownWitch
; Function compile flags: /Ogsy
;	COMDAT _TownWitch
_TEXT	SEGMENT
_TownWitch PROC NEAR					; COMDAT
; Line 506
	push	6
	pop	ecx
	call	@GetActiveTowner@4
; Line 507
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownWitch ENDP
_TEXT	ENDS
PUBLIC	_TownBarMaid
; Function compile flags: /Ogsy
;	COMDAT _TownBarMaid
_TEXT	SEGMENT
_TownBarMaid PROC NEAR					; COMDAT
; Line 514
	push	7
	pop	ecx
	call	@GetActiveTowner@4
; Line 515
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownBarMaid ENDP
_TEXT	ENDS
PUBLIC	_TownCow
; Function compile flags: /Ogsy
;	COMDAT _TownCow
_TEXT	SEGMENT
_TownCow PROC NEAR					; COMDAT
; Line 522
	push	9
	pop	ecx
	call	@GetActiveTowner@4
; Line 523
	mov	ecx, eax
	jmp	@TownCtrlMsg@4
_TownCow ENDP
_TEXT	ENDS
PUBLIC	_ProcessTowners
; Function compile flags: /Ogsy
;	COMDAT _ProcessTowners
_TEXT	SEGMENT
_ProcessTowners PROC NEAR				; COMDAT
; Line 527
	push	esi
; Line 530
	mov	esi, OFFSET FLAT:_towner+44
$L85202:
; Line 531
	mov	eax, DWORD PTR [esi-40]
	cmp	eax, 9
	ja	SHORT $L85206
	jmp	DWORD PTR $L85558[eax*4]
$L85209:
; Line 533
	call	_TownBlackSmith
; Line 534
	jmp	SHORT $L85206
$L85210:
; Line 536
	call	_TownHealer
; Line 537
	jmp	SHORT $L85206
$L85211:
; Line 539
	call	_TownDead
; Line 540
	jmp	SHORT $L85206
$L85212:
; Line 542
	call	_TownBarOwner
; Line 543
	jmp	SHORT $L85206
$L85213:
; Line 545
	call	_TownStory
; Line 546
	jmp	SHORT $L85206
$L85214:
; Line 548
	call	_TownDrunk
; Line 549
	jmp	SHORT $L85206
$L85215:
; Line 551
	call	_TownWitch
; Line 552
	jmp	SHORT $L85206
$L85216:
; Line 554
	call	_TownBarMaid
; Line 555
	jmp	SHORT $L85206
$L85217:
; Line 557
	call	_TownBoy
; Line 558
	jmp	SHORT $L85206
$L85218:
; Line 560
	call	_TownCow
$L85206:
; Line 564
	inc	DWORD PTR [esi]
	mov	eax, DWORD PTR [esi]
; Line 565
	cmp	eax, DWORD PTR [esi-4]
	jl	SHORT $L85203
; Line 568
	mov	al, BYTE PTR [esi+16]
	and	DWORD PTR [esi], 0
	test	al, al
	jl	SHORT $L85220
; Line 569
	movsx	ecx, al
; Line 571
	imul	ecx, 148				; 00000094H
	lea	eax, DWORD PTR [esi+12]
	inc	DWORD PTR [eax]
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR _AnimOrder[edx+ecx], -1
	jne	SHORT $L85221
; Line 572
	and	DWORD PTR [eax], 0
$L85221:
; Line 574
	mov	eax, DWORD PTR [eax]
	movsx	eax, BYTE PTR _AnimOrder[eax+ecx]
	mov	DWORD PTR [esi+8], eax
; Line 575
	jmp	SHORT $L85203
$L85220:
; Line 576
	inc	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi+8]
; Line 577
	cmp	eax, DWORD PTR [esi+4]
	jle	SHORT $L85203
; Line 578
	mov	DWORD PTR [esi+8], 1
$L85203:
; Line 530
	add	esi, 232				; 000000e8H
	cmp	esi, OFFSET FLAT:_towner+3756
	jl	$L85202
	pop	esi
; Line 582
	ret	0
$L85558:
	DD	$L85209
	DD	$L85210
	DD	$L85211
	DD	$L85212
	DD	$L85213
	DD	$L85214
	DD	$L85215
	DD	$L85216
	DD	$L85217
	DD	$L85218
_ProcessTowners ENDP
_TEXT	ENDS
PUBLIC	@PlrHasItem@12
; Function compile flags: /Ogsy
;	COMDAT @PlrHasItem@12
_TEXT	SEGMENT
_inv_item_num$ = 8
@PlrHasItem@12 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _item$ = edx
; Line 585
	mov	eax, ecx
	push	esi
; Line 588
	mov	esi, DWORD PTR _inv_item_num$[esp]
	imul	eax, 21720				; 000054d8H
	and	DWORD PTR [esi], 0
	cmp	DWORD PTR _plr[eax+18188], 0
	push	edi
	jle	SHORT $L85234
$L85232:
; Line 589
	mov	ecx, DWORD PTR [esi]
	mov	edi, ecx
	imul	edi, 368				; 00000170H
	cmp	DWORD PTR _plr[edi+eax+3828], edx
	je	SHORT $L85563
	inc	ecx
	mov	DWORD PTR [esi], ecx
	cmp	ecx, DWORD PTR _plr[eax+18188]
	jl	SHORT $L85232
$L85234:
; Line 593
	xor	eax, eax
$L85230:
	pop	edi
	pop	esi
; Line 594
	ret	4
$L85563:
	mov	ecx, DWORD PTR [esi]
	imul	ecx, 368				; 00000170H
	lea	eax, DWORD PTR _plr[ecx+eax+3468]
	jmp	SHORT $L85230
@PlrHasItem@12 ENDP
_TEXT	ENDS
PUBLIC	@TownerTalk@4
EXTRN	@InitQTextMsg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @TownerTalk@4
_TEXT	SEGMENT
@TownerTalk@4 PROC NEAR					; COMDAT
; _t$ = ecx
; Line 598
	and	DWORD PTR _sgdwCowClicks, 0
; Line 599
	and	DWORD PTR _sgnCowMsg, 0
; Line 600
	mov	DWORD PTR _storeflag, 1
; Line 601
	jmp	@InitQTextMsg@4
@TownerTalk@4 ENDP
_TEXT	ENDS
PUBLIC	@TalkToTowner@8
PUBLIC	@CowSFX@4
EXTRN	_AllItemsList:BYTE
EXTRN	_pcurs:DWORD
EXTRN	@effect_is_playing@4:NEAR
EXTRN	@PlaySFX@4:NEAR
EXTRN	@RemoveInvItem@8:NEAR
EXTRN	_gbMaxPlayers:BYTE
EXTRN	_DropItemBeforeTrig:NEAR
EXTRN	@CreateItem@12:NEAR
EXTRN	@SpawnQuestItem@20:NEAR
EXTRN	@NetSendCmdQuest@8:NEAR
EXTRN	@StartStore@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @TalkToTowner@8
_TEXT	SEGMENT
_t$ = -4
_inv_item_num$ = -8
@TalkToTowner@8 PROC NEAR				; COMDAT
; _p$ = ecx
; _t$ = edx
; Line 606
	push	ecx
	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 629
	push	3
	mov	ebx, edx
	mov	edi, ecx
	pop	edx
	mov	cl, 6
	mov	DWORD PTR _t$[esp+24], ebx
	call	@random@8
; Line 630
	mov	cl, 6
	push	4
	pop	edx
	call	@random@8
; Line 631
	mov	cl, 6
	push	5
	pop	edx
	call	@random@8
; Line 634
	mov	ebp, edi
	mov	esi, ebx
	imul	ebp, 21720				; 000054d8H
	imul	esi, 232				; 000000e8H
	mov	eax, DWORD PTR _plr[ebp+56]
	sub	eax, DWORD PTR _towner[esi+8]
	push	eax
	call	_abs
	mov	DWORD PTR _inv_item_num$[esp+28], eax
; Line 635
	mov	eax, DWORD PTR _plr[ebp+60]
	sub	eax, DWORD PTR _towner[esi+12]
	push	eax
	call	_abs
; Line 636
	cmp	DWORD PTR _inv_item_num$[esp+32], 2
	pop	ecx
	pop	ecx
	jge	$L85369
; Line 638
	cmp	eax, 2
	jge	$L85369
; Line 640
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 642
	and	DWORD PTR _towner[esi+88], 0
; Line 643
	cmp	DWORD PTR _pcurs, 12			; 0000000cH
	jl	SHORT $L85261
	call	_DropItemBeforeTrig
	test	eax, eax
	je	$L85369
$L85261:
; Line 645
	push	3
	pop	ecx
	call	@GetActiveTowner@4
	cmp	ebx, eax
	jne	$L85262
; Line 646
	xor	ebx, ebx
	inc	ebx
	cmp	BYTE PTR _plr[ebp+500], 0
	jne	SHORT $L85263
	cmp	DWORD PTR _towner[esi+88], 0
	jne	SHORT $L85263
; Line 649
	mov	ecx, 258				; 00000102H
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 650
	mov	DWORD PTR _towner[esi+88], ebx
$L85263:
; Line 652
	cmp	BYTE PTR _plr[ebp+502], 0
	jne	SHORT $L85265
	cmp	BYTE PTR _plr[ebp+504], 0
	je	$L85268
$L85265:
	mov	al, BYTE PTR _quests+290
	test	al, al
	je	$L85268
; Line 653
	cmp	BYTE PTR _quests+304, 0
	jne	SHORT $L85266
	cmp	DWORD PTR _towner[esi+88], 0
	jne	SHORT $L85266
; Line 656
	cmp	al, bl
	mov	BYTE PTR _quests+304, bl
	mov	DWORD PTR _quests+308, ebx
	jne	SHORT $L85267
; Line 657
	mov	BYTE PTR _quests+290, 2
; Line 658
	mov	BYTE PTR _quests+303, bl
$L85267:
; Line 662
	mov	ecx, ebx
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 664
	mov	dl, 12					; 0000000cH
	mov	ecx, ebx
	mov	DWORD PTR _towner[esi+88], ebx
	call	@NetSendCmdQuest@8
$L85266:
; Line 666
	cmp	BYTE PTR _quests+290, 3
	jne	SHORT $L85268
	cmp	BYTE PTR _quests+304, bl
	jne	SHORT $L85268
	cmp	DWORD PTR _towner[esi+88], 0
	jne	SHORT $L85268
; Line 671
	push	3
	mov	BYTE PTR _quests+304, 2
	pop	ecx
	mov	BYTE PTR _quests+303, 2
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 673
	mov	dl, 12					; 0000000cH
	mov	ecx, ebx
	mov	DWORD PTR _towner[esi+88], ebx
	call	@NetSendCmdQuest@8
$L85268:
; Line 676
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	$LABEL_36$85273
	cmp	BYTE PTR _plr[ebp+503], 0
	je	$LABEL_36$85273
	mov	al, BYTE PTR _quests+170
	test	al, al
	je	$LABEL_36$85273
; Line 677
	cmp	al, bl
	je	SHORT $L85271
	cmp	al, 2
	jne	SHORT $L85270
$L85271:
	cmp	BYTE PTR _quests+184, 0
	jne	SHORT $L85270
; Line 678
	cmp	DWORD PTR _towner[esi+88], 0
	jne	$LABEL_36$85273
; Line 681
	cmp	al, bl
	mov	BYTE PTR _quests+184, bl
	jne	SHORT $L85274
; Line 682
	mov	BYTE PTR _quests+183, bl
; Line 683
	mov	BYTE PTR _quests+170, 2
$L85274:
; Line 688
	push	12					; 0000000cH
	mov	DWORD PTR _quests+188, ebx
	pop	ecx
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 689
	mov	DWORD PTR _towner[esi+88], ebx
$L85270:
; Line 691
	cmp	BYTE PTR _quests+184, bl
	jne	SHORT $LABEL_36$85273
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	12					; 0000000cH
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	SHORT $LABEL_36$85273
	cmp	DWORD PTR _towner[esi+88], 0
	jne	SHORT $LABEL_36$85273
; Line 694
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	mov	BYTE PTR _quests+170, 3
	mov	BYTE PTR _quests+183, 3
	call	@RemoveInvItem@8
; Line 695
	mov	eax, DWORD PTR _towner[esi+12]
	mov	edx, DWORD PTR _towner[esi+8]
	inc	eax
	push	eax
	push	5
	pop	ecx
	call	@CreateItem@12
; Line 696
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
; Line 697
	mov	DWORD PTR _towner[esi+144], edi
; Line 698
	push	13					; 0000000dH
	pop	ecx
	call	@InitQTextMsg@4
; Line 699
	mov	DWORD PTR _towner[esi+88], ebx
$LABEL_36$85273:
; Line 703
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 704
	mov	ecx, 160				; 000000a0H
	call	@TownerTalk@4
; Line 705
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 706
	mov	cl, 21					; 00000015H
	jmp	$LABEL_39$85279
$L85262:
; Line 714
	push	2
	pop	ecx
	call	@GetActiveTowner@4
	cmp	ebx, eax
	jne	$L85280
; Line 715
	mov	al, BYTE PTR _quests+146
; Line 716
	xor	ebx, ebx
	inc	ebx
	cmp	al, cl
	jne	SHORT $L85281
	mov	al, BYTE PTR _quests+159
	cmp	al, bl
	jne	SHORT $L85282
; Line 722
	cmp	BYTE PTR _plr[ebp+352], 0
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	mov	BYTE PTR _quests+159, bl
	jne	SHORT $L85285
	mov	ecx, 721				; 000002d1H
	mov	edi, ecx
	call	@effect_is_playing@4
	test	eax, eax
	je	SHORT $L85284
$L85285:
	cmp	BYTE PTR _plr[ebp+352], bl
	jne	SHORT $L85286
	mov	ecx, 618				; 0000026aH
	mov	edi, ecx
	call	@effect_is_playing@4
	test	eax, eax
	je	SHORT $L85284
$L85286:
	cmp	BYTE PTR _plr[ebp+352], 2
	jne	SHORT $LABEL_53$85287
	mov	ecx, 515				; 00000203H
	mov	edi, ecx
	call	@effect_is_playing@4
	test	eax, eax
	jne	SHORT $LABEL_53$85287
$L85284:
; Line 723
	mov	ecx, edi
	call	@PlaySFX@4
	jmp	SHORT $LABEL_53$85287
$L85282:
; Line 729
	test	al, al
; Line 731
	jmp	SHORT $L85582
$L85281:
; Line 732
	cmp	al, 3
	jne	SHORT $L85290
; Line 733
	cmp	BYTE PTR _quests+159, bl
	jne	$L85369
; Line 735
	mov	BYTE PTR _quests+159, bl
; Line 736
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
; Line 737
	mov	DWORD PTR _towner[esi+144], edi
$LABEL_53$85287:
; Line 726
	mov	DWORD PTR _towner[esi+88], ebx
; Line 727
	jmp	$L85369
$L85290:
; Line 740
	cmp	al, bl
$L85582:
	jne	$L85369
; Line 745
	push	63					; 0000003fH
	mov	BYTE PTR _quests+146, 2
	pop	ecx
	mov	DWORD PTR _quests+164, ebx
	mov	BYTE PTR _quests+158, cl
; Line 746
	mov	BYTE PTR _quests+159, bl
; Line 747
	mov	DWORD PTR _towner[esi+80], 50		; 00000032H
; Line 748
	mov	DWORD PTR _towner[esi+144], edi
; Line 749
	mov	DWORD PTR _towner[esi+148], 3
; Line 750
	call	@InitQTextMsg@4
; Line 752
	mov	dl, 6
	mov	ecx, ebx
	mov	DWORD PTR _towner[esi+88], ebx
	call	@NetSendCmdQuest@8
; Line 753
	jmp	$L85369
$L85280:
; Line 755
	xor	ecx, ecx
	call	@GetActiveTowner@4
	cmp	ebx, eax
	je	$L85293
; Line 756
	push	6
	pop	ecx
	call	@GetActiveTowner@4
	cmp	ebx, eax
	jne	$L85294
; Line 757
	mov	al, BYTE PTR _quests+26
	xor	ebx, ebx
	inc	ebx
	cmp	al, bl
	jne	SHORT $L85295
; Line 758
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	19					; 00000013H
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	$LABEL_106$85298
; Line 759
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	call	@RemoveInvItem@8
; Line 760
	mov	BYTE PTR _quests+26, 2
; Line 761
	mov	DWORD PTR _quests+44, ebx
; Line 762
	mov	BYTE PTR _quests+39, 2
; Line 763
	mov	ecx, 128				; 00000080H
	jmp	$LABEL_105$85297
$L85295:
; Line 771
	cmp	al, 2
	jne	$LABEL_106$85298
; Line 772
	mov	al, BYTE PTR _quests+39
	cmp	al, 2
	jb	SHORT $L85301
	cmp	al, 4
	ja	SHORT $L85301
; Line 773
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	17					; 00000011H
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	SHORT $L85302
; Line 774
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	call	@RemoveInvItem@8
; Line 775
	or	DWORD PTR _Qtalklist+388, -1
; Line 776
	mov	BYTE PTR _quests+39, 5
; Line 777
	mov	DWORD PTR _Qtalklist+68, 123		; 0000007bH
; Line 778
	mov	ecx, 130				; 00000082H
; Line 779
	jmp	SHORT $L85304
$L85302:
; Line 780
	mov	ecx, 129				; 00000081H
; Line 781
	cmp	BYTE PTR _quests+38, cl
	je	$LABEL_106$85298
$L85304:
; Line 784
	mov	BYTE PTR _quests+38, cl
; Line 785
	jmp	SHORT $LABEL_105$85297
$L85301:
; Line 787
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	20					; 00000014H
	pop	edx
	call	@PlrHasItem@12
	mov	ebp, eax
; Line 788
	test	ebp, ebp
	je	SHORT $L85305
; Line 791
	mov	ecx, 132				; 00000084H
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 792
	mov	BYTE PTR _quests+26, 3
; Line 793
	mov	DWORD PTR _towner[esi+88], ebx
; Line 794
	mov	eax, DWORD PTR [ebp+360]
	imul	eax, 76					; 0000004cH
	mov	DWORD PTR _AllItemsList[eax+64], ebx
; Line 795
	jmp	SHORT $LABEL_106$85298
$L85305:
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	18					; 00000012H
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	SHORT $LABEL_106$85298
; Line 796
	mov	ecx, 131				; 00000083H
; Line 797
	cmp	BYTE PTR _quests+40, cl
	je	SHORT $LABEL_106$85298
; Line 798
	mov	BYTE PTR _quests+40, cl
$LABEL_105$85297:
; Line 765
	mov	DWORD PTR _towner[esi+144], edi
; Line 766
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
; Line 767
	call	@InitQTextMsg@4
; Line 768
	mov	DWORD PTR _towner[esi+88], ebx
$LABEL_106$85298:
; Line 804
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 805
	mov	ecx, 212				; 000000d4H
	call	@TownerTalk@4
; Line 806
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 807
	mov	cl, 5
; Line 808
	jmp	$LABEL_39$85279
$L85294:
; Line 813
	push	7
	pop	ecx
	call	@GetActiveTowner@4
	cmp	ebx, eax
	jne	SHORT $L85312
; Line 814
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 815
	mov	ecx, 179				; 000000b3H
	call	@TownerTalk@4
; Line 816
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 817
	mov	cl, 23					; 00000017H
; Line 818
	jmp	$LABEL_39$85279
$L85312:
; Line 823
	push	5
	pop	ecx
	call	@GetActiveTowner@4
	cmp	ebx, eax
	jne	SHORT $L85316
; Line 824
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 825
	mov	ecx, 200				; 000000c8H
	call	@TownerTalk@4
; Line 826
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 827
	mov	cl, 22					; 00000016H
; Line 828
	jmp	$LABEL_39$85279
$L85316:
; Line 833
	xor	ebx, ebx
	inc	ebx
	mov	ecx, ebx
	call	@GetActiveTowner@4
	cmp	DWORD PTR _t$[esp+24], eax
	jne	$L85320
; Line 834
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	$LABEL_131$85322
; Line 836
	cmp	BYTE PTR _plr[ebp+501], 0
	je	$LABEL_127$85326
	cmp	DWORD PTR _towner[esi+88], 0
	jne	$LABEL_127$85326
; Line 837
	mov	al, BYTE PTR _quests+314
	cmp	al, bl
	jne	SHORT $L85324
; Line 840
	push	39					; 00000027H
	mov	BYTE PTR _quests+314, 2
	pop	ecx
	mov	DWORD PTR _quests+332, ebx
	mov	BYTE PTR _quests+326, cl
; Line 841
	mov	BYTE PTR _quests+327, bl
; Line 842
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
; Line 843
	mov	DWORD PTR _towner[esi+144], edi
; Line 844
	call	@InitQTextMsg@4
	jmp	SHORT $LABEL_126$85325
$L85324:
; Line 849
	cmp	al, 3
	jne	SHORT $LABEL_127$85326
	cmp	BYTE PTR _quests+327, 2
	je	SHORT $LABEL_127$85326
; Line 853
	push	41					; 00000029H
	mov	BYTE PTR _quests+327, 2
	pop	ecx
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 854
	mov	eax, DWORD PTR _towner[esi+12]
	mov	edx, DWORD PTR _towner[esi+8]
	inc	eax
	push	eax
	push	4
	pop	ecx
	call	@CreateItem@12
$LABEL_126$85325:
; Line 846
	mov	DWORD PTR _towner[esi+88], ebx
$LABEL_127$85326:
; Line 859
	cmp	BYTE PTR _quests+26, 2
	jne	SHORT $LABEL_131$85322
	cmp	BYTE PTR _quests+38, 130		; 00000082H
	jne	SHORT $LABEL_131$85322
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	18					; 00000012H
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	SHORT $LABEL_131$85322
; Line 860
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	call	@RemoveInvItem@8
; Line 861
	mov	eax, DWORD PTR _towner[esi+12]
	mov	edx, DWORD PTR _towner[esi+8]
	push	0
	inc	eax
	push	0
	push	eax
	push	20					; 00000014H
	pop	ecx
	call	@SpawnQuestItem@20
; Line 862
	push	124					; 0000007cH
	pop	ecx
	call	@InitQTextMsg@4
; Line 863
	or	DWORD PTR _Qtalklist+68, -1
; Line 864
	mov	BYTE PTR _quests+39, 7
$LABEL_131$85322:
; Line 867
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 868
	mov	ecx, 169				; 000000a9H
	call	@TownerTalk@4
; Line 869
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 870
	mov	cl, 14					; 0000000eH
; Line 871
	jmp	$LABEL_39$85279
$L85320:
; Line 876
	push	8
	pop	ecx
	call	@GetActiveTowner@4
	cmp	DWORD PTR _t$[esp+24], eax
	jne	SHORT $L85332
; Line 877
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 878
	mov	ecx, 224				; 000000e0H
	call	@TownerTalk@4
; Line 879
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 880
	mov	cl, 12					; 0000000cH
; Line 881
	jmp	$LABEL_39$85279
$L85332:
; Line 886
	push	4
	pop	ecx
	call	@GetActiveTowner@4
	cmp	DWORD PTR _t$[esp+24], eax
	je	SHORT $L85336
; Line 887
	cmp	DWORD PTR _towner[esi+4], 9
	jne	$L85369
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 888
	mov	ecx, edi
	call	@CowSFX@4
; Line 889
	jmp	$L85369
$L85336:
; Line 891
	cmp	BYTE PTR _gbMaxPlayers, bl
	mov	ebp, 150				; 00000096H
	jne	$L85345
; Line 892
	mov	al, BYTE PTR _quests+362
	cmp	al, bl
	jne	SHORT $L85339
; Line 893
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	33					; 00000021H
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	$LABEL_154$85341
; Line 895
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	call	@RemoveInvItem@8
; Line 896
	mov	BYTE PTR _quests+375, 2
; Line 897
	mov	DWORD PTR _towner[esi+80], ebp
; Line 899
	push	23					; 00000017H
	mov	DWORD PTR _towner[esi+144], edi
	pop	ecx
	call	@InitQTextMsg@4
; Line 900
	mov	BYTE PTR _quests+362, 2
; Line 902
	jmp	SHORT $L85583
$L85339:
; Line 903
	cmp	al, 3
	jne	$LABEL_154$85341
	cmp	BYTE PTR _quests+375, 7
	jne	$LABEL_154$85341
; Line 908
	push	25					; 00000019H
	mov	BYTE PTR _quests+375, 8
	pop	ecx
	mov	DWORD PTR _towner[esi+80], ebp
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
$L85583:
; Line 911
	cmp	BYTE PTR _gbMaxPlayers, bl
	mov	DWORD PTR _quests+380, ebx
; Line 912
	mov	DWORD PTR _towner[esi+88], ebx
; Line 914
	je	SHORT $LABEL_154$85341
$L85345:
; Line 916
	mov	al, BYTE PTR _quests+362
	cmp	al, 2
	jne	SHORT $L85346
; Line 917
	cmp	DWORD PTR _quests+380, 0
	jne	SHORT $LABEL_154$85341
; Line 920
	push	23					; 00000017H
	mov	DWORD PTR _towner[esi+80], ebp
	pop	ecx
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 921
	mov	DWORD PTR _towner[esi+88], ebx
; Line 923
	mov	dl, 15					; 0000000fH
	jmp	SHORT $L85584
$L85346:
; Line 928
	cmp	al, 3
	jne	SHORT $LABEL_154$85341
	cmp	BYTE PTR _quests+375, 7
	jne	SHORT $LABEL_154$85341
; Line 932
	push	25					; 00000019H
	mov	BYTE PTR _quests+375, 8
	pop	ecx
	mov	DWORD PTR _towner[esi+80], ebp
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 934
	mov	dl, 15					; 0000000fH
	mov	ecx, ebx
	mov	DWORD PTR _towner[esi+88], ebx
	call	@NetSendCmdQuest@8
; Line 936
	mov	dl, 5
$L85584:
	mov	ecx, ebx
	mov	DWORD PTR _quests+380, ebx
$LABEL_153$85348:
	call	@NetSendCmdQuest@8
$LABEL_154$85341:
; Line 940
	cmp	BYTE PTR _qtextflag, 0
	jne	$L85369
; Line 941
	mov	ecx, ebp
	call	@TownerTalk@4
; Line 942
	cmp	DWORD PTR _storeflag, 0
	je	$L85369
; Line 943
	mov	cl, 15					; 0000000fH
; Line 944
	jmp	$LABEL_39$85279
$L85293:
; Line 949
	xor	ebx, ebx
	inc	ebx
	cmp	BYTE PTR _gbMaxPlayers, bl
	jne	$LABEL_86$85365
; Line 950
	cmp	BYTE PTR _plr[ebp+504], 0
	je	$L85358
	mov	al, BYTE PTR _quests+2
	test	al, al
	je	$L85358
; Line 951
	cmp	BYTE PTR _quests+16, 0
	jne	SHORT $L85356
; Line 954
	cmp	al, bl
	mov	BYTE PTR _quests+16, bl
	mov	DWORD PTR _quests+20, ebx
	jne	SHORT $L85357
; Line 955
	mov	BYTE PTR _quests+2, 2
; Line 956
	mov	BYTE PTR _quests+15, bl
$L85357:
; Line 960
	push	115					; 00000073H
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	pop	ecx
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 961
	mov	DWORD PTR _towner[esi+88], ebx
$L85356:
; Line 963
	cmp	BYTE PTR _quests+16, bl
	jne	SHORT $L85358
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	9
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	SHORT $L85358
	cmp	DWORD PTR _towner[esi+88], 0
	jne	SHORT $L85358
; Line 967
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	mov	BYTE PTR _quests+2, 3
	mov	BYTE PTR _quests+16, 2
	mov	BYTE PTR _quests+15, 2
	call	@RemoveInvItem@8
; Line 968
	mov	eax, DWORD PTR _towner[esi+12]
	mov	edx, DWORD PTR _towner[esi+8]
	inc	eax
	push	eax
	push	2
	pop	ecx
	call	@CreateItem@12
; Line 969
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
; Line 970
	mov	DWORD PTR _towner[esi+144], edi
; Line 971
	push	117					; 00000075H
	pop	ecx
	call	@InitQTextMsg@4
; Line 972
	mov	DWORD PTR _towner[esi+88], ebx
$L85358:
; Line 975
	cmp	BYTE PTR _plr[ebp+509], 0
	je	$LABEL_86$85365
	mov	al, BYTE PTR _quests+242
	test	al, al
	je	$LABEL_86$85365
; Line 976
	cmp	al, bl
	je	SHORT $L85361
	cmp	al, 2
	jne	SHORT $L85360
$L85361:
	cmp	BYTE PTR _quests+256, 0
	jne	SHORT $L85360
; Line 977
	cmp	DWORD PTR _towner[esi+88], 0
	jne	$LABEL_86$85365
	cmp	BYTE PTR _quests+16, 2
	je	SHORT $L85362
	cmp	BYTE PTR _quests+2, 2
	jne	$LABEL_86$85365
	cmp	BYTE PTR _quests+16, bl
	jne	$LABEL_86$85365
$L85362:
; Line 981
	cmp	al, bl
	mov	BYTE PTR _quests+256, bl
	mov	DWORD PTR _quests+260, ebx
	jne	SHORT $L85366
; Line 982
	mov	BYTE PTR _quests+242, 2
; Line 983
	mov	BYTE PTR _quests+255, bl
$L85366:
; Line 987
	push	88					; 00000058H
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
	pop	ecx
	mov	DWORD PTR _towner[esi+144], edi
	call	@InitQTextMsg@4
; Line 988
	mov	DWORD PTR _towner[esi+88], ebx
$L85360:
; Line 990
	cmp	BYTE PTR _quests+256, bl
	jne	SHORT $LABEL_86$85365
	lea	eax, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	push	eax
	push	16					; 00000010H
	pop	edx
	call	@PlrHasItem@12
	test	eax, eax
	je	SHORT $LABEL_86$85365
	cmp	DWORD PTR _towner[esi+88], 0
	jne	SHORT $LABEL_86$85365
; Line 994
	mov	edx, DWORD PTR _inv_item_num$[esp+24]
	mov	ecx, edi
	mov	BYTE PTR _quests+242, 3
	mov	BYTE PTR _quests+256, 2
	mov	BYTE PTR _quests+255, 2
	call	@RemoveInvItem@8
; Line 995
	mov	eax, DWORD PTR _towner[esi+12]
	mov	edx, DWORD PTR _towner[esi+8]
	inc	eax
	push	eax
	push	8
	pop	ecx
	call	@CreateItem@12
; Line 996
	mov	DWORD PTR _towner[esi+80], 150		; 00000096H
; Line 997
	mov	DWORD PTR _towner[esi+144], edi
; Line 998
	push	90					; 0000005aH
	pop	ecx
	call	@InitQTextMsg@4
; Line 999
	mov	DWORD PTR _towner[esi+88], ebx
$LABEL_86$85365:
; Line 1004
	cmp	BYTE PTR _qtextflag, 0
	jne	SHORT $L85369
; Line 1005
	mov	ecx, 188				; 000000bcH
	call	@TownerTalk@4
; Line 1006
	cmp	DWORD PTR _storeflag, 0
	je	SHORT $L85369
; Line 1007
	mov	cl, bl
$LABEL_39$85279:
; Line 708
	call	@StartStore@4
$L85369:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1011
	pop	ecx
	pop	ecx
	ret	0
@TalkToTowner@8 ENDP
_TEXT	ENDS
EXTRN	@PlaySfxLoc@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @CowSFX@4
_TEXT	SEGMENT
@CowSFX@4 PROC NEAR					; COMDAT
; _pnum$ = ecx
; Line 1017
	push	edi
	mov	edi, ecx
; Line 1018
	mov	ecx, DWORD PTR _CowPlaying
	cmp	ecx, -1
	je	SHORT $L85375
	call	@effect_is_playing@4
	test	eax, eax
	jne	$L85374
$L85375:
; Line 1019
	inc	DWORD PTR _sgdwCowClicks
; Line 1020
	cmp	DWORD PTR _sgdwCowClicks, 8
	jb	SHORT $L85376
	push	esi
; Line 1021
	mov	esi, edi
	imul	esi, 21720				; 000054d8H
	mov	ecx, 236				; 000000ecH
	mov	eax, DWORD PTR _plr[esi+60]
	mov	edx, DWORD PTR _plr[esi+56]
	add	eax, 5
	push	eax
	call	@PlaySfxLoc@12
; Line 1023
	mov	eax, DWORD PTR _sgnCowMsg
	mov	DWORD PTR _sgdwCowClicks, 4
	movsx	ecx, BYTE PTR _plr[esi+352]
	lea	edx, DWORD PTR [eax+eax*2]
	pop	esi
	add	ecx, edx
; Line 1024
	inc	eax
; Line 1025
	cmp	eax, 3
	mov	DWORD PTR _sgnCowMsg, eax
	mov	ecx, DWORD PTR _snSFX[ecx*4]
	mov	DWORD PTR _CowPlaying, ecx
	jl	SHORT $L85378
; Line 1026
	and	DWORD PTR _sgnCowMsg, 0
; Line 1027
	jmp	SHORT $L85378
$L85376:
; Line 1028
	xor	ecx, ecx
	cmp	DWORD PTR _sgdwCowClicks, 4
	sete	cl
	add	ecx, 236				; 000000ecH
	mov	DWORD PTR _CowPlaying, ecx
$L85378:
; Line 1030
	mov	eax, edi
	imul	eax, 21720				; 000054d8H
	push	DWORD PTR _plr[eax+60]
	mov	edx, DWORD PTR _plr[eax+56]
	call	@PlaySfxLoc@12
$L85374:
	pop	edi
; Line 1032
	ret	0
@CowSFX@4 ENDP
_TEXT	ENDS
END
