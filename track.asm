; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/track.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _track_process
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @track_repeat_walk@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _track_isscrolling
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_track_process
EXTRN	_cursmx:DWORD
EXTRN	_cursmy:DWORD
EXTRN	_myplr:DWORD
EXTRN	_plr:BYTE
EXTRN	@NetSendCmdLoc@16:NEAR
EXTRN	__imp__GetTickCount@0:NEAR
_BSS	SEGMENT
_sgbIsScrolling DB 01H DUP (?)
	ALIGN	4

_sgdwLastWalk DD 01H DUP (?)
_sgbIsWalking DD 01H DUP (?)
; Function compile flags: /Ogsy
_BSS	ENDS
;	COMDAT _track_process
_TEXT	SEGMENT
_track_process PROC NEAR				; COMDAT
; File Source/track.cpp
; Line 11
	cmp	DWORD PTR _sgbIsWalking, 0
	je	$L84988
; Line 14
	mov	edx, DWORD PTR _cursmx
	test	edx, edx
	jl	$L84988
	cmp	edx, 111				; 0000006fH
	jge	SHORT $L84988
	mov	ecx, DWORD PTR _cursmy
	test	ecx, ecx
	jl	SHORT $L84988
	cmp	ecx, 111				; 0000006fH
	jge	SHORT $L84988
; Line 17
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	cmp	DWORD PTR _plr[eax+496], 6
	jg	SHORT $L84989
	cmp	DWORD PTR _plr[eax], 0
	jne	SHORT $L84988
$L84989:
; Line 20
	cmp	edx, DWORD PTR _plr[eax+72]
	jne	SHORT $L84991
	cmp	ecx, DWORD PTR _plr[eax+76]
	je	SHORT $L84988
$L84991:
; Line 21
	call	DWORD PTR __imp__GetTickCount@0
; Line 22
	mov	ecx, eax
	sub	ecx, DWORD PTR _sgdwLastWalk
	cmp	ecx, 300				; 0000012cH
	jl	SHORT $L84988
; Line 23
	mov	DWORD PTR _sgdwLastWalk, eax
; Line 24
	mov	al, BYTE PTR _cursmy
	push	eax
	mov	al, BYTE PTR _cursmx
	xor	ecx, ecx
	push	eax
	mov	dl, 1
	inc	ecx
	call	@NetSendCmdLoc@16
; Line 25
	cmp	BYTE PTR _sgbIsScrolling, 0
	jne	SHORT $L84988
; Line 26
	mov	BYTE PTR _sgbIsScrolling, 1
$L84988:
; Line 29
	ret	0
_track_process ENDP
_TEXT	ENDS
PUBLIC	@track_repeat_walk@4
; Function compile flags: /Ogsy
;	COMDAT @track_repeat_walk@4
_TEXT	SEGMENT
@track_repeat_walk@4 PROC NEAR				; COMDAT
; _rep$ = ecx
; Line 33
	cmp	DWORD PTR _sgbIsWalking, ecx
	je	SHORT $L85002
; Line 37
	xor	eax, eax
	mov	DWORD PTR _sgbIsWalking, ecx
	cmp	ecx, eax
	je	SHORT $L85000
; Line 38
	mov	BYTE PTR _sgbIsScrolling, al
; Line 39
	call	DWORD PTR __imp__GetTickCount@0
	sub	eax, 50					; 00000032H
; Line 40
	xor	ecx, ecx
	mov	DWORD PTR _sgdwLastWalk, eax
	mov	al, BYTE PTR _cursmy
	push	eax
	mov	al, BYTE PTR _cursmx
	inc	ecx
	push	eax
	mov	dl, cl
	call	@NetSendCmdLoc@16
; Line 44
	ret	0
$L85000:
; Line 41
	cmp	BYTE PTR _sgbIsScrolling, al
	je	SHORT $L85002
; Line 42
	mov	BYTE PTR _sgbIsScrolling, al
$L85002:
; Line 44
	ret	0
@track_repeat_walk@4 ENDP
_TEXT	ENDS
PUBLIC	_track_isscrolling
; Function compile flags: /Ogsy
;	COMDAT _track_isscrolling
_TEXT	SEGMENT
_track_isscrolling PROC NEAR				; COMDAT
; Line 48
	movzx	eax, BYTE PTR _sgbIsScrolling
; Line 49
	ret	0
_track_isscrolling ENDP
_TEXT	ENDS
END
