; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/missiles.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_06GPED@Arrows?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IKFM@Fireba?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05ICEM@Guard?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07ECNE@Lghning?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07JPGI@Firewal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07GKAB@MagBlos?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06HBLB@Portal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MLNP@Bluexfr?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MGCK@Bluexbk?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IELE@Manashld?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05BHCA@Blood?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04LNDN@Bone?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07OLMF@Metlhit?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06LLCL@Farrow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04CAMD@Doom?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FCOA@?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07OJBM@Blodbur?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06OHLH@Newexp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08BOEM@Shatter1?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06MIKI@Bigexp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07HJHJ@Inferno?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IEIO@Thinlght?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NCBN@Flare?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08GJJN@Flareexp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NJGI@Magball?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05GMMH@Krull?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08FPFF@Miniltng?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KHMI@Holy?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08CNIH@Holyexpl?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06DNGK@Larrow?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08BGBL@Firarwex?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06DEOI@Acidbf?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MBJF@Acidspla?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MMFJ@Acidpud?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08CHKD@Ethrshld?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07OAAJ@Firerun?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07LALF@Ressur1?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07MEOG@Sklball?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_07NEKM@Rportal?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MAPC@Fireplar?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08LAPI@Scubmisb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08MCPJ@Scbsexpb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08BKGP@Scubmisc?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08GIGO@Scbsexpc?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08EPIK@Scubmisd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08DNIL@Scbsexpd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@GJIA@Missiles?2?$CFs?4CL2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NEFK@Missiles?2?$CFs?$CFi?4CL2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT @GetDamageAmt@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CheckBlock@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @FindClosest@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetSpellLevel@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetDirection8@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetDirection16@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DeleteMissile@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetMissileVel@24
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PutMissile@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetMissilePos@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MoveMissilePos@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MonsterTrapHit@24
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MonsterMHit@28
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @PlayerMHit@32
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @Plr2PlrMHit@28
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CheckMissileCol@28
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetMissAnim@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetMissDir@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @LoadMissileGFX@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitMissileGFX
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @FreeMissileGFX@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FreeMissiles
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FreeMissiles2
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitMissiles
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddLArrow@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddArrow@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetVileMissPos@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddRndTeleport@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFirebolt@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddMagmaball@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_33@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddTeleport@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddLightball@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFirewall@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFireball@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddLightctrl@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddLightning@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddMisexp@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddWeapexp@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @CheckIfTrig@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddTown@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFlash@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFlash2@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddManashield@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFiremove@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddGuardian@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddChain@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_11@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_12@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_13@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddRhino@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_32@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFlare@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddAcid@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_1D@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddAcidpud@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddStone@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddGolem@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddEtherealize@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_1F@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @miss_null_23@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddBoom@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddHeal@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddHealOther@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddElement@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddIdentify@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFirewallC@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddInfra@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddWave@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddNova@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddRepair@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddRecharge@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddDisarm@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddApoca@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFlame@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddFlamec@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddCbolt@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddHbolt@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddResurrect@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddResurrectBeam@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddTelekinesis@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddBoneSpirit@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddRportal@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddDiabApoca@36
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @AddMissile@40
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @Sentfire@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Dummy@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Golem@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_SetManashield@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_LArrow@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Arrow@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Firebolt@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Lightball@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mi_null_33@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Acidpud@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Firewall@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Fireball@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Lightctrl@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Lightning@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Town@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Flash@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Flash2@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Manashield@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Etherealize@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Firemove@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Guardian@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Chain@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mi_null_11@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Weapexp@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Misexp@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Acidsplat@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Teleport@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Stone@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Boom@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Rhino@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @mi_null_32@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_FirewallC@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Infra@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Apoca@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Wave@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Nova@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Blodboil@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Flame@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Flamec@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Cbolt@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Hbolt@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Element@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Bonespirit@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_ResurrectBeam@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @MI_Rportal@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ProcessMissiles
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _missiles_process_charge
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @ClearMissileSpot@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	@AddGuardian@36
PUBLIC	@AddChain@36
PUBLIC	@miss_null_11@36
PUBLIC	@miss_null_12@36
PUBLIC	@miss_null_13@36
PUBLIC	@AddRhino@36
PUBLIC	@miss_null_32@36
PUBLIC	@AddFlare@36
PUBLIC	@AddAcid@36
PUBLIC	@miss_null_1D@36
PUBLIC	@AddAcidpud@36
PUBLIC	@AddStone@36
PUBLIC	@AddGolem@36
PUBLIC	@AddEtherealize@36
PUBLIC	@miss_null_1F@36
PUBLIC	@miss_null_23@36
PUBLIC	@AddBoom@36
PUBLIC	@AddHeal@36
PUBLIC	@AddHealOther@36
PUBLIC	@AddElement@36
PUBLIC	@AddIdentify@36
PUBLIC	@AddFirewallC@36
PUBLIC	@AddInfra@36
PUBLIC	@AddWave@36
PUBLIC	@AddNova@36
PUBLIC	@AddRepair@36
PUBLIC	@AddRecharge@36
PUBLIC	@AddDisarm@36
PUBLIC	@AddApoca@36
PUBLIC	@AddFlame@36
PUBLIC	@AddFlamec@36
PUBLIC	@AddCbolt@36
PUBLIC	@AddHbolt@36
PUBLIC	@AddResurrect@36
PUBLIC	@AddLArrow@36
PUBLIC	@AddResurrectBeam@36
PUBLIC	??_C@_06GPED@Arrows?$AA@			; `string'
PUBLIC	??_C@_06IKFM@Fireba?$AA@			; `string'
PUBLIC	??_C@_05ICEM@Guard?$AA@				; `string'
PUBLIC	??_C@_07ECNE@Lghning?$AA@			; `string'
PUBLIC	??_C@_07JPGI@Firewal?$AA@			; `string'
PUBLIC	??_C@_07GKAB@MagBlos?$AA@			; `string'
PUBLIC	??_C@_06HBLB@Portal?$AA@			; `string'
PUBLIC	??_C@_07MLNP@Bluexfr?$AA@			; `string'
PUBLIC	??_C@_07MGCK@Bluexbk?$AA@			; `string'
PUBLIC	??_C@_08IELE@Manashld?$AA@			; `string'
PUBLIC	@AddArrow@36
PUBLIC	??_C@_05BHCA@Blood?$AA@				; `string'
PUBLIC	??_C@_04LNDN@Bone?$AA@				; `string'
PUBLIC	??_C@_07OLMF@Metlhit?$AA@			; `string'
PUBLIC	@AddTelekinesis@36
PUBLIC	??_C@_06LLCL@Farrow?$AA@			; `string'
PUBLIC	??_C@_04CAMD@Doom?$AA@				; `string'
PUBLIC	??_C@_01FCOA@?5?$AA@				; `string'
PUBLIC	??_C@_07OJBM@Blodbur?$AA@			; `string'
PUBLIC	??_C@_06OHLH@Newexp?$AA@			; `string'
PUBLIC	??_C@_08BOEM@Shatter1?$AA@			; `string'
PUBLIC	??_C@_06MIKI@Bigexp?$AA@			; `string'
PUBLIC	??_C@_07HJHJ@Inferno?$AA@			; `string'
PUBLIC	??_C@_08IEIO@Thinlght?$AA@			; `string'
PUBLIC	??_C@_05NCBN@Flare?$AA@				; `string'
PUBLIC	??_C@_08GJJN@Flareexp?$AA@			; `string'
PUBLIC	??_C@_07NJGI@Magball?$AA@			; `string'
PUBLIC	??_C@_05GMMH@Krull?$AA@				; `string'
PUBLIC	??_C@_08FPFF@Miniltng?$AA@			; `string'
PUBLIC	??_C@_04KHMI@Holy?$AA@				; `string'
PUBLIC	??_C@_08CNIH@Holyexpl?$AA@			; `string'
PUBLIC	??_C@_06DNGK@Larrow?$AA@			; `string'
PUBLIC	??_C@_08BGBL@Firarwex?$AA@			; `string'
PUBLIC	??_C@_06DEOI@Acidbf?$AA@			; `string'
PUBLIC	@AddBoneSpirit@36
PUBLIC	??_C@_08MBJF@Acidspla?$AA@			; `string'
PUBLIC	??_C@_07MMFJ@Acidpud?$AA@			; `string'
PUBLIC	??_C@_08CHKD@Ethrshld?$AA@			; `string'
PUBLIC	??_C@_07OAAJ@Firerun?$AA@			; `string'
PUBLIC	@AddRndTeleport@36
PUBLIC	??_C@_07LALF@Ressur1?$AA@			; `string'
PUBLIC	??_C@_07MEOG@Sklball?$AA@			; `string'
PUBLIC	??_C@_07NEKM@Rportal?$AA@			; `string'
PUBLIC	??_C@_08MAPC@Fireplar?$AA@			; `string'
PUBLIC	??_C@_08LAPI@Scubmisb?$AA@			; `string'
PUBLIC	??_C@_08MCPJ@Scbsexpb?$AA@			; `string'
PUBLIC	??_C@_08BKGP@Scubmisc?$AA@			; `string'
PUBLIC	??_C@_08GIGO@Scbsexpc?$AA@			; `string'
PUBLIC	??_C@_08EPIK@Scubmisd?$AA@			; `string'
PUBLIC	??_C@_08DNIL@Scbsexpd?$AA@			; `string'
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	@AddRportal@36
PUBLIC	@AddFirebolt@36
PUBLIC	@AddDiabApoca@36
PUBLIC	@AddMagmaball@36
PUBLIC	@miss_null_33@36
PUBLIC	@MI_Dummy@4
PUBLIC	@MI_Golem@4
PUBLIC	@MI_SetManashield@4
PUBLIC	@MI_LArrow@4
PUBLIC	@AddTeleport@36
PUBLIC	@MI_Arrow@4
PUBLIC	@MI_Firebolt@4
PUBLIC	@MI_Lightball@4
PUBLIC	@mi_null_33@4
PUBLIC	@MI_Acidpud@4
PUBLIC	@MI_Firewall@4
PUBLIC	@MI_Fireball@4
PUBLIC	@AddLightball@36
PUBLIC	@MI_Lightctrl@4
PUBLIC	@MI_Lightning@4
PUBLIC	@MI_Town@4
PUBLIC	@MI_Flash@4
PUBLIC	@MI_Flash2@4
PUBLIC	@AddFirewall@36
PUBLIC	@MI_Etherealize@4
PUBLIC	@MI_Firemove@4
PUBLIC	@MI_Guardian@4
PUBLIC	@MI_Chain@4
PUBLIC	@mi_null_11@4
PUBLIC	@MI_Weapexp@4
PUBLIC	@AddFireball@36
PUBLIC	@MI_Misexp@4
PUBLIC	@MI_Acidsplat@4
PUBLIC	@MI_Teleport@4
PUBLIC	@MI_Stone@4
PUBLIC	@MI_Boom@4
PUBLIC	@MI_Rhino@4
PUBLIC	@mi_null_32@4
PUBLIC	@AddLightctrl@36
PUBLIC	@MI_FirewallC@4
PUBLIC	@MI_Infra@4
PUBLIC	@MI_Apoca@4
PUBLIC	@MI_Wave@4
PUBLIC	@MI_Nova@4
PUBLIC	@MI_Blodboil@4
PUBLIC	@AddLightning@36
PUBLIC	@MI_Flame@4
PUBLIC	@MI_Flamec@4
PUBLIC	@MI_Cbolt@4
PUBLIC	@MI_Hbolt@4
PUBLIC	@MI_Element@4
PUBLIC	@MI_Bonespirit@4
PUBLIC	@AddMisexp@36
PUBLIC	@MI_ResurrectBeam@4
PUBLIC	@MI_Rportal@4
PUBLIC	_missiledata
PUBLIC	_misfiledata
PUBLIC	_XDirAdd
PUBLIC	_YDirAdd
PUBLIC	@AddWeapexp@36
PUBLIC	@AddTown@36
PUBLIC	@AddFlash@36
PUBLIC	@AddFlash2@36
PUBLIC	@AddManashield@36
PUBLIC	@AddFiremove@36
_DATA	SEGMENT
COMM	_missileactive:DWORD:07dH
COMM	_missileavail:DWORD:07dH
COMM	_missile:BYTE:055f0H
COMM	_nummissiles:DWORD
COMM	_ManashieldFlag:DWORD
COMM	_chain:BYTE:05dcH
COMM	_MissilePreFlag:DWORD
COMM	_numchains:DWORD
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
_DATA	SEGMENT
_missiledata DB	00H
	ORG $+3
	DD	FLAT:@AddArrow@36
	DD	FLAT:@MI_Arrow@4
	DD	01H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	01H
	ORG $+3
	DD	FLAT:@AddFirebolt@36
	DD	FLAT:@MI_Firebolt@4
	DD	01H
	DB	01H
	DB	01H
	DB	01H
	ORG $+1
	DD	067H
	DD	06aH
	DB	02H
	ORG $+3
	DD	FLAT:@AddGuardian@36
	DD	FLAT:@MI_Guardian@4
	DD	01H
	DB	01H
	DB	00H
	DB	02H
	ORG $+1
	DD	071H
	DD	072H
	DB	03H
	ORG $+3
	DD	FLAT:@AddRndTeleport@36
	DD	FLAT:@MI_Teleport@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	088H
	DD	0ffffffffH
	DB	04H
	ORG $+3
	DD	FLAT:@AddLightball@36
	DD	FLAT:@MI_Lightball@4
	DD	01H
	DB	01H
	DB	02H
	DB	03H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	05H
	ORG $+3
	DD	FLAT:@AddFirewall@36
	DD	FLAT:@MI_Firewall@4
	DD	01H
	DB	01H
	DB	01H
	DB	04H
	ORG $+1
	DD	08aH
	DD	06aH
	DB	06H
	ORG $+3
	DD	FLAT:@AddFireball@36
	DD	FLAT:@MI_Fireball@4
	DD	01H
	DB	01H
	DB	01H
	DB	01H
	ORG $+1
	DD	067H
	DD	06aH
	DB	07H
	ORG $+3
	DD	FLAT:@AddLightctrl@36
	DD	FLAT:@MI_Lightctrl@4
	DD	00H
	DB	01H
	DB	02H
	DB	03H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	08H
	ORG $+3
	DD	FLAT:@AddLightning@36
	DD	FLAT:@MI_Lightning@4
	DD	01H
	DB	01H
	DB	02H
	DB	03H
	ORG $+1
	DD	078H
	DD	063H
	DB	09H
	ORG $+3
	DD	FLAT:@AddMisexp@36
	DD	FLAT:@MI_Misexp@4
	DD	01H
	DB	02H
	DB	00H
	DB	05H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	0aH
	ORG $+3
	DD	FLAT:@AddTown@36
	DD	FLAT:@MI_Town@4
	DD	01H
	DB	01H
	DB	03H
	DB	06H
	ORG $+1
	DD	081H
	DD	064H
	DB	0bH
	ORG $+3
	DD	FLAT:@AddFlash@36
	DD	FLAT:@MI_Flash@4
	DD	01H
	DB	01H
	DB	03H
	DB	07H
	ORG $+1
	DD	07bH
	DD	063H
	DB	0cH
	ORG $+3
	DD	FLAT:@AddFlash2@36
	DD	FLAT:@MI_Flash2@4
	DD	01H
	DB	01H
	DB	03H
	DB	08H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	0dH
	ORG $+3
	DD	FLAT:@AddManashield@36
	DD	FLAT:@MI_SetManashield@4
	DD	00H
	DB	01H
	DB	03H
	DB	09H
	ORG $+1
	DD	07aH
	DD	0ffffffffH
	DB	0eH
	ORG $+3
	DD	FLAT:@AddFiremove@36
	DD	FLAT:@MI_Firemove@4
	DD	01H
	DB	01H
	DB	01H
	DB	04H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	0fH
	ORG $+3
	DD	FLAT:@AddChain@36
	DD	FLAT:@MI_Chain@4
	DD	01H
	DB	01H
	DB	02H
	DB	03H
	ORG $+1
	DD	078H
	DD	063H
	DB	010H
	ORG $+3
	DD	00H
	DD	00H
	DD	01H
	DB	01H
	DB	02H
	DB	03H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	011H
	ORG $+3
	DD	FLAT:@miss_null_11@36
	DD	FLAT:@mi_null_11@4
	DD	01H
	DB	02H
	DB	00H
	DB	0aH
	ORG $+1
	DD	05bH
	DD	05cH
	DB	012H
	ORG $+3
	DD	FLAT:@miss_null_12@36
	DD	FLAT:@mi_null_11@4
	DD	01H
	DB	02H
	DB	00H
	DB	0bH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	013H
	ORG $+3
	DD	FLAT:@miss_null_13@36
	DD	FLAT:@mi_null_11@4
	DD	01H
	DB	02H
	DB	00H
	DB	0cH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	014H
	ORG $+3
	DD	FLAT:@AddRhino@36
	DD	FLAT:@MI_Rhino@4
	DD	01H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	015H
	ORG $+3
	DD	FLAT:@AddMagmaball@36
	DD	FLAT:@MI_Firebolt@4
	DD	01H
	DB	01H
	DB	01H
	DB	018H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	016H
	ORG $+3
	DD	FLAT:@AddLightctrl@36
	DD	FLAT:@MI_Lightctrl@4
	DD	00H
	DB	01H
	DB	02H
	DB	015H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	017H
	ORG $+3
	DD	FLAT:@AddLightning@36
	DD	FLAT:@MI_Lightning@4
	DD	01H
	DB	01H
	DB	02H
	DB	015H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	018H
	ORG $+3
	DD	FLAT:@AddFlare@36
	DD	FLAT:@MI_Firebolt@4
	DD	01H
	DB	01H
	DB	03H
	DB	016H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	019H
	ORG $+3
	DD	FLAT:@AddMisexp@36
	DD	FLAT:@MI_Misexp@4
	DD	01H
	DB	02H
	DB	03H
	DB	017H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	01aH
	ORG $+3
	DD	FLAT:@AddTeleport@36
	DD	FLAT:@MI_Teleport@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	064H
	DD	0ffffffffH
	DB	01bH
	ORG $+3
	DD	FLAT:@AddLArrow@36
	DD	FLAT:@MI_LArrow@4
	DD	01H
	DB	00H
	DB	01H
	DB	0dH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	01cH
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	03H
	DB	0eH
	ORG $+1
	DD	062H
	DD	0ffffffffH
	DB	01dH
	ORG $+3
	DD	FLAT:@miss_null_1D@36
	DD	FLAT:@MI_Firewall@4
	DD	01H
	DB	02H
	DB	01H
	DB	04H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	01eH
	ORG $+3
	DD	FLAT:@AddStone@36
	DD	FLAT:@MI_Stone@4
	DD	00H
	DB	01H
	DB	03H
	DB	0ffH
	ORG $+1
	DD	080H
	DD	0ffffffffH
	DB	01fH
	ORG $+3
	DD	FLAT:@miss_null_1F@36
	DD	FLAT:@MI_Dummy@4
	DD	01H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	020H
	ORG $+3
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	076H
	DD	0ffffffffH
	DB	021H
	ORG $+3
	DD	FLAT:@AddGolem@36
	DD	FLAT:@MI_Golem@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	06eH
	DD	0ffffffffH
	DB	022H
	ORG $+3
	DD	FLAT:@AddEtherealize@36
	DD	FLAT:@MI_Etherealize@4
	DD	01H
	DB	01H
	DB	00H
	DB	022H
	ORG $+1
	DD	065H
	DD	0ffffffffH
	DB	023H
	ORG $+3
	DD	FLAT:@miss_null_23@36
	DD	FLAT:@mi_null_11@4
	DD	01H
	DB	02H
	DB	00H
	DB	010H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	024H
	ORG $+3
	DD	FLAT:@AddBoom@36
	DD	FLAT:@MI_Boom@4
	DD	01H
	DB	02H
	DB	00H
	DB	011H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	025H
	ORG $+3
	DD	FLAT:@AddHeal@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	026H
	ORG $+3
	DD	FLAT:@AddFirewallC@36
	DD	FLAT:@MI_FirewallC@4
	DD	00H
	DB	01H
	DB	01H
	DB	04H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	027H
	ORG $+3
	DD	FLAT:@AddInfra@36
	DD	FLAT:@MI_Infra@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	075H
	DD	0ffffffffH
	DB	028H
	ORG $+3
	DD	FLAT:@AddIdentify@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	029H
	ORG $+3
	DD	FLAT:@AddWave@36
	DD	FLAT:@MI_Wave@4
	DD	01H
	DB	01H
	DB	01H
	DB	04H
	ORG $+1
	DD	06bH
	DD	0ffffffffH
	DB	02aH
	ORG $+3
	DD	FLAT:@AddNova@36
	DD	FLAT:@MI_Nova@4
	DD	01H
	DB	01H
	DB	02H
	DB	03H
	ORG $+1
	DD	07bH
	DD	0ffffffffH
	DB	02bH
	ORG $+3
	DD	FLAT:@miss_null_1F@36
	DD	FLAT:@MI_Blodboil@4
	DD	01H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	05aH
	DB	02cH
	ORG $+3
	DD	FLAT:@AddApoca@36
	DD	FLAT:@MI_Apoca@4
	DD	01H
	DB	01H
	DB	03H
	DB	011H
	ORG $+1
	DD	058H
	DD	0ffffffffH
	DB	02dH
	ORG $+3
	DD	FLAT:@AddRepair@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	02eH
	ORG $+3
	DD	FLAT:@AddRecharge@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	02fH
	ORG $+3
	DD	FLAT:@AddDisarm@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	087H
	DD	0ffffffffH
	DB	030H
	ORG $+3
	DD	FLAT:@AddFlame@36
	DD	FLAT:@MI_Flame@4
	DD	01H
	DB	01H
	DB	01H
	DB	014H
	ORG $+1
	DD	085H
	DD	0ffffffffH
	DB	031H
	ORG $+3
	DD	FLAT:@AddFlamec@36
	DD	FLAT:@MI_Flamec@4
	DD	00H
	DB	01H
	DB	01H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	032H
	ORG $+3
	DD	FLAT:@miss_null_32@36
	DD	FLAT:@mi_null_32@4
	DD	01H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	033H
	ORG $+3
	DD	FLAT:@miss_null_33@36
	DD	FLAT:@mi_null_33@4
	DD	01H
	DB	00H
	DB	01H
	DB	019H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	034H
	ORG $+3
	DD	FLAT:@AddCbolt@36
	DD	FLAT:@MI_Cbolt@4
	DD	01H
	DB	01H
	DB	02H
	DB	01aH
	ORG $+1
	DD	060H
	DD	0ffffffffH
	DB	035H
	ORG $+3
	DD	FLAT:@AddHbolt@36
	DD	FLAT:@MI_Hbolt@4
	DD	01H
	DB	01H
	DB	00H
	DB	01bH
	ORG $+1
	DD	073H
	DD	063H
	DB	036H
	ORG $+3
	DD	FLAT:@AddResurrect@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	01H
	DB	03H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	07eH
	DB	037H
	ORG $+3
	DD	FLAT:@AddTelekinesis@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	065H
	DD	0ffffffffH
	DB	038H
	ORG $+3
	DD	FLAT:@AddLArrow@36
	DD	FLAT:@MI_LArrow@4
	DD	01H
	DB	00H
	DB	02H
	DB	01dH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	039H
	ORG $+3
	DD	FLAT:@AddAcid@36
	DD	FLAT:@MI_Firebolt@4
	DD	01H
	DB	01H
	DB	04H
	DB	01fH
	ORG $+1
	DD	056H
	DD	0ffffffffH
	DB	03aH
	ORG $+3
	DD	FLAT:@AddMisexp@36
	DD	FLAT:@MI_Acidsplat@4
	DD	01H
	DB	02H
	DB	04H
	DB	020H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	03bH
	ORG $+3
	DD	FLAT:@AddAcidpud@36
	DD	FLAT:@MI_Acidpud@4
	DD	01H
	DB	02H
	DB	04H
	DB	021H
	ORG $+1
	DD	07dH
	DD	0ffffffffH
	DB	03cH
	ORG $+3
	DD	FLAT:@AddHealOther@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	01H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	03dH
	ORG $+3
	DD	FLAT:@AddElement@36
	DD	FLAT:@MI_Element@4
	DD	01H
	DB	01H
	DB	01H
	DB	023H
	ORG $+1
	DD	064H
	DD	0ffffffffH
	DB	03eH
	ORG $+3
	DD	FLAT:@AddResurrectBeam@36
	DD	FLAT:@MI_ResurrectBeam@4
	DD	01H
	DB	01H
	DB	00H
	DB	024H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	03fH
	ORG $+3
	DD	FLAT:@AddBoneSpirit@36
	DD	FLAT:@MI_Bonespirit@4
	DD	01H
	DB	01H
	DB	03H
	DB	025H
	ORG $+1
	DD	05dH
	DD	05eH
	DB	040H
	ORG $+3
	DD	FLAT:@AddWeapexp@36
	DD	FLAT:@MI_Weapexp@4
	DD	01H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	041H
	ORG $+3
	DD	FLAT:@AddRportal@36
	DD	FLAT:@MI_Rportal@4
	DD	01H
	DB	02H
	DB	00H
	DB	026H
	ORG $+1
	DD	081H
	DD	064H
	DB	042H
	ORG $+3
	DD	FLAT:@AddBoom@36
	DD	FLAT:@MI_Boom@4
	DD	01H
	DB	02H
	DB	00H
	DB	027H
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
	DB	043H
	ORG $+3
	DD	FLAT:@AddDiabApoca@36
	DD	FLAT:@MI_Dummy@4
	DD	00H
	DB	02H
	DB	00H
	DB	0ffH
	ORG $+1
	DD	0ffffffffH
	DD	0ffffffffH
_DATA	ENDS
;	COMDAT ??_C@_06GPED@Arrows?$AA@
_DATA	SEGMENT
??_C@_06GPED@Arrows?$AA@ DB 'Arrows', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06IKFM@Fireba?$AA@
_DATA	SEGMENT
??_C@_06IKFM@Fireba?$AA@ DB 'Fireba', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05ICEM@Guard?$AA@
_DATA	SEGMENT
??_C@_05ICEM@Guard?$AA@ DB 'Guard', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07ECNE@Lghning?$AA@
_DATA	SEGMENT
??_C@_07ECNE@Lghning?$AA@ DB 'Lghning', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07JPGI@Firewal?$AA@
_DATA	SEGMENT
??_C@_07JPGI@Firewal?$AA@ DB 'Firewal', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07GKAB@MagBlos?$AA@
_DATA	SEGMENT
??_C@_07GKAB@MagBlos?$AA@ DB 'MagBlos', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06HBLB@Portal?$AA@
_DATA	SEGMENT
??_C@_06HBLB@Portal?$AA@ DB 'Portal', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MLNP@Bluexfr?$AA@
_DATA	SEGMENT
??_C@_07MLNP@Bluexfr?$AA@ DB 'Bluexfr', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MGCK@Bluexbk?$AA@
_DATA	SEGMENT
??_C@_07MGCK@Bluexbk?$AA@ DB 'Bluexbk', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IELE@Manashld?$AA@
_DATA	SEGMENT
??_C@_08IELE@Manashld?$AA@ DB 'Manashld', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05BHCA@Blood?$AA@
_DATA	SEGMENT
??_C@_05BHCA@Blood?$AA@ DB 'Blood', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04LNDN@Bone?$AA@
_DATA	SEGMENT
??_C@_04LNDN@Bone?$AA@ DB 'Bone', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07OLMF@Metlhit?$AA@
_DATA	SEGMENT
??_C@_07OLMF@Metlhit?$AA@ DB 'Metlhit', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06LLCL@Farrow?$AA@
_DATA	SEGMENT
??_C@_06LLCL@Farrow?$AA@ DB 'Farrow', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04CAMD@Doom?$AA@
_DATA	SEGMENT
??_C@_04CAMD@Doom?$AA@ DB 'Doom', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_01FCOA@?5?$AA@
_DATA	SEGMENT
??_C@_01FCOA@?5?$AA@ DB ' ', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_07OJBM@Blodbur?$AA@
_DATA	SEGMENT
??_C@_07OJBM@Blodbur?$AA@ DB 'Blodbur', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06OHLH@Newexp?$AA@
_DATA	SEGMENT
??_C@_06OHLH@Newexp?$AA@ DB 'Newexp', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08BOEM@Shatter1?$AA@
_DATA	SEGMENT
??_C@_08BOEM@Shatter1?$AA@ DB 'Shatter1', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06MIKI@Bigexp?$AA@
_DATA	SEGMENT
??_C@_06MIKI@Bigexp?$AA@ DB 'Bigexp', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07HJHJ@Inferno?$AA@
_DATA	SEGMENT
??_C@_07HJHJ@Inferno?$AA@ DB 'Inferno', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IEIO@Thinlght?$AA@
_DATA	SEGMENT
??_C@_08IEIO@Thinlght?$AA@ DB 'Thinlght', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05NCBN@Flare?$AA@
_DATA	SEGMENT
??_C@_05NCBN@Flare?$AA@ DB 'Flare', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08GJJN@Flareexp?$AA@
_DATA	SEGMENT
??_C@_08GJJN@Flareexp?$AA@ DB 'Flareexp', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NJGI@Magball?$AA@
_DATA	SEGMENT
??_C@_07NJGI@Magball?$AA@ DB 'Magball', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_05GMMH@Krull?$AA@
_DATA	SEGMENT
??_C@_05GMMH@Krull?$AA@ DB 'Krull', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08FPFF@Miniltng?$AA@
_DATA	SEGMENT
??_C@_08FPFF@Miniltng?$AA@ DB 'Miniltng', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_04KHMI@Holy?$AA@
_DATA	SEGMENT
??_C@_04KHMI@Holy?$AA@ DB 'Holy', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_08CNIH@Holyexpl?$AA@
_DATA	SEGMENT
??_C@_08CNIH@Holyexpl?$AA@ DB 'Holyexpl', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06DNGK@Larrow?$AA@
_DATA	SEGMENT
??_C@_06DNGK@Larrow?$AA@ DB 'Larrow', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08BGBL@Firarwex?$AA@
_DATA	SEGMENT
??_C@_08BGBL@Firarwex?$AA@ DB 'Firarwex', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06DEOI@Acidbf?$AA@
_DATA	SEGMENT
??_C@_06DEOI@Acidbf?$AA@ DB 'Acidbf', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MBJF@Acidspla?$AA@
_DATA	SEGMENT
??_C@_08MBJF@Acidspla?$AA@ DB 'Acidspla', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MMFJ@Acidpud?$AA@
_DATA	SEGMENT
??_C@_07MMFJ@Acidpud?$AA@ DB 'Acidpud', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08CHKD@Ethrshld?$AA@
_DATA	SEGMENT
??_C@_08CHKD@Ethrshld?$AA@ DB 'Ethrshld', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07OAAJ@Firerun?$AA@
_DATA	SEGMENT
??_C@_07OAAJ@Firerun?$AA@ DB 'Firerun', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07LALF@Ressur1?$AA@
_DATA	SEGMENT
??_C@_07LALF@Ressur1?$AA@ DB 'Ressur1', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07MEOG@Sklball?$AA@
_DATA	SEGMENT
??_C@_07MEOG@Sklball?$AA@ DB 'Sklball', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_07NEKM@Rportal?$AA@
_DATA	SEGMENT
??_C@_07NEKM@Rportal?$AA@ DB 'Rportal', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MAPC@Fireplar?$AA@
_DATA	SEGMENT
??_C@_08MAPC@Fireplar?$AA@ DB 'Fireplar', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08LAPI@Scubmisb?$AA@
_DATA	SEGMENT
??_C@_08LAPI@Scubmisb?$AA@ DB 'Scubmisb', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08MCPJ@Scbsexpb?$AA@
_DATA	SEGMENT
??_C@_08MCPJ@Scbsexpb?$AA@ DB 'Scbsexpb', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08BKGP@Scubmisc?$AA@
_DATA	SEGMENT
??_C@_08BKGP@Scubmisc?$AA@ DB 'Scubmisc', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08GIGO@Scbsexpc?$AA@
_DATA	SEGMENT
??_C@_08GIGO@Scbsexpc?$AA@ DB 'Scbsexpc', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08EPIK@Scubmisd?$AA@
_DATA	SEGMENT
??_C@_08EPIK@Scubmisd?$AA@ DB 'Scubmisd', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_08DNIL@Scbsexpd?$AA@
_DATA	SEGMENT
??_C@_08DNIL@Scbsexpd?$AA@ DB 'Scbsexpd', 00H		; `string'
_DATA	ENDS
_DATA	SEGMENT
_misfiledata DB	00H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_06GPED@Arrows?$AA@
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	010H
	ORG $+2
	DD	FLAT:??_C@_06IKFM@Fireba?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DB	02H
	DB	03H
	ORG $+2
	DD	FLAT:??_C@_05ICEM@Guard?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0eH
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	03H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_07ECNE@Lghning?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	04H
	DB	02H
	ORG $+2
	DD	FLAT:??_C@_07JPGI@Firewal?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0dH
	DB	0bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	05H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_07GKAB@MagBlos?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	06H
	DB	02H
	ORG $+2
	DD	FLAT:??_C@_06HBLB@Portal?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	07H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_07MLNP@Bluexfr?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	0a0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	08H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_07MGCK@Bluexbk?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	0a0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	09H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08IELE@Manashld?$AA@
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	0aH
	DB	04H
	ORG $+2
	DD	FLAT:??_C@_05BHCA@Blood?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	08H
	DB	08H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	080H
	DD	080H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	020H
	DD	020H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	0bH
	DB	03H
	ORG $+2
	DD	FLAT:??_C@_04LNDN@Bone?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02H
	DB	02H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	08H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	080H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	020H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	0cH
	DB	03H
	ORG $+2
	DD	FLAT:??_C@_07OLMF@Metlhit?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02H
	DB	02H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	0aH
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	0dH
	DB	010H
	ORG $+2
	DD	FLAT:??_C@_06LLCL@Farrow?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DB	0eH
	DB	09H
	ORG $+2
	DD	FLAT:??_C@_04CAMD@Doom?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	0fH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_01FCOA@?5?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	010H
	DB	02H
	ORG $+2
	DD	FLAT:??_C@_07OJBM@Blodbur?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	011H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_06OHLH@Newexp?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	012H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08BOEM@Shatter1?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	013H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_06MIKI@Bigexp?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	0a0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	014H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_07HJHJ@Inferno?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	014H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	015H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08IEIO@Thinlght?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	016H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_05NCBN@Flare?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	017H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08GJJN@Flareexp?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	018H
	DB	08H
	ORG $+2
	DD	FLAT:??_C@_07NJGI@Magball?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	080H
	DD	080H
	DD	080H
	DD	080H
	DD	080H
	DD	080H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	020H
	DD	020H
	DD	020H
	DD	020H
	DD	020H
	DD	020H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	019H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_05GMMH@Krull?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0eH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01aH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08FPFF@Miniltng?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01bH
	DB	010H
	ORG $+2
	DD	FLAT:??_C@_04KHMI@Holy?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DB	0eH
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DB	01cH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08CNIH@Holyexpl?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	0a0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01dH
	DB	010H
	ORG $+2
	DD	FLAT:??_C@_06DNGK@Larrow?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DB	01eH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08BGBL@Firarwex?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01fH
	DB	010H
	ORG $+2
	DD	FLAT:??_C@_06DEOI@Acidbf?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DB	020H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08MBJF@Acidspla?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	021H
	DB	02H
	ORG $+2
	DD	FLAT:??_C@_07MMFJ@Acidpud?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	09H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	022H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08CHKD@Ethrshld?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	023H
	DB	08H
	ORG $+2
	DD	FLAT:??_C@_07OAAJ@Firerun?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	024H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_07LALF@Ressur1?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	025H
	DB	09H
	ORG $+2
	DD	FLAT:??_C@_07MEOG@Sklball?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	026H
	DB	02H
	ORG $+2
	DD	FLAT:??_C@_07NEKM@Rportal?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	027H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08MAPC@Fireplar?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	0a0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	030H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	028H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08LAPI@Scubmisb?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	029H
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08MCPJ@Scbsexpb?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02aH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08BKGP@Scubmisc?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02bH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08GIGO@Scbsexpc?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02cH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08EPIK@Scubmisd?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	02dH
	DB	01H
	ORG $+2
	DD	FLAT:??_C@_08DNIL@Scbsexpd?$AA@
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	0ffH
	DB	00H
	ORG $+2
	DD	FLAT:??_C@_00A@?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_XDirAdd DD	01H
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	01H
_YDirAdd DD	01H
	DD	01H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
_DATA	ENDS
PUBLIC	@GetDamageAmt@12
EXTRN	_myplr:DWORD
EXTRN	_plr:BYTE
; Function compile flags: /Ogsy
;	COMDAT @GetDamageAmt@12
_TEXT	SEGMENT
_maxd$ = 8
@GetDamageAmt@12 PROC NEAR				; COMDAT
; _i$ = ecx
; _mind$ = edx
; File Source/missiles.cpp
; Line 143
	push	ebp
	mov	ebp, esp
; Line 172
	mov	eax, DWORD PTR _myplr
	push	ebx
	imul	eax, 21720				; 000054d8H
	push	esi
	push	edi
	movsx	esi, BYTE PTR _plr[eax+ecx+193]
	movsx	edi, BYTE PTR _plr[eax+21592]
	add	esi, edi
; Line 173
	dec	ecx
	cmp	ecx, 35					; 00000023H
	ja	$L85156
	movzx	edi, BYTE PTR $L88887[ecx]
	mov	ecx, DWORD PTR _maxd$[ebp]
	jmp	DWORD PTR $L88891[edi*4]
$L85072:
; Line 175
	mov	eax, DWORD PTR _plr[eax+364]
	sar	eax, 3
	lea	eax, DWORD PTR [eax+esi+1]
	mov	DWORD PTR [edx], eax
; Line 176
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[eax+364]
	sar	eax, 3
	lea	eax, DWORD PTR [eax+esi+10]
; Line 177
	jmp	$LABEL_73$85073
$L85074:
; Line 179
	movsx	eax, BYTE PTR _plr[eax+440]
; Line 182
	xor	ebx, ebx
	lea	ecx, DWORD PTR [eax+esi+1]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _myplr
	mov	edi, eax
	imul	eax, 21720				; 000054d8H
	cmp	BYTE PTR _plr[eax+352], bl
	jne	SHORT $L85075
; Line 183
	lea	eax, DWORD PTR [ecx+ecx]
	mov	DWORD PTR [edx], eax
; Line 184
	mov	edi, DWORD PTR _myplr
$L85075:
; Line 186
	imul	edi, 21720				; 000054d8H
	cmp	BYTE PTR _plr[edi+352], 1
	jne	SHORT $L85076
; Line 187
	mov	eax, DWORD PTR [edx]
	mov	ecx, eax
	sar	ecx, 1
	add	ecx, eax
	mov	DWORD PTR [edx], ecx
$L85076:
; Line 190
	mov	ecx, DWORD PTR _maxd$[ebp]
	xor	eax, eax
	mov	DWORD PTR [ecx], 10			; 0000000aH
; Line 191
	mov	edi, DWORD PTR _myplr
	imul	edi, 21720				; 000054d8H
	cmp	BYTE PTR _plr[edi+440], bl
	jle	$LABEL_65$85081
$L85078:
; Line 193
	add	DWORD PTR [ecx], 4
; Line 195
	mov	edi, DWORD PTR _myplr
	imul	edi, 21720				; 000054d8H
	inc	eax
	movsx	edi, BYTE PTR _plr[edi+440]
	cmp	eax, edi
	jl	SHORT $L85078
; Line 197
	jmp	$LABEL_65$85081
$L85082:
; Line 199
	push	2
	pop	eax
; Line 200
	mov	DWORD PTR [edx], eax
; Line 201
	mov	ecx, DWORD PTR _myplr
	imul	ecx, 21720				; 000054d8H
	movsx	ecx, BYTE PTR _plr[ecx+440]
; Line 202
	jmp	$LABEL_43$85083
$L85084:
; Line 204
	movsx	edi, BYTE PTR _plr[eax+440]
; Line 206
	test	esi, esi
	mov	DWORD PTR [edx], edi
	jle	SHORT $L85085
$L85086:
; Line 208
	mov	eax, edi
	sar	eax, 3
	add	edi, eax
; Line 209
	dec	esi
; Line 210
	jne	SHORT $L85086
; Line 211
	mov	DWORD PTR [edx], edi
$L85085:
; Line 213
	mov	eax, edi
	sar	eax, 1
	add	eax, edi
; Line 214
	mov	DWORD PTR [edx], eax
; Line 215
	jmp	$LABEL_33$85089
$L85092:
; Line 237
	movsx	eax, BYTE PTR _plr[eax+440]
	lea	eax, DWORD PTR [eax*4+8]
	sar	eax, 1
	mov	DWORD PTR [edx], eax
; Line 238
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	lea	eax, DWORD PTR [eax*4+80]
	sar	eax, 1
; Line 239
	jmp	$LABEL_73$85073
$L85093:
; Line 241
	movsx	eax, BYTE PTR _plr[eax+440]
; Line 243
	test	esi, esi
	lea	eax, DWORD PTR [eax+eax+4]
	mov	DWORD PTR [edx], eax
	jle	SHORT $L85094
; Line 244
	mov	edi, esi
$L85095:
; Line 246
	mov	ebx, eax
	sar	ebx, 3
	add	eax, ebx
; Line 247
	dec	edi
; Line 248
	jne	SHORT $L85095
; Line 249
	mov	DWORD PTR [edx], eax
$L85094:
; Line 252
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
; Line 254
	test	esi, esi
	movsx	eax, BYTE PTR _plr[eax+440]
	lea	eax, DWORD PTR [eax+eax+40]
	mov	DWORD PTR [ecx], eax
	jle	$L85156
$L85099:
; Line 257
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
; Line 258
	dec	esi
; Line 259
	jne	SHORT $L85099
; Line 260
	jmp	$LABEL_73$85073
$L85103:
; Line 262
	movsx	eax, BYTE PTR _plr[eax+440]
	sar	eax, 1
	inc	eax
; Line 264
	test	esi, esi
	mov	DWORD PTR [edx], eax
	jle	SHORT $L85104
; Line 265
	mov	edi, esi
$L85105:
; Line 267
	mov	ebx, eax
	sar	ebx, 3
	add	eax, ebx
; Line 268
	dec	edi
; Line 269
	jne	SHORT $L85105
; Line 270
	mov	DWORD PTR [edx], eax
$L85104:
; Line 273
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	sar	eax, 1
	add	eax, 10					; 0000000aH
; Line 275
	test	esi, esi
	mov	DWORD PTR [ecx], eax
	jle	$L85156
$L85109:
; Line 278
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
; Line 279
	dec	esi
; Line 280
	jne	SHORT $L85109
; Line 281
	jmp	$LABEL_73$85073
$L85112:
; Line 283
	mov	DWORD PTR [edx], 4
; Line 284
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	lea	eax, DWORD PTR [eax+eax+4]
; Line 285
	jmp	$LABEL_73$85073
$L85113:
; Line 287
	movsx	eax, BYTE PTR _plr[eax+440]
	inc	eax
	lea	eax, DWORD PTR [eax+eax*2]
	add	eax, eax
	mov	DWORD PTR [edx], eax
; Line 288
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	add	eax, 10					; 0000000aH
	lea	eax, DWORD PTR [eax+eax*2]
$LABEL_33$85089:
; Line 290
	add	eax, eax
; Line 291
	jmp	$LABEL_73$85073
$L85114:
; Line 293
	movsx	eax, BYTE PTR _plr[eax+440]
	add	eax, 5
	sar	eax, 1
; Line 295
	test	esi, esi
	mov	DWORD PTR [edx], eax
	jle	SHORT $L85115
; Line 296
	mov	edi, esi
$L85116:
; Line 298
	mov	ebx, eax
	sar	ebx, 3
	add	eax, ebx
; Line 299
	dec	edi
; Line 300
	jne	SHORT $L85116
; Line 301
	mov	DWORD PTR [edx], eax
$L85115:
; Line 304
	lea	eax, DWORD PTR [eax+eax*4]
	mov	DWORD PTR [edx], eax
; Line 305
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	add	eax, 30					; 0000001eH
	sar	eax, 1
; Line 307
	test	esi, esi
	mov	DWORD PTR [ecx], eax
	jle	SHORT $L85119
$L85120:
; Line 309
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
; Line 310
	dec	esi
; Line 311
	jne	SHORT $L85120
; Line 312
	mov	DWORD PTR [ecx], eax
$L85119:
; Line 314
	lea	eax, DWORD PTR [eax+eax*4]
; Line 315
	jmp	$LABEL_73$85073
$L85123:
; Line 317
	mov	DWORD PTR [edx], 3
; Line 318
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	add	eax, 4
; Line 319
	mov	ecx, eax
	sar	ecx, 1
$LABEL_43$85083:
; Line 321
	add	ecx, eax
	mov	eax, DWORD PTR _maxd$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 322
	jmp	$L85156
$L85124:
; Line 325
	mov	eax, DWORD PTR _maxd$[ebp]
	mov	DWORD PTR [edx], 11			; 0000000bH
	mov	DWORD PTR [eax], 17			; 00000011H
; Line 326
	jmp	$L85156
$L85125:
; Line 328
	xor	ecx, ecx
; Line 329
	xor	eax, eax
	mov	DWORD PTR [edx], ecx
; Line 330
	mov	esi, DWORD PTR _myplr
	imul	esi, 21720				; 000054d8H
	cmp	BYTE PTR _plr[esi+440], cl
	jle	SHORT $L85129
$L85127:
; Line 332
	inc	DWORD PTR [edx]
; Line 334
	mov	esi, DWORD PTR _myplr
	imul	esi, 21720				; 000054d8H
	inc	eax
	movsx	esi, BYTE PTR _plr[esi+440]
	cmp	eax, esi
	jl	SHORT $L85127
$L85129:
; Line 337
	mov	eax, DWORD PTR _maxd$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 338
	mov	edx, DWORD PTR _myplr
	imul	edx, 21720				; 000054d8H
	cmp	BYTE PTR _plr[edx+440], cl
	jle	$L85156
$L85131:
; Line 340
	add	DWORD PTR [eax], 6
; Line 342
	mov	edx, DWORD PTR _myplr
	imul	edx, 21720				; 000054d8H
	inc	ecx
	movsx	edx, BYTE PTR _plr[edx+440]
	cmp	ecx, edx
	jl	SHORT $L85131
; Line 344
	jmp	$L85156
$L85134:
; Line 346
	movsx	eax, BYTE PTR _plr[eax+440]
; Line 348
	test	esi, esi
	lea	eax, DWORD PTR [eax+eax+4]
	mov	DWORD PTR [edx], eax
	jle	SHORT $L85135
; Line 349
	mov	edi, esi
$L85136:
; Line 351
	mov	ebx, eax
	sar	ebx, 3
	add	eax, ebx
; Line 352
	dec	edi
; Line 353
	jne	SHORT $L85136
; Line 354
	mov	DWORD PTR [edx], eax
$L85135:
; Line 357
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
; Line 359
	test	esi, esi
	movsx	eax, BYTE PTR _plr[eax+440]
	lea	eax, DWORD PTR [eax+eax+40]
	mov	DWORD PTR [ecx], eax
	jle	$L85156
$L85140:
; Line 362
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
; Line 363
	dec	esi
; Line 364
	jne	SHORT $L85140
; Line 365
	jmp	$LABEL_73$85073
$L85143:
; Line 367
	mov	DWORD PTR [edx], 1
; Line 368
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[eax+364]
	sar	eax, 2
	inc	eax
; Line 369
	jmp	$LABEL_73$85073
$L85144:
; Line 371
	movsx	eax, BYTE PTR _plr[eax+440]
	add	eax, 9
	mov	DWORD PTR [edx], eax
; Line 372
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	add	eax, 18					; 00000012H
; Line 373
	jmp	$LABEL_73$85073
$L85145:
; Line 375
	movsx	eax, BYTE PTR _plr[eax+440]
; Line 378
	xor	ebx, ebx
	lea	ecx, DWORD PTR [eax+esi+1]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _myplr
	mov	edi, eax
	imul	eax, 21720				; 000054d8H
	cmp	BYTE PTR _plr[eax+352], bl
	jne	SHORT $L85146
; Line 379
	lea	eax, DWORD PTR [ecx+ecx]
	mov	DWORD PTR [edx], eax
; Line 380
	mov	edi, DWORD PTR _myplr
$L85146:
; Line 382
	imul	edi, 21720				; 000054d8H
	cmp	BYTE PTR _plr[edi+352], 1
	jne	SHORT $L85147
; Line 383
	mov	eax, DWORD PTR [edx]
	mov	ecx, eax
	sar	ecx, 1
	add	ecx, eax
	mov	DWORD PTR [edx], ecx
$L85147:
; Line 386
	mov	ecx, DWORD PTR _maxd$[ebp]
	xor	eax, eax
	mov	DWORD PTR [ecx], 10			; 0000000aH
; Line 387
	mov	edi, DWORD PTR _myplr
	imul	edi, 21720				; 000054d8H
	cmp	BYTE PTR _plr[edi+440], bl
	jle	SHORT $LABEL_65$85081
$L85149:
; Line 389
	add	DWORD PTR [ecx], 4
; Line 391
	mov	edi, DWORD PTR _myplr
	imul	edi, 21720				; 000054d8H
	inc	eax
	movsx	edi, BYTE PTR _plr[edi+440]
	cmp	eax, edi
	jl	SHORT $L85149
$LABEL_65$85081:
; Line 394
	cmp	esi, ebx
	jle	SHORT $L85152
; Line 395
	lea	eax, DWORD PTR [esi+esi*2]
	add	eax, eax
	add	DWORD PTR [ecx], eax
$L85152:
; Line 396
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	cmp	BYTE PTR _plr[eax+352], bl
	jne	SHORT $L85153
; Line 397
	shl	DWORD PTR [ecx], 1
$L85153:
; Line 398
	mov	eax, DWORD PTR _myplr
	imul	eax, 21720				; 000054d8H
	cmp	BYTE PTR _plr[eax+352], 1
	jne	SHORT $LABEL_71$85091
; Line 399
	mov	eax, DWORD PTR [ecx]
	mov	esi, eax
	sar	esi, 1
	add	esi, eax
	mov	DWORD PTR [ecx], esi
$LABEL_71$85091:
; Line 401
	or	DWORD PTR [edx], -1
; Line 402
	or	DWORD PTR [ecx], -1
; Line 403
	jmp	SHORT $L85156
$L85155:
; Line 405
	mov	eax, DWORD PTR _plr[eax+364]
	lea	esi, DWORD PTR [esi+esi*2]
	mov	edi, eax
	sar	edi, 3
	sar	eax, 1
	sub	eax, edi
	add	eax, esi
; Line 406
	mov	DWORD PTR [edx], eax
$LABEL_73$85073:
$LABEL_74$85102:
; Line 410
	mov	DWORD PTR [ecx], eax
$L85156:
	pop	edi
	pop	esi
	pop	ebx
; Line 415
	pop	ebp
	ret	4
$L88891:
	DD	$L85072
	DD	$L85074
	DD	$L85082
	DD	$L85084
	DD	$LABEL_71$85091
	DD	$L85092
	DD	$L85093
	DD	$L85103
	DD	$L85112
	DD	$L85113
	DD	$L85114
	DD	$L85123
	DD	$L85124
	DD	$L85125
	DD	$L85134
	DD	$L85143
	DD	$L85144
	DD	$L85145
	DD	$L85155
$L88887:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	6
	DB	7
	DB	8
	DB	9
	DB	4
	DB	4
	DB	10					; 0000000aH
	DB	4
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	4
	DB	4
	DB	13					; 0000000dH
	DB	4
	DB	4
	DB	4
	DB	4
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	4
	DB	4
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	4
@GetDamageAmt@12 ENDP
_TEXT	ENDS
PUBLIC	@CheckBlock@16
EXTRN	@GetDirection@16:NEAR
EXTRN	_dPiece:BYTE
EXTRN	_nSolidTable:BYTE
; Function compile flags: /Ogsy
;	COMDAT @CheckBlock@16
_TEXT	SEGMENT
_tx$ = 8
_ty$ = 12
@CheckBlock@16 PROC NEAR				; COMDAT
; _fx$ = ecx
; _fy$ = edx
; Line 418
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	esi, ecx
; Line 422
	xor	ebx, ebx
$L85169:
; Line 423
	cmp	esi, DWORD PTR _tx$[esp+8]
	jne	SHORT $L85171
	cmp	edi, DWORD PTR _ty$[esp+8]
	je	SHORT $L85170
$L85171:
; Line 424
	push	DWORD PTR _ty$[esp+8]
	mov	edx, edi
	mov	ecx, esi
	push	DWORD PTR _tx$[esp+12]
	call	@GetDirection@16
; Line 425
	shl	eax, 2
	add	esi, DWORD PTR _XDirAdd[eax]
; Line 426
	add	edi, DWORD PTR _YDirAdd[eax]
; Line 427
	mov	eax, esi
	imul	eax, 112				; 00000070H
	add	eax, edi
	mov	eax, DWORD PTR _dPiece[eax*4]
	cmp	BYTE PTR _nSolidTable[eax], 0
	je	SHORT $L85169
; Line 428
	xor	ebx, ebx
	inc	ebx
; Line 429
	jmp	SHORT $L85169
$L85170:
	pop	edi
; Line 431
	mov	eax, ebx
	pop	esi
	pop	ebx
; Line 432
	ret	8
@CheckBlock@16 ENDP
_TEXT	ENDS
PUBLIC	@FindClosest@12
EXTRN	_CrawlTable:BYTE
EXTRN	_dMonster:BYTE
; Function compile flags: /Ogsy
;	COMDAT @FindClosest@12
_TEXT	SEGMENT
_sx$ = -12
_sy$ = -16
_rad$ = 8
_CrawlNum$ = -92
_v13$ = -8
@FindClosest@12 PROC NEAR				; COMDAT
; _sx$ = ecx
; _sy$ = edx
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
; Line 448
	and	DWORD PTR _CrawlNum$[ebp], 0
; Line 469
	push	19					; 00000013H
	pop	eax
	mov	DWORD PTR _sy$[ebp], edx
	cmp	DWORD PTR _rad$[ebp], eax
	mov	DWORD PTR _sx$[ebp], ecx
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	mov	DWORD PTR _CrawlNum$[ebp+24], 240	; 000000f0H
	mov	DWORD PTR _CrawlNum$[ebp+28], 337	; 00000151H
	mov	DWORD PTR _CrawlNum$[ebp+32], 450	; 000001c2H
	mov	DWORD PTR _CrawlNum$[ebp+36], 579	; 00000243H
	mov	DWORD PTR _CrawlNum$[ebp+40], 724	; 000002d4H
	mov	DWORD PTR _CrawlNum$[ebp+44], 885	; 00000375H
	mov	DWORD PTR _CrawlNum$[ebp+48], 1062	; 00000426H
	mov	DWORD PTR _CrawlNum$[ebp+52], 1255	; 000004e7H
	mov	DWORD PTR _CrawlNum$[ebp+56], 1464	; 000005b8H
	mov	DWORD PTR _CrawlNum$[ebp+60], 1689	; 00000699H
	mov	DWORD PTR _CrawlNum$[ebp+64], 1930	; 0000078aH
	mov	DWORD PTR _CrawlNum$[ebp+68], 2187	; 0000088bH
	mov	DWORD PTR _CrawlNum$[ebp+72], 2460	; 0000099cH
	jle	SHORT $L85191
; Line 470
	mov	DWORD PTR _rad$[ebp], eax
$L85191:
; Line 472
	xor	eax, eax
	push	ebx
	inc	eax
	push	esi
; Line 473
	cmp	DWORD PTR _rad$[ebp], eax
	push	edi
	mov	DWORD PTR _v13$[ebp], eax
; Line 474
	jle	SHORT $L88904
; Line 476
	push	4
	mov	DWORD PTR -4+[ebp], 8
	pop	eax
$L85194:
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax]
; Line 477
	movzx	ebx, BYTE PTR _CrawlTable[eax]
; Line 478
	test	ebx, ebx
	jle	SHORT $LABEL_13$85198
; Line 485
	lea	esi, DWORD PTR _CrawlTable[eax+2]
$L85201:
; Line 487
	movsx	eax, BYTE PTR [esi-1]
; Line 488
	movsx	ecx, BYTE PTR [esi]
	add	eax, DWORD PTR _sx$[ebp]
	mov	edx, DWORD PTR _sy$[ebp]
	add	ecx, edx
; Line 489
	test	eax, eax
	jle	SHORT $L85207
	cmp	eax, 112				; 00000070H
	jge	SHORT $L85207
	test	ecx, ecx
	jle	SHORT $L85207
	cmp	ecx, 112				; 00000070H
	jge	SHORT $L85207
; Line 490
	mov	edi, eax
	imul	edi, 112				; 00000070H
	add	edi, ecx
	mov	edi, DWORD PTR _dMonster[edi*4]
; Line 491
	test	edi, edi
	jle	SHORT $L85207
	push	ecx
	mov	ecx, DWORD PTR _sx$[ebp]
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	je	SHORT $L88902
$L85207:
; Line 494
	inc	esi
	inc	esi
; Line 495
	dec	ebx
	test	ebx, ebx
	jg	SHORT $L85201
$LABEL_13$85198:
; Line 481
	inc	DWORD PTR _v13$[ebp]
	mov	eax, DWORD PTR -4+[ebp]
; Line 482
	mov	ecx, DWORD PTR _v13$[ebp]
	add	DWORD PTR -4+[ebp], 4
	cmp	ecx, DWORD PTR _rad$[ebp]
	jl	SHORT $L85194
$L88904:
; Line 483
	or	eax, -1
$L85202:
	pop	edi
	pop	esi
	pop	ebx
; Line 498
	leave
	ret	4
$L88902:
; Line 492
	lea	eax, DWORD PTR [edi-1]
	jmp	SHORT $L85202
@FindClosest@12 ENDP
_TEXT	ENDS
PUBLIC	@GetSpellLevel@8
; Function compile flags: /Ogsy
;	COMDAT @GetSpellLevel@8
_TEXT	SEGMENT
@GetSpellLevel@8 PROC NEAR				; COMDAT
; _id$ = ecx
; _sn$ = edx
; Line 504
	cmp	ecx, DWORD PTR _myplr
	jne	SHORT $L85215
; Line 505
	imul	ecx, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[ecx+edx+193]
	movsx	ecx, BYTE PTR _plr[ecx+21592]
	add	eax, ecx
; Line 506
	jmp	SHORT $L85216
$L85215:
; Line 507
	xor	eax, eax
	inc	eax
$L85216:
; Line 508
	test	eax, eax
	jge	SHORT $L85217
; Line 509
	xor	eax, eax
$L85217:
; Line 511
	ret	0
@GetSpellLevel@8 ENDP
_TEXT	ENDS
PUBLIC	@GetDirection8@16
EXTRN	_abs:NEAR
; Function compile flags: /Ogsy
;	COMDAT @GetDirection8@16
_TEXT	SEGMENT
_y1$ = -276
_x2$ = 8
_y2$ = 12
_lrtoul$ = -8
_urtoll$ = -4
_lltour$ = -16
_ultolr$ = -12
_Dirs$ = -272
@GetDirection8@16 PROC NEAR				; COMDAT
; _x1$ = ecx
; _y1$ = edx
; Line 514
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
; Line 528
	xor	al, al
	push	esi
	push	edi
	mov	DWORD PTR _y1$[ebp], edx
	mov	edi, ecx
	mov	BYTE PTR _Dirs$[ebp], 99		; 00000063H
	mov	BYTE PTR _Dirs$[ebp+1], al
	mov	BYTE PTR _Dirs$[ebp+2], al
	mov	BYTE PTR _Dirs$[ebp+3], al
	mov	BYTE PTR _Dirs$[ebp+4], al
	mov	BYTE PTR _Dirs$[ebp+5], al
	mov	BYTE PTR _Dirs$[ebp+6], al
	mov	BYTE PTR _Dirs$[ebp+7], al
	mov	BYTE PTR _Dirs$[ebp+8], al
	mov	BYTE PTR _Dirs$[ebp+9], al
	mov	BYTE PTR _Dirs$[ebp+10], al
	mov	BYTE PTR _Dirs$[ebp+11], al
	mov	BYTE PTR _Dirs$[ebp+12], al
	mov	BYTE PTR _Dirs$[ebp+13], al
	mov	BYTE PTR _Dirs$[ebp+14], al
	mov	BYTE PTR _Dirs$[ebp+15], al
; Line 529
	mov	BYTE PTR _Dirs$[ebp+16], 2
	mov	BYTE PTR _Dirs$[ebp+17], 1
	mov	BYTE PTR _Dirs$[ebp+18], 1
	mov	BYTE PTR _Dirs$[ebp+19], 1
	mov	BYTE PTR _Dirs$[ebp+20], al
	mov	BYTE PTR _Dirs$[ebp+21], al
	mov	BYTE PTR _Dirs$[ebp+22], al
	mov	BYTE PTR _Dirs$[ebp+23], al
	mov	BYTE PTR _Dirs$[ebp+24], al
	mov	BYTE PTR _Dirs$[ebp+25], al
	mov	BYTE PTR _Dirs$[ebp+26], al
	mov	BYTE PTR _Dirs$[ebp+27], al
	mov	BYTE PTR _Dirs$[ebp+28], al
	mov	BYTE PTR _Dirs$[ebp+29], al
	mov	BYTE PTR _Dirs$[ebp+30], al
	mov	BYTE PTR _Dirs$[ebp+31], al
; Line 530
	mov	BYTE PTR _Dirs$[ebp+32], 2
	mov	BYTE PTR _Dirs$[ebp+33], 1
	mov	BYTE PTR _Dirs$[ebp+34], 1
	mov	BYTE PTR _Dirs$[ebp+35], 1
	mov	BYTE PTR _Dirs$[ebp+36], 1
	mov	BYTE PTR _Dirs$[ebp+37], 1
	mov	BYTE PTR _Dirs$[ebp+38], 1
	mov	BYTE PTR _Dirs$[ebp+39], al
	mov	BYTE PTR _Dirs$[ebp+40], al
	mov	BYTE PTR _Dirs$[ebp+41], al
	mov	BYTE PTR _Dirs$[ebp+42], al
	mov	BYTE PTR _Dirs$[ebp+43], al
	mov	BYTE PTR _Dirs$[ebp+44], al
	mov	BYTE PTR _Dirs$[ebp+45], al
	mov	BYTE PTR _Dirs$[ebp+46], al
	mov	BYTE PTR _Dirs$[ebp+47], al
; Line 531
	mov	BYTE PTR _Dirs$[ebp+48], 2
	mov	BYTE PTR _Dirs$[ebp+49], 1
	mov	BYTE PTR _Dirs$[ebp+50], 1
	mov	BYTE PTR _Dirs$[ebp+51], 1
	mov	BYTE PTR _Dirs$[ebp+52], 1
	mov	BYTE PTR _Dirs$[ebp+53], 1
	mov	BYTE PTR _Dirs$[ebp+54], 1
	mov	BYTE PTR _Dirs$[ebp+55], 1
	mov	BYTE PTR _Dirs$[ebp+56], 1
	mov	BYTE PTR _Dirs$[ebp+57], al
	mov	BYTE PTR _Dirs$[ebp+58], al
	mov	BYTE PTR _Dirs$[ebp+59], al
	mov	BYTE PTR _Dirs$[ebp+60], al
	mov	BYTE PTR _Dirs$[ebp+61], al
	mov	BYTE PTR _Dirs$[ebp+62], al
	mov	BYTE PTR _Dirs$[ebp+63], al
; Line 532
	mov	BYTE PTR _Dirs$[ebp+64], 2
	mov	BYTE PTR _Dirs$[ebp+65], 2
	mov	BYTE PTR _Dirs$[ebp+66], 1
	mov	BYTE PTR _Dirs$[ebp+67], 1
	mov	BYTE PTR _Dirs$[ebp+68], 1
	mov	BYTE PTR _Dirs$[ebp+69], 1
	mov	BYTE PTR _Dirs$[ebp+70], 1
	mov	BYTE PTR _Dirs$[ebp+71], 1
	mov	BYTE PTR _Dirs$[ebp+72], 1
	mov	BYTE PTR _Dirs$[ebp+73], 1
	mov	BYTE PTR _Dirs$[ebp+74], 1
	mov	BYTE PTR _Dirs$[ebp+75], 1
	mov	BYTE PTR _Dirs$[ebp+76], al
	mov	BYTE PTR _Dirs$[ebp+77], al
	mov	BYTE PTR _Dirs$[ebp+78], al
	mov	BYTE PTR _Dirs$[ebp+79], al
; Line 533
	mov	BYTE PTR _Dirs$[ebp+80], 2
	mov	BYTE PTR _Dirs$[ebp+81], 2
	mov	BYTE PTR _Dirs$[ebp+82], 1
	mov	BYTE PTR _Dirs$[ebp+83], 1
	mov	BYTE PTR _Dirs$[ebp+84], 1
	mov	BYTE PTR _Dirs$[ebp+85], 1
	mov	BYTE PTR _Dirs$[ebp+86], 1
	mov	BYTE PTR _Dirs$[ebp+87], 1
	mov	BYTE PTR _Dirs$[ebp+88], 1
	mov	BYTE PTR _Dirs$[ebp+89], 1
	mov	BYTE PTR _Dirs$[ebp+90], 1
	mov	BYTE PTR _Dirs$[ebp+91], 1
	mov	BYTE PTR _Dirs$[ebp+92], 1
	mov	BYTE PTR _Dirs$[ebp+93], 1
	mov	BYTE PTR _Dirs$[ebp+94], al
	mov	BYTE PTR _Dirs$[ebp+95], al
; Line 534
	mov	BYTE PTR _Dirs$[ebp+96], 2
	mov	BYTE PTR _Dirs$[ebp+97], 2
	mov	BYTE PTR _Dirs$[ebp+98], 1
	mov	BYTE PTR _Dirs$[ebp+99], 1
	mov	BYTE PTR _Dirs$[ebp+100], 1
	mov	BYTE PTR _Dirs$[ebp+101], 1
	mov	BYTE PTR _Dirs$[ebp+102], 1
	mov	BYTE PTR _Dirs$[ebp+103], 1
	mov	BYTE PTR _Dirs$[ebp+104], 1
	mov	BYTE PTR _Dirs$[ebp+105], 1
	mov	BYTE PTR _Dirs$[ebp+106], 1
	mov	BYTE PTR _Dirs$[ebp+107], 1
	mov	BYTE PTR _Dirs$[ebp+108], 1
	mov	BYTE PTR _Dirs$[ebp+109], 1
	mov	BYTE PTR _Dirs$[ebp+110], 1
	mov	BYTE PTR _Dirs$[ebp+111], 1
; Line 535
	mov	BYTE PTR _Dirs$[ebp+112], 2
	mov	BYTE PTR _Dirs$[ebp+113], 2
	mov	BYTE PTR _Dirs$[ebp+114], 2
	mov	BYTE PTR _Dirs$[ebp+115], 1
	mov	BYTE PTR _Dirs$[ebp+116], 1
	mov	BYTE PTR _Dirs$[ebp+117], 1
	mov	BYTE PTR _Dirs$[ebp+118], 1
	mov	BYTE PTR _Dirs$[ebp+119], 1
	mov	BYTE PTR _Dirs$[ebp+120], 1
	mov	BYTE PTR _Dirs$[ebp+121], 1
	mov	BYTE PTR _Dirs$[ebp+122], 1
	mov	BYTE PTR _Dirs$[ebp+123], 1
	mov	BYTE PTR _Dirs$[ebp+124], 1
	mov	BYTE PTR _Dirs$[ebp+125], 1
	mov	BYTE PTR _Dirs$[ebp+126], 1
	mov	BYTE PTR _Dirs$[ebp+127], 1
; Line 536
	mov	BYTE PTR _Dirs$[ebp+128], 2
	mov	BYTE PTR _Dirs$[ebp+129], 2
	mov	BYTE PTR _Dirs$[ebp+130], 2
	mov	BYTE PTR _Dirs$[ebp+131], 1
	mov	BYTE PTR _Dirs$[ebp+132], 1
	mov	BYTE PTR _Dirs$[ebp+133], 1
	mov	BYTE PTR _Dirs$[ebp+134], 1
	mov	BYTE PTR _Dirs$[ebp+135], 1
	mov	BYTE PTR _Dirs$[ebp+136], 1
	mov	BYTE PTR _Dirs$[ebp+137], 1
	mov	BYTE PTR _Dirs$[ebp+138], 1
	mov	BYTE PTR _Dirs$[ebp+139], 1
	mov	BYTE PTR _Dirs$[ebp+140], 1
	mov	BYTE PTR _Dirs$[ebp+141], 1
	mov	BYTE PTR _Dirs$[ebp+142], 1
	mov	BYTE PTR _Dirs$[ebp+143], 1
; Line 537
	mov	BYTE PTR _Dirs$[ebp+144], 2
	mov	BYTE PTR _Dirs$[ebp+145], 2
	mov	BYTE PTR _Dirs$[ebp+146], 2
	mov	BYTE PTR _Dirs$[ebp+147], 2
	mov	BYTE PTR _Dirs$[ebp+148], 1
	mov	BYTE PTR _Dirs$[ebp+149], 1
	mov	BYTE PTR _Dirs$[ebp+150], 1
	mov	BYTE PTR _Dirs$[ebp+151], 1
	mov	BYTE PTR _Dirs$[ebp+152], 1
	mov	BYTE PTR _Dirs$[ebp+153], 1
	mov	BYTE PTR _Dirs$[ebp+154], 1
	mov	BYTE PTR _Dirs$[ebp+155], 1
	mov	BYTE PTR _Dirs$[ebp+156], 1
	mov	BYTE PTR _Dirs$[ebp+157], 1
	mov	BYTE PTR _Dirs$[ebp+158], 1
	mov	BYTE PTR _Dirs$[ebp+159], 1
; Line 538
	mov	BYTE PTR _Dirs$[ebp+160], 2
	mov	BYTE PTR _Dirs$[ebp+161], 2
	mov	BYTE PTR _Dirs$[ebp+162], 2
	mov	BYTE PTR _Dirs$[ebp+163], 2
	mov	BYTE PTR _Dirs$[ebp+164], 1
	mov	BYTE PTR _Dirs$[ebp+165], 1
	mov	BYTE PTR _Dirs$[ebp+166], 1
	mov	BYTE PTR _Dirs$[ebp+167], 1
	mov	BYTE PTR _Dirs$[ebp+168], 1
	mov	BYTE PTR _Dirs$[ebp+169], 1
	mov	BYTE PTR _Dirs$[ebp+170], 1
	mov	BYTE PTR _Dirs$[ebp+171], 1
	mov	BYTE PTR _Dirs$[ebp+172], 1
	mov	BYTE PTR _Dirs$[ebp+173], 1
	mov	BYTE PTR _Dirs$[ebp+174], 1
	mov	BYTE PTR _Dirs$[ebp+175], 1
; Line 539
	mov	BYTE PTR _Dirs$[ebp+176], 2
	mov	BYTE PTR _Dirs$[ebp+177], 2
	mov	BYTE PTR _Dirs$[ebp+178], 2
	mov	BYTE PTR _Dirs$[ebp+179], 2
	mov	BYTE PTR _Dirs$[ebp+180], 1
	mov	BYTE PTR _Dirs$[ebp+181], 1
	mov	BYTE PTR _Dirs$[ebp+182], 1
	mov	BYTE PTR _Dirs$[ebp+183], 1
	mov	BYTE PTR _Dirs$[ebp+184], 1
	mov	BYTE PTR _Dirs$[ebp+185], 1
	mov	BYTE PTR _Dirs$[ebp+186], 1
	mov	BYTE PTR _Dirs$[ebp+187], 1
	mov	BYTE PTR _Dirs$[ebp+188], 1
	mov	BYTE PTR _Dirs$[ebp+189], 1
	mov	BYTE PTR _Dirs$[ebp+190], 1
	mov	BYTE PTR _Dirs$[ebp+191], 1
; Line 540
	mov	BYTE PTR _Dirs$[ebp+192], 2
	mov	BYTE PTR _Dirs$[ebp+193], 2
	mov	BYTE PTR _Dirs$[ebp+194], 2
	mov	BYTE PTR _Dirs$[ebp+195], 2
	mov	BYTE PTR _Dirs$[ebp+196], 2
	mov	BYTE PTR _Dirs$[ebp+197], 1
	mov	BYTE PTR _Dirs$[ebp+198], 1
	mov	BYTE PTR _Dirs$[ebp+199], 1
	mov	BYTE PTR _Dirs$[ebp+200], 1
	mov	BYTE PTR _Dirs$[ebp+201], 1
	mov	BYTE PTR _Dirs$[ebp+202], 1
	mov	BYTE PTR _Dirs$[ebp+203], 1
	mov	BYTE PTR _Dirs$[ebp+204], 1
	mov	BYTE PTR _Dirs$[ebp+205], 1
	mov	BYTE PTR _Dirs$[ebp+206], 1
	mov	BYTE PTR _Dirs$[ebp+207], 1
; Line 541
	mov	BYTE PTR _Dirs$[ebp+208], 2
	mov	BYTE PTR _Dirs$[ebp+209], 2
	mov	BYTE PTR _Dirs$[ebp+210], 2
	mov	BYTE PTR _Dirs$[ebp+211], 2
	mov	BYTE PTR _Dirs$[ebp+212], 2
	mov	BYTE PTR _Dirs$[ebp+213], 1
	mov	BYTE PTR _Dirs$[ebp+214], 1
	mov	BYTE PTR _Dirs$[ebp+215], 1
	mov	BYTE PTR _Dirs$[ebp+216], 1
	mov	BYTE PTR _Dirs$[ebp+217], 1
	mov	BYTE PTR _Dirs$[ebp+218], 1
	mov	BYTE PTR _Dirs$[ebp+219], 1
	mov	BYTE PTR _Dirs$[ebp+220], 1
	mov	BYTE PTR _Dirs$[ebp+221], 1
	mov	BYTE PTR _Dirs$[ebp+222], 1
	mov	BYTE PTR _Dirs$[ebp+223], 1
; Line 542
	mov	BYTE PTR _Dirs$[ebp+224], 2
	mov	BYTE PTR _Dirs$[ebp+225], 2
	mov	BYTE PTR _Dirs$[ebp+226], 2
	mov	BYTE PTR _Dirs$[ebp+227], 2
	mov	BYTE PTR _Dirs$[ebp+228], 2
	mov	BYTE PTR _Dirs$[ebp+229], 2
	mov	BYTE PTR _Dirs$[ebp+230], 1
	mov	BYTE PTR _Dirs$[ebp+231], 1
	mov	BYTE PTR _Dirs$[ebp+232], 1
	mov	BYTE PTR _Dirs$[ebp+233], 1
	mov	BYTE PTR _Dirs$[ebp+234], 1
	mov	BYTE PTR _Dirs$[ebp+235], 1
	mov	BYTE PTR _Dirs$[ebp+236], 1
	mov	BYTE PTR _Dirs$[ebp+237], 1
; Line 556
	mov	BYTE PTR _lltour$[ebp+1], al
; Line 558
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, edi
	mov	BYTE PTR _Dirs$[ebp+238], 1
	push	eax
	mov	BYTE PTR _Dirs$[ebp+239], 1
	mov	BYTE PTR _Dirs$[ebp+240], 2
	mov	BYTE PTR _Dirs$[ebp+241], 2
	mov	BYTE PTR _Dirs$[ebp+242], 2
	mov	BYTE PTR _Dirs$[ebp+243], 2
	mov	BYTE PTR _Dirs$[ebp+244], 2
	mov	BYTE PTR _Dirs$[ebp+245], 2
	mov	BYTE PTR _Dirs$[ebp+246], 1
	mov	BYTE PTR _Dirs$[ebp+247], 1
	mov	BYTE PTR _Dirs$[ebp+248], 1
	mov	BYTE PTR _Dirs$[ebp+249], 1
	mov	BYTE PTR _Dirs$[ebp+250], 1
	mov	BYTE PTR _Dirs$[ebp+251], 1
	mov	BYTE PTR _Dirs$[ebp+252], 1
	mov	BYTE PTR _Dirs$[ebp+253], 1
	mov	BYTE PTR _Dirs$[ebp+254], 1
	mov	BYTE PTR _Dirs$[ebp+255], 1
	mov	BYTE PTR _lrtoul$[ebp], 3
	mov	BYTE PTR _lrtoul$[ebp+1], 4
	mov	BYTE PTR _lrtoul$[ebp+2], 5
	mov	BYTE PTR _urtoll$[ebp], 3
	mov	BYTE PTR _urtoll$[ebp+1], 2
	mov	BYTE PTR _urtoll$[ebp+2], 1
	mov	BYTE PTR _ultolr$[ebp], 7
	mov	BYTE PTR _ultolr$[ebp+1], 6
	mov	BYTE PTR _ultolr$[ebp+2], 5
	mov	BYTE PTR _lltour$[ebp], 7
	mov	BYTE PTR _lltour$[ebp+2], 1
	call	_abs
	mov	esi, eax
	pop	ecx
; Line 559
	cmp	esi, 15					; 0000000fH
	jle	SHORT $L85238
; Line 560
	push	15					; 0000000fH
	pop	esi
$L85238:
; Line 561
	mov	eax, DWORD PTR _y2$[ebp]
	sub	eax, DWORD PTR _y1$[ebp]
	push	eax
	call	_abs
; Line 562
	cmp	eax, 15					; 0000000fH
	pop	ecx
	jle	SHORT $L85239
; Line 563
	push	15					; 0000000fH
	pop	eax
$L85239:
; Line 566
	mov	ecx, DWORD PTR _y2$[ebp]
	shl	eax, 4
	add	eax, esi
	cmp	edi, DWORD PTR _x2$[ebp]
	pop	edi
	pop	esi
	movzx	eax, BYTE PTR _Dirs$[ebp+eax]
	jg	SHORT $L85240
	cmp	DWORD PTR _y1$[ebp], ecx
	jg	SHORT $L85241
; Line 567
	movzx	eax, BYTE PTR _lltour$[ebp+eax]
; Line 568
	jmp	SHORT $L85248
$L85241:
; Line 569
	movzx	eax, BYTE PTR _ultolr$[ebp+eax]
; Line 570
	jmp	SHORT $L85248
$L85240:
	cmp	DWORD PTR _y1$[ebp], ecx
	jg	SHORT $L85246
; Line 571
	movzx	eax, BYTE PTR _urtoll$[ebp+eax]
; Line 572
	jmp	SHORT $L85248
$L85246:
; Line 573
	movzx	eax, BYTE PTR _lrtoul$[ebp+eax]
$L85248:
; Line 576
	leave
	ret	8
@GetDirection8@16 ENDP
_TEXT	ENDS
PUBLIC	@GetDirection16@16
; Function compile flags: /Ogsy
;	COMDAT @GetDirection16@16
_TEXT	SEGMENT
_y1$ = -292
_x2$ = 8
_y2$ = 12
_lrtoul$ = -24
_urtoll$ = -32
_lltour$ = -8
_ultolr$ = -16
_Dirs$ = -288
@GetDirection16@16 PROC NEAR				; COMDAT
; _x1$ = ecx
; _y1$ = edx
; Line 579
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
; Line 593
	xor	al, al
	push	esi
	push	edi
	mov	DWORD PTR _y1$[ebp], edx
	mov	edi, ecx
	mov	BYTE PTR _Dirs$[ebp], 99		; 00000063H
	mov	BYTE PTR _Dirs$[ebp+1], al
	mov	BYTE PTR _Dirs$[ebp+2], al
	mov	BYTE PTR _Dirs$[ebp+3], al
	mov	BYTE PTR _Dirs$[ebp+4], al
	mov	BYTE PTR _Dirs$[ebp+5], al
	mov	BYTE PTR _Dirs$[ebp+6], al
	mov	BYTE PTR _Dirs$[ebp+7], al
	mov	BYTE PTR _Dirs$[ebp+8], al
	mov	BYTE PTR _Dirs$[ebp+9], al
	mov	BYTE PTR _Dirs$[ebp+10], al
	mov	BYTE PTR _Dirs$[ebp+11], al
	mov	BYTE PTR _Dirs$[ebp+12], al
	mov	BYTE PTR _Dirs$[ebp+13], al
	mov	BYTE PTR _Dirs$[ebp+14], al
	mov	BYTE PTR _Dirs$[ebp+15], al
; Line 594
	mov	BYTE PTR _Dirs$[ebp+16], 4
	mov	BYTE PTR _Dirs$[ebp+17], 2
	mov	BYTE PTR _Dirs$[ebp+18], 1
	mov	BYTE PTR _Dirs$[ebp+19], 1
	mov	BYTE PTR _Dirs$[ebp+20], al
	mov	BYTE PTR _Dirs$[ebp+21], al
	mov	BYTE PTR _Dirs$[ebp+22], al
	mov	BYTE PTR _Dirs$[ebp+23], al
	mov	BYTE PTR _Dirs$[ebp+24], al
	mov	BYTE PTR _Dirs$[ebp+25], al
	mov	BYTE PTR _Dirs$[ebp+26], al
	mov	BYTE PTR _Dirs$[ebp+27], al
	mov	BYTE PTR _Dirs$[ebp+28], al
	mov	BYTE PTR _Dirs$[ebp+29], al
	mov	BYTE PTR _Dirs$[ebp+30], al
	mov	BYTE PTR _Dirs$[ebp+31], al
; Line 595
	mov	BYTE PTR _Dirs$[ebp+32], 4
	mov	BYTE PTR _Dirs$[ebp+33], 3
	mov	BYTE PTR _Dirs$[ebp+34], 2
	mov	BYTE PTR _Dirs$[ebp+35], 1
	mov	BYTE PTR _Dirs$[ebp+36], 1
	mov	BYTE PTR _Dirs$[ebp+37], 1
	mov	BYTE PTR _Dirs$[ebp+38], 1
	mov	BYTE PTR _Dirs$[ebp+39], 1
	mov	BYTE PTR _Dirs$[ebp+40], al
	mov	BYTE PTR _Dirs$[ebp+41], al
	mov	BYTE PTR _Dirs$[ebp+42], al
	mov	BYTE PTR _Dirs$[ebp+43], al
	mov	BYTE PTR _Dirs$[ebp+44], al
	mov	BYTE PTR _Dirs$[ebp+45], al
	mov	BYTE PTR _Dirs$[ebp+46], al
	mov	BYTE PTR _Dirs$[ebp+47], al
; Line 596
	mov	BYTE PTR _Dirs$[ebp+48], 4
	mov	BYTE PTR _Dirs$[ebp+49], 3
	mov	BYTE PTR _Dirs$[ebp+50], 3
	mov	BYTE PTR _Dirs$[ebp+51], 2
	mov	BYTE PTR _Dirs$[ebp+52], 2
	mov	BYTE PTR _Dirs$[ebp+53], 1
	mov	BYTE PTR _Dirs$[ebp+54], 1
	mov	BYTE PTR _Dirs$[ebp+55], 1
	mov	BYTE PTR _Dirs$[ebp+56], 1
	mov	BYTE PTR _Dirs$[ebp+57], 1
	mov	BYTE PTR _Dirs$[ebp+58], 1
	mov	BYTE PTR _Dirs$[ebp+59], 1
	mov	BYTE PTR _Dirs$[ebp+60], al
	mov	BYTE PTR _Dirs$[ebp+61], al
	mov	BYTE PTR _Dirs$[ebp+62], al
	mov	BYTE PTR _Dirs$[ebp+63], al
; Line 597
	mov	BYTE PTR _Dirs$[ebp+64], 4
	mov	BYTE PTR _Dirs$[ebp+65], 4
	mov	BYTE PTR _Dirs$[ebp+66], 3
	mov	BYTE PTR _Dirs$[ebp+67], 2
	mov	BYTE PTR _Dirs$[ebp+68], 2
	mov	BYTE PTR _Dirs$[ebp+69], 1
	mov	BYTE PTR _Dirs$[ebp+70], 1
	mov	BYTE PTR _Dirs$[ebp+71], 1
	mov	BYTE PTR _Dirs$[ebp+72], 1
	mov	BYTE PTR _Dirs$[ebp+73], 1
	mov	BYTE PTR _Dirs$[ebp+74], 1
	mov	BYTE PTR _Dirs$[ebp+75], 1
	mov	BYTE PTR _Dirs$[ebp+76], 1
	mov	BYTE PTR _Dirs$[ebp+77], 1
	mov	BYTE PTR _Dirs$[ebp+78], 1
	mov	BYTE PTR _Dirs$[ebp+79], 1
; Line 598
	mov	BYTE PTR _Dirs$[ebp+80], 4
	mov	BYTE PTR _Dirs$[ebp+81], 4
	mov	BYTE PTR _Dirs$[ebp+82], 3
	mov	BYTE PTR _Dirs$[ebp+83], 3
	mov	BYTE PTR _Dirs$[ebp+84], 2
	mov	BYTE PTR _Dirs$[ebp+85], 2
	mov	BYTE PTR _Dirs$[ebp+86], 2
	mov	BYTE PTR _Dirs$[ebp+87], 1
	mov	BYTE PTR _Dirs$[ebp+88], 1
	mov	BYTE PTR _Dirs$[ebp+89], 1
	mov	BYTE PTR _Dirs$[ebp+90], 1
	mov	BYTE PTR _Dirs$[ebp+91], 1
	mov	BYTE PTR _Dirs$[ebp+92], 1
	mov	BYTE PTR _Dirs$[ebp+93], 1
	mov	BYTE PTR _Dirs$[ebp+94], 1
	mov	BYTE PTR _Dirs$[ebp+95], 1
; Line 599
	mov	BYTE PTR _Dirs$[ebp+96], 4
	mov	BYTE PTR _Dirs$[ebp+97], 4
	mov	BYTE PTR _Dirs$[ebp+98], 3
	mov	BYTE PTR _Dirs$[ebp+99], 3
	mov	BYTE PTR _Dirs$[ebp+100], 2
	mov	BYTE PTR _Dirs$[ebp+101], 2
	mov	BYTE PTR _Dirs$[ebp+102], 2
	mov	BYTE PTR _Dirs$[ebp+103], 2
	mov	BYTE PTR _Dirs$[ebp+104], 2
	mov	BYTE PTR _Dirs$[ebp+105], 1
	mov	BYTE PTR _Dirs$[ebp+106], 1
	mov	BYTE PTR _Dirs$[ebp+107], 1
	mov	BYTE PTR _Dirs$[ebp+108], 1
	mov	BYTE PTR _Dirs$[ebp+109], 1
	mov	BYTE PTR _Dirs$[ebp+110], 1
	mov	BYTE PTR _Dirs$[ebp+111], 1
; Line 600
	mov	BYTE PTR _Dirs$[ebp+112], 4
	mov	BYTE PTR _Dirs$[ebp+113], 4
	mov	BYTE PTR _Dirs$[ebp+114], 3
	mov	BYTE PTR _Dirs$[ebp+115], 3
	mov	BYTE PTR _Dirs$[ebp+116], 3
	mov	BYTE PTR _Dirs$[ebp+117], 3
	mov	BYTE PTR _Dirs$[ebp+118], 2
	mov	BYTE PTR _Dirs$[ebp+119], 2
	mov	BYTE PTR _Dirs$[ebp+120], 2
	mov	BYTE PTR _Dirs$[ebp+121], 2
	mov	BYTE PTR _Dirs$[ebp+122], 1
	mov	BYTE PTR _Dirs$[ebp+123], 1
	mov	BYTE PTR _Dirs$[ebp+124], 1
	mov	BYTE PTR _Dirs$[ebp+125], 1
	mov	BYTE PTR _Dirs$[ebp+126], 1
	mov	BYTE PTR _Dirs$[ebp+127], 1
; Line 601
	mov	BYTE PTR _Dirs$[ebp+128], 4
	mov	BYTE PTR _Dirs$[ebp+129], 4
	mov	BYTE PTR _Dirs$[ebp+130], 4
	mov	BYTE PTR _Dirs$[ebp+131], 3
	mov	BYTE PTR _Dirs$[ebp+132], 3
	mov	BYTE PTR _Dirs$[ebp+133], 3
	mov	BYTE PTR _Dirs$[ebp+134], 2
	mov	BYTE PTR _Dirs$[ebp+135], 2
	mov	BYTE PTR _Dirs$[ebp+136], 2
	mov	BYTE PTR _Dirs$[ebp+137], 2
	mov	BYTE PTR _Dirs$[ebp+138], 2
	mov	BYTE PTR _Dirs$[ebp+139], 1
	mov	BYTE PTR _Dirs$[ebp+140], 1
	mov	BYTE PTR _Dirs$[ebp+141], 1
	mov	BYTE PTR _Dirs$[ebp+142], 1
	mov	BYTE PTR _Dirs$[ebp+143], 1
; Line 602
	mov	BYTE PTR _Dirs$[ebp+144], 4
	mov	BYTE PTR _Dirs$[ebp+145], 4
	mov	BYTE PTR _Dirs$[ebp+146], 4
	mov	BYTE PTR _Dirs$[ebp+147], 3
	mov	BYTE PTR _Dirs$[ebp+148], 3
	mov	BYTE PTR _Dirs$[ebp+149], 3
	mov	BYTE PTR _Dirs$[ebp+150], 3
	mov	BYTE PTR _Dirs$[ebp+151], 2
	mov	BYTE PTR _Dirs$[ebp+152], 2
	mov	BYTE PTR _Dirs$[ebp+153], 2
	mov	BYTE PTR _Dirs$[ebp+154], 2
	mov	BYTE PTR _Dirs$[ebp+155], 2
	mov	BYTE PTR _Dirs$[ebp+156], 1
	mov	BYTE PTR _Dirs$[ebp+157], 1
	mov	BYTE PTR _Dirs$[ebp+158], 1
	mov	BYTE PTR _Dirs$[ebp+159], 1
; Line 603
	mov	BYTE PTR _Dirs$[ebp+160], 4
	mov	BYTE PTR _Dirs$[ebp+161], 4
	mov	BYTE PTR _Dirs$[ebp+162], 4
	mov	BYTE PTR _Dirs$[ebp+163], 3
	mov	BYTE PTR _Dirs$[ebp+164], 3
	mov	BYTE PTR _Dirs$[ebp+165], 3
	mov	BYTE PTR _Dirs$[ebp+166], 3
	mov	BYTE PTR _Dirs$[ebp+167], 3
	mov	BYTE PTR _Dirs$[ebp+168], 2
	mov	BYTE PTR _Dirs$[ebp+169], 2
	mov	BYTE PTR _Dirs$[ebp+170], 2
	mov	BYTE PTR _Dirs$[ebp+171], 2
	mov	BYTE PTR _Dirs$[ebp+172], 2
	mov	BYTE PTR _Dirs$[ebp+173], 2
	mov	BYTE PTR _Dirs$[ebp+174], 1
	mov	BYTE PTR _Dirs$[ebp+175], 1
; Line 604
	mov	BYTE PTR _Dirs$[ebp+176], 4
	mov	BYTE PTR _Dirs$[ebp+177], 4
	mov	BYTE PTR _Dirs$[ebp+178], 4
	mov	BYTE PTR _Dirs$[ebp+179], 3
	mov	BYTE PTR _Dirs$[ebp+180], 3
	mov	BYTE PTR _Dirs$[ebp+181], 3
	mov	BYTE PTR _Dirs$[ebp+182], 3
	mov	BYTE PTR _Dirs$[ebp+183], 3
	mov	BYTE PTR _Dirs$[ebp+184], 3
	mov	BYTE PTR _Dirs$[ebp+185], 2
	mov	BYTE PTR _Dirs$[ebp+186], 2
	mov	BYTE PTR _Dirs$[ebp+187], 2
	mov	BYTE PTR _Dirs$[ebp+188], 2
	mov	BYTE PTR _Dirs$[ebp+189], 2
	mov	BYTE PTR _Dirs$[ebp+190], 2
	mov	BYTE PTR _Dirs$[ebp+191], 1
; Line 605
	mov	BYTE PTR _Dirs$[ebp+192], 4
	mov	BYTE PTR _Dirs$[ebp+193], 4
	mov	BYTE PTR _Dirs$[ebp+194], 4
	mov	BYTE PTR _Dirs$[ebp+195], 4
	mov	BYTE PTR _Dirs$[ebp+196], 3
	mov	BYTE PTR _Dirs$[ebp+197], 3
	mov	BYTE PTR _Dirs$[ebp+198], 3
	mov	BYTE PTR _Dirs$[ebp+199], 3
	mov	BYTE PTR _Dirs$[ebp+200], 3
	mov	BYTE PTR _Dirs$[ebp+201], 3
	mov	BYTE PTR _Dirs$[ebp+202], 2
	mov	BYTE PTR _Dirs$[ebp+203], 2
	mov	BYTE PTR _Dirs$[ebp+204], 2
	mov	BYTE PTR _Dirs$[ebp+205], 2
	mov	BYTE PTR _Dirs$[ebp+206], 2
	mov	BYTE PTR _Dirs$[ebp+207], 2
; Line 606
	mov	BYTE PTR _Dirs$[ebp+208], 4
	mov	BYTE PTR _Dirs$[ebp+209], 4
	mov	BYTE PTR _Dirs$[ebp+210], 4
	mov	BYTE PTR _Dirs$[ebp+211], 4
	mov	BYTE PTR _Dirs$[ebp+212], 3
	mov	BYTE PTR _Dirs$[ebp+213], 3
	mov	BYTE PTR _Dirs$[ebp+214], 3
	mov	BYTE PTR _Dirs$[ebp+215], 3
	mov	BYTE PTR _Dirs$[ebp+216], 3
	mov	BYTE PTR _Dirs$[ebp+217], 3
	mov	BYTE PTR _Dirs$[ebp+218], 2
	mov	BYTE PTR _Dirs$[ebp+219], 2
	mov	BYTE PTR _Dirs$[ebp+220], 2
	mov	BYTE PTR _Dirs$[ebp+221], 2
	mov	BYTE PTR _Dirs$[ebp+222], 2
	mov	BYTE PTR _Dirs$[ebp+223], 2
; Line 607
	mov	BYTE PTR _Dirs$[ebp+224], 4
	mov	BYTE PTR _Dirs$[ebp+225], 4
	mov	BYTE PTR _Dirs$[ebp+226], 4
	mov	BYTE PTR _Dirs$[ebp+227], 4
	mov	BYTE PTR _Dirs$[ebp+228], 3
	mov	BYTE PTR _Dirs$[ebp+229], 3
	mov	BYTE PTR _Dirs$[ebp+230], 3
	mov	BYTE PTR _Dirs$[ebp+231], 3
	mov	BYTE PTR _Dirs$[ebp+232], 3
	mov	BYTE PTR _Dirs$[ebp+233], 3
	mov	BYTE PTR _Dirs$[ebp+234], 3
	mov	BYTE PTR _Dirs$[ebp+235], 2
	mov	BYTE PTR _Dirs$[ebp+236], 2
	mov	BYTE PTR _Dirs$[ebp+237], 2
; Line 628
	mov	BYTE PTR _lrtoul$[ebp+2], al
; Line 631
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, edi
	mov	BYTE PTR _Dirs$[ebp+238], 2
	push	eax
	mov	BYTE PTR _Dirs$[ebp+239], 2
	mov	BYTE PTR _Dirs$[ebp+240], 4
	mov	BYTE PTR _Dirs$[ebp+241], 4
	mov	BYTE PTR _Dirs$[ebp+242], 4
	mov	BYTE PTR _Dirs$[ebp+243], 4
	mov	BYTE PTR _Dirs$[ebp+244], 3
	mov	BYTE PTR _Dirs$[ebp+245], 3
	mov	BYTE PTR _Dirs$[ebp+246], 3
	mov	BYTE PTR _Dirs$[ebp+247], 3
	mov	BYTE PTR _Dirs$[ebp+248], 3
	mov	BYTE PTR _Dirs$[ebp+249], 3
	mov	BYTE PTR _Dirs$[ebp+250], 3
	mov	BYTE PTR _Dirs$[ebp+251], 3
	mov	BYTE PTR _Dirs$[ebp+252], 2
	mov	BYTE PTR _Dirs$[ebp+253], 2
	mov	BYTE PTR _Dirs$[ebp+254], 2
	mov	BYTE PTR _Dirs$[ebp+255], 2
	mov	BYTE PTR _urtoll$[ebp], 6
	mov	BYTE PTR _urtoll$[ebp+1], 7
	mov	BYTE PTR _urtoll$[ebp+2], 8
	mov	BYTE PTR _urtoll$[ebp+3], 9
	mov	BYTE PTR _urtoll$[ebp+4], 10		; 0000000aH
	mov	BYTE PTR _ultolr$[ebp], 6
	mov	BYTE PTR _ultolr$[ebp+1], 5
	mov	BYTE PTR _ultolr$[ebp+2], 4
	mov	BYTE PTR _ultolr$[ebp+3], 3
	mov	BYTE PTR _ultolr$[ebp+4], 2
	mov	BYTE PTR _lltour$[ebp], 14		; 0000000eH
	mov	BYTE PTR _lltour$[ebp+1], 13		; 0000000dH
	mov	BYTE PTR _lltour$[ebp+2], 12		; 0000000cH
	mov	BYTE PTR _lltour$[ebp+3], 11		; 0000000bH
	mov	BYTE PTR _lltour$[ebp+4], 10		; 0000000aH
	mov	BYTE PTR _lrtoul$[ebp], 14		; 0000000eH
	mov	BYTE PTR _lrtoul$[ebp+1], 15		; 0000000fH
	mov	BYTE PTR _lrtoul$[ebp+3], 1
	mov	BYTE PTR _lrtoul$[ebp+4], 2
	call	_abs
	mov	esi, eax
	pop	ecx
; Line 632
	cmp	esi, 15					; 0000000fH
	jle	SHORT $L85270
; Line 633
	push	15					; 0000000fH
	pop	esi
$L85270:
; Line 634
	mov	eax, DWORD PTR _y2$[ebp]
	sub	eax, DWORD PTR _y1$[ebp]
	push	eax
	call	_abs
; Line 635
	cmp	eax, 15					; 0000000fH
	pop	ecx
	jle	SHORT $L85271
; Line 636
	push	15					; 0000000fH
	pop	eax
$L85271:
; Line 639
	mov	ecx, DWORD PTR _y2$[ebp]
	shl	eax, 4
	add	eax, esi
	cmp	edi, DWORD PTR _x2$[ebp]
	pop	edi
	pop	esi
	movzx	eax, BYTE PTR _Dirs$[ebp+eax]
	jg	SHORT $L85272
	cmp	DWORD PTR _y1$[ebp], ecx
	jg	SHORT $L85273
; Line 640
	movzx	eax, BYTE PTR _lrtoul$[ebp+eax]
; Line 641
	jmp	SHORT $L85280
$L85273:
; Line 642
	movzx	eax, BYTE PTR _lltour$[ebp+eax]
; Line 643
	jmp	SHORT $L85280
$L85272:
	cmp	DWORD PTR _y1$[ebp], ecx
	jg	SHORT $L85278
; Line 644
	movzx	eax, BYTE PTR _ultolr$[ebp+eax]
; Line 645
	jmp	SHORT $L85280
$L85278:
; Line 646
	movzx	eax, BYTE PTR _urtoll$[ebp+eax]
$L85280:
; Line 649
	leave
	ret	8
@GetDirection16@16 ENDP
_TEXT	ENDS
PUBLIC	@DeleteMissile@8
EXTRN	@NetSendCmd@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT @DeleteMissile@8
_TEXT	SEGMENT
@DeleteMissile@8 PROC NEAR				; COMDAT
; _mi$ = ecx
; _i$ = edx
; Line 652
	push	ebx
	push	edi
	mov	edi, ecx
	mov	ebx, edx
; Line 655
	mov	eax, edi
	imul	eax, 176				; 000000b0H
	cmp	DWORD PTR _missile[eax], 13		; 0000000dH
	jne	SHORT $L85288
	push	esi
; Line 656
	mov	esi, DWORD PTR _missile[eax+116]
; Line 657
	cmp	esi, DWORD PTR _myplr
	jne	SHORT $L85289
; Line 658
	xor	ecx, ecx
	mov	dl, 93					; 0000005dH
	inc	ecx
	call	@NetSendCmd@8
$L85289:
; Line 659
	imul	esi, 21720				; 000054d8H
	and	BYTE PTR _plr[esi+21628], 0
	pop	esi
$L85288:
; Line 661
	mov	eax, DWORD PTR _nummissiles
	mov	edx, OFFSET FLAT:_missileavail+500
	mov	ecx, eax
	shl	ecx, 2
	sub	edx, ecx
; Line 662
	dec	eax
; Line 663
	test	eax, eax
	mov	DWORD PTR [edx], edi
	mov	DWORD PTR _nummissiles, eax
	jle	SHORT $L85290
	cmp	ebx, eax
	je	SHORT $L85290
; Line 664
	mov	eax, DWORD PTR _missileactive[eax*4]
	mov	DWORD PTR _missileactive[ebx*4], eax
$L85290:
	pop	edi
	pop	ebx
; Line 665
	ret	0
@DeleteMissile@8 ENDP
_TEXT	ENDS
PUBLIC	@GetMissileVel@24
PUBLIC	__real@3ff0000000000000
EXTRN	__ftol:NEAR
EXTRN	__fltused:NEAR
EXTRN	_sqrt:NEAR
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Ogsy
CONST	ENDS
;	COMDAT @GetMissileVel@24
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_v$ = 20
_v7$ = -8
_v8$ = -16
@GetMissileVel@24 PROC NEAR				; COMDAT
; _i$ = ecx
; _sx$ = edx
; Line 668
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 675
	mov	eax, DWORD PTR _dx$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _dy$[ebp]
	cmp	eax, edx
	jne	SHORT $L85310
	cmp	ecx, DWORD PTR _sy$[ebp]
	jne	SHORT $L85310
; Line 684
	mov	eax, esi
	imul	eax, 176				; 000000b0H
	and	DWORD PTR _missile[eax+20], 0
; Line 685
	and	DWORD PTR _missile[eax+24], 0
	jmp	$L85317
$L85310:
	push	edi
; Line 676
	mov	edi, DWORD PTR _sy$[ebp]
	sub	edi, edx
; Line 679
	push	ecx
	sub	edi, ecx
	push	ecx
	add	edi, eax
	sub	eax, edx
	sub	eax, DWORD PTR _sy$[ebp]
	shl	edi, 21					; 00000015H
	mov	DWORD PTR 12+[ebp], edi
	add	eax, ecx
	fild	DWORD PTR 12+[ebp]
	shl	eax, 21					; 00000015H
	mov	DWORD PTR 8+[ebp], eax
	fst	QWORD PTR _v7$[ebp]
	fild	DWORD PTR 8+[ebp]
	fst	QWORD PTR _v8$[ebp]
	fld	ST(0)
	fmul	ST(0), ST(1)
	fld	ST(2)
	fmul	ST(0), ST(3)
	faddp	ST(1), ST(0)
	fstp	QWORD PTR [esp]
	fstp	ST(0)
	fstp	ST(0)
	call	_sqrt
; Line 680
	imul	esi, 176				; 000000b0H
	fdivr	QWORD PTR __real@3ff0000000000000
	mov	edi, DWORD PTR _v$[ebp]
	pop	ecx
	mov	eax, edi
	pop	ecx
	shl	eax, 16					; 00000010H
	mov	DWORD PTR 8+[ebp], eax
	fild	DWORD PTR 8+[ebp]
	fmul	ST(0), ST(1)
	fmul	QWORD PTR _v7$[ebp]
	call	__ftol
; Line 681
	shl	edi, 15					; 0000000fH
	mov	DWORD PTR 8+[ebp], edi
	mov	DWORD PTR _missile[esi+20], eax
	fild	DWORD PTR 8+[ebp]
	fmul	ST(0), ST(1)
	fmul	QWORD PTR _v8$[ebp]
	call	__ftol
	fstp	ST(0)
	mov	DWORD PTR _missile[esi+24], eax
	pop	edi
$L85317:
	pop	esi
; Line 687
	leave
	ret	16					; 00000010H
@GetMissileVel@24 ENDP
_TEXT	ENDS
PUBLIC	@PutMissile@4
EXTRN	_dFlags:BYTE
EXTRN	_dMissile:BYTE
; Function compile flags: /Ogsy
;	COMDAT @PutMissile@4
_TEXT	SEGMENT
@PutMissile@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 693
	mov	eax, ecx
	push	ebx
	imul	eax, 176				; 000000b0H
; Line 695
	xor	ebx, ebx
	push	esi
	mov	edx, DWORD PTR _missile[eax+4]
	mov	esi, DWORD PTR _missile[eax+8]
	inc	ebx
	test	edx, edx
	jle	SHORT $L85324
	test	esi, esi
	jle	SHORT $L85324
	cmp	edx, 112				; 00000070H
	jge	SHORT $L85324
	cmp	esi, 112				; 00000070H
	jl	SHORT $L85323
$L85324:
; Line 696
	mov	DWORD PTR _missile[eax+52], ebx
$L85323:
; Line 697
	cmp	DWORD PTR _missile[eax+52], 0
	jne	SHORT $L85328
; Line 698
	imul	edx, 112				; 00000070H
	add	edx, esi
	or	BYTE PTR _dFlags[edx], bl
; Line 699
	lea	edx, DWORD PTR _dMissile[edx]
	cmp	BYTE PTR [edx], 0
	jne	SHORT $L85326
; Line 700
	inc	cl
	mov	BYTE PTR [edx], cl
; Line 701
	jmp	SHORT $L85327
$L85326:
; Line 702
	or	BYTE PTR [edx], -1
$L85327:
; Line 703
	cmp	DWORD PTR _missile[eax+104], 0
	je	SHORT $L85328
; Line 704
	mov	DWORD PTR _MissilePreFlag, ebx
$L85328:
	pop	esi
	pop	ebx
; Line 706
	ret	0
@PutMissile@4 ENDP
_TEXT	ENDS
PUBLIC	@GetMissilePos@4
EXTRN	@ChangeLightOff@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @GetMissilePos@4
_TEXT	SEGMENT
_v7$ = -8
_v8$ = -4
@GetMissilePos@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 710
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 725
	imul	ecx, 176				; 000000b0H
	push	ebx
	push	esi
	movsx	esi, WORD PTR _missile[ecx+42]
; Line 726
	movsx	edx, WORD PTR _missile[ecx+38]
; Line 727
	lea	eax, DWORD PTR [esi+esi]
	push	edi
	lea	edi, DWORD PTR [eax+edx]
; Line 728
	sub	eax, edx
; Line 729
	test	edi, edi
	mov	ebx, eax
	jl	SHORT $L85344
; Line 730
	mov	eax, edi
	sar	eax, 3
; Line 731
	sar	edi, 6
; Line 732
	jmp	SHORT $L88930
$L85344:
; Line 733
	neg	edi
; Line 734
	mov	eax, edi
	sar	eax, 3
; Line 735
	sar	edi, 6
	neg	eax
	neg	edi
$L88930:
; Line 738
	test	ebx, ebx
	mov	DWORD PTR _v7$[ebp], eax
	mov	DWORD PTR _v8$[ebp], edi
	jl	SHORT $L85346
; Line 739
	mov	eax, ebx
	sar	eax, 3
; Line 740
	sar	ebx, 6
; Line 741
	jmp	SHORT $L85347
$L85346:
; Line 742
	neg	ebx
; Line 743
	mov	eax, ebx
	sar	eax, 3
; Line 744
	sar	ebx, 6
	neg	eax
	neg	ebx
$L85347:
; Line 746
	mov	edx, DWORD PTR _missile[ecx+28]
	add	edx, edi
	mov	DWORD PTR _missile[ecx+4], edx
; Line 747
	mov	edx, DWORD PTR _missile[ecx+32]
	add	edx, ebx
	mov	DWORD PTR _missile[ecx+8], edx
; Line 748
	mov	edx, ebx
	sub	edx, edi
	shl	edx, 5
	mov	edi, edx
	movsx	edx, WORD PTR _missile[ecx+38]
	add	edi, edx
; Line 749
	mov	edx, DWORD PTR _v8$[ebp]
	mov	DWORD PTR _missile[ecx+12], edi
	lea	edi, DWORD PTR [ebx+edx]
	shl	edi, 4
	sub	esi, edi
	mov	DWORD PTR _missile[ecx+16], esi
; Line 750
	mov	esi, ebx
	shl	esi, 3
	mov	ecx, DWORD PTR _missile[ecx+136]
	sub	eax, esi
	push	eax
	mov	eax, edx
	mov	edx, DWORD PTR _v7$[ebp]
	shl	eax, 3
	sub	edx, eax
	call	@ChangeLightOff@12
	pop	edi
	pop	esi
	pop	ebx
; Line 751
	leave
	ret	0
@GetMissilePos@4 ENDP
_TEXT	ENDS
PUBLIC	@MoveMissilePos@4
EXTRN	@PosOkMonst@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MoveMissilePos@4
_TEXT	SEGMENT
@MoveMissilePos@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 754
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 761
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+44]
	test	eax, eax
	jl	SHORT $L85364
	xor	ebx, ebx
	inc	ebx
	cmp	eax, ebx
	jle	SHORT $L85358
	cmp	eax, 2
	je	SHORT $L85360
	jle	SHORT $L85364
	cmp	eax, 5
	jle	SHORT $L85364
	cmp	eax, 6
	je	SHORT $L85363
	cmp	eax, 7
	je	SHORT $L85358
$L85364:
; Line 783
	xor	edi, edi
$LABEL_7$85362:
; Line 784
	xor	ebx, ebx
$L85355:
; Line 787
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+116]
	add	eax, ebx
	push	eax
	add	edx, edi
	call	@PosOkMonst@12
	test	eax, eax
	je	SHORT $L85365
; Line 789
	add	DWORD PTR _missile[esi+8], ebx
	add	DWORD PTR _missile[esi+4], edi
; Line 790
	mov	eax, ebx
; Line 791
	add	ebx, edi
	sub	eax, edi
	neg	ebx
	shl	eax, 5
	add	DWORD PTR _missile[esi+12], eax
	shl	ebx, 4
	add	DWORD PTR _missile[esi+16], ebx
$L85365:
	pop	edi
	pop	esi
	pop	ebx
; Line 793
	ret	0
$L85363:
; Line 778
	mov	edi, ebx
	jmp	SHORT $LABEL_7$85362
$L85360:
; Line 768
	xor	edi, edi
	jmp	SHORT $L85355
$L85358:
; Line 765
	mov	edi, ebx
$LABEL_3$85359:
; Line 771
	jmp	SHORT $L85355
@MoveMissilePos@4 ENDP
_TEXT	ENDS
PUBLIC	@MonsterTrapHit@24
EXTRN	@M_StartHit@12:NEAR
EXTRN	@M_StartKill@8:NEAR
EXTRN	@PlayEffect@8:NEAR
EXTRN	@CheckMonsterHit@8:NEAR
EXTRN	@random@8:NEAR
EXTRN	_monster:BYTE
; Function compile flags: /Ogsy
;	COMDAT @MonsterTrapHit@24
_TEXT	SEGMENT
_m$ = -4
_mindam$ = -12
_maxdam$ = 8
_dist$ = 12
_t$ = 16
_shift$ = 20
_v16$ = -8
_ret$ = 16
@MonsterTrapHit@24 PROC NEAR				; COMDAT
; _m$ = ecx
; _mindam$ = edx
; Line 796
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx
; Line 809
	and	DWORD PTR _v16$[ebp], 0
	mov	DWORD PTR _m$[ebp], esi
; Line 815
	imul	esi, 228				; 000000e4H
	cmp	DWORD PTR _monster[esi+208], 0
	push	edi
	mov	DWORD PTR _mindam$[ebp], edx
	jne	$L85391
	test	DWORD PTR _monster[esi+148], -64	; ffffffc0H
	jle	$L85391
	mov	eax, DWORD PTR _monster[esi+220]
	push	2
	pop	edx
	cmp	BYTE PTR [eax], 32			; 00000020H
	jne	SHORT $L85390
	cmp	BYTE PTR _monster[esi+8], dl
	je	$L85391
$L85390:
; Line 818
	cmp	DWORD PTR _monster[esi+4], 14		; 0000000eH
; Line 819
	je	$L85391
; Line 821
	mov	ecx, DWORD PTR _t$[ebp]
	movzx	eax, WORD PTR _monster[esi+204]
	imul	ecx, 28					; 0000001cH
	movzx	ecx, BYTE PTR _missiledata[ecx+17]
; Line 822
	test	al, 8
	je	SHORT $L85395
; Line 823
	cmp	ecx, 3
; Line 824
	je	$L85391
$L85395:
; Line 826
	test	al, 16					; 00000010H
	je	SHORT $L85398
	cmp	ecx, 1
	je	$L85391
$L85398:
	test	al, 32					; 00000020H
	je	SHORT $L85396
	cmp	ecx, edx
; Line 827
	je	$L85391
$L85396:
; Line 828
	test	al, 1
	je	SHORT $L85401
	cmp	ecx, 3
	je	SHORT $L85400
$L85401:
	test	al, dl
	je	SHORT $L85402
	cmp	ecx, 1
	je	SHORT $L85400
$L85402:
	test	al, 4
	je	SHORT $L85399
	cmp	ecx, edx
	jne	SHORT $L85399
$L85400:
; Line 829
	mov	DWORD PTR _v16$[ebp], 1
$L85399:
; Line 830
	push	100					; 00000064H
	mov	cl, 68					; 00000044H
	pop	edx
	call	@random@8
	mov	ebx, eax
; Line 831
	movzx	eax, BYTE PTR _monster[esi+202]
	push	90					; 0000005aH
	pop	edi
	sub	edi, eax
	sub	edi, DWORD PTR _dist$[ebp]
; Line 832
	cmp	edi, 5
	jge	SHORT $L85404
; Line 833
	push	5
	pop	edi
$L85404:
; Line 834
	cmp	edi, 95					; 0000005fH
	jle	SHORT $L85405
; Line 835
	push	95					; 0000005fH
	pop	edi
$L85405:
; Line 837
	mov	ecx, DWORD PTR _m$[ebp]
	lea	edx, DWORD PTR _ret$[ebp]
	call	@CheckMonsterHit@8
	test	eax, eax
	je	SHORT $L85406
; Line 838
	mov	eax, DWORD PTR _ret$[ebp]
	jmp	$L85378
$L85406:
; Line 843
	cmp	ebx, edi
	jl	SHORT $L85407
	cmp	DWORD PTR _monster[esi+4], 15		; 0000000fH
; Line 844
	jne	$L85391
$L85407:
; Line 846
	mov	edx, DWORD PTR _maxdam$[ebp]
	mov	cl, 68					; 00000044H
	sub	edx, DWORD PTR _mindam$[ebp]
	inc	edx
	call	@random@8
	add	eax, DWORD PTR _mindam$[ebp]
; Line 847
	cmp	BYTE PTR _shift$[ebp], 0
	jne	SHORT $L85409
; Line 848
	shl	eax, 6
$L85409:
; Line 849
	cmp	DWORD PTR _v16$[ebp], 0
	je	SHORT $L85410
; Line 850
	mov	ecx, eax
	sar	ecx, 2
	sub	DWORD PTR _monster[esi+148], ecx
; Line 851
	jmp	SHORT $L85411
$L85410:
; Line 852
	sub	DWORD PTR _monster[esi+148], eax
$L85411:
; Line 857
	test	DWORD PTR _monster[esi+148], -64	; ffffffc0H
; Line 859
	mov	ecx, DWORD PTR _m$[ebp]
	jle	SHORT $L85412
; Line 858
	cmp	DWORD PTR _v16$[ebp], 0
	je	SHORT $L85413
; Line 859
	xor	edx, edx
	inc	edx
	call	@PlayEffect@8
; Line 860
	jmp	SHORT $L88941
$L85413:
; Line 862
	cmp	DWORD PTR _monster[esi+4], 15		; 0000000fH
	je	SHORT $L85414
; Line 863
	cmp	ecx, 3
	jle	SHORT $L88941
; Line 864
	push	eax
	or	edx, -1
	call	@M_StartHit@12
; Line 865
	jmp	SHORT $L88941
$L85414:
; Line 867
	cmp	ecx, 3
	jle	SHORT $L85417
; Line 868
	push	eax
	or	edx, -1
	call	@M_StartHit@12
; Line 869
	jmp	SHORT $L85417
$L85412:
; Line 871
	or	edx, -1
	cmp	DWORD PTR _monster[esi+4], 15		; 0000000fH
	je	SHORT $L85418
	call	@M_StartKill@8
; Line 872
	jmp	SHORT $L88941
$L85418:
; Line 874
	call	@M_StartKill@8
$L85417:
; Line 876
	mov	DWORD PTR _monster[esi+4], 15		; 0000000fH
$L88941:
; Line 877
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85378
$L85391:
; Line 816
	xor	eax, eax
$L85378:
	pop	edi
	pop	esi
	pop	ebx
; Line 878
	leave
	ret	16					; 00000010H
@MonsterTrapHit@24 ENDP
_TEXT	ENDS
PUBLIC	@MonsterMHit@28
EXTRN	@M_GetKnockback@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MonsterMHit@28
_TEXT	SEGMENT
_pnum$ = -8
_m$ = -4
_mindam$ = 8
_maxdam$ = 12
_dist$ = 16
_t$ = 20
_shift$ = 24
_ret$ = -20
_v25$ = -16
_v26$ = -12
@MonsterMHit@28 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _m$ = edx
; Line 881
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	DWORD PTR _m$[ebp], edi
; Line 906
	imul	edi, 228				; 000000e4H
	and	DWORD PTR _v26$[ebp], 0
	cmp	DWORD PTR _monster[edi+208], 0
	mov	DWORD PTR _pnum$[ebp], ecx
; Line 910
	jne	$L85454
	test	DWORD PTR _monster[edi+148], -64	; ffffffc0H
	jle	$L85454
	mov	esi, DWORD PTR _t$[ebp]
	cmp	esi, 53					; 00000035H
	jne	SHORT $L85453
	mov	eax, DWORD PTR _monster[edi+220]
	cmp	BYTE PTR [eax], 110			; 0000006eH
	je	SHORT $L85453
	mov	eax, DWORD PTR _monster[edi+224]
	cmp	BYTE PTR [eax+114], 0
	jne	$L85454
$L85453:
; Line 913
	mov	eax, DWORD PTR _monster[edi+220]
	cmp	BYTE PTR [eax], 32			; 00000020H
	jne	SHORT $L85456
	cmp	BYTE PTR _monster[edi+8], 2
; Line 914
	je	$L85454
$L85456:
; Line 915
	cmp	DWORD PTR _monster[edi+4], 14		; 0000000eH
; Line 916
	je	$L85454
; Line 918
	imul	esi, 28					; 0000001cH
	mov	ax, WORD PTR _monster[edi+204]
	mov	DWORD PTR -24+[ebp], esi
	movzx	ecx, BYTE PTR _missiledata[esi+17]
; Line 920
	test	al, 8
	je	SHORT $L85459
; Line 921
	cmp	ecx, 3
; Line 922
	je	$L85454
$L85459:
; Line 924
	test	al, 16					; 00000010H
	je	SHORT $L85462
	cmp	ecx, 1
	je	$L85454
$L85462:
	test	al, 32					; 00000020H
	je	SHORT $L85463
	cmp	ecx, 2
	je	$L85454
$L85463:
	test	al, al
	jns	SHORT $L85460
	cmp	ecx, 4
; Line 925
	je	$L85454
$L85460:
; Line 926
	test	al, 1
	je	SHORT $L85466
	cmp	ecx, 3
	je	SHORT $L85465
$L85466:
	test	al, 2
	je	SHORT $L85467
	cmp	ecx, 1
	je	SHORT $L85465
$L85467:
	test	al, 4
	je	SHORT $L85464
	cmp	ecx, 2
	jne	SHORT $L85464
$L85465:
; Line 927
	mov	DWORD PTR _v26$[ebp], 1
$L85464:
; Line 928
	push	100					; 00000064H
	mov	cl, 69					; 00000045H
	pop	edx
	call	@random@8
; Line 929
	cmp	BYTE PTR _missiledata[esi+16], 0
; Line 939
	mov	esi, DWORD PTR _pnum$[ebp]
	mov	DWORD PTR _v25$[ebp], eax
	jne	SHORT $L85468
	imul	esi, 21720				; 000054d8H
	movzx	ecx, BYTE PTR _monster[edi+202]
	movsx	eax, BYTE PTR _plr[esi+440]
	sub	eax, ecx
	mov	ecx, DWORD PTR _dist$[ebp]
	imul	ecx, ecx
	sar	ecx, 1
	sub	eax, ecx
	mov	ecx, DWORD PTR _plr[esi+372]
	add	eax, DWORD PTR _plr[esi+21600]
	add	eax, DWORD PTR _plr[esi+21560]
	add	eax, ecx
; Line 940
	mov	cl, BYTE PTR _plr[esi+352]
	cmp	cl, 1
	lea	ebx, DWORD PTR [eax+50]
	jne	SHORT $L85470
; Line 947
	lea	ebx, DWORD PTR [eax+70]
$L85470:
; Line 948
	test	cl, cl
	jne	SHORT $L85475
; Line 949
	add	ebx, 10					; 0000000aH
; Line 950
	jmp	SHORT $L85475
$L85468:
; Line 952
	movsx	ecx, BYTE PTR _monster[edi+192]
; Line 953
	imul	esi, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[esi+364]
	add	ecx, ecx
	sub	eax, ecx
	sub	eax, DWORD PTR _dist$[ebp]
; Line 954
	cmp	BYTE PTR _plr[esi+352], 2
	lea	ebx, DWORD PTR [eax+50]
	jne	SHORT $L85475
; Line 955
	lea	ebx, DWORD PTR [eax+70]
$L85475:
; Line 957
	cmp	ebx, 5
	jge	SHORT $L85476
; Line 958
	push	5
	pop	ebx
$L85476:
; Line 959
	cmp	ebx, 95					; 0000005fH
	jle	SHORT $L85477
; Line 960
	push	95					; 0000005fH
	pop	ebx
$L85477:
; Line 961
	cmp	DWORD PTR _monster[edi+4], 15		; 0000000fH
	jne	SHORT $L85478
; Line 962
	and	DWORD PTR _v25$[ebp], 0
$L85478:
; Line 963
	mov	ecx, DWORD PTR _m$[ebp]
	lea	edx, DWORD PTR _ret$[ebp]
	call	@CheckMonsterHit@8
	test	eax, eax
	je	SHORT $L85479
; Line 964
	mov	al, BYTE PTR _ret$[ebp]
	jmp	$L85433
$L85479:
; Line 969
	cmp	DWORD PTR _v25$[ebp], ebx
; Line 970
	jge	$L85454
; Line 972
	cmp	DWORD PTR _t$[ebp], 63			; 0000003fH
	jne	SHORT $L85481
; Line 973
	mov	eax, DWORD PTR _monster[edi+148]
	push	3
	cdq
	pop	ecx
	idiv	ecx
	mov	ebx, eax
	sar	ebx, 6
; Line 974
	jmp	SHORT $L85482
$L85481:
; Line 975
	mov	edx, DWORD PTR _maxdam$[ebp]
	mov	cl, 70					; 00000046H
	sub	edx, DWORD PTR _mindam$[ebp]
	inc	edx
	call	@random@8
	mov	ebx, eax
	add	ebx, DWORD PTR _mindam$[ebp]
$L85482:
; Line 977
	mov	eax, DWORD PTR -24+[ebp]
	mov	al, BYTE PTR _missiledata[eax+16]
; Line 978
	test	al, al
	mov	BYTE PTR 19+[ebp], al
	jne	SHORT $L85485
; Line 979
	mov	eax, DWORD PTR _plr[esi+21556]
	push	100					; 00000064H
	imul	eax, ebx
	cdq
	pop	ecx
	idiv	ecx
	add	eax, DWORD PTR _plr[esi+21568]
	add	eax, ebx
; Line 980
	cmp	BYTE PTR _plr[esi+352], 1
; Line 981
	mov	ebx, DWORD PTR _plr[esi+392]
; Line 982
	je	SHORT $L88949
; Line 983
	sar	ebx, 1
$L88949:
	add	ebx, eax
$L85485:
; Line 985
	cmp	BYTE PTR _shift$[ebp], 0
	jne	SHORT $L85487
; Line 986
	shl	ebx, 6
$L85487:
; Line 987
	cmp	DWORD PTR _v26$[ebp], 0
	je	SHORT $L85488
; Line 988
	sar	ebx, 2
$L85488:
; Line 990
	mov	edx, DWORD PTR _pnum$[ebp]
	cmp	edx, DWORD PTR _myplr
	jne	SHORT $L85489
; Line 991
	sub	DWORD PTR _monster[edi+148], ebx
$L85489:
; Line 992
	mov	eax, DWORD PTR _plr[esi+21584]
; Line 993
	test	al, 8
	je	SHORT $L85490
; Line 994
	or	DWORD PTR _monster[edi+156], 8
$L85490:
; Line 995
	test	DWORD PTR _monster[edi+148], -64	; ffffffc0H
	jle	SHORT $L85491
; Line 996
	cmp	DWORD PTR _v26$[ebp], 0
	je	SHORT $L85492
; Line 997
	mov	ecx, DWORD PTR _m$[ebp]
	xor	edx, edx
	inc	edx
	call	@PlayEffect@8
; Line 998
	jmp	SHORT $L85501
$L85492:
	cmp	DWORD PTR _monster[edi+4], 15		; 0000000fH
	jne	SHORT $L85494
; Line 999
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	ecx, 3
	jle	SHORT $L85495
; Line 1000
	push	ebx
	call	@M_StartHit@12
$L85495:
; Line 1001
	mov	DWORD PTR _monster[edi+4], 15		; 0000000fH
; Line 1002
	jmp	SHORT $L85501
$L85494:
; Line 1003
	cmp	BYTE PTR 19+[ebp], 0
	jne	SHORT $L85497
	test	ah, 8
	je	SHORT $L85497
; Line 1004
	mov	ecx, DWORD PTR _m$[ebp]
	call	@M_GetKnockback@4
	mov	edx, DWORD PTR _pnum$[ebp]
$L85497:
; Line 1007
	mov	ecx, DWORD PTR _m$[ebp]
	cmp	ecx, 3
	jle	SHORT $L85501
; Line 1008
	push	ebx
	call	@M_StartHit@12
; Line 1010
	jmp	SHORT $L85501
$L85491:
; Line 1011
	mov	ecx, DWORD PTR _m$[ebp]
	push	15					; 0000000fH
	pop	ebx
	cmp	DWORD PTR _monster[edi+4], ebx
	jne	SHORT $L85500
	call	@M_StartKill@8
; Line 1012
	mov	DWORD PTR _monster[edi+4], ebx
; Line 1013
	jmp	SHORT $L85501
$L85500:
; Line 1014
	call	@M_StartKill@8
$L85501:
; Line 1016
	lea	eax, DWORD PTR _monster[edi+160]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $L85502
; Line 1017
	or	BYTE PTR [eax], -1
; Line 1018
	mov	eax, DWORD PTR _plr[esi+56]
	mov	DWORD PTR _monster[edi+168], eax
; Line 1019
	mov	eax, DWORD PTR _plr[esi+60]
	mov	DWORD PTR _monster[edi+172], eax
$L85502:
; Line 1021
	mov	al, 1
	jmp	SHORT $L85433
$L85454:
; Line 911
	xor	al, al
$L85433:
	pop	edi
	pop	esi
	pop	ebx
; Line 1022
	leave
	ret	20					; 00000014H
@MonsterMHit@28 ENDP
_TEXT	ENDS
PUBLIC	@PlayerMHit@32
EXTRN	@PlaySfxLoc@12:NEAR
EXTRN	@StartPlrBlock@8:NEAR
EXTRN	_drawhpflag:DWORD
EXTRN	@StartPlrHit@12:NEAR
EXTRN	@SyncPlrKill@8:NEAR
EXTRN	_currlevel:BYTE
; Function compile flags: /Ogsy
;	COMDAT @PlayerMHit@32
_TEXT	SEGMENT
_pnum$ = -16
_m$ = -4
_dist$ = 8
_mind$ = 12
_maxd$ = 16
_mtype$ = 20
_shift$ = 24
_earflag$ = 28
_v14$ = 8
_v18$ = -8
_v32$ = -20
_v35$ = -12
@PlayerMHit@32 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _m$ = edx
; Line 1025
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _pnum$[ebp], esi
; Line 1059
	imul	esi, 21720				; 000054d8H
	test	DWORD PTR _plr[esi+408], -64		; ffffffc0H
	mov	DWORD PTR _m$[ebp], edx
	jle	$L85547
	cmp	BYTE PTR _plr[esi+317], 0
	jne	$L85547
	test	BYTE PTR _plr[esi+288], 1
	je	SHORT $L85546
	mov	eax, DWORD PTR _mtype$[ebp]
	imul	eax, 28					; 0000001cH
	cmp	BYTE PTR _missiledata[eax+16], 0
	je	$L85547
$L85546:
; Line 1062
	push	100					; 00000064H
; Line 1063
	mov	cl, 72					; 00000048H
	pop	edx
	mov	edi, edx
	call	@random@8
; Line 1068
	mov	ebx, DWORD PTR _mtype$[ebp]
	mov	DWORD PTR _v32$[ebp], eax
	imul	ebx, 28					; 0000001cH
	cmp	BYTE PTR _missiledata[ebx+16], 0
	jne	SHORT $L85548
; Line 1070
	mov	eax, DWORD PTR _plr[esi+372]
	push	5
	cdq
	pop	ecx
	idiv	ecx
; Line 1071
	mov	ecx, DWORD PTR _m$[ebp]
	add	eax, DWORD PTR _plr[esi+21564]
	add	eax, DWORD PTR _plr[esi+21552]
	cmp	ecx, -1
	je	SHORT $L85549
; Line 1076
	imul	ecx, 228				; 000000e4H
	movsx	edi, BYTE PTR _plr[esi+440]
	movsx	edx, BYTE PTR _monster[ecx+192]
	movzx	ecx, BYTE PTR _monster[ecx+196]
	sub	edx, edi
	sub	edx, DWORD PTR _dist$[ebp]
	lea	edi, DWORD PTR [ecx+edx*2+30]
	jmp	SHORT $LABEL_8$85552
$L85549:
; Line 1081
	sar	eax, 1
	jmp	SHORT $LABEL_12$85554
$L85548:
; Line 1087
	cmp	DWORD PTR _m$[ebp], -1
	je	SHORT $L85555
; Line 1088
	mov	eax, DWORD PTR _m$[ebp]
	imul	eax, 228				; 000000e4H
	movsx	eax, BYTE PTR _monster[eax+192]
	lea	edi, DWORD PTR [eax+eax+40]
; Line 1089
	movsx	eax, BYTE PTR _plr[esi+440]
	add	eax, eax
$LABEL_12$85554:
	sub	edi, eax
	mov	eax, DWORD PTR _dist$[ebp]
	add	eax, eax
$LABEL_8$85552:
	sub	edi, eax
	mov	DWORD PTR _v14$[ebp], edi
	jmp	SHORT $LABEL_14$85553
$L85555:
; Line 1092
	mov	DWORD PTR _v14$[ebp], 40		; 00000028H
$LABEL_14$85553:
; Line 1094
	push	10					; 0000000aH
	pop	eax
	cmp	DWORD PTR _v14$[ebp], eax
	jge	SHORT $L85557
; Line 1095
	mov	DWORD PTR _v14$[ebp], eax
$L85557:
; Line 1096
	mov	al, BYTE PTR _currlevel
	cmp	al, 14					; 0000000eH
	jne	SHORT $L85558
; Line 1097
	push	20					; 00000014H
	pop	ecx
	cmp	DWORD PTR _v14$[ebp], ecx
	jge	SHORT $LABEL_25$85560
; Line 1099
	mov	DWORD PTR _v14$[ebp], ecx
$L85558:
; Line 1101
	cmp	al, 15					; 0000000fH
	jne	SHORT $L85561
; Line 1102
	push	25					; 00000019H
	pop	ecx
	cmp	DWORD PTR _v14$[ebp], ecx
	jge	SHORT $LABEL_25$85560
; Line 1104
	mov	DWORD PTR _v14$[ebp], ecx
$L85561:
; Line 1106
	cmp	al, 16					; 00000010H
	jne	SHORT $LABEL_25$85560
	push	30					; 0000001eH
	pop	eax
	cmp	DWORD PTR _v14$[ebp], eax
	jge	SHORT $LABEL_25$85560
; Line 1107
	mov	DWORD PTR _v14$[ebp], eax
$LABEL_25$85560:
; Line 1109
	mov	eax, DWORD PTR _plr[esi]
; Line 1110
	test	eax, eax
	je	SHORT $L85566
	cmp	eax, 4
	jne	SHORT $L85565
$L85566:
	cmp	BYTE PTR _plr[esi+316], 0
	jne	SHORT $L85564
$L85565:
; Line 1111
	push	100					; 00000064H
	pop	edi
	mov	DWORD PTR _v35$[ebp], edi
; Line 1112
	jmp	SHORT $L85567
$L85564:
; Line 1113
	push	100					; 00000064H
	mov	cl, 73					; 00000049H
	pop	edx
	call	@random@8
	mov	DWORD PTR _v35$[ebp], eax
	push	100					; 00000064H
	pop	edi
$L85567:
; Line 1115
	cmp	BYTE PTR _shift$[ebp], 1
	jne	SHORT $L85569
; Line 1116
	mov	DWORD PTR _v35$[ebp], edi
$L85569:
; Line 1117
	cmp	DWORD PTR _mtype$[ebp], 59		; 0000003bH
	jne	SHORT $L85570
; Line 1118
	mov	DWORD PTR _v35$[ebp], edi
$L85570:
; Line 1119
	cmp	DWORD PTR _m$[ebp], -1
	jne	SHORT $L85571
; Line 1120
	mov	eax, DWORD PTR _plr[esi+396]
; Line 1121
	jmp	SHORT $L85572
$L85571:
; Line 1122
	mov	eax, DWORD PTR _m$[ebp]
	imul	eax, 228				; 000000e4H
	movsx	ecx, BYTE PTR _plr[esi+440]
	movsx	eax, BYTE PTR _monster[eax+192]
	sub	ecx, eax
	mov	eax, DWORD PTR _plr[esi+396]
	lea	eax, DWORD PTR [eax+ecx*2]
$L85572:
; Line 1123
	mov	ecx, DWORD PTR _plr[esi+372]
	add	ecx, eax
	mov	DWORD PTR _v18$[ebp], ecx
; Line 1124
	jns	SHORT $L85574
; Line 1125
	and	DWORD PTR _v18$[ebp], 0
	mov	ecx, DWORD PTR _v18$[ebp]
$L85574:
; Line 1126
	cmp	ecx, edi
	jle	SHORT $L85575
; Line 1127
	mov	DWORD PTR _v18$[ebp], edi
$L85575:
; Line 1128
	mov	al, BYTE PTR _missiledata[ebx+17]
; Line 1129
	cmp	al, 1
	jne	SHORT $L85576
; Line 1130
	movsx	eax, BYTE PTR _plr[esi+458]
; Line 1131
	jmp	SHORT $L85579
$L85576:
	cmp	al, 2
	jne	SHORT $L88954
; Line 1132
	movsx	eax, BYTE PTR _plr[esi+459]
; Line 1133
	jmp	SHORT $L85579
$L88954:
; Line 1134
	jbe	SHORT $L85581
	cmp	al, 4
	ja	SHORT $L85581
; Line 1138
	movsx	eax, BYTE PTR _plr[esi+457]
$L85579:
; Line 1140
	mov	ebx, eax
	jmp	SHORT $LABEL_50$85582
$L85581:
; Line 1135
	xor	ebx, ebx
$LABEL_50$85582:
; Line 1142
	mov	eax, DWORD PTR _v14$[ebp]
	cmp	DWORD PTR _v32$[ebp], eax
	jge	$L85547
; Line 1143
	cmp	DWORD PTR _mtype$[ebp], 63		; 0000003fH
	jne	SHORT $L85584
; Line 1144
	mov	eax, DWORD PTR _plr[esi+408]
	push	3
	cdq
	pop	ecx
	idiv	ecx
	mov	ecx, eax
; Line 1145
	jmp	SHORT $L85591
$L85584:
; Line 1146
	cmp	BYTE PTR _shift$[ebp], 0
; Line 1147
	mov	edx, DWORD PTR _maxd$[ebp]
	mov	cl, 75					; 0000004bH
	je	SHORT $L85587
	sub	edx, DWORD PTR _mind$[ebp]
	inc	edx
	call	@random@8
	add	eax, DWORD PTR _mind$[ebp]
; Line 1148
	cmp	DWORD PTR _m$[ebp], -1
	jne	SHORT $L85588
	test	BYTE PTR _plr[esi+21587], 16		; 00000010H
	je	SHORT $L85588
; Line 1149
	sar	eax, 1
$L85588:
; Line 1150
	mov	ecx, DWORD PTR _plr[esi+21588]
; Line 1151
	jmp	SHORT $L88955
$L85587:
; Line 1152
	mov	edi, DWORD PTR _mind$[ebp]
	sub	edx, edi
	inc	edx
	shl	edx, 6
	call	@random@8
	shl	edi, 6
	add	eax, edi
; Line 1153
	cmp	DWORD PTR _m$[ebp], -1
	jne	SHORT $L85590
	test	BYTE PTR _plr[esi+21587], 16		; 00000010H
	je	SHORT $L85590
; Line 1154
	sar	eax, 1
$L85590:
; Line 1155
	mov	ecx, DWORD PTR _plr[esi+21588]
	push	100					; 00000064H
	shl	ecx, 6
	pop	edi
$L88955:
	add	ecx, eax
; Line 1157
	cmp	ecx, 64					; 00000040H
	jge	SHORT $L85591
; Line 1158
	push	64					; 00000040H
	pop	ecx
$L85591:
; Line 1160
	test	ebx, ebx
	jg	$L85592
; Line 1161
	mov	eax, DWORD PTR _v18$[ebp]
	cmp	DWORD PTR _v35$[ebp], eax
	jge	SHORT $L85593
; Line 1162
	mov	eax, DWORD PTR _m$[ebp]
	cmp	eax, -1
	jne	SHORT $L85594
; Line 1163
	mov	eax, DWORD PTR _plr[esi+112]
; Line 1164
	jmp	SHORT $L85595
$L85594:
; Line 1165
	imul	eax, 228				; 000000e4H
	mov	edx, DWORD PTR _plr[esi+60]
	mov	ecx, DWORD PTR _plr[esi+56]
	push	DWORD PTR _monster[eax+36]
	push	DWORD PTR _monster[eax+32]
	call	@GetDirection@16
$L85595:
; Line 1166
	mov	ecx, DWORD PTR _pnum$[ebp]
	mov	edx, eax
	call	@StartPlrBlock@8
; Line 1167
	jmp	$L88957
$L85593:
; Line 1170
	mov	edi, DWORD PTR _pnum$[ebp]
	cmp	edi, DWORD PTR _myplr
	jne	SHORT $L85596
; Line 1171
	sub	DWORD PTR _plr[esi+408], ecx
; Line 1172
	sub	DWORD PTR _plr[esi+400], ecx
$L85596:
; Line 1174
	mov	eax, DWORD PTR _plr[esi+412]
; Line 1175
	cmp	DWORD PTR _plr[esi+408], eax
	jle	SHORT $L85597
; Line 1176
	mov	DWORD PTR _plr[esi+408], eax
; Line 1177
	mov	eax, DWORD PTR _plr[esi+404]
	mov	DWORD PTR _plr[esi+400], eax
$L85597:
; Line 1179
	test	DWORD PTR _plr[esi+408], -64		; ffffffc0H
	jle	SHORT $LABEL_70$85599
; Line 1180
	mov	edx, ecx
	push	0
	mov	ecx, edi
	call	@StartPlrHit@12
; Line 1181
	jmp	$L88957
$L85592:
; Line 1186
	mov	eax, ecx
	imul	eax, ebx
	cdq
	idiv	edi
	sub	ecx, eax
; Line 1187
	mov	eax, DWORD PTR _pnum$[ebp]
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L85600
; Line 1188
	sub	DWORD PTR _plr[esi+408], ecx
; Line 1189
	sub	DWORD PTR _plr[esi+400], ecx
$L85600:
; Line 1191
	mov	eax, DWORD PTR _plr[esi+412]
; Line 1192
	cmp	DWORD PTR _plr[esi+408], eax
	jle	SHORT $L85601
; Line 1193
	mov	DWORD PTR _plr[esi+408], eax
; Line 1194
	mov	eax, DWORD PTR _plr[esi+404]
	mov	DWORD PTR _plr[esi+400], eax
$L85601:
; Line 1196
	test	DWORD PTR _plr[esi+408], -64		; ffffffc0H
	jg	SHORT $L85602
$LABEL_70$85599:
; Line 1198
	mov	edx, DWORD PTR _earflag$[ebp]
	mov	ecx, DWORD PTR _pnum$[ebp]
	call	@SyncPlrKill@8
; Line 1199
	jmp	SHORT $L88957
$L85602:
; Line 1202
	mov	al, BYTE PTR _plr[esi+352]
	test	al, al
	jne	SHORT $L85603
; Line 1203
	mov	ecx, 788				; 00000314H
; Line 1204
	jmp	SHORT $L88956
$L85603:
	cmp	al, 1
	jne	SHORT $L85605
; Line 1205
	mov	ecx, 679				; 000002a7H
; Line 1206
	jmp	SHORT $L88956
$L85605:
	cmp	al, 2
	jne	SHORT $L85607
; Line 1207
	mov	ecx, 576				; 00000240H
$L88956:
	push	DWORD PTR _plr[esi+60]
	mov	edx, DWORD PTR _plr[esi+56]
	call	@PlaySfxLoc@12
$L85607:
; Line 1210
	mov	DWORD PTR _drawhpflag, 1
$L88957:
; Line 1211
	mov	al, 1
	jmp	SHORT $L85519
$L85547:
; Line 1060
	xor	al, al
$L85519:
	pop	edi
	pop	esi
	pop	ebx
; Line 1214
	leave
	ret	24					; 00000018H
@PlayerMHit@32 ENDP
_TEXT	ENDS
PUBLIC	@Plr2PlrMHit@28
EXTRN	@NetSendCmdDamage@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @Plr2PlrMHit@28
_TEXT	SEGMENT
_pnum$ = -4
_p$ = -8
_mindam$ = 8
_maxdam$ = 12
_dist$ = 16
_mtype$ = 20
_shift$ = 24
_v23$ = -12
_v24$ = -12
_v27$ = -16
_dista$ = 16
@Plr2PlrMHit@28 PROC NEAR				; COMDAT
; _pnum$ = ecx
; _p$ = edx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	DWORD PTR _p$[ebp], edi
; Line 1241
	imul	edi, 21720				; 000054d8H
	cmp	BYTE PTR _plr[edi+317], 0
	mov	DWORD PTR _pnum$[ebp], ecx
	jne	$L85643
	mov	esi, DWORD PTR _mtype$[ebp]
	cmp	esi, 53					; 00000035H
	je	$L85643
	test	BYTE PTR _plr[edi+288], 1
	je	SHORT $L85642
	mov	eax, esi
	imul	eax, 28					; 0000001cH
	cmp	BYTE PTR _missiledata[eax+16], 0
	je	$L85643
$L85642:
; Line 1244
	imul	esi, 28					; 0000001cH
	mov	DWORD PTR -20+[ebp], esi
	mov	al, BYTE PTR _missiledata[esi+17]
; Line 1245
	cmp	al, 1
	jne	SHORT $L85644
; Line 1246
	movsx	eax, BYTE PTR _plr[edi+458]
; Line 1247
	jmp	SHORT $L85647
$L85644:
	cmp	al, 2
	jne	SHORT $L88962
; Line 1248
	movsx	eax, BYTE PTR _plr[edi+459]
; Line 1249
	jmp	SHORT $L85647
$L88962:
; Line 1250
	jbe	SHORT $L85649
	cmp	al, 4
	ja	SHORT $L85649
; Line 1254
	movsx	eax, BYTE PTR _plr[edi+457]
$L85647:
; Line 1256
	mov	DWORD PTR _v27$[ebp], eax
	jmp	SHORT $LABEL_14$85650
$L85649:
; Line 1251
	and	DWORD PTR _v27$[ebp], 0
$LABEL_14$85650:
; Line 1258
	push	100					; 00000064H
	mov	cl, 69					; 00000045H
	pop	ebx
	mov	edx, ebx
	call	@random@8
; Line 1259
	cmp	BYTE PTR _missiledata[esi+16], 0
; Line 1262
	mov	esi, DWORD PTR _pnum$[ebp]
	mov	DWORD PTR _v23$[ebp], eax
	je	SHORT $L85651
	movsx	ecx, BYTE PTR _plr[edi+440]
	imul	esi, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[esi+364]
	add	ecx, ecx
	sub	eax, ecx
	sub	eax, DWORD PTR _dist$[ebp]
; Line 1263
	cmp	BYTE PTR _plr[esi+352], 2
	lea	ecx, DWORD PTR [eax+50]
	jne	SHORT $L85655
; Line 1264
	lea	ecx, DWORD PTR [eax+70]
; Line 1265
	jmp	SHORT $L85655
$L85651:
; Line 1272
	mov	eax, DWORD PTR _dist$[ebp]
	imul	esi, 21720				; 000054d8H
	imul	eax, eax
; Line 1273
	movsx	ecx, BYTE PTR _plr[esi+440]
	sar	eax, 1
	sub	ecx, eax
	mov	eax, DWORD PTR _plr[edi+372]
	push	5
	cdq
	pop	ebx
	idiv	ebx
	sub	ecx, eax
	mov	eax, DWORD PTR _plr[esi+21560]
	sub	ecx, DWORD PTR _plr[edi+21552]
	sub	ecx, DWORD PTR _plr[edi+21564]
	add	ecx, DWORD PTR _plr[esi+372]
	lea	ecx, DWORD PTR [ecx+eax+50]
; Line 1274
	mov	al, BYTE PTR _plr[esi+352]
	cmp	al, 1
	jne	SHORT $L85654
; Line 1275
	add	ecx, 20					; 00000014H
$L85654:
; Line 1277
	push	100					; 00000064H
	test	al, al
	pop	ebx
	jne	SHORT $L85655
	add	ecx, 10					; 0000000aH
$L85655:
; Line 1279
	cmp	ecx, 5
	jge	SHORT $L85656
; Line 1280
	push	5
	pop	ecx
$L85656:
; Line 1281
	cmp	ecx, 95					; 0000005fH
	jle	SHORT $L85657
; Line 1282
	push	95					; 0000005fH
	pop	ecx
$L85657:
; Line 1283
	cmp	DWORD PTR _v23$[ebp], ecx
	jge	$L85643
; Line 1284
	mov	eax, DWORD PTR _plr[edi]
; Line 1285
	test	eax, eax
	je	SHORT $L85661
	cmp	eax, 4
	jne	SHORT $L85660
$L85661:
	cmp	BYTE PTR _plr[edi+316], 0
	jne	SHORT $L85659
$L85660:
; Line 1286
	mov	DWORD PTR _v24$[ebp], ebx
; Line 1287
	jmp	SHORT $L85662
$L85659:
; Line 1288
	mov	edx, ebx
	mov	cl, 73					; 00000049H
	call	@random@8
	mov	DWORD PTR _v24$[ebp], eax
$L85662:
; Line 1290
	cmp	BYTE PTR _shift$[ebp], 1
	jne	SHORT $L85664
; Line 1291
	mov	DWORD PTR _v24$[ebp], ebx
$L85664:
; Line 1292
	movsx	eax, BYTE PTR _plr[esi+440]
	movsx	ecx, BYTE PTR _plr[edi+440]
	sub	ecx, eax
	mov	eax, DWORD PTR _plr[edi+396]
	lea	eax, DWORD PTR [eax+ecx*2]
; Line 1294
	mov	ecx, DWORD PTR _plr[edi+372]
	add	ecx, eax
	test	ecx, ecx
; Line 1295
	mov	DWORD PTR _dista$[ebp], ecx
; Line 1296
	jge	SHORT $L85665
; Line 1297
	and	DWORD PTR _dista$[ebp], 0
; Line 1298
	xor	ecx, ecx
$L85665:
; Line 1300
	cmp	ecx, ebx
	jle	SHORT $L85666
; Line 1301
	mov	DWORD PTR _dista$[ebp], ebx
; Line 1302
	mov	ecx, ebx
$L85666:
; Line 1304
	cmp	DWORD PTR _mtype$[ebp], 63		; 0000003fH
	jne	SHORT $L85667
; Line 1305
	mov	eax, DWORD PTR _plr[edi+408]
	push	3
	cdq
	pop	ebx
	idiv	ebx
	mov	ebx, eax
; Line 1306
	jmp	SHORT $L85671
$L85667:
; Line 1307
	mov	edx, DWORD PTR _maxdam$[ebp]
	mov	cl, 70					; 00000046H
	sub	edx, DWORD PTR _mindam$[ebp]
	inc	edx
	call	@random@8
	mov	ebx, eax
; Line 1308
	mov	eax, DWORD PTR -20+[ebp]
	add	ebx, DWORD PTR _mindam$[ebp]
	cmp	BYTE PTR _missiledata[eax+16], 0
	jne	SHORT $L85669
; Line 1309
	mov	eax, DWORD PTR _plr[esi+21556]
	push	100					; 00000064H
	imul	eax, ebx
	cdq
	pop	ecx
	idiv	ecx
	add	eax, DWORD PTR _plr[esi+392]
	add	eax, DWORD PTR _plr[esi+21568]
	add	ebx, eax
$L85669:
; Line 1311
	cmp	BYTE PTR _shift$[ebp], 0
	mov	ecx, DWORD PTR _dista$[ebp]
	jne	SHORT $L85671
; Line 1312
	shl	ebx, 6
$L85671:
; Line 1314
	mov	eax, DWORD PTR -20+[ebp]
	cmp	BYTE PTR _missiledata[eax+16], 0
	je	SHORT $L85672
; Line 1315
	sar	ebx, 1
$L85672:
; Line 1316
	cmp	DWORD PTR _v27$[ebp], 0
	jg	SHORT $L85673
; Line 1317
	cmp	DWORD PTR _v24$[ebp], ecx
	jl	SHORT $L85674
; Line 1318
	mov	eax, DWORD PTR _pnum$[ebp]
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L85675
; Line 1319
	mov	dl, BYTE PTR _p$[ebp]
	xor	ecx, ecx
	push	ebx
	inc	ecx
	call	@NetSendCmdDamage@12
$L85675:
; Line 1320
	mov	ecx, DWORD PTR _p$[ebp]
	push	0
	mov	edx, ebx
	call	@StartPlrHit@12
; Line 1321
	jmp	$L85682
$L85674:
; Line 1322
	push	DWORD PTR _plr[esi+60]
	mov	edx, DWORD PTR _plr[edi+60]
	mov	ecx, DWORD PTR _plr[edi+56]
	push	DWORD PTR _plr[esi+56]
	call	@GetDirection@16
; Line 1323
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, eax
	call	@StartPlrBlock@8
; Line 1325
	jmp	SHORT $L85682
$L85673:
; Line 1327
	mov	eax, DWORD PTR _pnum$[ebp]
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L85677
; Line 1328
	mov	eax, ebx
	push	100					; 00000064H
	imul	eax, DWORD PTR _v27$[ebp]
	cdq
	pop	ecx
	idiv	ecx
	mov	dl, BYTE PTR _p$[ebp]
	xor	ecx, ecx
	inc	ecx
	sub	ebx, eax
	push	ebx
	call	@NetSendCmdDamage@12
$L85677:
; Line 1329
	mov	al, BYTE PTR _plr[esi+352]
	test	al, al
	jne	SHORT $L85678
; Line 1330
	mov	ecx, 788				; 00000314H
; Line 1331
	jmp	SHORT $L88963
$L85678:
	cmp	al, 1
	jne	SHORT $L85680
; Line 1332
	mov	ecx, 679				; 000002a7H
; Line 1333
	jmp	SHORT $L88963
$L85680:
	cmp	al, 2
	jne	SHORT $L85682
; Line 1334
	mov	ecx, 576				; 00000240H
$L88963:
	push	DWORD PTR _plr[esi+60]
	mov	edx, DWORD PTR _plr[esi+56]
	call	@PlaySfxLoc@12
$L85682:
; Line 1336
	mov	al, 1
	jmp	SHORT $L85622
$L85643:
; Line 1242
	xor	al, al
$L85622:
	pop	edi
	pop	esi
	pop	ebx
; Line 1339
	leave
	ret	20					; 00000014H
@Plr2PlrMHit@28 ENDP
_TEXT	ENDS
PUBLIC	@CheckMissileCol@28
EXTRN	_nMissileTable:BYTE
EXTRN	@BreakObject@8:NEAR
EXTRN	_object:BYTE
EXTRN	_dObject:BYTE
EXTRN	_dPlayer:BYTE
; Function compile flags: /Ogsy
;	COMDAT @CheckMissileCol@28
_TEXT	SEGMENT
_mindam$ = -4
_maxdam$ = 8
_shift$ = 12
_mx$ = 16
_my$ = 20
_nodel$ = 24
@CheckMissileCol@28 PROC NEAR				; COMDAT
; _i$ = ecx
; _mindam$ = edx
; Line 1342
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 1370
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _mindam$[ebp], edx
	mov	bl, BYTE PTR _missile[esi+56]
; Line 1371
	cmp	bl, 4
	je	$L85722
	mov	ecx, DWORD PTR _missile[esi+116]
	cmp	ecx, -1
	je	$L85722
; Line 1405
	mov	edi, DWORD PTR _mx$[ebp]
	xor	ebx, ebx
	cmp	DWORD PTR _missile[esi+120], ebx
	jne	$L85735
	imul	edi, 112				; 00000070H
	add	edi, DWORD PTR _my$[ebp]
; Line 1406
	mov	eax, DWORD PTR _dMonster[edi*4]
; Line 1407
	cmp	eax, ebx
	jg	SHORT $L85736
; Line 1408
	jge	SHORT $LABEL_13$85739
	lea	edx, DWORD PTR [eax+1]
	mov	ebx, OFFSET FLAT:_monster+4
	imul	edx, 228				; 000000e4H
	sub	ebx, edx
	cmp	DWORD PTR [ebx], 15			; 0000000fH
	jne	SHORT $LABEL_13$85739
; Line 1434
	movzx	edx, BYTE PTR _shift$[ebp]
	push	edx
	or	edx, -1
	push	DWORD PTR _missile[esi]
	sub	edx, eax
	push	DWORD PTR _missile[esi+132]
	push	DWORD PTR _maxdam$[ebp]
	push	DWORD PTR _mindam$[ebp]
; Line 1435
	jmp	SHORT $L88983
$L85736:
; Line 1436
	movzx	ebx, BYTE PTR _shift$[ebp]
	push	ebx
	push	DWORD PTR _missile[esi]
	push	DWORD PTR _missile[esi+132]
	push	DWORD PTR _maxdam$[ebp]
	push	edx
	lea	edx, DWORD PTR [eax-1]
$L88983:
	call	@MonsterMHit@28
; Line 1438
	test	al, al
	je	SHORT $LABEL_13$85739
; Line 1439
	cmp	BYTE PTR _nodel$[ebp], 0
	jne	SHORT $L85745
; Line 1440
	and	DWORD PTR _missile[esi+112], 0
$L85745:
; Line 1441
	mov	DWORD PTR _missile[esi+128], 1
$LABEL_13$85739:
; Line 1410
	mov	al, BYTE PTR _dPlayer[edi]
; Line 1411
	test	al, al
	jle	$LABEL_39$85733
; Line 1413
	mov	ecx, DWORD PTR _missile[esi+116]
; Line 1414
	movsx	edx, al
	dec	edx
; Line 1415
	cmp	edx, ecx
	je	$LABEL_39$85733
; Line 1424
	movzx	eax, BYTE PTR _shift$[ebp]
	push	eax
	push	DWORD PTR _missile[esi]
	push	DWORD PTR _missile[esi+132]
	push	DWORD PTR _maxdam$[ebp]
	push	DWORD PTR _mindam$[ebp]
	call	@Plr2PlrMHit@28
; Line 1425
	jmp	$LABEL_35$85729
$L85735:
; Line 1445
	imul	ecx, 228				; 000000e4H
	test	BYTE PTR _monster[ecx+156], 16		; 00000010H
	je	SHORT $L85749
; Line 1446
	mov	eax, edi
	imul	eax, 112				; 00000070H
	add	eax, DWORD PTR _my$[ebp]
	mov	eax, DWORD PTR _dMonster[eax*4]
; Line 1447
	cmp	eax, ebx
	jle	SHORT $L85749
; Line 1448
	mov	ecx, eax
	imul	ecx, 228				; 000000e4H
	test	BYTE PTR _monster[ecx-72], 32		; 00000020H
	je	SHORT $L85749
; Line 1457
	movzx	ecx, BYTE PTR _shift$[ebp]
	push	ecx
	lea	ecx, DWORD PTR [eax-1]
	push	DWORD PTR _missile[esi]
	push	DWORD PTR _missile[esi+132]
	push	DWORD PTR _maxdam$[ebp]
	call	@MonsterTrapHit@24
	test	al, al
	je	SHORT $L85749
; Line 1458
	cmp	BYTE PTR _nodel$[ebp], 0
	jne	SHORT $L85751
; Line 1459
	mov	DWORD PTR _missile[esi+112], ebx
$L85751:
; Line 1460
	mov	DWORD PTR _missile[esi+128], 1
$L85749:
; Line 1465
	imul	edi, 112				; 00000070H
	add	edi, DWORD PTR _my$[ebp]
; Line 1466
	mov	al, BYTE PTR _dPlayer[edi]
; Line 1467
	test	al, al
	jle	$LABEL_39$85733
; Line 1476
	mov	edx, DWORD PTR _missile[esi+116]
	push	ebx
; Line 1477
	jmp	$L88984
$L85722:
; Line 1372
	mov	edi, DWORD PTR _mx$[ebp]
	imul	edi, 112				; 00000070H
	add	edi, DWORD PTR _my$[ebp]
; Line 1373
	mov	eax, DWORD PTR _dMonster[edi*4]
; Line 1374
	test	eax, eax
	jle	SHORT $L85724
; Line 1375
	mov	ecx, DWORD PTR _missile[esi]
; Line 1376
	mov	edx, DWORD PTR _missile[esi+132]
; Line 1377
	cmp	bl, 4
	movzx	ebx, BYTE PTR _shift$[ebp]
	push	ebx
	push	ecx
	push	edx
	push	DWORD PTR _maxdam$[ebp]
	jne	SHORT $L88966
	push	DWORD PTR _mindam$[ebp]
	mov	ecx, DWORD PTR _missile[esi+116]
	lea	edx, DWORD PTR [eax-1]
	call	@MonsterMHit@28
	movzx	eax, al
	jmp	SHORT $L88967
$L88966:
	mov	edx, DWORD PTR _mindam$[ebp]
	lea	ecx, DWORD PTR [eax-1]
	call	@MonsterTrapHit@24
$L88967:
; Line 1378
	test	eax, eax
	je	SHORT $L85724
; Line 1379
	cmp	BYTE PTR _nodel$[ebp], 0
	jne	SHORT $L85726
; Line 1380
	and	DWORD PTR _missile[esi+112], 0
$L85726:
; Line 1381
	mov	DWORD PTR _missile[esi+128], 1
$L85724:
; Line 1384
	mov	al, BYTE PTR _dPlayer[edi]
; Line 1385
	test	al, al
	jle	SHORT $LABEL_39$85733
; Line 1394
	xor	ecx, ecx
	cmp	BYTE PTR _missile[esi+56], 4
	sete	cl
	push	ecx
	or	edx, -1
$L88984:
	movzx	ecx, BYTE PTR _shift$[ebp]
	push	ecx
	push	DWORD PTR _missile[esi]
	movsx	ecx, al
	push	DWORD PTR _maxdam$[ebp]
	dec	ecx
	push	DWORD PTR _mindam$[ebp]
	push	DWORD PTR _missile[esi+132]
	call	@PlayerMHit@32
$LABEL_35$85729:
; Line 1396
	test	al, al
	je	SHORT $LABEL_39$85733
; Line 1397
	cmp	BYTE PTR _nodel$[ebp], 0
	jne	SHORT $L85732
; Line 1398
	and	DWORD PTR _missile[esi+112], 0
$L85732:
; Line 1399
	mov	DWORD PTR _missile[esi+128], 1
$LABEL_39$85733:
; Line 1481
	mov	al, BYTE PTR _dObject[edi]
; Line 1482
	test	al, al
	je	SHORT $L88982
; Line 1483
	jg	SHORT $L88968
	movsx	eax, al
	or	edx, -1
	sub	edx, eax
	jmp	SHORT $L88969
$L88968:
	movsx	edx, al
	dec	edx
$L88969:
; Line 1484
	mov	eax, edx
	xor	ebx, ebx
	imul	eax, 120				; 00000078H
	cmp	DWORD PTR _object[eax+60], ebx
	jne	SHORT $L85754
; Line 1485
	cmp	BYTE PTR _object[eax+52], 1
	jne	SHORT $L85755
; Line 1486
	or	ecx, -1
	call	@BreakObject@8
$L85755:
; Line 1487
	cmp	BYTE PTR _nodel$[ebp], 0
	jne	SHORT $L85757
; Line 1488
	mov	DWORD PTR _missile[esi+112], ebx
$L85757:
; Line 1489
	mov	DWORD PTR _missile[esi+128], ebx
	jmp	SHORT $L85754
$L88982:
	xor	ebx, ebx
$L85754:
; Line 1492
	mov	eax, DWORD PTR _dPiece[edi*4]
	cmp	BYTE PTR _nMissileTable[eax], 0
	je	SHORT $L85758
; Line 1493
	cmp	BYTE PTR _nodel$[ebp], 0
	jne	SHORT $L85760
; Line 1494
	mov	DWORD PTR _missile[esi+112], ebx
$L85760:
; Line 1495
	mov	DWORD PTR _missile[esi+128], ebx
$L85758:
; Line 1497
	cmp	DWORD PTR _missile[esi+112], ebx
	jne	SHORT $L85762
; Line 1498
	mov	eax, DWORD PTR _missile[esi]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _missiledata[eax+24]
; Line 1499
	cmp	ecx, -1
	je	SHORT $L85762
; Line 1500
	push	DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+4]
	call	@PlaySfxLoc@12
$L85762:
	pop	edi
	pop	esi
	pop	ebx
; Line 1502
	leave
	ret	20					; 00000014H
@CheckMissileCol@28 ENDP
_TEXT	ENDS
PUBLIC	@SetMissAnim@8
; Function compile flags: /Ogsy
;	COMDAT @SetMissAnim@8
_TEXT	SEGMENT
@SetMissAnim@8 PROC NEAR				; COMDAT
; _mi$ = ecx
; _animtype$ = edx
; Line 1506
	imul	ecx, 176				; 000000b0H
; Line 1509
	mov	eax, edx
	push	esi
	imul	eax, 236				; 000000ecH
	mov	esi, DWORD PTR _missile[ecx+44]
	mov	BYTE PTR _missile[ecx+56], dl
; Line 1510
	imul	edx, 59					; 0000003bH
	push	edi
	mov	edi, DWORD PTR _misfiledata[eax+8]
; Line 1511
	add	eax, esi
	add	edx, esi
	shl	edx, 2
	movzx	esi, BYTE PTR _misfiledata[eax+76]
; Line 1512
	movzx	eax, BYTE PTR _misfiledata[eax+92]
; Line 1515
	and	DWORD PTR _missile[ecx+84], 0
	mov	DWORD PTR _missile[ecx+72], eax
	mov	eax, DWORD PTR _misfiledata[edx+108]
	mov	DWORD PTR _missile[ecx+60], edi
	mov	edi, DWORD PTR _misfiledata[edx+12]
	mov	DWORD PTR _missile[ecx+76], eax
	mov	eax, DWORD PTR _misfiledata[edx+172]
	mov	DWORD PTR _missile[ecx+64], edi
	mov	DWORD PTR _missile[ecx+68], esi
	pop	edi
	mov	DWORD PTR _missile[ecx+80], eax
; Line 1516
	mov	DWORD PTR _missile[ecx+92], 1
	pop	esi
; Line 1517
	ret	0
@SetMissAnim@8 ENDP
_TEXT	ENDS
PUBLIC	@SetMissDir@8
; Function compile flags: /Ogsy
;	COMDAT @SetMissDir@8
_TEXT	SEGMENT
@SetMissDir@8 PROC NEAR					; COMDAT
; _mi$ = ecx
; _dir$ = edx
; Line 1521
	mov	eax, ecx
	imul	eax, 176				; 000000b0H
	mov	DWORD PTR _missile[eax+44], edx
; Line 1522
	movzx	edx, BYTE PTR _missile[eax+56]
	jmp	@SetMissAnim@8
@SetMissDir@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@GJIA@Missiles?2?$CFs?4CL2?$AA@	; `string'
PUBLIC	??_C@_0BC@NEFK@Missiles?2?$CFs?$CFi?4CL2?$AA@	; `string'
PUBLIC	@LoadMissileGFX@4
EXTRN	_sprintf:NEAR
EXTRN	@LoadFileInMem@8:NEAR
;	COMDAT ??_C@_0BA@GJIA@Missiles?2?$CFs?4CL2?$AA@
_DATA	SEGMENT
??_C@_0BA@GJIA@Missiles?2?$CFs?4CL2?$AA@ DB 'Missiles\%s.CL2', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BC@NEFK@Missiles?2?$CFs?$CFi?4CL2?$AA@
_DATA	SEGMENT
??_C@_0BC@NEFK@Missiles?2?$CFs?$CFi?4CL2?$AA@ DB 'Missiles\%s%i.CL2', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @LoadMissileGFX@4
_TEXT	SEGMENT
_arglist$ = -256
@LoadMissileGFX@4 PROC NEAR				; COMDAT
; _mi$ = cl
; Line 1529
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	esi
	push	edi
; Line 1541
	movzx	esi, cl
	imul	esi, 236				; 000000ecH
	add	esi, OFFSET FLAT:_misfiledata
; Line 1542
	test	BYTE PTR [esi+8], 4
	je	SHORT $L85788
; Line 1543
	push	DWORD PTR [esi+4]
	lea	eax, DWORD PTR _arglist$[ebp]
	push	OFFSET FLAT:??_C@_0BA@GJIA@Missiles?2?$CFs?4CL2?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1544
	xor	edx, edx
	lea	ecx, DWORD PTR _arglist$[ebp]
	call	@LoadFileInMem@8
; Line 1545
	xor	edx, edx
; Line 1546
	cmp	BYTE PTR [esi+1], dl
	je	$L85805
; Line 1547
	lea	edi, DWORD PTR [esi+12]
$L85792:
; Line 1549
	mov	ecx, DWORD PTR [eax+edx*4]
	add	ecx, eax
	inc	edx
; Line 1550
	mov	DWORD PTR [edi], ecx
; Line 1551
	add	edi, 4
; Line 1552
	movzx	ecx, BYTE PTR [esi+1]
	cmp	edx, ecx
	jl	SHORT $L85792
; Line 1554
	jmp	SHORT $L85805
$L85788:
; Line 1555
	mov	cl, BYTE PTR [esi+1]
; Line 1556
	cmp	cl, 1
	jne	SHORT $L85798
; Line 1557
	push	DWORD PTR [esi+4]
	lea	eax, DWORD PTR _arglist$[ebp]
	push	OFFSET FLAT:??_C@_0BA@GJIA@Missiles?2?$CFs?4CL2?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1558
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $L85805
; Line 1559
	xor	edx, edx
	lea	ecx, DWORD PTR _arglist$[ebp]
	call	@LoadFileInMem@8
	mov	DWORD PTR [esi+12], eax
; Line 1560
	jmp	SHORT $L85805
$L85798:
; Line 1561
	xor	eax, eax
; Line 1562
	test	cl, cl
	je	SHORT $L85805
; Line 1563
	lea	edi, DWORD PTR [esi+12]
	push	ebx
$L85803:
; Line 1565
	lea	ebx, DWORD PTR [eax+1]
; Line 1566
	lea	eax, DWORD PTR _arglist$[ebp]
	push	ebx
	push	DWORD PTR [esi+4]
	push	OFFSET FLAT:??_C@_0BC@NEFK@Missiles?2?$CFs?$CFi?4CL2?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1567
	cmp	DWORD PTR [edi], 0
	jne	SHORT $L85807
; Line 1568
	xor	edx, edx
	lea	ecx, DWORD PTR _arglist$[ebp]
	call	@LoadFileInMem@8
	mov	DWORD PTR [edi], eax
$L85807:
; Line 1571
	movzx	ecx, BYTE PTR [esi+1]
	add	edi, 4
	cmp	ebx, ecx
	mov	eax, ebx
	jl	SHORT $L85803
	pop	ebx
$L85805:
	pop	edi
	pop	esi
; Line 1575
	leave
	ret	0
@LoadMissileGFX@4 ENDP
_TEXT	ENDS
PUBLIC	_InitMissileGFX
; Function compile flags: /Ogsy
;	COMDAT _InitMissileGFX
_TEXT	SEGMENT
_InitMissileGFX PROC NEAR				; COMDAT
; Line 1578
	push	ebx
; Line 1582
	xor	bl, bl
; Line 1583
	cmp	BYTE PTR _misfiledata+1, bl
	je	SHORT $L85815
	push	esi
; Line 1584
	mov	esi, OFFSET FLAT:_misfiledata+1
$L85813:
; Line 1586
	test	BYTE PTR [esi+7], 1
	jne	SHORT $L85816
; Line 1587
	mov	cl, bl
	call	@LoadMissileGFX@4
$L85816:
; Line 1588
	add	esi, 236				; 000000ecH
; Line 1589
	inc	bl
; Line 1590
	cmp	BYTE PTR [esi], 0
	jne	SHORT $L85813
	pop	esi
$L85815:
	pop	ebx
; Line 1592
	ret	0
_InitMissileGFX ENDP
_TEXT	ENDS
PUBLIC	@FreeMissileGFX@4
EXTRN	@mem_free_dbg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @FreeMissileGFX@4
_TEXT	SEGMENT
@FreeMissileGFX@4 PROC NEAR				; COMDAT
; _mi$ = ecx
; Line 1595
	push	ebx
	push	esi
	mov	esi, ecx
; Line 1603
	imul	esi, 236				; 000000ecH
	test	BYTE PTR _misfiledata[esi+8], 4
	je	SHORT $L85825
; Line 1604
	mov	ecx, DWORD PTR _misfiledata[esi+12]
; Line 1605
	test	ecx, ecx
	je	SHORT $L85832
; Line 1606
	movzx	eax, BYTE PTR _misfiledata[esi+1]
	shl	eax, 2
	sub	ecx, eax
	call	@mem_free_dbg@4
; Line 1607
	and	DWORD PTR _misfiledata[esi+12], 0
; Line 1609
	jmp	SHORT $L85832
$L85825:
; Line 1610
	xor	ebx, ebx
; Line 1611
	cmp	BYTE PTR _misfiledata[esi+1], bl
	je	SHORT $L85832
	push	edi
; Line 1612
	lea	edi, DWORD PTR _misfiledata[esi+12]
$L85830:
; Line 1614
	mov	ecx, DWORD PTR [edi]
; Line 1615
	test	ecx, ecx
	je	SHORT $L85833
; Line 1616
	and	DWORD PTR [edi], 0
; Line 1617
	call	@mem_free_dbg@4
$L85833:
; Line 1621
	movzx	eax, BYTE PTR _misfiledata[esi+1]
	inc	ebx
	add	edi, 4
	cmp	ebx, eax
	jl	SHORT $L85830
	pop	edi
$L85832:
	pop	esi
	pop	ebx
; Line 1624
	ret	0
@FreeMissileGFX@4 ENDP
_TEXT	ENDS
PUBLIC	_FreeMissiles
; Function compile flags: /Ogsy
;	COMDAT _FreeMissiles
_TEXT	SEGMENT
_FreeMissiles PROC NEAR					; COMDAT
; Line 1627
	push	edi
; Line 1631
	xor	edi, edi
; Line 1632
	cmp	BYTE PTR _misfiledata+1, 0
	je	SHORT $L85840
	push	esi
; Line 1633
	mov	esi, OFFSET FLAT:_misfiledata+1
$L85838:
; Line 1635
	test	BYTE PTR [esi+7], 1
	jne	SHORT $L85841
; Line 1636
	mov	ecx, edi
	call	@FreeMissileGFX@4
$L85841:
; Line 1637
	add	esi, 236				; 000000ecH
; Line 1638
	inc	edi
; Line 1639
	cmp	BYTE PTR [esi], 0
	jne	SHORT $L85838
	pop	esi
$L85840:
	pop	edi
; Line 1641
	ret	0
_FreeMissiles ENDP
_TEXT	ENDS
PUBLIC	_FreeMissiles2
; Function compile flags: /Ogsy
;	COMDAT _FreeMissiles2
_TEXT	SEGMENT
_FreeMissiles2 PROC NEAR				; COMDAT
; Line 1644
	push	edi
; Line 1648
	xor	edi, edi
; Line 1649
	cmp	BYTE PTR _misfiledata+1, 0
	je	SHORT $L85848
	push	esi
; Line 1650
	mov	esi, OFFSET FLAT:_misfiledata+1
$L85846:
; Line 1652
	test	BYTE PTR [esi+7], 1
	je	SHORT $L85849
; Line 1653
	mov	ecx, edi
	call	@FreeMissileGFX@4
$L85849:
; Line 1654
	add	esi, 236				; 000000ecH
; Line 1655
	inc	edi
; Line 1656
	cmp	BYTE PTR [esi], 0
	jne	SHORT $L85846
	pop	esi
$L85848:
	pop	edi
; Line 1658
	ret	0
_FreeMissiles2 ENDP
_TEXT	ENDS
PUBLIC	_InitMissiles
EXTRN	@CalcPlrItemVals@8:NEAR
EXTRN	_memset:NEAR
; Function compile flags: /Ogsy
;	COMDAT _InitMissiles
_TEXT	SEGMENT
_InitMissiles PROC NEAR					; COMDAT
; Line 1672
	mov	eax, DWORD PTR _myplr
	push	esi
; Line 1673
	imul	eax, 21720				; 000054d8H
	push	edi
; Line 1674
	xor	edi, edi
	and	BYTE PTR _plr[eax+288], 254		; 000000feH
	cmp	DWORD PTR _plr[eax+464], 1
	jne	SHORT $L85864
; Line 1675
	xor	esi, esi
	cmp	DWORD PTR _nummissiles, edi
	jle	SHORT $L85864
$L85862:
; Line 1676
	mov	eax, DWORD PTR _missileactive[esi*4]
; Line 1677
	imul	eax, 176				; 000000b0H
	cmp	DWORD PTR _missile[eax], 39		; 00000027H
	jne	SHORT $L85863
; Line 1678
	mov	eax, DWORD PTR _missile[eax+116]
; Line 1679
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L85863
; Line 1680
	xor	edx, edx
	mov	ecx, eax
	inc	edx
	call	@CalcPlrItemVals@8
$L85863:
	inc	esi
	cmp	esi, DWORD PTR _nummissiles
	jl	SHORT $L85862
$L85864:
; Line 1685
	push	500					; 000001f4H
	push	edi
	push	OFFSET FLAT:_missileactive
	xor	esi, esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1686
	mov	DWORD PTR _nummissiles, edi
$L85867:
; Line 1688
	mov	DWORD PTR _missileavail[esi*4], esi
; Line 1689
	inc	esi
; Line 1690
	cmp	esi, 125				; 0000007dH
	jl	SHORT $L85867
; Line 1691
	mov	DWORD PTR _numchains, edi
; Line 1692
	mov	eax, OFFSET FLAT:_chain+4
$L85870:
; Line 1694
	or	DWORD PTR [eax-4], -1
; Line 1695
	mov	DWORD PTR [eax], edi
; Line 1696
	mov	DWORD PTR [eax+4], edi
; Line 1697
	add	eax, 12					; 0000000cH
; Line 1698
	cmp	eax, OFFSET FLAT:_chain+1504
	jl	SHORT $L85870
	pop	edi
; Line 1699
	xor	ecx, ecx
	pop	esi
$L85875:
; Line 1701
	push	112					; 00000070H
	lea	eax, DWORD PTR _dFlags[ecx]
	pop	edx
$L85879:
; Line 1704
	and	BYTE PTR [eax], 254			; 000000feH
; Line 1705
	add	eax, 112				; 00000070H
; Line 1707
	dec	edx
	jne	SHORT $L85879
; Line 1708
	inc	ecx
; Line 1709
	cmp	ecx, 112				; 00000070H
	jl	SHORT $L85875
; Line 1710
	ret	0
_InitMissiles ENDP
_TEXT	ENDS
EXTRN	@AddLight@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @AddLArrow@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
@AddLArrow@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1714
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 1715
	mov	esi, DWORD PTR _dx$[ebp]
	mov	ebx, edx
	push	edi
	mov	edi, DWORD PTR _dy$[ebp]
	cmp	ebx, esi
	mov	DWORD PTR _mi$[ebp], ecx
	jne	SHORT $L85901
	cmp	DWORD PTR _sy$[ebp], edi
	jne	SHORT $L85901
; Line 1716
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	esi, DWORD PTR _XDirAdd[eax]
; Line 1717
	add	edi, DWORD PTR _YDirAdd[eax]
$L85901:
; Line 1719
	cmp	BYTE PTR _mienemy$[ebp], 0
	jne	SHORT $L85903
; Line 1720
	mov	eax, DWORD PTR _id$[ebp]
	imul	eax, 21720				; 000054d8H
	mov	dl, BYTE PTR _plr[eax+352]
	cmp	dl, 1
	jne	SHORT $L85904
; Line 1721
	movsx	eax, BYTE PTR _plr[eax+440]
	sar	eax, 2
	add	eax, 31					; 0000001fH
	push	eax
; Line 1722
	jmp	SHORT $L89024
$L85904:
	test	dl, dl
; Line 1723
	mov	edx, ebx
	jne	SHORT $L85906
	movsx	eax, BYTE PTR _plr[eax+440]
	sar	eax, 3
	add	eax, 31					; 0000001fH
	push	eax
; Line 1724
	jmp	SHORT $L89025
$L85906:
; Line 1725
	push	32					; 00000020H
; Line 1726
	jmp	SHORT $L89025
$L85903:
; Line 1727
	push	32					; 00000020H
$L89024:
	mov	edx, ebx
$L89025:
	push	edi
	push	esi
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
; Line 1729
	mov	ecx, ebx
	push	edi
	mov	edi, DWORD PTR _sy$[ebp]
	push	esi
	mov	edx, edi
	call	@GetDirection16@16
	mov	esi, DWORD PTR _mi$[ebp]
	mov	edx, eax
	mov	ecx, esi
	call	@SetMissDir@8
; Line 1730
	imul	esi, 176				; 000000b0H
; Line 1733
	push	5
	mov	edx, edi
	mov	ecx, ebx
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], ebx
	mov	DWORD PTR _missile[esi+148], edi
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1734
	leave
	ret	28					; 0000001cH
@AddLArrow@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddArrow@36
_TEXT	SEGMENT
_mi$ = -4
_sx$ = -8
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
@AddArrow@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1737
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
; Line 1740
	mov	ebx, DWORD PTR _dy$[ebp]
	push	esi
	mov	esi, DWORD PTR _dx$[ebp]
	cmp	edx, esi
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _mi$[ebp], ecx
	jne	SHORT $L85929
	cmp	DWORD PTR _sy$[ebp], ebx
	jne	SHORT $L85929
; Line 1741
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	esi, DWORD PTR _XDirAdd[eax]
; Line 1742
	add	ebx, DWORD PTR _YDirAdd[eax]
	mov	DWORD PTR _dx$[ebp], esi
$L85929:
; Line 1744
	cmp	BYTE PTR _mienemy$[ebp], 0
	jne	SHORT $L85931
	push	edi
; Line 1746
	mov	edi, DWORD PTR _id$[ebp]
	imul	edi, 21720				; 000054d8H
	push	32					; 00000020H
	test	BYTE PTR _plr[edi+21584], 4
	pop	eax
	je	SHORT $L85932
; Line 1747
	mov	edx, eax
	mov	cl, 64					; 00000040H
	call	@random@8
	add	eax, 16					; 00000010H
$L85932:
; Line 1749
	mov	cl, BYTE PTR _plr[edi+352]
	cmp	cl, 1
	jne	SHORT $L85933
; Line 1750
	movsx	edx, BYTE PTR _plr[edi+440]
	dec	edx
	sar	edx, 2
	add	eax, edx
$L85933:
; Line 1751
	test	cl, cl
	jne	SHORT $L85934
; Line 1752
	movsx	ecx, BYTE PTR _plr[edi+440]
	dec	ecx
	sar	ecx, 3
	add	eax, ecx
$L85934:
; Line 1753
	mov	edx, DWORD PTR _sx$[ebp]
	mov	ecx, DWORD PTR _mi$[ebp]
	push	eax
	push	ebx
	push	esi
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
	pop	edi
; Line 1754
	jmp	SHORT $L85935
$L85931:
; Line 1755
	push	32					; 00000020H
	push	ebx
	push	esi
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
$L85935:
; Line 1757
	mov	esi, DWORD PTR _mi$[ebp]
	mov	edx, DWORD PTR _sy$[ebp]
	mov	ecx, DWORD PTR _sx$[ebp]
	push	ebx
	push	DWORD PTR _dx$[ebp]
	imul	esi, 176				; 000000b0H
	call	@GetDirection16@16
	inc	eax
; Line 1758
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+92], eax
	pop	esi
	pop	ebx
; Line 1759
	leave
	ret	28					; 0000001cH
@AddArrow@36 ENDP
_TEXT	ENDS
PUBLIC	@GetVileMissPos@12
EXTRN	@PosOkPlayer@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @GetVileMissPos@12
_TEXT	SEGMENT
_mi$ = -20
_dx$ = -12
_dy$ = 8
_v3$ = -16
_v11$ = -8
_v12$ = -4
@GetVileMissPos@12 PROC NEAR				; COMDAT
; _mi$ = ecx
; _dx$ = edx
; Line 1762
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
; Line 1777
	or	eax, -1
	push	esi
	push	edi
	mov	DWORD PTR _dx$[ebp], edx
	mov	DWORD PTR _mi$[ebp], ecx
	mov	DWORD PTR _v12$[ebp], 1
	mov	DWORD PTR _v3$[ebp], eax
$L85953:
; Line 1780
	cmp	eax, DWORD PTR _v12$[ebp]
	mov	DWORD PTR _v11$[ebp], eax
	jg	SHORT $L85964
; Line 1802
	mov	ecx, DWORD PTR _dx$[ebp]
	add	eax, ecx
	mov	DWORD PTR -24+[ebp], eax
$L85958:
	mov	ebx, DWORD PTR -24+[ebp]
	mov	eax, DWORD PTR _dy$[ebp]
	mov	ecx, DWORD PTR _v11$[ebp]
	mov	esi, ebx
	sub	esi, DWORD PTR _dx$[ebp]
	lea	edi, DWORD PTR [ecx+eax]
$L85960:
	mov	ecx, DWORD PTR _myplr
	push	edi
	mov	edx, ebx
	call	@PosOkPlayer@12
	test	eax, eax
	jne	SHORT $L89034
	inc	ebx
	inc	esi
	cmp	esi, DWORD PTR _v12$[ebp]
	jle	SHORT $L85960
	inc	DWORD PTR _v11$[ebp]
	mov	eax, DWORD PTR _v11$[ebp]
	cmp	eax, DWORD PTR _v12$[ebp]
	jle	SHORT $L85958
$L85964:
; Line 1801
	mov	eax, DWORD PTR _v3$[ebp]
	inc	DWORD PTR _v12$[ebp]
	dec	eax
; Line 1802
	cmp	eax, -50				; ffffffceH
	mov	DWORD PTR _v3$[ebp], eax
	jg	SHORT $L85953
; Line 1804
	mov	eax, DWORD PTR _mi$[ebp]
	mov	ecx, DWORD PTR _dx$[ebp]
	imul	eax, 176				; 000000b0H
	mov	DWORD PTR _missile[eax+4], ecx
; Line 1805
	mov	ecx, DWORD PTR _dy$[ebp]
	mov	DWORD PTR _missile[eax+8], ecx
$L85942:
	pop	edi
	pop	esi
	pop	ebx
; Line 1806
	leave
	ret	4
$L89034:
; Line 1788
	mov	eax, DWORD PTR _mi$[ebp]
	imul	eax, 176				; 000000b0H
	mov	DWORD PTR _missile[eax+4], ebx
; Line 1789
	mov	DWORD PTR _missile[eax+8], edi
; Line 1790
	jmp	SHORT $L85942
@GetVileMissPos@12 ENDP
_TEXT	ENDS
EXTRN	_setlvlnum:BYTE
EXTRN	_setlevel:BYTE
EXTRN	@UseMana@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT @AddRndTeleport@36
_TEXT	SEGMENT
_sx$ = -12
_sy$ = 8
_dx$ = 12
_dy$ = 16
_mienemy$ = 24
_id$ = 28
_mia$ = -8
_v22$ = -4
@AddRndTeleport@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1809
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 1825
	mov	ebx, DWORD PTR _sy$[ebp]
	push	esi
	push	edi
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _mia$[ebp], ecx
	mov	DWORD PTR _v22$[ebp], 1
$L85996:
; Line 1826
	push	3
	mov	cl, 58					; 0000003aH
	pop	edx
	call	@random@8
	mov	esi, eax
; Line 1828
	mov	cl, 58					; 0000003aH
	push	3
	add	esi, 4
	pop	edx
	call	@random@8
	mov	edi, eax
; Line 1830
	mov	cl, 58					; 0000003aH
	push	2
	add	edi, 4
	pop	edx
	call	@random@8
	cmp	eax, 1
	jne	SHORT $L85998
; Line 1831
	neg	esi
$L85998:
; Line 1832
	push	2
	mov	cl, 58					; 0000003aH
	pop	edx
	call	@random@8
	cmp	eax, 1
	jne	SHORT $L85999
; Line 1833
	neg	edi
$L85999:
; Line 1834
	mov	eax, DWORD PTR _sx$[ebp]
	add	eax, esi
	imul	eax, 112				; 00000070H
	add	eax, edi
	lea	ecx, DWORD PTR [eax+ebx]
	mov	eax, ecx
	shl	eax, 2
; Line 1835
	shr	eax, 2
	shl	eax, 2
	mov	edx, DWORD PTR _dPiece[eax]
	cmp	BYTE PTR _nSolidTable[edx], 0
	jne	SHORT $L86000
	cmp	BYTE PTR _dObject[ecx], 0
	jne	SHORT $L86000
	cmp	DWORD PTR _dMonster[eax], 0
	je	SHORT $LABEL_12$86001
$L86000:
; Line 1825
	inc	DWORD PTR _v22$[ebp]
	cmp	DWORD PTR _v22$[ebp], 500		; 000001f4H
	jle	$L85996
; Line 1838
	xor	esi, esi
; Line 1839
	xor	edi, edi
$LABEL_12$86001:
; Line 1842
	mov	eax, DWORD PTR _mia$[ebp]
	imul	eax, 176				; 000000b0H
	and	DWORD PTR _missile[eax+144], 0
; Line 1843
	cmp	BYTE PTR _setlevel, 0
; Line 1844
	mov	DWORD PTR _missile[eax+112], 2
; Line 1845
	je	SHORT $L86003
	cmp	BYTE PTR _setlvlnum, 5
	jne	SHORT $L86003
; Line 1851
	mov	edi, DWORD PTR _dx$[ebp]
	mov	esi, DWORD PTR _dy$[ebp]
	mov	ecx, edi
	imul	ecx, 112				; 00000070H
	movsx	ecx, BYTE PTR _dObject[ecx+esi]
	imul	ecx, 120				; 00000078H
	mov	ecx, DWORD PTR _object[ecx-120]
; Line 1852
	cmp	ecx, 84					; 00000054H
	je	SHORT $L86008
	cmp	ecx, 85					; 00000055H
	jne	SHORT $L86005
$L86008:
; Line 1853
	mov	ecx, DWORD PTR _myplr
; Line 1856
	push	esi
	mov	edx, edi
	mov	DWORD PTR _missile[eax+4], edi
	mov	DWORD PTR _missile[eax+8], esi
	call	@PosOkPlayer@12
	test	eax, eax
	jne	SHORT $L86005
; Line 1857
	mov	ecx, DWORD PTR _mia$[ebp]
	push	esi
	mov	edx, edi
	call	@GetVileMissPos@12
	jmp	SHORT $L86005
$L86003:
; Line 1846
	mov	ecx, DWORD PTR _sx$[ebp]
; Line 1847
	add	edi, ebx
	add	esi, ecx
; Line 1848
	cmp	BYTE PTR _mienemy$[ebp], 0
	mov	DWORD PTR _missile[eax+4], esi
	mov	DWORD PTR _missile[eax+8], edi
	jne	SHORT $L86005
; Line 1849
	mov	ecx, DWORD PTR _id$[ebp]
	push	10					; 0000000aH
	pop	edx
	call	@UseMana@8
$L86005:
	pop	edi
	pop	esi
	pop	ebx
; Line 1860
	leave
	ret	28					; 0000001cH
@AddRndTeleport@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFirebolt@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_micaster$ = 24
_id$ = 28
_micastera$ = 12
@AddFirebolt@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1864
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 1876
	mov	edi, DWORD PTR _dx$[ebp]
	mov	ebx, edx
	mov	DWORD PTR _mi$[ebp], ecx
; Line 1877
	mov	ecx, DWORD PTR _dy$[ebp]
; Line 1880
	cmp	ebx, edi
	mov	esi, ecx
	jne	SHORT $L86039
	cmp	DWORD PTR _sy$[ebp], ecx
	jne	SHORT $L86039
; Line 1881
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	mov	edi, DWORD PTR _XDirAdd[eax]
; Line 1882
	mov	esi, DWORD PTR _YDirAdd[eax]
	add	edi, DWORD PTR _dx$[ebp]
	add	esi, ecx
$L86039:
; Line 1884
	cmp	BYTE PTR _micaster$[ebp], 0
	je	SHORT $L86041
; Line 1885
	push	26					; 0000001aH
; Line 1886
	jmp	SHORT $L89051
$L86041:
; Line 1888
	mov	ecx, DWORD PTR _nummissiles
	and	DWORD PTR _micastera$[ebp], 0
	test	ecx, ecx
	jle	SHORT $L89045
$L86043:
; Line 1889
	mov	eax, DWORD PTR _micastera$[ebp]
	mov	eax, DWORD PTR _missileactive[eax*4]
; Line 1890
	imul	eax, 176				; 000000b0H
	cmp	DWORD PTR _missile[eax], 2
	jne	SHORT $L86044
	mov	edx, DWORD PTR _id$[ebp]
	cmp	DWORD PTR _missile[eax+116], edx
	jne	SHORT $L86044
	mov	edx, DWORD PTR _mi$[ebp]
	cmp	DWORD PTR _missile[eax+152], edx
	je	SHORT $L89045
$L86044:
; Line 1888
	inc	DWORD PTR _micastera$[ebp]
	cmp	DWORD PTR _micastera$[ebp], ecx
	jl	SHORT $L86043
$L89045:
; Line 1893
	cmp	DWORD PTR _micastera$[ebp], ecx
	jne	SHORT $L86047
; Line 1894
	mov	ecx, DWORD PTR _id$[ebp]
	xor	edx, edx
	inc	edx
	call	@UseMana@8
$L86047:
; Line 1895
	cmp	DWORD PTR _id$[ebp], -1
	jne	SHORT $L86048
; Line 1896
	push	16					; 00000010H
; Line 1897
	jmp	SHORT $L89051
$L86048:
; Line 1899
	mov	eax, DWORD PTR _mi$[ebp]
	imul	eax, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[eax+48]
	lea	eax, DWORD PTR [eax+eax+16]
; Line 1900
	cmp	eax, 63					; 0000003fH
	jl	SHORT $L86049
; Line 1901
	push	63					; 0000003fH
$L89051:
	pop	eax
$L86049:
; Line 1905
	mov	ecx, DWORD PTR _mi$[ebp]
	push	eax
	push	esi
	push	edi
	push	DWORD PTR _sy$[ebp]
	mov	edx, ebx
$LABEL_17$86042:
	call	@GetMissileVel@24
; Line 1906
	mov	ecx, ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _sy$[ebp]
	mov	edx, edi
	call	@GetDirection16@16
; Line 1907
	mov	esi, DWORD PTR _mi$[ebp]
	mov	edx, eax
	mov	ecx, esi
	call	@SetMissDir@8
; Line 1909
	imul	esi, 176				; 000000b0H
; Line 1912
	push	8
	mov	edx, edi
	mov	ecx, ebx
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], ebx
	mov	DWORD PTR _missile[esi+148], edi
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1913
	leave
	ret	28					; 0000001cH
@AddFirebolt@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddMagmaball@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
@AddMagmaball@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1916
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 1917
	mov	ebx, DWORD PTR _sy$[ebp]
	push	edi
	push	16					; 00000010H
	mov	esi, ecx
	push	DWORD PTR _dy$[ebp]
	mov	edi, edx
	mov	DWORD PTR _mi$[ebp], esi
	push	DWORD PTR _dx$[ebp]
	push	ebx
	call	@GetMissileVel@24
; Line 1918
	imul	esi, 176				; 000000b0H
; Line 1920
	mov	ecx, DWORD PTR _mi$[ebp]
	mov	eax, DWORD PTR _missile[esi+20]
	lea	eax, DWORD PTR [eax+eax*2]
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	lea	eax, DWORD PTR [eax+eax*2]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 1924
	mov	edx, ebx
	mov	ecx, edi
	push	8
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], edi
	mov	DWORD PTR _missile[esi+148], ebx
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1925
	leave
	ret	28					; 0000001cH
@AddMagmaball@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_33@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
@miss_null_33@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1928
	push	ebx
	push	esi
; Line 1929
	mov	ebx, DWORD PTR _sy$[esp+4]
	push	edi
	push	16					; 00000010H
	mov	esi, edx
	push	DWORD PTR _dy$[esp+12]
	mov	edi, ecx
	push	DWORD PTR _dx$[esp+16]
	push	ebx
	call	@GetMissileVel@24
; Line 1930
	mov	eax, edi
; Line 1933
	mov	ecx, edi
	imul	eax, 176				; 000000b0H
	mov	DWORD PTR _missile[eax+112], 256	; 00000100H
	mov	DWORD PTR _missile[eax+144], esi
	mov	DWORD PTR _missile[eax+148], ebx
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 1934
	ret	28					; 0000001cH
@miss_null_33@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddTeleport@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_id$ = 28
_CrawlNum$ = -40
_v21$ = -12
_v22$ = -8
_v23$ = -4
@AddTeleport@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 1937
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
; Line 1954
	and	DWORD PTR _CrawlNum$[ebp], 0
; Line 1956
	and	DWORD PTR _v23$[ebp], 0
	push	ebx
	push	esi
; Line 1962
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	mov	DWORD PTR _missile[esi+52], 1
$L86122:
; Line 1964
	mov	eax, DWORD PTR _v23$[ebp]
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax*4]
; Line 1966
	mov	cl, BYTE PTR _CrawlTable[eax]
	movzx	edx, cl
; Line 1967
	test	cl, cl
	mov	DWORD PTR _v22$[ebp], edx
	jbe	$LABEL_13$86128
; Line 1969
	lea	edx, DWORD PTR _CrawlTable[eax+2]
; Line 1970
	mov	DWORD PTR _v21$[ebp], edx
$L86130:
; Line 1972
	movsx	eax, BYTE PTR [edx-1]
; Line 1973
	movsx	ecx, BYTE PTR [edx]
	add	eax, DWORD PTR _dx$[ebp]
	add	ecx, DWORD PTR _dy$[ebp]
; Line 1974
	test	eax, eax
	jle	SHORT $LABEL_10$86136
	cmp	eax, 112				; 00000070H
	jge	SHORT $LABEL_10$86136
	test	ecx, ecx
	jle	SHORT $LABEL_10$86136
	cmp	ecx, 112				; 00000070H
	jge	SHORT $LABEL_10$86136
; Line 1976
	mov	edx, eax
	imul	edx, 112				; 00000070H
	add	edx, ecx
; Line 1981
	mov	edi, edx
	movsx	ebx, BYTE PTR _dObject[edx]
	shl	edi, 2
	movsx	edx, BYTE PTR _dPlayer[edx]
	mov	DWORD PTR -16+[ebp], edi
	mov	edi, DWORD PTR _dPiece[edi]
	movzx	edi, BYTE PTR _nSolidTable[edi]
; Line 2002
	or	edi, ebx
	or	edi, edx
	mov	edx, DWORD PTR -16+[ebp]
	or	edi, DWORD PTR _dMonster[edx]
	je	SHORT $L86131
; Line 1983
	mov	edx, DWORD PTR _v21$[ebp]
$LABEL_10$86136:
; Line 1985
	inc	edx
	inc	edx
; Line 1986
	dec	DWORD PTR _v22$[ebp]
; Line 1988
	cmp	DWORD PTR _v22$[ebp], 0
	mov	DWORD PTR _v21$[ebp], edx
	jg	SHORT $L86130
; Line 1971
	jmp	SHORT $LABEL_13$86128
$L86131:
; Line 1991
	and	DWORD PTR _missile[esi+52], 0
; Line 1992
	mov	DWORD PTR _missile[esi+4], eax
; Line 1993
	mov	DWORD PTR _missile[esi+8], ecx
; Line 1994
	mov	DWORD PTR _missile[esi+28], eax
; Line 1995
	mov	DWORD PTR _missile[esi+32], ecx
; Line 1996
	mov	DWORD PTR _v23$[ebp], 6
$LABEL_13$86128:
; Line 1998
	inc	DWORD PTR _v23$[ebp]
; Line 1999
	cmp	DWORD PTR _v23$[ebp], 6
	jl	$L86122
; Line 2000
	cmp	DWORD PTR _missile[esi+52], 0
	jne	SHORT $L86139
; Line 2001
	mov	ecx, DWORD PTR _id$[ebp]
	push	23					; 00000017H
	pop	edx
	call	@UseMana@8
; Line 2002
	mov	DWORD PTR _missile[esi+112], 2
$L86139:
	pop	edi
	pop	esi
	pop	ebx
; Line 2004
	leave
	ret	28					; 0000001cH
@AddTeleport@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddLightball@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_id$ = 28
_dam$ = 32
@AddLightball@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2007
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 2008
	mov	ebx, DWORD PTR _sy$[ebp]
	push	edi
	push	16					; 00000010H
	mov	edi, edx
	push	DWORD PTR _dy$[ebp]
	mov	esi, ecx
	push	DWORD PTR _dx$[ebp]
	push	ebx
	call	@GetMissileVel@24
; Line 2009
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _dam$[ebp]
; Line 2010
	push	8
	pop	edx
	mov	cl, 63					; 0000003fH
	mov	DWORD PTR _missile[esi+124], eax
	call	@random@8
	inc	eax
; Line 2011
	mov	DWORD PTR _missile[esi+112], 255	; 000000ffH
	mov	DWORD PTR _missile[esi+92], eax
; Line 2012
	mov	eax, DWORD PTR _id$[ebp]
	test	eax, eax
	jge	SHORT $L86159
; Line 2013
	mov	DWORD PTR _missile[esi+144], edi
; Line 2014
	mov	DWORD PTR _missile[esi+148], ebx
; Line 2015
	jmp	SHORT $L86160
$L86159:
; Line 2016
	imul	eax, 21720				; 000054d8H
	mov	ecx, DWORD PTR _plr[eax+56]
; Line 2017
	mov	eax, DWORD PTR _plr[eax+60]
	mov	DWORD PTR _missile[esi+144], ecx
	mov	DWORD PTR _missile[esi+148], eax
$L86160:
	pop	edi
	pop	esi
	pop	ebx
; Line 2019
	pop	ebp
	ret	28					; 0000001cH
@AddLightball@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFirewall@36
_TEXT	SEGMENT
_mi$ = -8
_sx$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_id$ = 28
@AddFirewall@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2022
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 2025
	mov	edi, DWORD PTR _id$[ebp]
	mov	esi, ecx
	push	10					; 0000000aH
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _mi$[ebp], esi
	pop	edx
	mov	cl, 53					; 00000035H
	imul	edi, 21720				; 000054d8H
	imul	esi, 176				; 000000b0H
	call	@random@8
	mov	cl, 53					; 00000035H
	mov	ebx, eax
	push	10					; 0000000aH
	pop	edx
	call	@random@8
	add	ebx, eax
; Line 2026
	mov	edx, DWORD PTR _sx$[ebp]
	movsx	eax, BYTE PTR _plr[edi+440]
	push	16					; 00000010H
	mov	ecx, DWORD PTR _mi$[ebp]
	push	DWORD PTR _dy$[ebp]
	lea	eax, DWORD PTR [ebx+eax+2]
	shl	eax, 4
	push	DWORD PTR _dx$[ebp]
	sar	eax, 1
	push	DWORD PTR _sy$[ebp]
	mov	DWORD PTR _missile[esi+124], eax
	call	@GetMissileVel@24
; Line 2028
	mov	eax, DWORD PTR _missile[esi+48]
	mov	DWORD PTR _missile[esi+112], 10		; 0000000aH
; Line 2029
	test	eax, eax
	jle	SHORT $L86181
; Line 2030
	lea	eax, DWORD PTR [eax+eax*4+5]
	add	eax, eax
	mov	DWORD PTR _missile[esi+112], eax
$L86181:
; Line 2031
	mov	eax, DWORD PTR _missile[esi+112]
	mov	ecx, DWORD PTR _plr[edi+21596]
	imul	ecx, eax
	sar	ecx, 3
	and	ecx, -16				; fffffff0H
	pop	edi
	shl	eax, 4
	add	eax, ecx
	mov	DWORD PTR _missile[esi+112], eax
; Line 2032
	sub	eax, DWORD PTR _missile[esi+72]
; Line 2033
	and	DWORD PTR _missile[esi+148], 0
	mov	DWORD PTR _missile[esi+144], eax
	pop	esi
	pop	ebx
; Line 2034
	leave
	ret	28					; 0000001cH
@AddFirewall@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFireball@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
_mienemya$ = 16
@AddFireball@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2037
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	DWORD PTR _mi$[ebp], ecx
; Line 2050
	mov	ecx, DWORD PTR _dx$[ebp]
	mov	ebx, edx
	push	esi
; Line 2052
	mov	esi, DWORD PTR _dy$[ebp]
	cmp	ebx, ecx
	push	edi
	jne	SHORT $L86211
	cmp	DWORD PTR _sy$[ebp], esi
	jne	SHORT $L86211
; Line 2054
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	ecx, DWORD PTR _XDirAdd[eax]
; Line 2055
	add	esi, DWORD PTR _YDirAdd[eax]
	mov	DWORD PTR _dx$[ebp], ecx
$L86211:
; Line 2058
	cmp	BYTE PTR _mienemy$[ebp], 0
	je	SHORT $L86213
; Line 2059
	push	16					; 00000010H
	pop	edi
; Line 2060
	jmp	SHORT $L86214
$L86213:
; Line 2061
	push	10					; 0000000aH
	mov	cl, 60					; 0000003cH
	pop	edx
	call	@random@8
; Line 2062
	mov	cl, 60					; 0000003cH
	mov	edi, eax
	push	10					; 0000000aH
	pop	edx
	call	@random@8
	mov	ecx, DWORD PTR _id$[ebp]
	add	edi, eax
; Line 2063
	mov	eax, DWORD PTR _mi$[ebp]
	imul	ecx, 21720				; 000054d8H
	movsx	ecx, BYTE PTR _plr[ecx+440]
	imul	eax, 176				; 000000b0H
	mov	edx, DWORD PTR _missile[eax+48]
	add	ecx, edi
; Line 2064
	lea	eax, DWORD PTR _missile[eax+124]
	lea	ecx, DWORD PTR [ecx+ecx+4]
; Line 2065
	test	edx, edx
	mov	DWORD PTR [eax], ecx
	jle	SHORT $L86215
; Line 2066
	mov	DWORD PTR _mienemya$[ebp], edx
$L86216:
; Line 2068
	mov	edi, ecx
	sar	edi, 3
	add	ecx, edi
; Line 2069
	dec	DWORD PTR _mienemya$[ebp]
; Line 2070
	jne	SHORT $L86216
; Line 2071
	mov	DWORD PTR [eax], ecx
$L86215:
; Line 2073
	lea	edi, DWORD PTR [edx+edx+16]
; Line 2074
	cmp	edi, 50					; 00000032H
	jle	SHORT $L86219
; Line 2075
	push	50					; 00000032H
	pop	edi
$L86219:
; Line 2076
	mov	ecx, DWORD PTR _id$[ebp]
	push	12					; 0000000cH
	pop	edx
	call	@UseMana@8
$L86214:
; Line 2078
	mov	ecx, DWORD PTR _mi$[ebp]
	push	edi
	push	esi
	mov	edx, ebx
	push	DWORD PTR _dx$[ebp]
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
; Line 2079
	mov	edx, DWORD PTR _sy$[ebp]
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _dx$[ebp]
	call	@GetDirection16@16
; Line 2080
	mov	esi, DWORD PTR _mi$[ebp]
	mov	edx, eax
	mov	ecx, esi
	call	@SetMissDir@8
; Line 2082
	imul	esi, 176				; 000000b0H
; Line 2085
	mov	edx, DWORD PTR _sy$[ebp]
; Line 2088
	push	8
	and	DWORD PTR _missile[esi+152], 0
	mov	ecx, ebx
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], ebx
	mov	DWORD PTR _missile[esi+148], edx
	mov	DWORD PTR _missile[esi+156], ebx
	mov	DWORD PTR _missile[esi+160], edx
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
	pop	edi
	pop	esi
	pop	ebx
; Line 2089
	leave
	ret	28					; 0000001cH
@AddFireball@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddLightctrl@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_mienemy$ = 24
_id$ = 28
_dam$ = 32
@AddLightctrl@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2092
	push	ebp
	mov	ebp, esp
; Line 2093
	cmp	DWORD PTR _dam$[ebp], 0
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	ebx, ecx
	jne	SHORT $L86240
	cmp	BYTE PTR _mienemy$[ebp], 0
	jne	SHORT $L86240
; Line 2094
	mov	ecx, DWORD PTR _id$[ebp]
	push	3
	pop	edx
	call	@UseMana@8
$L86240:
; Line 2095
	mov	esi, ebx
; Line 2096
	mov	eax, DWORD PTR _sy$[ebp]
	imul	esi, 176				; 000000b0H
; Line 2097
	push	32					; 00000020H
	mov	edx, edi
	push	DWORD PTR _dy$[ebp]
	mov	ecx, ebx
	mov	DWORD PTR _missile[esi+144], edi
	mov	DWORD PTR _missile[esi+148], eax
	push	DWORD PTR _dx$[ebp]
	push	eax
	call	@GetMissileVel@24
; Line 2098
	mov	cl, 52					; 00000034H
	push	8
	pop	edx
	call	@random@8
	inc	eax
; Line 2099
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+92], eax
	pop	edi
	pop	esi
	pop	ebx
; Line 2100
	pop	ebp
	ret	28					; 0000001cH
@AddLightctrl@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddLightning@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
@AddLightning@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2103
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 2104
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _dx$[ebp]
; Line 2106
	cmp	DWORD PTR _midir$[ebp], 0
	mov	DWORD PTR _missile[esi+28], eax
	mov	eax, DWORD PTR _dy$[ebp]
	mov	DWORD PTR _missile[esi+32], eax
	jl	SHORT $L86260
; Line 2107
	mov	eax, DWORD PTR _midir$[ebp]
	imul	eax, 176				; 000000b0H
	mov	ecx, DWORD PTR _missile[eax+12]
	mov	DWORD PTR _missile[esi+12], ecx
; Line 2108
	mov	ecx, DWORD PTR _missile[eax+16]
	mov	DWORD PTR _missile[esi+16], ecx
; Line 2109
	mov	ecx, DWORD PTR _missile[eax+36]
	mov	DWORD PTR _missile[esi+36], ecx
; Line 2110
	mov	eax, DWORD PTR _missile[eax+40]
	mov	DWORD PTR _missile[esi+40], eax
$L86260:
; Line 2112
	push	8
	mov	cl, 52					; 00000034H
	pop	edx
	call	@random@8
	inc	eax
; Line 2114
	cmp	DWORD PTR _midir$[ebp], 0
	mov	DWORD PTR _missile[esi+92], eax
	jl	SHORT $L86265
	cmp	BYTE PTR _mienemy$[ebp], 1
	je	SHORT $L86263
	cmp	DWORD PTR _id$[ebp], -1
	je	SHORT $L86265
; Line 2120
	mov	eax, DWORD PTR _missile[esi+48]
	sar	eax, 1
	add	eax, 6
	mov	DWORD PTR _missile[esi+112], eax
	jmp	SHORT $L86266
$L86263:
; Line 2115
	cmp	DWORD PTR _id$[ebp], -1
	je	SHORT $L86265
; Line 2118
	mov	DWORD PTR _missile[esi+112], 10		; 0000000aH
	jmp	SHORT $L86266
$L86265:
; Line 2116
	mov	DWORD PTR _missile[esi+112], 8
$L86266:
; Line 2122
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	4
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
	pop	esi
; Line 2123
	pop	ebp
	ret	28					; 0000001cH
@AddLightning@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddMisexp@36
_TEXT	SEGMENT
_dx$ = 12
_mienemy$ = 24
_id$ = 28
@AddMisexp@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2133
	cmp	BYTE PTR _mienemy$[esp-4], 0
	push	edi
	mov	edi, ecx
	je	SHORT $L86296
	mov	eax, DWORD PTR _id$[esp]
	test	eax, eax
	jle	SHORT $L86296
; Line 2134
	imul	eax, 228				; 000000e4H
	push	esi
	mov	esi, DWORD PTR _monster[eax+220]
; Line 2135
	cmp	BYTE PTR [esi], 101			; 00000065H
	jne	SHORT $L86293
; Line 2136
	push	23					; 00000017H
	pop	edx
	call	@SetMissAnim@8
$L86293:
; Line 2137
	cmp	BYTE PTR [esi], 102			; 00000066H
	jne	SHORT $L86294
; Line 2138
	push	41					; 00000029H
	mov	ecx, edi
	pop	edx
	call	@SetMissAnim@8
$L86294:
; Line 2139
	cmp	BYTE PTR [esi], 103			; 00000067H
	jne	SHORT $L86295
; Line 2140
	push	45					; 0000002dH
	mov	ecx, edi
	pop	edx
	call	@SetMissAnim@8
$L86295:
; Line 2141
	cmp	BYTE PTR [esi], 104			; 00000068H
	pop	esi
	jne	SHORT $L86296
; Line 2142
	push	43					; 0000002bH
	mov	ecx, edi
	pop	edx
	call	@SetMissAnim@8
$L86296:
; Line 2145
	mov	ecx, DWORD PTR _dx$[esp]
	mov	eax, edi
	imul	ecx, 176				; 000000b0H
	imul	eax, 176				; 000000b0H
	mov	edx, DWORD PTR _missile[ecx+4]
	pop	edi
	mov	DWORD PTR _missile[eax+4], edx
; Line 2146
	mov	edx, DWORD PTR _missile[ecx+8]
	mov	DWORD PTR _missile[eax+8], edx
; Line 2147
	mov	edx, DWORD PTR _missile[ecx+28]
	mov	DWORD PTR _missile[eax+28], edx
; Line 2148
	mov	edx, DWORD PTR _missile[ecx+32]
	mov	DWORD PTR _missile[eax+32], edx
; Line 2149
	mov	edx, DWORD PTR _missile[ecx+12]
	mov	DWORD PTR _missile[eax+12], edx
; Line 2150
	mov	edx, DWORD PTR _missile[ecx+16]
	mov	DWORD PTR _missile[eax+16], edx
; Line 2151
	mov	edx, DWORD PTR _missile[ecx+36]
	mov	DWORD PTR _missile[eax+36], edx
; Line 2152
	mov	ecx, DWORD PTR _missile[ecx+40]
; Line 2153
	and	DWORD PTR _missile[eax+20], 0
; Line 2154
	and	DWORD PTR _missile[eax+24], 0
; Line 2155
	and	DWORD PTR _missile[eax+144], 0
; Line 2156
	mov	DWORD PTR _missile[eax+40], ecx
; Line 2157
	mov	ecx, DWORD PTR _missile[eax+72]
	mov	DWORD PTR _missile[eax+112], ecx
; Line 2158
	ret	28					; 0000001cH
@AddMisexp@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddWeapexp@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
@AddWeapexp@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2161
	push	esi
; Line 2165
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _sy$[esp]
	mov	DWORD PTR _missile[esi+8], eax
; Line 2166
	mov	DWORD PTR _missile[esi+32], eax
; Line 2172
	mov	eax, DWORD PTR _dx$[esp]
	mov	DWORD PTR _missile[esi+4], edx
	mov	DWORD PTR _missile[esi+28], edx
	xor	edx, edx
; Line 2174
	cmp	eax, 1
	mov	DWORD PTR _missile[esi+20], edx
	mov	DWORD PTR _missile[esi+24], edx
	mov	DWORD PTR _missile[esi+144], edx
	mov	DWORD PTR _missile[esi+148], eax
	mov	DWORD PTR _missile[esi+44], edx
	jne	SHORT $L86317
; Line 2175
	push	5
; Line 2176
	jmp	SHORT $L89082
$L86317:
; Line 2177
	push	26					; 0000001aH
$L89082:
	pop	edx
	call	@SetMissAnim@8
; Line 2178
	mov	eax, DWORD PTR _missile[esi+72]
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
	pop	esi
; Line 2179
	ret	28					; 0000001cH
@AddWeapexp@36 ENDP
_TEXT	ENDS
PUBLIC	@CheckIfTrig@8
EXTRN	_trigflag:BYTE
EXTRN	_trigs:BYTE
; Function compile flags: /Ogsy
;	COMDAT @CheckIfTrig@8
_TEXT	SEGMENT
_v7$ = -4
@CheckIfTrig@8 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 2182
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2189
	and	DWORD PTR _v7$[ebp], 0
; Line 2192
	cmp	DWORD PTR _trigflag+16, 0
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	ebx, ecx
; Line 2193
	jle	SHORT $L89090
; Line 2194
	mov	esi, OFFSET FLAT:_trigs+4
$L86331:
; Line 2196
	mov	eax, DWORD PTR [esi-4]
; Line 2197
	cmp	ebx, eax
	jne	SHORT $L86333
	cmp	edi, DWORD PTR [esi]
	je	SHORT $L86332
$L86333:
; Line 2199
	sub	eax, ebx
	push	eax
	call	_abs
	cmp	eax, 2
	pop	ecx
	jge	SHORT $L86334
	mov	eax, DWORD PTR [esi]
	sub	eax, edi
	push	eax
	call	_abs
	cmp	eax, 2
	pop	ecx
	jl	SHORT $L86332
$L86334:
; Line 2201
	inc	DWORD PTR _v7$[ebp]
; Line 2202
	add	esi, 16					; 00000010H
; Line 2203
	mov	eax, DWORD PTR _v7$[ebp]
	cmp	eax, DWORD PTR _trigflag+16
	jl	SHORT $L86331
$L89090:
; Line 2204
	xor	al, al
	jmp	SHORT $L86323
$L86332:
; Line 2206
	mov	al, 1
$L86323:
	pop	edi
	pop	esi
	pop	ebx
; Line 2207
	leave
	ret	0
@CheckIfTrig@8 ENDP
_TEXT	ENDS
EXTRN	@NetSendCmdLocParam3@28:NEAR
EXTRN	_leveltype:BYTE
; Function compile flags: /Ogsy
;	COMDAT @AddTown@36
_TEXT	SEGMENT
_v18$ = 12
_v21$ = 12
_CrawlNum$ = -48
_v26$ = -16
_v27$ = -8
_mi$ = -24
_dx$ = 12
_dy$ = 16
_id$ = 28
_v9$ = -20
_v11$ = -12
@AddTown@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2210
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	mov	esi, ecx
; Line 2232
	mov	ecx, DWORD PTR _dx$[ebp]
	mov	DWORD PTR _mi$[ebp], esi
; Line 2235
	xor	edx, edx
	mov	BYTE PTR _v9$[ebp], cl
; Line 2243
	imul	esi, 176				; 000000b0H
	cmp	BYTE PTR _currlevel, dl
	push	edi
; Line 2244
	mov	edi, DWORD PTR _v9$[ebp]
	mov	DWORD PTR _CrawlNum$[ebp], edx
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	je	$L86375
	mov	BYTE PTR _v11$[ebp], cl
	mov	DWORD PTR _missile[esi+52], 1
	mov	ebx, DWORD PTR _v11$[ebp]
	mov	DWORD PTR _v26$[ebp], edx
$L86377:
; Line 2246
	mov	eax, DWORD PTR _v26$[ebp]
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax*4]
; Line 2248
	mov	dl, BYTE PTR _CrawlTable[eax]
	mov	BYTE PTR -1+[ebp], dl
; Line 2249
	cmp	BYTE PTR -1+[ebp], 0
	movzx	edx, dl
	mov	DWORD PTR _v27$[ebp], edx
	jbe	$LABEL_14$86393
; Line 2250
	lea	eax, DWORD PTR _CrawlTable[eax+2]
	lea	edx, DWORD PTR [eax+2]
	mov	DWORD PTR -20+[ebp], edx
$L86384:
; Line 2253
	movsx	edi, BYTE PTR [eax-1]
; Line 2254
	movsx	ebx, BYTE PTR [eax]
	add	ebx, DWORD PTR _dy$[ebp]
	add	edi, ecx
; Line 2255
	test	edi, edi
	mov	DWORD PTR _v11$[ebp], ebx
	jle	$L86391
	cmp	edi, 112				; 00000070H
	jge	$L86391
	test	ebx, ebx
	jle	$L86391
	cmp	ebx, 112				; 00000070H
	jge	$L86391
; Line 2256
	mov	eax, edi
	imul	eax, 112				; 00000070H
	add	eax, ebx
; Line 2257
	mov	ecx, DWORD PTR _dPiece[eax*4]
	movzx	edx, BYTE PTR _nMissileTable[ecx]
	movzx	ecx, BYTE PTR _nSolidTable[ecx]
	or	edx, ecx
	movsx	ecx, BYTE PTR _dMissile[eax]
	or	edx, ecx
	movsx	ecx, BYTE PTR _dPlayer[eax]
	movsx	eax, BYTE PTR _dObject[eax]
	or	edx, ecx
	or	edx, eax
	jne	SHORT $L89099
; Line 2259
	mov	edx, ebx
	mov	ecx, edi
	call	@CheckIfTrig@8
	mov	ecx, DWORD PTR _dx$[ebp]
	test	al, al
	jne	SHORT $L86391
; Line 2269
	and	DWORD PTR _missile[esi+52], 0
; Line 2270
	mov	DWORD PTR _missile[esi+4], edi
; Line 2271
	mov	DWORD PTR _missile[esi+8], ebx
; Line 2272
	mov	DWORD PTR _missile[esi+28], edi
; Line 2273
	mov	DWORD PTR _missile[esi+32], ebx
; Line 2274
	mov	DWORD PTR _v26$[ebp], 6
$LABEL_14$86393:
; Line 2277
	inc	DWORD PTR _v26$[ebp]
; Line 2278
	cmp	DWORD PTR _v26$[ebp], 6
	jl	$L86377
; Line 2279
	xor	edx, edx
	jmp	SHORT $L86394
$L89099:
; Line 2259
	mov	ecx, DWORD PTR _dx$[ebp]
$L86391:
; Line 2263
	mov	eax, DWORD PTR -20+[ebp]
; Line 2264
	dec	DWORD PTR _v27$[ebp]
; Line 2265
	add	DWORD PTR -20+[ebp], 2
; Line 2266
	cmp	DWORD PTR _v27$[ebp], 0
	jg	$L86384
; Line 2252
	jmp	SHORT $LABEL_14$86393
$L86375:
; Line 2280
	mov	eax, DWORD PTR _dy$[ebp]
; Line 2281
	mov	DWORD PTR _missile[esi+4], ecx
	mov	BYTE PTR _v11$[ebp], al
; Line 2282
	mov	DWORD PTR _missile[esi+8], eax
; Line 2285
	mov	ebx, DWORD PTR _v11$[ebp]
	mov	DWORD PTR _missile[esi+28], ecx
	mov	DWORD PTR _missile[esi+32], eax
	mov	DWORD PTR _missile[esi+52], edx
$L86394:
; Line 2287
	mov	ecx, DWORD PTR _nummissiles
; Line 2290
	push	100					; 00000064H
	pop	eax
	mov	DWORD PTR _missile[esi+148], edx
	mov	DWORD PTR _missile[esi+112], eax
; Line 2291
	sub	eax, DWORD PTR _missile[esi+72]
	cmp	ecx, edx
	mov	DWORD PTR _v27$[ebp], edx
	mov	DWORD PTR _missile[esi+144], eax
	jle	SHORT $L86398
$L86396:
; Line 2292
	mov	eax, DWORD PTR _v27$[ebp]
	mov	eax, DWORD PTR _missileactive[eax*4]
	mov	DWORD PTR _v18$[ebp], eax
; Line 2295
	imul	eax, 176				; 000000b0H
	cmp	DWORD PTR _missile[eax], 10		; 0000000aH
	jne	SHORT $L86397
	mov	edx, DWORD PTR _mi$[ebp]
	cmp	DWORD PTR _v18$[ebp], edx
	je	SHORT $L86397
	mov	edx, DWORD PTR _id$[ebp]
	cmp	DWORD PTR _missile[eax+116], edx
	jne	SHORT $L86397
; Line 2296
	and	DWORD PTR _missile[eax+112], 0
$L86397:
; Line 2291
	inc	DWORD PTR _v27$[ebp]
	cmp	DWORD PTR _v27$[ebp], ecx
	jl	SHORT $L86396
$L86398:
; Line 2298
	mov	ecx, DWORD PTR _mi$[ebp]
	call	@PutMissile@4
; Line 2300
	mov	eax, DWORD PTR _id$[ebp]
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L86408
	cmp	DWORD PTR _missile[esi+52], 0
	jne	SHORT $L86408
	mov	al, BYTE PTR _currlevel
	test	al, al
	je	SHORT $L86408
; Line 2301
	cmp	BYTE PTR _setlevel, 0
; Line 2305
	mov	dl, 56					; 00000038H
	je	SHORT $L86405
	movzx	ax, BYTE PTR _leveltype
	xor	ecx, ecx
	mov	WORD PTR _v21$[ebp], ax
	movzx	ax, BYTE PTR _setlvlnum
	inc	ecx
	push	ecx
	push	DWORD PTR _v21$[ebp]
; Line 2306
	jmp	SHORT $L89105
$L86405:
; Line 2309
	movzx	cx, BYTE PTR _leveltype
	push	0
	push	ecx
	xor	ecx, ecx
	movzx	ax, al
	inc	ecx
$L89105:
	push	eax
	push	ebx
	push	edi
	call	@NetSendCmdLocParam3@28
$L86408:
	pop	edi
	pop	esi
	pop	ebx
; Line 2312
	leave
	ret	28					; 0000001cH
@AddTown@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFlash@36
_TEXT	SEGMENT
_mienemy$ = 24
_id$ = 28
@AddFlash@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2316
	push	ebp
	mov	ebp, esp
	push	esi
; Line 2320
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	cmp	BYTE PTR _mienemy$[ebp], 0
	jne	$L86441
; Line 2319
	cmp	DWORD PTR _id$[ebp], -1
	je	SHORT $L89112
; Line 2321
	mov	eax, DWORD PTR _id$[ebp]
	push	ebx
	imul	eax, 21720				; 000054d8H
	push	edi
	xor	ebx, ebx
	lea	edi, DWORD PTR _plr[eax+440]
	mov	DWORD PTR _missile[esi+124], ebx
	cmp	BYTE PTR [edi], bl
	jl	SHORT $L86435
$L86433:
; Line 2322
	push	20					; 00000014H
	mov	cl, 55					; 00000037H
	pop	edx
	call	@random@8
	inc	eax
	add	DWORD PTR _missile[esi+124], eax
	inc	ebx
	movsx	eax, BYTE PTR [edi]
	cmp	ebx, eax
	jle	SHORT $L86433
$L86435:
; Line 2324
	mov	ecx, DWORD PTR _missile[esi+48]
	pop	edi
	test	ecx, ecx
	pop	ebx
	jle	SHORT $L86438
	mov	eax, DWORD PTR _missile[esi+124]
$L86436:
; Line 2325
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
	dec	ecx
	jne	SHORT $L86436
	mov	DWORD PTR _missile[esi+124], eax
$L86438:
; Line 2327
	mov	eax, DWORD PTR _missile[esi+124]
; Line 2328
	push	4
	mov	ecx, eax
	pop	edx
	sar	ecx, 1
	add	ecx, eax
	mov	DWORD PTR _missile[esi+124], ecx
	mov	ecx, DWORD PTR _id$[ebp]
	call	@UseMana@8
; Line 2329
	jmp	SHORT $L86442
$L89112:
; Line 2331
	movzx	eax, BYTE PTR _currlevel
	shr	eax, 1
; Line 2332
	jmp	SHORT $L89113
$L86441:
; Line 2333
	mov	eax, DWORD PTR _id$[ebp]
	imul	eax, 228				; 000000e4H
	movsx	eax, BYTE PTR _monster[eax+192]
	add	eax, eax
$L89113:
	mov	DWORD PTR _missile[esi+124], eax
$L86442:
; Line 2336
	mov	DWORD PTR _missile[esi+112], 19		; 00000013H
	pop	esi
; Line 2337
	pop	ebp
	ret	28					; 0000001cH
@AddFlash@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFlash2@36
_TEXT	SEGMENT
_mi$ = -4
_mienemy$ = 24
_id$ = 28
@AddFlash2@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2340
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2343
	cmp	BYTE PTR _mienemy$[ebp], 0
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _mi$[ebp], esi
	jne	$L86472
; Line 2344
	mov	eax, DWORD PTR _id$[ebp]
	cmp	eax, -1
	je	SHORT $L86465
; Line 2346
	imul	eax, 21720				; 000054d8H
	imul	esi, 176				; 000000b0H
	push	ebx
	push	edi
	lea	edi, DWORD PTR _plr[eax+440]
	xor	ebx, ebx
	mov	DWORD PTR _missile[esi+124], ebx
	cmp	BYTE PTR [edi], bl
	jl	SHORT $L86468
$L86466:
; Line 2347
	push	2
	mov	cl, 56					; 00000038H
	pop	edx
	call	@random@8
	inc	eax
	add	DWORD PTR _missile[esi+124], eax
	inc	ebx
	movsx	eax, BYTE PTR [edi]
	cmp	ebx, eax
	jle	SHORT $L86466
$L86468:
; Line 2349
	mov	ecx, DWORD PTR _missile[esi+48]
	pop	edi
	test	ecx, ecx
	pop	ebx
	jle	SHORT $L86471
	mov	eax, DWORD PTR _missile[esi+124]
$L86469:
; Line 2350
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
	dec	ecx
	jne	SHORT $L86469
	mov	DWORD PTR _missile[esi+124], eax
$L86471:
; Line 2352
	mov	eax, DWORD PTR _missile[esi+124]
	mov	ecx, eax
	sar	ecx, 1
	add	ecx, eax
	mov	DWORD PTR _missile[esi+124], ecx
; Line 2353
	jmp	SHORT $L86472
$L86465:
; Line 2354
	movzx	eax, BYTE PTR _currlevel
	shr	eax, 1
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _missile[esi+124], eax
$L86472:
; Line 2357
	mov	eax, DWORD PTR _mi$[ebp]
	pop	esi
	imul	eax, 176				; 000000b0H
	mov	DWORD PTR _missile[eax+104], 1
; Line 2358
	mov	DWORD PTR _missile[eax+112], 19		; 00000013H
; Line 2359
	leave
	ret	28					; 0000001cH
@AddFlash2@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddManashield@36
_TEXT	SEGMENT
_mienemy$ = 24
_id$ = 28
@AddManashield@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2362
	push	esi
	push	edi
; Line 2363
	mov	edi, DWORD PTR _id$[esp+4]
	mov	eax, ecx
	mov	esi, edi
	imul	eax, 176				; 000000b0H
	imul	esi, 21720				; 000054d8H
; Line 2366
	or	DWORD PTR _missile[eax+172], -1
	movsx	ecx, BYTE PTR _plr[esi+440]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	shl	ecx, 4
; Line 2367
	cmp	BYTE PTR _mienemy$[esp+4], 0
	mov	DWORD PTR _missile[eax+112], ecx
	mov	ecx, DWORD PTR _plr[esi+408]
	mov	DWORD PTR _missile[eax+144], ecx
	mov	ecx, DWORD PTR _plr[esi+400]
	mov	DWORD PTR _missile[eax+148], ecx
	jne	SHORT $L86493
; Line 2368
	push	11					; 0000000bH
	mov	ecx, edi
	pop	edx
	call	@UseMana@8
$L86493:
; Line 2369
	cmp	edi, DWORD PTR _myplr
	jne	SHORT $L86494
; Line 2370
	xor	ecx, ecx
	mov	dl, 92					; 0000005cH
	inc	ecx
	call	@NetSendCmd@8
$L86494:
; Line 2371
	mov	BYTE PTR _plr[esi+21628], 1
	pop	edi
	pop	esi
; Line 2372
	ret	28					; 0000001cH
@AddManashield@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFiremove@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_id$ = 28
@AddFiremove@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2375
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 2384
	push	10					; 0000000aH
	mov	ebx, edx
	mov	esi, edi
	pop	edx
	mov	cl, 59					; 0000003bH
	imul	esi, 176				; 000000b0H
	call	@random@8
	mov	ecx, DWORD PTR _id$[esp+8]
; Line 2385
	mov	edx, ebx
	imul	ecx, 21720				; 000054d8H
	push	16					; 00000010H
	push	DWORD PTR _dy$[esp+12]
	movsx	ecx, BYTE PTR _plr[ecx+440]
	push	DWORD PTR _dx$[esp+16]
	lea	eax, DWORD PTR [eax+ecx+1]
	mov	ecx, edi
	push	DWORD PTR _sy$[esp+20]
	mov	DWORD PTR _missile[esi+124], eax
	call	@GetMissileVel@24
; Line 2386
	and	DWORD PTR _missile[esi+144], 0
; Line 2387
	and	DWORD PTR _missile[esi+148], 0
; Line 2388
	inc	DWORD PTR _missile[esi+4]
; Line 2389
	inc	DWORD PTR _missile[esi+8]
; Line 2390
	add	DWORD PTR _missile[esi+16], -32		; ffffffe0H
; Line 2391
	mov	DWORD PTR _missile[esi+112], 255	; 000000ffH
	pop	edi
	pop	esi
	pop	ebx
; Line 2392
	ret	28					; 0000001cH
@AddFiremove@36 ENDP
_TEXT	ENDS
EXTRN	@LineClear@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @AddGuardian@36
_TEXT	SEGMENT
_sx$ = -16
_sy$ = 8
_dx$ = 12
_dy$ = 16
_id$ = 28
_v16$ = -12
_CrawlNum$ = -56
_v31$ = -20
_v35$ = -8
_v36$ = -4
@AddGuardian@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2395
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
; Line 2426
	mov	eax, DWORD PTR _id$[ebp]
	and	DWORD PTR _CrawlNum$[ebp], 0
	imul	eax, 21720				; 000054d8H
	push	ebx
	push	esi
	push	edi
; Line 2436
	push	10					; 0000000aH
	mov	DWORD PTR _sx$[ebp], edx
	mov	esi, ecx
	lea	edi, DWORD PTR _plr[eax+440]
	pop	edx
	mov	cl, 62					; 0000003eH
	mov	DWORD PTR -32+[ebp], eax
	mov	ebx, eax
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	mov	DWORD PTR -28+[ebp], edi
	call	@random@8
; Line 2437
	imul	esi, 176				; 000000b0H
	movsx	ecx, BYTE PTR [edi]
	mov	edx, DWORD PTR _missile[esi+48]
	sar	ecx, 1
; Line 2439
	test	edx, edx
	lea	eax, DWORD PTR [eax+ecx+1]
	lea	ecx, DWORD PTR _missile[esi+124]
	mov	DWORD PTR [ecx], eax
	jle	SHORT $L86577
$L86578:
; Line 2441
	mov	edi, eax
	sar	edi, 3
	add	eax, edi
; Line 2442
	dec	edx
; Line 2443
	jne	SHORT $L86578
; Line 2444
	mov	DWORD PTR [ecx], eax
$L86577:
; Line 2446
	and	DWORD PTR _v36$[ebp], 0
; Line 2447
	mov	DWORD PTR _missile[esi+52], 1
$L86581:
; Line 2449
	mov	eax, DWORD PTR _v36$[ebp]
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax*4]
; Line 2451
	mov	cl, BYTE PTR _CrawlTable[eax]
	movzx	edx, cl
; Line 2452
	test	cl, cl
	mov	DWORD PTR _v35$[ebp], edx
	jbe	$LABEL_18$86587
; Line 2454
	lea	eax, DWORD PTR _CrawlTable[eax+2]
	mov	DWORD PTR _v16$[ebp], eax
$L86589:
; Line 2457
	movsx	ecx, BYTE PTR [eax-1]
	mov	edx, DWORD PTR _dx$[ebp]
	add	edx, ecx
; Line 2458
	movsx	ebx, BYTE PTR [eax]
; Line 2459
	mov	edi, edx
	add	ebx, DWORD PTR _dy$[ebp]
	imul	edi, 112				; 00000070H
	add	edi, ebx
	mov	DWORD PTR -28+[ebp], edx
; Line 2461
	mov	ecx, edi
	shl	ecx, 2
	mov	DWORD PTR -24+[ebp], ecx
	mov	ecx, DWORD PTR _dPiece[ecx]
; Line 2462
	test	edx, edx
	mov	DWORD PTR _v31$[ebp], ecx
	jle	SHORT $LABEL_14$86596
	cmp	edx, 112				; 00000070H
	jge	SHORT $LABEL_14$86596
	test	ebx, ebx
	jle	SHORT $LABEL_14$86596
	cmp	ebx, 112				; 00000070H
	jge	SHORT $LABEL_14$86596
; Line 2465
	mov	ecx, DWORD PTR _sx$[ebp]
	push	ebx
	push	edx
	mov	edx, DWORD PTR _sy$[ebp]
	call	@LineClear@16
	test	eax, eax
	je	SHORT $L89133
; Line 2466
	mov	eax, DWORD PTR _v31$[ebp]
	movzx	ecx, BYTE PTR _nMissileTable[eax]
	movzx	eax, BYTE PTR _nSolidTable[eax]
	or	ecx, eax
	mov	eax, DWORD PTR -24+[ebp]
	shr	eax, 2
; Line 2508
	or	ecx, DWORD PTR _dMonster[eax*4]
	movsx	eax, BYTE PTR _dMissile[edi]
	or	ecx, eax
	movsx	eax, BYTE PTR _dObject[edi]
	or	ecx, eax
	je	SHORT $L86590
$L89133:
; Line 2466
	mov	eax, DWORD PTR _v16$[ebp]
$LABEL_14$86596:
; Line 2471
	inc	eax
	inc	eax
; Line 2472
	dec	DWORD PTR _v35$[ebp]
; Line 2474
	cmp	DWORD PTR _v35$[ebp], 0
	mov	DWORD PTR _v16$[ebp], eax
	jg	$L86589
; Line 2456
	jmp	SHORT $LABEL_17$86601
$L86590:
; Line 2478
	mov	eax, DWORD PTR -28+[ebp]
; Line 2482
	mov	ecx, DWORD PTR _id$[ebp]
	and	DWORD PTR _missile[esi+52], 0
	push	13					; 0000000dH
	pop	edx
	mov	DWORD PTR _missile[esi+4], eax
	mov	DWORD PTR _missile[esi+8], ebx
	mov	DWORD PTR _missile[esi+28], eax
	mov	DWORD PTR _missile[esi+32], ebx
	call	@UseMana@8
; Line 2483
	mov	DWORD PTR _v36$[ebp], 6
$LABEL_17$86601:
; Line 2485
	mov	ebx, DWORD PTR -32+[ebp]
$LABEL_18$86587:
; Line 2487
	inc	DWORD PTR _v36$[ebp]
; Line 2488
	cmp	DWORD PTR _v36$[ebp], 6
	jl	$L86581
; Line 2489
	cmp	DWORD PTR _missile[esi+52], 1
	je	$L86602
; Line 2492
	mov	eax, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
; Line 2493
	push	1
	mov	DWORD PTR _missile[esi+116], eax
	call	@AddLight@12
; Line 2496
	movsx	ecx, BYTE PTR _plr[ebx+440]
	sar	ecx, 1
	add	ecx, DWORD PTR _missile[esi+48]
	mov	DWORD PTR _missile[esi+136], eax
; Line 2497
	mov	eax, DWORD PTR _plr[ebx+21596]
; Line 2499
	push	30					; 0000001eH
	imul	eax, ecx
	sar	eax, 7
	add	eax, ecx
	pop	ecx
	cmp	eax, ecx
	mov	DWORD PTR _missile[esi+112], eax
	jle	SHORT $L86605
; Line 2500
	mov	DWORD PTR _missile[esi+112], ecx
$L86605:
; Line 2501
	mov	eax, DWORD PTR _missile[esi+112]
	shl	eax, 4
; Line 2502
	cmp	eax, ecx
	mov	DWORD PTR _missile[esi+112], eax
	jge	SHORT $L86606
; Line 2503
	mov	DWORD PTR _missile[esi+112], ecx
$L86606:
; Line 2506
	mov	eax, DWORD PTR _missile[esi+112]
; Line 2507
	and	DWORD PTR _missile[esi+148], 0
	sub	eax, DWORD PTR _missile[esi+72]
	mov	DWORD PTR _missile[esi+152], 1
; Line 2508
	mov	DWORD PTR _missile[esi+144], eax
$L86602:
	pop	edi
	pop	esi
	pop	ebx
; Line 2510
	leave
	ret	28					; 0000001cH
@AddGuardian@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddChain@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_id$ = 28
@AddChain@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2517
	imul	ecx, 176				; 000000b0H
	mov	eax, DWORD PTR _dx$[esp-4]
; Line 2520
	push	14					; 0000000eH
	mov	DWORD PTR _missile[ecx+144], eax
	mov	eax, DWORD PTR _dy$[esp]
	mov	DWORD PTR _missile[ecx+148], eax
	mov	DWORD PTR _missile[ecx+112], 1
	mov	ecx, DWORD PTR _id$[esp]
	pop	edx
	call	@UseMana@8
; Line 2521
	ret	28					; 0000001cH
@AddChain@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_11@36
_TEXT	SEGMENT
_dx$ = 12
@miss_null_11@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2529
	mov	edx, DWORD PTR _dx$[esp-4]
	push	esi
	mov	esi, ecx
	call	@SetMissDir@8
; Line 2531
	mov	eax, esi
	imul	eax, 176				; 000000b0H
	pop	esi
	and	DWORD PTR _missile[eax+124], 0
; Line 2532
	mov	DWORD PTR _missile[eax+100], 1
; Line 2533
	mov	DWORD PTR _missile[eax+112], 250	; 000000faH
; Line 2534
	ret	28					; 0000001cH
@miss_null_11@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_12@36
_TEXT	SEGMENT
_dx$ = 12
@miss_null_12@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2542
	mov	edx, DWORD PTR _dx$[esp-4]
	push	esi
; Line 2544
	cmp	edx, 3
	mov	esi, ecx
	jle	SHORT $L86670
; Line 2545
	push	2
	pop	edx
$L86670:
; Line 2546
	mov	ecx, esi
	call	@SetMissDir@8
; Line 2548
	mov	eax, esi
	imul	eax, 176				; 000000b0H
	pop	esi
	and	DWORD PTR _missile[eax+124], 0
; Line 2549
	mov	DWORD PTR _missile[eax+100], 1
; Line 2550
	mov	DWORD PTR _missile[eax+112], 250	; 000000faH
; Line 2551
	ret	28					; 0000001cH
@miss_null_12@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_13@36
_TEXT	SEGMENT
_dx$ = 12
@miss_null_13@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2560
	mov	edx, DWORD PTR _dx$[esp-4]
	push	esi
; Line 2562
	cmp	edx, 3
	mov	esi, ecx
	jle	SHORT $L86694
; Line 2563
	push	2
	pop	edx
$L86694:
; Line 2564
	mov	ecx, esi
	call	@SetMissDir@8
; Line 2566
	mov	eax, esi
	imul	eax, 176				; 000000b0H
	pop	esi
	mov	ecx, DWORD PTR _missile[eax+72]
; Line 2567
	and	DWORD PTR _missile[eax+124], 0
; Line 2568
	mov	DWORD PTR _missile[eax+100], 1
; Line 2569
	mov	DWORD PTR _missile[eax+112], ecx
; Line 2570
	ret	28					; 0000001cH
@miss_null_13@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddRhino@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_id$ = 28
@AddRhino@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2573
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; Line 2586
	mov	esi, DWORD PTR _id$[ebp]
	imul	esi, 228				; 000000e4H
	mov	DWORD PTR _mi$[ebp], ecx
	push	edi
	mov	eax, DWORD PTR _monster[esi+220]
; Line 2587
	mov	cl, BYTE PTR [eax]
; Line 2588
	cmp	cl, 64					; 00000040H
	jb	SHORT $L86724
	cmp	cl, 67					; 00000043H
	jg	SHORT $L86724
; Line 2592
	lea	edi, DWORD PTR [eax+224]
	jmp	SHORT $L86725
$L86724:
; Line 2589
	cmp	cl, 89					; 00000059H
	jl	SHORT $L86726
	cmp	cl, 92					; 0000005cH
	lea	edi, DWORD PTR [eax+92]
	jle	SHORT $L86725
$L86726:
; Line 2590
	lea	edi, DWORD PTR [eax+48]
$L86725:
; Line 2594
	push	18					; 00000012H
	mov	ecx, DWORD PTR _mi$[ebp]
	push	DWORD PTR _dy$[ebp]
	push	DWORD PTR _dx$[ebp]
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
; Line 2596
	mov	eax, DWORD PTR _mi$[ebp]
; Line 2597
	mov	ecx, DWORD PTR _midir$[ebp]
	imul	eax, 176				; 000000b0H
	and	DWORD PTR _missile[eax+60], 0
	mov	DWORD PTR _missile[eax+44], ecx
; Line 2598
	mov	ecx, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR _missile[eax+64], ecx
; Line 2599
	mov	ecx, DWORD PTR [edi+40]
	mov	DWORD PTR _missile[eax+68], ecx
; Line 2600
	mov	ecx, DWORD PTR [edi+36]
	mov	DWORD PTR _missile[eax+72], ecx
; Line 2601
	mov	ecx, DWORD PTR _monster[esi+220]
; Line 2602
	mov	edx, DWORD PTR [ecx+300]
	mov	DWORD PTR _missile[eax+76], edx
; Line 2603
	mov	edx, DWORD PTR [ecx+304]
	mov	DWORD PTR _missile[eax+80], edx
; Line 2604
	xor	edx, edx
	inc	edx
	mov	DWORD PTR _missile[eax+88], edx
; Line 2605
	mov	cl, BYTE PTR [ecx]
; Line 2606
	cmp	cl, 89					; 00000059H
	jl	SHORT $L86728
	cmp	cl, 92					; 0000005cH
	jg	SHORT $L86728
; Line 2607
	mov	DWORD PTR _missile[eax+92], 7
$L86728:
; Line 2608
	and	DWORD PTR _missile[eax+144], 0
; Line 2609
	and	DWORD PTR _missile[eax+148], 0
; Line 2610
	cmp	BYTE PTR _monster[esi+188], 0
; Line 2611
	mov	DWORD PTR _missile[eax+100], edx
; Line 2612
	je	SHORT $L86729
; Line 2613
	movzx	ecx, BYTE PTR _monster[esi+189]
	inc	ecx
	mov	DWORD PTR _missile[eax+108], ecx
; Line 2614
	movzx	ecx, BYTE PTR _monster[esi+215]
	mov	DWORD PTR _missile[eax+136], ecx
$L86729:
; Line 2617
	mov	ecx, DWORD PTR _mi$[ebp]
	mov	DWORD PTR _missile[eax+112], 256	; 00000100H
	call	@PutMissile@4
	pop	edi
	pop	esi
; Line 2618
	leave
	ret	28					; 0000001cH
@AddRhino@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_32@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_id$ = 28
@miss_null_32@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2621
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 2624
	mov	esi, DWORD PTR _id$[ebp]
	push	edi
	imul	esi, 228				; 000000e4H
; Line 2625
	push	16					; 00000010H
	mov	ebx, ecx
	push	DWORD PTR _dy$[ebp]
	mov	edi, DWORD PTR _monster[esi+220]
	add	edi, 48					; 00000030H
	push	DWORD PTR _dx$[ebp]
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
; Line 2626
	mov	eax, ebx
	mov	ecx, DWORD PTR _midir$[ebp]
	imul	eax, 176				; 000000b0H
; Line 2627
	xor	edx, edx
	mov	DWORD PTR _missile[eax+44], ecx
	mov	DWORD PTR _missile[eax+60], edx
; Line 2628
	mov	ecx, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR _missile[eax+64], ecx
; Line 2629
	mov	ecx, DWORD PTR [edi+40]
	mov	DWORD PTR _missile[eax+68], ecx
; Line 2630
	mov	ecx, DWORD PTR [edi+36]
	mov	DWORD PTR _missile[eax+72], ecx
; Line 2631
	mov	ecx, DWORD PTR _monster[esi+220]
	mov	edi, DWORD PTR [ecx+300]
	mov	DWORD PTR _missile[eax+76], edi
; Line 2632
	mov	ecx, DWORD PTR [ecx+304]
	mov	DWORD PTR _missile[eax+80], ecx
; Line 2633
	xor	ecx, ecx
	inc	ecx
; Line 2637
	cmp	BYTE PTR _monster[esi+188], dl
	mov	DWORD PTR _missile[eax+88], ecx
	mov	DWORD PTR _missile[eax+144], edx
	mov	DWORD PTR _missile[eax+148], edx
	mov	DWORD PTR _missile[eax+100], ecx
	je	SHORT $L86752
; Line 2638
	movzx	ecx, BYTE PTR _monster[esi+189]
	inc	ecx
	mov	DWORD PTR _missile[eax+108], ecx
$L86752:
; Line 2639
	mov	ecx, DWORD PTR _monster[esi+32]
; Line 2640
	mov	DWORD PTR _missile[eax+112], 256	; 00000100H
	imul	ecx, 112				; 00000070H
	add	ecx, DWORD PTR _monster[esi+36]
	mov	DWORD PTR _dMonster[ecx*4], edx
; Line 2641
	mov	ecx, ebx
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 2642
	pop	ebp
	ret	28					; 0000001cH
@miss_null_32@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFlare@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
@AddFlare@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2645
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
; Line 2646
	mov	ebx, DWORD PTR _sy$[ebp]
	push	esi
	push	edi
	mov	edi, edx
	mov	edx, DWORD PTR _dx$[ebp]
	mov	esi, ecx
	mov	ecx, DWORD PTR _dy$[ebp]
	cmp	edi, edx
	mov	DWORD PTR _mi$[ebp], esi
	jne	SHORT $L86772
	cmp	ebx, ecx
	jne	SHORT $L86772
; Line 2647
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	edx, DWORD PTR _XDirAdd[eax]
; Line 2648
	add	ecx, DWORD PTR _YDirAdd[eax]
$L86772:
; Line 2650
	push	16					; 00000010H
	push	ecx
	push	edx
	push	ebx
	mov	edx, edi
	mov	ecx, esi
	call	@GetMissileVel@24
; Line 2651
	imul	esi, 176				; 000000b0H
; Line 2654
	push	8
	mov	edx, ebx
	mov	ecx, edi
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], edi
	mov	DWORD PTR _missile[esi+148], ebx
	call	@AddLight@12
; Line 2655
	cmp	BYTE PTR _mienemy$[ebp], 0
	mov	DWORD PTR _missile[esi+136], eax
	jne	SHORT $L86774
; Line 2656
	mov	ecx, DWORD PTR _id$[ebp]
	push	35					; 00000023H
	pop	edx
	call	@UseMana@8
; Line 2658
	mov	eax, DWORD PTR _id$[ebp]
	mov	edx, -320				; fffffec0H
	imul	eax, 21720				; 000054d8H
	mov	DWORD PTR _drawhpflag, 1
; Line 2659
	add	DWORD PTR _plr[eax+400], edx
	lea	ecx, DWORD PTR _plr[eax+408]
	add	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [ecx]
; Line 2660
	test	ecx, ecx
	jg	SHORT $L86781
; Line 2661
	mov	ecx, DWORD PTR _id$[ebp]
	xor	edx, edx
	call	@SyncPlrKill@8
; Line 2662
	jmp	SHORT $L86781
$L86774:
; Line 2663
	mov	eax, DWORD PTR _id$[ebp]
	test	eax, eax
	jle	SHORT $L86781
; Line 2664
	imul	eax, 228				; 000000e4H
	mov	esi, DWORD PTR _monster[eax+220]
	cmp	BYTE PTR [esi], 101			; 00000065H
	jne	SHORT $L86778
; Line 2665
	mov	ecx, DWORD PTR _mi$[ebp]
	push	22					; 00000016H
	pop	edx
	call	@SetMissAnim@8
$L86778:
; Line 2666
	cmp	BYTE PTR [esi], 102			; 00000066H
	jne	SHORT $L86779
; Line 2667
	mov	ecx, DWORD PTR _mi$[ebp]
	push	40					; 00000028H
	pop	edx
	call	@SetMissAnim@8
$L86779:
; Line 2668
	cmp	BYTE PTR [esi], 103			; 00000067H
	jne	SHORT $L86780
; Line 2669
	mov	ecx, DWORD PTR _mi$[ebp]
	push	44					; 0000002cH
	pop	edx
	call	@SetMissAnim@8
$L86780:
; Line 2670
	cmp	BYTE PTR [esi], 104			; 00000068H
	jne	SHORT $L86781
; Line 2671
	mov	ecx, DWORD PTR _mi$[ebp]
	push	42					; 0000002aH
	pop	edx
	call	@SetMissAnim@8
$L86781:
	pop	edi
	pop	esi
	pop	ebx
; Line 2674
	leave
	ret	28					; 0000001cH
@AddFlare@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddAcid@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_id$ = 28
@AddAcid@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2677
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 2678
	mov	ebx, DWORD PTR _sy$[ebp]
	push	edi
	push	16					; 00000010H
	mov	esi, edx
	push	DWORD PTR _dy$[ebp]
	mov	edi, ecx
	push	DWORD PTR _dx$[ebp]
	push	ebx
	call	@GetMissileVel@24
; Line 2679
	mov	edx, ebx
	mov	ecx, esi
	push	DWORD PTR _dy$[ebp]
	push	DWORD PTR _dx$[ebp]
	call	@GetDirection16@16
	mov	edx, eax
	mov	ecx, edi
	call	@SetMissDir@8
; Line 2683
	mov	ecx, DWORD PTR _id$[ebp]
	mov	eax, edi
	imul	ecx, 228				; 000000e4H
	imul	eax, 176				; 000000b0H
	movzx	ecx, BYTE PTR _monster[ecx+153]
	or	DWORD PTR _missile[eax+136], -1
	add	ecx, 4
	mov	DWORD PTR _missile[eax+144], esi
	mov	DWORD PTR _missile[eax+148], ebx
	lea	ecx, DWORD PTR [ecx+ecx*4]
	mov	DWORD PTR _missile[eax+112], ecx
; Line 2684
	mov	ecx, edi
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 2685
	pop	ebp
	ret	28					; 0000001cH
@AddAcid@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_1D@36
_TEXT	SEGMENT
_dam$ = 32
@miss_null_1D@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2693
	imul	ecx, 176				; 000000b0H
	mov	eax, DWORD PTR _dam$[esp-4]
; Line 2694
	push	50					; 00000032H
	mov	DWORD PTR _missile[ecx+124], eax
	pop	eax
	mov	DWORD PTR _missile[ecx+112], eax
; Line 2695
	sub	eax, DWORD PTR _missile[ecx+72]
; Line 2696
	xor	edx, edx
	mov	DWORD PTR _missile[ecx+20], edx
; Line 2697
	mov	DWORD PTR _missile[ecx+24], edx
; Line 2698
	mov	DWORD PTR _missile[ecx+144], eax
; Line 2699
	mov	DWORD PTR _missile[ecx+148], edx
; Line 2700
	ret	28					; 0000001cH
@miss_null_1D@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddAcidpud@36
_TEXT	SEGMENT
@AddAcidpud@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2703
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 2709
	imul	esi, 176				; 000000b0H
; Line 2714
	xor	ebx, ebx
; Line 2715
	push	15					; 0000000fH
	mov	edi, DWORD PTR _missile[esi+116]
	xor	eax, eax
	inc	ebx
	pop	edx
	mov	cl, 50					; 00000032H
	mov	DWORD PTR _missile[esi+20], eax
	mov	DWORD PTR _missile[esi+24], eax
	mov	DWORD PTR _missile[esi+12], eax
	mov	DWORD PTR _missile[esi+16], eax
	mov	DWORD PTR _missile[esi+100], ebx
	call	@random@8
; Line 2717
	imul	edi, 228				; 000000e4H
	mov	DWORD PTR _missile[esi+104], ebx
	movzx	ecx, BYTE PTR _monster[edi+153]
	inc	ecx
	pop	edi
	lea	ecx, DWORD PTR [ecx+ecx*4]
	lea	eax, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR _missile[esi+112], eax
	pop	esi
	pop	ebx
; Line 2718
	ret	28					; 0000001cH
@AddAcidpud@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddStone@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_id$ = 28
_CrawlNum$ = -32
_v25$ = -8
_v26$ = -4
@AddStone@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2721
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; Line 2742
	and	DWORD PTR _CrawlNum$[ebp], 0
; Line 2743
	and	DWORD PTR _v26$[ebp], 0
; Line 2751
	mov	eax, ecx
	push	ebx
	imul	eax, 176				; 000000b0H
	push	esi
	mov	esi, DWORD PTR _id$[ebp]
	push	edi
	mov	edi, esi
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	mov	DWORD PTR _missile[eax+116], esi
$L86882:
; Line 2753
	mov	ecx, DWORD PTR _v26$[ebp]
	mov	edx, DWORD PTR _CrawlNum$[ebp+ecx*4]
; Line 2755
	mov	bl, BYTE PTR _CrawlTable[edx]
	movzx	ecx, bl
; Line 2756
	test	bl, bl
	mov	DWORD PTR _v25$[ebp], ecx
	jbe	$LABEL_19$86897
; Line 2757
	lea	ecx, DWORD PTR _CrawlTable[edx+2]
$L86889:
; Line 2759
	movsx	esi, BYTE PTR [ecx-1]
; Line 2760
	movsx	edi, BYTE PTR [ecx]
	add	esi, DWORD PTR _dx$[ebp]
	add	edi, DWORD PTR _dy$[ebp]
; Line 2761
	test	esi, esi
	jle	SHORT $L86895
	cmp	esi, 112				; 00000070H
	jge	SHORT $L86895
	test	edi, edi
	jle	SHORT $L86895
	cmp	edi, 112				; 00000070H
	jge	SHORT $L86895
; Line 2762
	mov	edx, esi
	imul	edx, 112				; 00000070H
	add	edx, edi
	mov	ebx, DWORD PTR _dMonster[edx*4]
; Line 2763
	test	ebx, ebx
	jg	SHORT $L89168
	or	edx, -1
	sub	edx, ebx
	jmp	SHORT $L89169
$L89168:
	lea	edx, DWORD PTR [ebx-1]
$L89169:
; Line 2764
	cmp	edx, 3
	jle	SHORT $L86895
	mov	ebx, edx
	imul	ebx, 228				; 000000e4H
	cmp	BYTE PTR _monster[ebx+152], 27		; 0000001bH
	je	SHORT $L86895
; Line 2765
	mov	ebx, DWORD PTR _monster[ebx+4]
; Line 2766
	cmp	ebx, 8
	je	SHORT $L86895
	cmp	ebx, 9
	je	SHORT $L86895
	cmp	ebx, 14					; 0000000eH
	jne	SHORT $L86890
$L86895:
; Line 2770
	inc	ecx
	inc	ecx
; Line 2771
	dec	DWORD PTR _v25$[ebp]
	cmp	DWORD PTR _v25$[ebp], 0
	jg	SHORT $L86889
; Line 2758
	jmp	SHORT $LABEL_19$86897
$L86890:
; Line 2776
	mov	DWORD PTR _missile[eax+148], edx
; Line 2777
	imul	edx, 228				; 000000e4H
	add	edx, OFFSET FLAT:_monster+4
	mov	DWORD PTR _v25$[ebp], -99		; ffffff9dH
	mov	DWORD PTR _v26$[ebp], 6
; Line 2778
	mov	ebx, DWORD PTR [edx]
; Line 2779
	mov	DWORD PTR [edx], 15			; 0000000fH
; Line 2780
	mov	DWORD PTR _missile[eax+144], ebx
$LABEL_19$86897:
; Line 2783
	inc	DWORD PTR _v26$[ebp]
; Line 2784
	cmp	DWORD PTR _v26$[ebp], 6
	jl	$L86882
; Line 2785
	cmp	DWORD PTR _v25$[ebp], -99		; ffffff9dH
	jne	SHORT $L86899
; Line 2789
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR _missile[eax+4], esi
	mov	edx, ecx
	mov	DWORD PTR _missile[eax+28], esi
	imul	edx, 21720				; 000054d8H
	mov	esi, DWORD PTR _missile[eax+48]
; Line 2795
	push	15					; 0000000fH
	mov	edx, DWORD PTR _plr[edx+21596]
	add	esi, 6
	imul	edx, esi
	sar	edx, 7
	mov	DWORD PTR _missile[eax+8], edi
	mov	DWORD PTR _missile[eax+32], edi
	add	edx, esi
	lea	eax, DWORD PTR _missile[eax+112]
	pop	esi
	cmp	edx, esi
	mov	DWORD PTR [eax], edx
	jle	SHORT $L86900
; Line 2796
	mov	DWORD PTR [eax], esi
$L86900:
; Line 2797
	shl	DWORD PTR [eax], 4
; Line 2798
	push	8
	pop	edx
	call	@UseMana@8
; Line 2799
	jmp	SHORT $L86901
$L86899:
; Line 2800
	mov	DWORD PTR _missile[eax+52], 1
$L86901:
	pop	edi
	pop	esi
	pop	ebx
; Line 2802
	leave
	ret	28					; 0000001cH
@AddStone@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddGolem@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_id$ = 28
_mx$ = -8
@AddGolem@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2805
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	mov	eax, ecx
	push	ebx
	mov	DWORD PTR _mi$[ebp], eax
; Line 2809
	imul	eax, 176				; 000000b0H
; Line 2810
	mov	ebx, DWORD PTR _id$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _nummissiles
	xor	ecx, ecx
	cmp	edi, ecx
	mov	DWORD PTR _missile[eax+52], ecx
	jle	SHORT $L86925
$L86923:
; Line 2811
	mov	esi, DWORD PTR _missileactive[ecx*4]
	mov	DWORD PTR _mx$[ebp], esi
; Line 2812
	imul	esi, 176				; 000000b0H
	cmp	DWORD PTR _missile[esi], 33		; 00000021H
	jne	SHORT $L86924
; Line 2813
	mov	ebx, DWORD PTR _mi$[ebp]
	cmp	DWORD PTR _mx$[ebp], ebx
	mov	ebx, DWORD PTR _id$[ebp]
	je	SHORT $L86924
	cmp	DWORD PTR _missile[esi+116], ebx
	je	SHORT $L89181
$L86924:
; Line 2810
	inc	ecx
	cmp	ecx, edi
	jl	SHORT $L86923
$L86925:
; Line 2820
	mov	ecx, DWORD PTR _sy$[ebp]
	mov	DWORD PTR _missile[eax+144], edx
	mov	DWORD PTR _missile[eax+148], ecx
; Line 2821
	mov	ecx, DWORD PTR _dx$[ebp]
	mov	DWORD PTR _missile[eax+156], ecx
; Line 2822
	mov	ecx, DWORD PTR _dy$[ebp]
	mov	DWORD PTR _missile[eax+160], ecx
; Line 2823
	mov	eax, ebx
	imul	eax, 228				; 000000e4H
	cmp	DWORD PTR _monster[eax+32], 1
	jne	SHORT $L86929
	cmp	DWORD PTR _monster[eax+36], 0
	je	SHORT $L86928
$L86929:
	cmp	ebx, DWORD PTR _myplr
	jne	SHORT $L86928
; Line 2824
	mov	edx, ebx
	mov	ecx, ebx
	call	@M_StartKill@8
$L86928:
; Line 2825
	push	21					; 00000015H
	mov	ecx, ebx
	pop	edx
	call	@UseMana@8
$L86920:
	pop	edi
	pop	esi
	pop	ebx
; Line 2826
	leave
	ret	28					; 0000001cH
$L89181:
; Line 2814
	mov	DWORD PTR _missile[eax+52], 1
; Line 2815
	jmp	SHORT $L86920
@AddGolem@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddEtherealize@36
_TEXT	SEGMENT
_mienemy$ = 24
_id$ = 28
@AddEtherealize@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2832
	mov	edx, DWORD PTR _id$[esp-4]
	mov	eax, ecx
	imul	edx, 21720				; 000054d8H
	imul	eax, 176				; 000000b0H
; Line 2833
	mov	ecx, DWORD PTR _missile[eax+48]
	push	esi
	movsx	esi, BYTE PTR _plr[edx+440]
	shl	esi, 4
	sar	esi, 1
	test	ecx, ecx
	mov	DWORD PTR _missile[eax+112], esi
	jle	SHORT $L86952
	push	edi
$L86950:
; Line 2834
	mov	edi, esi
	sar	edi, 3
	add	esi, edi
	dec	ecx
	jne	SHORT $L86950
	mov	DWORD PTR _missile[eax+112], esi
	pop	edi
$L86952:
; Line 2836
	mov	ecx, DWORD PTR _missile[eax+112]
	mov	esi, DWORD PTR _plr[edx+21596]
	imul	esi, ecx
	sar	esi, 7
	add	esi, ecx
; Line 2837
	mov	ecx, DWORD PTR _plr[edx+408]
; Line 2839
	cmp	BYTE PTR _mienemy$[esp], 0
	mov	DWORD PTR _missile[eax+144], ecx
	mov	ecx, DWORD PTR _plr[edx+400]
	mov	DWORD PTR _missile[eax+112], esi
	mov	DWORD PTR _missile[eax+148], ecx
	pop	esi
	jne	SHORT $L86954
; Line 2840
	mov	ecx, DWORD PTR _id$[esp-4]
	push	25					; 00000019H
	pop	edx
	call	@UseMana@8
$L86954:
; Line 2841
	ret	28					; 0000001cH
@AddEtherealize@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_1F@36
_TEXT	SEGMENT
@miss_null_1F@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2845
	imul	ecx, 176				; 000000b0H
	mov	DWORD PTR _missile[ecx+52], 1
; Line 2846
	ret	28					; 0000001cH
@miss_null_1F@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @miss_null_23@36
_TEXT	SEGMENT
_sy$ = 8
_id$ = 28
_dam$ = 32
@miss_null_23@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2849
	push	esi
; Line 2850
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
; Line 2852
	mov	eax, DWORD PTR _sy$[esp]
	push	edi
	mov	edi, DWORD PTR _dam$[esp+4]
	mov	DWORD PTR _missile[esi+4], edx
	mov	DWORD PTR _missile[esi+8], eax
; Line 2853
	mov	DWORD PTR _missile[esi+28], edx
; Line 2854
	mov	DWORD PTR _missile[esi+32], eax
; Line 2855
	mov	eax, DWORD PTR _id$[esp+4]
; Line 2857
	xor	edx, edx
	cmp	edi, 1
	mov	DWORD PTR _missile[esi+124], edi
	mov	DWORD PTR _missile[esi+116], eax
; Line 2858
	je	SHORT $L89196
; Line 2859
	inc	edx
$L89196:
	call	@SetMissDir@8
; Line 2861
	mov	eax, DWORD PTR _missile[esi+72]
	mov	DWORD PTR _missile[esi+100], 1
	mov	DWORD PTR _missile[esi+112], eax
	pop	edi
	pop	esi
; Line 2862
	ret	28					; 0000001cH
@miss_null_23@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddBoom@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_dam$ = 32
@AddBoom@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2866
	imul	ecx, 176				; 000000b0H
; Line 2867
	mov	edx, DWORD PTR _dy$[esp-4]
	mov	eax, DWORD PTR _dx$[esp-4]
	mov	DWORD PTR _missile[ecx+8], edx
; Line 2869
	mov	DWORD PTR _missile[ecx+32], edx
; Line 2872
	mov	edx, DWORD PTR _dam$[esp-4]
	mov	DWORD PTR _missile[ecx+4], eax
	mov	DWORD PTR _missile[ecx+28], eax
	mov	DWORD PTR _missile[ecx+124], edx
; Line 2873
	mov	edx, DWORD PTR _missile[ecx+72]
	xor	eax, eax
	mov	DWORD PTR _missile[ecx+20], eax
	mov	DWORD PTR _missile[ecx+24], eax
	mov	DWORD PTR _missile[ecx+112], edx
; Line 2874
	mov	DWORD PTR _missile[ecx+144], eax
; Line 2875
	ret	28					; 0000001cH
@AddBoom@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddHeal@36
_TEXT	SEGMENT
_mi$ = -8
_id$ = 28
_i$ = -4
@AddHeal@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2878
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 2880
	push	10					; 0000000aH
	mov	DWORD PTR _mi$[ebp], ecx
	pop	edx
	mov	cl, 57					; 00000039H
	call	@random@8
; Line 2881
	mov	esi, DWORD PTR _id$[ebp]
	mov	edi, eax
	imul	esi, 21720				; 000054d8H
	inc	edi
	xor	ebx, ebx
	shl	edi, 6
	cmp	BYTE PTR _plr[esi+440], bl
	jle	SHORT $L87037
$L87035:
; Line 2882
	push	4
	mov	cl, 57					; 00000039H
	pop	edx
	call	@random@8
	inc	eax
	shl	eax, 6
	add	edi, eax
	inc	ebx
	movsx	eax, BYTE PTR _plr[esi+440]
	cmp	ebx, eax
	jl	SHORT $L87035
$L87037:
; Line 2884
	mov	ebx, DWORD PTR _mi$[ebp]
	and	DWORD PTR _i$[ebp], 0
	imul	ebx, 176				; 000000b0H
	cmp	DWORD PTR _missile[ebx+48], 0
	jle	SHORT $L87040
$L87038:
; Line 2885
	push	6
	mov	cl, 57					; 00000039H
	pop	edx
	call	@random@8
	inc	eax
	shl	eax, 6
	add	edi, eax
	inc	DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _missile[ebx+48]
	jl	SHORT $L87038
$L87040:
; Line 2888
	mov	al, BYTE PTR _plr[esi+352]
	test	al, al
	jne	SHORT $L87041
; Line 2889
	add	edi, edi
$L87041:
; Line 2891
	cmp	al, 1
	jne	SHORT $L87042
; Line 2892
	mov	eax, edi
	sar	eax, 2
	add	edi, eax
$L87042:
; Line 2895
	mov	ecx, DWORD PTR _plr[esi+412]
	lea	eax, DWORD PTR _plr[esi+408]
	add	DWORD PTR [eax], edi
	mov	edx, DWORD PTR [eax]
	cmp	edx, ecx
	jle	SHORT $L87043
; Line 2896
	mov	DWORD PTR [eax], ecx
$L87043:
; Line 2898
	lea	eax, DWORD PTR _plr[esi+400]
; Line 2899
	mov	esi, DWORD PTR _plr[esi+404]
	add	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, esi
	jle	SHORT $L87044
; Line 2900
	mov	DWORD PTR [eax], esi
$L87044:
; Line 2902
	mov	ecx, DWORD PTR _id$[ebp]
	push	2
	pop	edx
	call	@UseMana@8
; Line 2903
	xor	eax, eax
	inc	eax
	pop	edi
	mov	DWORD PTR _missile[ebx+52], eax
	pop	esi
; Line 2904
	mov	DWORD PTR _drawhpflag, eax
	pop	ebx
; Line 2905
	leave
	ret	28					; 0000001cH
@AddHeal@36 ENDP
_TEXT	ENDS
EXTRN	@SetCursor_@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @AddHealOther@36
_TEXT	SEGMENT
_id$ = 28
@AddHealOther@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2910
	imul	ecx, 176				; 000000b0H
	push	esi
; Line 2911
	mov	esi, DWORD PTR _id$[esp]
	push	34					; 00000022H
	mov	DWORD PTR _missile[ecx+52], 1
	pop	edx
	mov	ecx, esi
	call	@UseMana@8
; Line 2912
	cmp	esi, DWORD PTR _myplr
	pop	esi
	jne	SHORT $L87064
; Line 2913
	push	10					; 0000000aH
	pop	ecx
	call	@SetCursor_@4
$L87064:
; Line 2914
	ret	28					; 0000001cH
@AddHealOther@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddElement@36
_TEXT	SEGMENT
_mi$ = -4
_sx$ = -8
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_id$ = 28
@AddElement@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2917
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
; Line 2920
	mov	ebx, DWORD PTR _dx$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _dy$[ebp]
	cmp	edx, ebx
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _mi$[ebp], ecx
	jne	SHORT $L87085
	cmp	DWORD PTR _sy$[ebp], edi
	jne	SHORT $L87085
; Line 2921
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	ebx, DWORD PTR _XDirAdd[eax]
; Line 2922
	add	edi, DWORD PTR _YDirAdd[eax]
$L87085:
; Line 2924
	push	10					; 0000000aH
	mov	cl, 60					; 0000003cH
	pop	edx
	call	@random@8
	mov	cl, 60					; 0000003cH
	mov	esi, eax
	push	10					; 0000000aH
	pop	edx
	call	@random@8
	add	esi, eax
	mov	eax, DWORD PTR _id$[ebp]
	imul	eax, 21720				; 000054d8H
	movsx	eax, BYTE PTR _plr[eax+440]
	add	esi, eax
	lea	eax, DWORD PTR [esi+esi+4]
	mov	esi, DWORD PTR _mi$[ebp]
	imul	esi, 176				; 000000b0H
; Line 2925
	mov	ecx, DWORD PTR _missile[esi+48]
	mov	DWORD PTR _missile[esi+124], eax
	test	ecx, ecx
	jle	SHORT $L87088
$L87086:
; Line 2926
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
	dec	ecx
	jne	SHORT $L87086
	mov	DWORD PTR _missile[esi+124], eax
$L87088:
; Line 2929
	mov	edx, DWORD PTR _sx$[ebp]
	mov	ecx, DWORD PTR _mi$[ebp]
	sar	DWORD PTR _missile[esi+124], 1
	push	16					; 00000010H
	push	edi
	push	ebx
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
; Line 2930
	mov	edx, DWORD PTR _sy$[ebp]
	mov	ecx, DWORD PTR _sx$[ebp]
	push	edi
	push	ebx
	call	@GetDirection8@16
	mov	ecx, DWORD PTR _mi$[ebp]
	mov	edx, eax
	call	@SetMissDir@8
; Line 2932
	mov	ecx, DWORD PTR _sx$[ebp]
; Line 2933
	mov	edx, DWORD PTR _sy$[ebp]
; Line 2934
	and	DWORD PTR _missile[esi+152], 0
; Line 2937
	push	8
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], ecx
	mov	DWORD PTR _missile[esi+148], edx
	mov	DWORD PTR _missile[esi+156], ebx
	mov	DWORD PTR _missile[esi+160], edi
	call	@AddLight@12
; Line 2938
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR _missile[esi+136], eax
	push	29					; 0000001dH
	pop	edx
	call	@UseMana@8
	pop	edi
	pop	esi
	pop	ebx
; Line 2939
	leave
	ret	28					; 0000001cH
@AddElement@36 ENDP
_TEXT	ENDS
EXTRN	_invflag:DWORD
EXTRN	_sbookflag:DWORD
; Function compile flags: /Ogsy
;	COMDAT @AddIdentify@36
_TEXT	SEGMENT
_id$ = 28
@AddIdentify@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2943
	imul	ecx, 176				; 000000b0H
	push	esi
; Line 2944
	mov	esi, DWORD PTR _id$[esp]
	push	edi
	xor	edi, edi
	inc	edi
	push	5
	mov	DWORD PTR _missile[ecx+52], edi
	pop	edx
	mov	ecx, esi
	call	@UseMana@8
; Line 2945
	cmp	esi, DWORD PTR _myplr
	jne	SHORT $L87108
; Line 2946
	xor	eax, eax
	cmp	DWORD PTR _sbookflag, eax
	je	SHORT $L87109
; Line 2947
	mov	DWORD PTR _sbookflag, eax
$L87109:
; Line 2948
	cmp	DWORD PTR _invflag, eax
	jne	SHORT $L87110
; Line 2949
	mov	DWORD PTR _invflag, edi
$L87110:
; Line 2950
	push	2
	pop	ecx
	call	@SetCursor_@4
$L87108:
	pop	edi
	pop	esi
; Line 2952
	ret	28					; 0000001cH
@AddIdentify@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFirewallC@36
_TEXT	SEGMENT
_sx$ = -12
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_id$ = 28
_v12$ = -16
_CrawlNum$ = -48
_v17$ = -20
_v18$ = -24
_v21$ = -8
_v22$ = -4
@AddFirewallC@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 2956
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; Line 2972
	and	DWORD PTR _CrawlNum$[ebp], 0
; Line 2974
	and	DWORD PTR _v22$[ebp], 0
	push	ebx
	push	esi
; Line 2981
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	mov	DWORD PTR _missile[esi+52], 1
$L87143:
; Line 2983
	mov	eax, DWORD PTR _v22$[ebp]
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax*4]
; Line 2985
	mov	cl, BYTE PTR _CrawlTable[eax]
	movzx	edx, cl
; Line 2986
	test	cl, cl
	mov	DWORD PTR _v21$[ebp], edx
	jbe	$LABEL_16$87149
; Line 2988
	lea	eax, DWORD PTR _CrawlTable[eax+2]
	mov	DWORD PTR _v12$[ebp], eax
$L87151:
; Line 2991
	movsx	edi, BYTE PTR [eax-1]
; Line 2992
	movsx	ebx, BYTE PTR [eax]
	add	edi, DWORD PTR _dx$[ebp]
	add	ebx, DWORD PTR _dy$[ebp]
; Line 2993
	test	edi, edi
	jle	SHORT $LABEL_13$87157
	cmp	edi, 112				; 00000070H
	jge	SHORT $LABEL_13$87157
	test	ebx, ebx
	jle	SHORT $LABEL_13$87157
	cmp	ebx, 112				; 00000070H
	jge	SHORT $LABEL_13$87157
; Line 2995
	mov	eax, edi
; Line 2998
	mov	edx, DWORD PTR _sy$[ebp]
	imul	eax, 112				; 00000070H
	mov	ecx, DWORD PTR _sx$[ebp]
	add	eax, ebx
	mov	DWORD PTR _v18$[ebp], eax
	push	ebx
	mov	eax, DWORD PTR _dPiece[eax*4]
	push	edi
	mov	DWORD PTR _v17$[ebp], eax
	call	@LineClear@16
	test	eax, eax
	je	SHORT $L89224
; Line 2999
	cmp	DWORD PTR _sx$[ebp], edi
	jne	SHORT $L87160
	cmp	DWORD PTR _sy$[ebp], ebx
	je	SHORT $L89224
$L87160:
	mov	eax, DWORD PTR _v17$[ebp]
	mov	ecx, DWORD PTR _v18$[ebp]
	movzx	eax, BYTE PTR _nSolidTable[eax]
	movsx	ecx, BYTE PTR _dObject[ecx]
	or	eax, ecx
	je	SHORT $L87152
$L89224:
	mov	eax, DWORD PTR _v12$[ebp]
$LABEL_13$87157:
; Line 3004
	inc	eax
	inc	eax
; Line 3005
	dec	DWORD PTR _v21$[ebp]
; Line 3007
	cmp	DWORD PTR _v21$[ebp], 0
	mov	DWORD PTR _v12$[ebp], eax
	jg	SHORT $L87151
; Line 2990
	jmp	SHORT $LABEL_16$87149
$L87152:
; Line 3010
	and	DWORD PTR _missile[esi+52], 0
; Line 3011
	mov	DWORD PTR _missile[esi+144], edi
; Line 3012
	mov	DWORD PTR _missile[esi+148], ebx
; Line 3013
	mov	DWORD PTR _missile[esi+160], edi
; Line 3014
	mov	DWORD PTR _missile[esi+164], ebx
; Line 3015
	mov	DWORD PTR _v22$[ebp], 6
$LABEL_16$87149:
; Line 3017
	inc	DWORD PTR _v22$[ebp]
; Line 3018
	cmp	DWORD PTR _v22$[ebp], 6
	jl	$L87143
; Line 3019
	cmp	DWORD PTR _missile[esi+52], 1
	je	SHORT $L87162
; Line 3022
	mov	eax, DWORD PTR _midir$[ebp]
	and	DWORD PTR _missile[esi+168], 0
	and	DWORD PTR _missile[esi+172], 0
	push	7
	lea	edx, DWORD PTR [eax-2]
	pop	ecx
	and	edx, ecx
; Line 3024
	add	eax, 2
; Line 3025
	push	6
	mov	DWORD PTR _missile[esi+152], edx
	mov	DWORD PTR _missile[esi+112], ecx
	and	eax, ecx
	mov	ecx, DWORD PTR _id$[ebp]
	pop	edx
	mov	DWORD PTR _missile[esi+156], eax
	call	@UseMana@8
$L87162:
	pop	edi
	pop	esi
	pop	ebx
; Line 3027
	leave
	ret	28					; 0000001cH
@AddFirewallC@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddInfra@36
_TEXT	SEGMENT
_mienemy$ = 24
_id$ = 28
@AddInfra@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3033
	imul	ecx, 176				; 000000b0H
	mov	eax, 1584				; 00000630H
; Line 3034
	mov	edx, DWORD PTR _missile[ecx+48]
	mov	DWORD PTR _missile[ecx+112], eax
	test	edx, edx
	jle	SHORT $L87185
	push	esi
$L87183:
; Line 3035
	mov	esi, eax
	sar	esi, 3
	add	eax, esi
	dec	edx
	jne	SHORT $L87183
	mov	DWORD PTR _missile[ecx+112], eax
	pop	esi
$L87185:
; Line 3037
	mov	edx, DWORD PTR _id$[esp-4]
	mov	eax, DWORD PTR _missile[ecx+112]
	imul	edx, 21720				; 000054d8H
	mov	edx, DWORD PTR _plr[edx+21596]
	imul	edx, eax
	sar	edx, 7
	add	edx, eax
; Line 3038
	cmp	BYTE PTR _mienemy$[esp-4], 0
	mov	DWORD PTR _missile[ecx+112], edx
	jne	SHORT $L87187
; Line 3039
	mov	ecx, DWORD PTR _id$[esp-4]
	push	9
	pop	edx
	call	@UseMana@8
$L87187:
; Line 3040
	ret	28					; 0000001cH
@AddInfra@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddWave@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_id$ = 28
@AddWave@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3044
	imul	ecx, 176				; 000000b0H
	mov	eax, DWORD PTR _dx$[esp-4]
; Line 3050
	push	15					; 0000000fH
	and	DWORD PTR _missile[ecx+152], 0
	and	DWORD PTR _missile[ecx+156], 0
	mov	DWORD PTR _missile[ecx+144], eax
	mov	eax, DWORD PTR _dy$[esp]
	mov	DWORD PTR _missile[ecx+148], eax
	mov	DWORD PTR _missile[ecx+112], 1
	mov	DWORD PTR _missile[ecx+92], 4
	mov	ecx, DWORD PTR _id$[esp]
	pop	edx
	call	@UseMana@8
; Line 3051
	ret	28					; 0000001cH
@AddWave@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddNova@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
_mienemy$ = 24
_id$ = 28
@AddNova@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3054
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 3057
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _dx$[ebp]
; Line 3059
	cmp	DWORD PTR _id$[ebp], -1
	mov	DWORD PTR _missile[esi+144], eax
	mov	eax, DWORD PTR _dy$[ebp]
	push	edi
	mov	DWORD PTR _missile[esi+148], eax
; Line 3060
	mov	cl, 66					; 00000042H
	je	$L87227
	push	ebx
	push	6
	pop	edi
	mov	edx, edi
	call	@random@8
	mov	edx, edi
	mov	cl, 66					; 00000042H
	mov	ebx, eax
	call	@random@8
	mov	edx, edi
	mov	cl, 66					; 00000042H
	add	ebx, eax
	call	@random@8
	mov	edx, edi
	mov	cl, 66					; 00000042H
	add	ebx, eax
	call	@random@8
	mov	edx, edi
	mov	cl, 66					; 00000042H
	add	ebx, eax
	call	@random@8
	add	ebx, eax
	mov	eax, DWORD PTR _id$[ebp]
	imul	eax, 21720				; 000054d8H
; Line 3061
	mov	ecx, DWORD PTR _missile[esi+48]
	movsx	eax, BYTE PTR _plr[eax+440]
	lea	eax, DWORD PTR [ebx+eax+5]
	pop	ebx
	sar	eax, 1
	test	ecx, ecx
	mov	DWORD PTR _missile[esi+124], eax
	jle	SHORT $L87230
$L87228:
; Line 3062
	mov	edx, eax
	sar	edx, 3
	add	eax, edx
	dec	ecx
	jne	SHORT $L87228
	mov	DWORD PTR _missile[esi+124], eax
$L87230:
; Line 3064
	cmp	BYTE PTR _mienemy$[ebp], 0
	jne	SHORT $L87233
; Line 3065
	mov	ecx, DWORD PTR _id$[ebp]
	push	18					; 00000012H
	pop	edx
	call	@UseMana@8
; Line 3066
	jmp	SHORT $L87233
$L87227:
; Line 3067
	push	3
	pop	edx
	call	@random@8
	mov	cl, 66					; 00000042H
	mov	edi, eax
	push	3
	pop	edx
	call	@random@8
	mov	cl, 66					; 00000042H
	add	edi, eax
	push	3
	pop	edx
	call	@random@8
	add	edi, eax
	movzx	eax, BYTE PTR _currlevel
	shr	eax, 1
	add	edi, eax
	mov	DWORD PTR _missile[esi+124], edi
$L87233:
; Line 3069
	mov	DWORD PTR _missile[esi+112], 1
	pop	edi
	pop	esi
; Line 3070
	pop	ebp
	ret	28					; 0000001cH
@AddNova@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddRepair@36
_TEXT	SEGMENT
_id$ = 28
@AddRepair@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3074
	imul	ecx, 176				; 000000b0H
	push	esi
; Line 3075
	mov	esi, DWORD PTR _id$[esp]
	push	edi
	xor	edi, edi
	inc	edi
	push	26					; 0000001aH
	mov	DWORD PTR _missile[ecx+52], edi
	pop	edx
	mov	ecx, esi
	call	@UseMana@8
; Line 3076
	cmp	esi, DWORD PTR _myplr
	jne	SHORT $L87254
; Line 3077
	xor	eax, eax
	cmp	DWORD PTR _sbookflag, eax
	je	SHORT $L87255
; Line 3078
	mov	DWORD PTR _sbookflag, eax
$L87255:
; Line 3079
	cmp	DWORD PTR _invflag, eax
	jne	SHORT $L87256
; Line 3080
	mov	DWORD PTR _invflag, edi
$L87256:
; Line 3081
	push	3
	pop	ecx
	call	@SetCursor_@4
$L87254:
	pop	edi
	pop	esi
; Line 3083
	ret	28					; 0000001cH
@AddRepair@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddRecharge@36
_TEXT	SEGMENT
_id$ = 28
@AddRecharge@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3088
	imul	ecx, 176				; 000000b0H
	push	esi
; Line 3089
	mov	esi, DWORD PTR _id$[esp]
	push	edi
	xor	edi, edi
	inc	edi
	push	27					; 0000001bH
	mov	DWORD PTR _missile[ecx+52], edi
	pop	edx
	mov	ecx, esi
	call	@UseMana@8
; Line 3090
	cmp	esi, DWORD PTR _myplr
	jne	SHORT $L87276
; Line 3091
	xor	eax, eax
	cmp	DWORD PTR _sbookflag, eax
	je	SHORT $L87277
; Line 3092
	mov	DWORD PTR _sbookflag, eax
$L87277:
; Line 3093
	cmp	DWORD PTR _invflag, eax
	jne	SHORT $L87278
; Line 3094
	mov	DWORD PTR _invflag, edi
$L87278:
; Line 3095
	push	4
	pop	ecx
	call	@SetCursor_@4
$L87276:
	pop	edi
	pop	esi
; Line 3097
	ret	28					; 0000001cH
@AddRecharge@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddDisarm@36
_TEXT	SEGMENT
_id$ = 28
@AddDisarm@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3102
	imul	ecx, 176				; 000000b0H
	push	esi
; Line 3103
	mov	esi, DWORD PTR _id$[esp]
	push	28					; 0000001cH
	mov	DWORD PTR _missile[ecx+52], 1
	pop	edx
	mov	ecx, esi
	call	@UseMana@8
; Line 3104
	cmp	esi, DWORD PTR _myplr
	pop	esi
	jne	SHORT $L87298
; Line 3105
	push	5
	pop	ecx
	call	@SetCursor_@4
$L87298:
; Line 3106
	ret	28					; 0000001cH
@AddDisarm@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddApoca@36
_TEXT	SEGMENT
_sy$ = 8
_id$ = 28
@AddApoca@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3109
	push	ebx
	push	esi
; Line 3113
	mov	eax, DWORD PTR _sy$[esp+4]
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	push	edi
	lea	ecx, DWORD PTR [eax-8]
; Line 3114
	lea	edi, DWORD PTR [eax+8]
; Line 3118
	xor	ebx, ebx
	lea	eax, DWORD PTR [edx-8]
	add	edx, 8
	inc	ebx
	mov	DWORD PTR _missile[esi+144], 8
	test	ecx, ecx
	mov	DWORD PTR _missile[esi+148], ecx
	mov	DWORD PTR _missile[esi+152], edi
	mov	DWORD PTR _missile[esi+156], eax
	mov	DWORD PTR _missile[esi+160], edx
	mov	DWORD PTR _missile[esi+164], eax
	jg	SHORT $L87319
; Line 3119
	mov	DWORD PTR _missile[esi+148], ebx
$L87319:
; Line 3120
	push	111					; 0000006fH
	cmp	edi, 112				; 00000070H
	pop	ecx
	jl	SHORT $L87320
; Line 3121
	mov	DWORD PTR _missile[esi+152], ecx
$L87320:
; Line 3122
	test	eax, eax
	jg	SHORT $L87321
; Line 3123
	mov	DWORD PTR _missile[esi+156], ebx
$L87321:
; Line 3124
	cmp	edx, 112				; 00000070H
	jl	SHORT $L87322
; Line 3125
	mov	DWORD PTR _missile[esi+160], ecx
$L87322:
; Line 3126
	mov	eax, DWORD PTR _id$[esp+8]
	xor	ebx, ebx
	imul	eax, 21720				; 000054d8H
	lea	edi, DWORD PTR _plr[eax+440]
	cmp	BYTE PTR [edi], bl
	jle	SHORT $L87325
$L87323:
; Line 3127
	push	6
	mov	cl, 67					; 00000043H
	pop	edx
	call	@random@8
	inc	eax
	add	DWORD PTR _missile[esi+124], eax
	inc	ebx
	movsx	eax, BYTE PTR [edi]
	cmp	ebx, eax
	jl	SHORT $L87323
$L87325:
; Line 3131
	mov	ecx, DWORD PTR _id$[esp+8]
	and	DWORD PTR _missile[esi+52], 0
	push	24					; 00000018H
	mov	DWORD PTR _missile[esi+112], 255	; 000000ffH
	pop	edx
	call	@UseMana@8
	pop	edi
	pop	esi
	pop	ebx
; Line 3132
	ret	28					; 0000001cH
@AddApoca@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFlame@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
_dam$ = 32
@AddFlame@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3135
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 3138
	imul	esi, 176				; 000000b0H
; Line 3139
	mov	eax, DWORD PTR _dam$[ebp]
	push	edi
	and	DWORD PTR _missile[esi+148], 0
	mov	edi, edx
	test	eax, eax
	jle	SHORT $L87346
; Line 3140
	lea	eax, DWORD PTR [eax+eax*4]
	mov	DWORD PTR _missile[esi+148], eax
$L87346:
; Line 3141
	mov	eax, DWORD PTR _dx$[ebp]
; Line 3148
	mov	edx, DWORD PTR _sy$[ebp]
	mov	DWORD PTR _missile[esi+28], eax
	mov	eax, DWORD PTR _dy$[ebp]
	mov	DWORD PTR _missile[esi+32], eax
	mov	eax, DWORD PTR _midir$[ebp]
	imul	eax, 176				; 000000b0H
	push	1
	mov	ecx, DWORD PTR _missile[eax+12]
	mov	DWORD PTR _missile[esi+12], ecx
	mov	ecx, DWORD PTR _missile[eax+16]
	mov	DWORD PTR _missile[esi+16], ecx
	mov	ecx, DWORD PTR _missile[eax+36]
	mov	DWORD PTR _missile[esi+36], ecx
	mov	eax, DWORD PTR _missile[eax+40]
	mov	DWORD PTR _missile[esi+40], eax
	mov	eax, DWORD PTR _missile[esi+148]
	add	eax, 20					; 00000014H
	mov	ecx, edi
	mov	DWORD PTR _missile[esi+112], eax
	call	@AddLight@12
; Line 3149
	cmp	BYTE PTR _mienemy$[ebp], 0
	mov	DWORD PTR _missile[esi+136], eax
; Line 3150
	mov	eax, DWORD PTR _id$[ebp]
	jne	SHORT $L87348
	imul	eax, 21720				; 000054d8H
	mov	cl, 79					; 0000004fH
	movsx	edx, BYTE PTR _plr[eax+440]
	call	@random@8
	mov	cl, 79					; 0000004fH
	mov	edi, eax
	push	2
	pop	edx
	call	@random@8
	add	edi, eax
; Line 3151
	lea	eax, DWORD PTR [edi*8+16]
	mov	ecx, eax
	sar	ecx, 1
	add	ecx, eax
	mov	DWORD PTR _missile[esi+124], ecx
; Line 3152
	jmp	SHORT $L87349
$L87348:
; Line 3153
	imul	eax, 228				; 000000e4H
	mov	cl, 77					; 0000004dH
	movzx	edx, BYTE PTR _monster[eax+198]
	lea	edi, DWORD PTR _monster[eax+197]
	movzx	eax, BYTE PTR [edi]
	sub	edx, eax
	inc	edx
	call	@random@8
	movzx	ecx, BYTE PTR [edi]
	add	eax, ecx
	mov	DWORD PTR _missile[esi+124], eax
$L87349:
	pop	edi
	pop	esi
; Line 3155
	pop	ebp
	ret	28					; 0000001cH
@AddFlame@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddFlamec@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
@AddFlamec@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3158
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	mov	esi, edx
; Line 3159
	mov	edx, DWORD PTR _dx$[ebp]
	push	edi
	mov	edi, DWORD PTR _sy$[ebp]
	mov	ebx, ecx
	mov	ecx, DWORD PTR _dy$[ebp]
	cmp	esi, edx
	jne	SHORT $L87369
	cmp	edi, ecx
	jne	SHORT $L87369
; Line 3160
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	edx, DWORD PTR _XDirAdd[eax]
; Line 3161
	add	ecx, DWORD PTR _YDirAdd[eax]
$L87369:
; Line 3163
	push	32					; 00000020H
	push	ecx
	push	edx
	push	edi
	mov	edx, esi
	mov	ecx, ebx
	call	@GetMissileVel@24
; Line 3164
	cmp	BYTE PTR _mienemy$[ebp], 0
	jne	SHORT $L87371
; Line 3165
	mov	ecx, DWORD PTR _id$[ebp]
	push	20					; 00000014H
	pop	edx
	call	@UseMana@8
$L87371:
; Line 3166
	mov	eax, ebx
	imul	eax, 176				; 000000b0H
	and	DWORD PTR _missile[eax+152], 0
; Line 3167
	mov	DWORD PTR _missile[eax+148], edi
; Line 3168
	mov	DWORD PTR _missile[eax+144], esi
	pop	edi
	pop	esi
; Line 3169
	mov	DWORD PTR _missile[eax+112], 256	; 00000100H
	pop	ebx
; Line 3170
	pop	ebp
	ret	28					; 0000001cH
@AddFlamec@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddCbolt@36
_TEXT	SEGMENT
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_micaster$ = 24
_id$ = 28
_mi$ = -8
_sx$ = -4
@AddCbolt@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3173
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
; Line 3186
	push	15					; 0000000fH
	mov	DWORD PTR _sx$[ebp], edx
	mov	esi, ecx
	mov	cl, 63					; 0000003fH
	pop	edx
	mov	DWORD PTR _mi$[ebp], esi
	call	@random@8
; Line 3187
	imul	esi, 176				; 000000b0H
	cmp	BYTE PTR _micaster$[ebp], 0
	je	SHORT $L87399
; Line 3188
	inc	eax
	mov	DWORD PTR _missile[esi+124], 15		; 0000000fH
	mov	DWORD PTR _missile[esi+140], eax
; Line 3189
	jmp	SHORT $L87400
$L87399:
; Line 3191
	mov	ecx, DWORD PTR _id$[ebp]
	imul	ecx, 21720				; 000054d8H
; Line 3192
	inc	eax
	mov	edx, DWORD PTR _plr[ecx+364]
; Line 3193
	mov	cl, 68					; 00000044H
	sar	edx, 2
	mov	DWORD PTR _missile[esi+140], eax
	call	@random@8
	inc	eax
	mov	DWORD PTR _missile[esi+124], eax
$L87400:
; Line 3196
	mov	ecx, DWORD PTR _dx$[ebp]
	mov	ebx, DWORD PTR _midir$[ebp]
	cmp	DWORD PTR _sx$[ebp], ecx
	jne	SHORT $L87401
	mov	eax, DWORD PTR _dy$[ebp]
	cmp	DWORD PTR _sy$[ebp], eax
	jne	SHORT $L87401
; Line 3198
	add	ecx, DWORD PTR _XDirAdd[ebx*4]
; Line 3199
	add	eax, DWORD PTR _YDirAdd[ebx*4]
	mov	DWORD PTR _dx$[ebp], ecx
	mov	DWORD PTR _dy$[ebp], eax
$L87401:
; Line 3201
	push	8
	mov	cl, 63					; 0000003fH
	pop	edx
	call	@random@8
; Line 3202
	mov	edx, DWORD PTR _sy$[ebp]
	mov	ecx, DWORD PTR _sx$[ebp]
	inc	eax
	push	5
	mov	DWORD PTR _missile[esi+92], eax
	call	@AddLight@12
; Line 3203
	mov	edx, DWORD PTR _sx$[ebp]
	mov	ecx, DWORD PTR _mi$[ebp]
	push	8
	mov	DWORD PTR _missile[esi+136], eax
	push	DWORD PTR _dy$[ebp]
	push	DWORD PTR _dx$[ebp]
	push	DWORD PTR _sy$[ebp]
	call	@GetMissileVel@24
; Line 3204
	and	DWORD PTR _missile[esi+152], 0
; Line 3205
	mov	DWORD PTR _missile[esi+144], 5
; Line 3206
	mov	DWORD PTR _missile[esi+148], ebx
; Line 3207
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	pop	esi
	pop	ebx
; Line 3208
	leave
	ret	28					; 0000001cH
@AddCbolt@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddHbolt@36
_TEXT	SEGMENT
_mi$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_id$ = 28
@AddHbolt@36 PROC NEAR					; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3211
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
; Line 3214
	mov	ebx, DWORD PTR _sy$[ebp]
	push	esi
	mov	esi, DWORD PTR _dy$[ebp]
	push	edi
	mov	DWORD PTR _mi$[ebp], ecx
	mov	ecx, DWORD PTR _dx$[ebp]
	mov	edi, edx
	cmp	edi, ecx
	jne	SHORT $L87422
	cmp	ebx, esi
	jne	SHORT $L87422
; Line 3215
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	ecx, DWORD PTR _XDirAdd[eax]
; Line 3216
	add	esi, DWORD PTR _YDirAdd[eax]
	mov	DWORD PTR _dx$[ebp], ecx
$L87422:
; Line 3218
	cmp	DWORD PTR _id$[ebp], -1
	je	SHORT $L87423
; Line 3219
	mov	eax, DWORD PTR _mi$[ebp]
	imul	eax, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[eax+48]
	lea	eax, DWORD PTR [eax+eax+16]
; Line 3220
	cmp	eax, 63					; 0000003fH
	jl	SHORT $L87425
; Line 3221
	push	63					; 0000003fH
; Line 3223
	jmp	SHORT $L89264
$L87423:
; Line 3224
	push	16					; 00000010H
$L89264:
	pop	eax
$L87425:
; Line 3226
	push	eax
	push	esi
	push	ecx
	mov	ecx, DWORD PTR _mi$[ebp]
	push	ebx
	mov	edx, edi
	call	@GetMissileVel@24
; Line 3227
	mov	edx, ebx
	mov	ecx, edi
	push	esi
	push	DWORD PTR _dx$[ebp]
	call	@GetDirection16@16
	mov	esi, DWORD PTR _mi$[ebp]
	mov	edx, eax
	mov	ecx, esi
	call	@SetMissDir@8
; Line 3228
	imul	esi, 176				; 000000b0H
; Line 3231
	push	8
	mov	edx, ebx
	mov	ecx, edi
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], edi
	mov	DWORD PTR _missile[esi+148], ebx
	call	@AddLight@12
; Line 3232
	mov	cl, 69					; 00000045H
	mov	DWORD PTR _missile[esi+136], eax
	push	10					; 0000000aH
	pop	edx
	call	@random@8
	mov	ecx, DWORD PTR _id$[ebp]
	mov	edx, ecx
; Line 3233
	push	31					; 0000001fH
	imul	edx, 21720				; 000054d8H
	movsx	edx, BYTE PTR _plr[edx+440]
	lea	eax, DWORD PTR [eax+edx+9]
	pop	edx
	mov	DWORD PTR _missile[esi+124], eax
	call	@UseMana@8
	pop	edi
	pop	esi
	pop	ebx
; Line 3234
	leave
	ret	28					; 0000001cH
@AddHbolt@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddResurrect@36
_TEXT	SEGMENT
_id$ = 28
@AddResurrect@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3237
	push	esi
	push	edi
; Line 3238
	mov	edi, DWORD PTR _id$[esp+4]
	push	32					; 00000020H
	mov	esi, ecx
	pop	edx
	mov	ecx, edi
	call	@UseMana@8
; Line 3239
	cmp	edi, DWORD PTR _myplr
	jne	SHORT $L87445
; Line 3240
	push	8
	pop	ecx
	call	@SetCursor_@4
$L87445:
; Line 3241
	imul	esi, 176				; 000000b0H
	pop	edi
	mov	DWORD PTR _missile[esi+52], 1
	pop	esi
; Line 3242
	ret	28					; 0000001cH
@AddResurrect@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddResurrectBeam@36
_TEXT	SEGMENT
_dx$ = 12
_dy$ = 16
@AddResurrectBeam@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3246
	imul	ecx, 176				; 000000b0H
	mov	eax, DWORD PTR _dx$[esp-4]
; Line 3247
	mov	edx, DWORD PTR _dy$[esp-4]
; Line 3250
	and	DWORD PTR _missile[ecx+20], 0
; Line 3251
	and	DWORD PTR _missile[ecx+24], 0
	mov	DWORD PTR _missile[ecx+4], eax
	mov	DWORD PTR _missile[ecx+28], eax
; Line 3252
	movzx	eax, BYTE PTR _misfiledata+8588
	mov	DWORD PTR _missile[ecx+8], edx
	mov	DWORD PTR _missile[ecx+32], edx
	mov	DWORD PTR _missile[ecx+112], eax
; Line 3253
	ret	28					; 0000001cH
@AddResurrectBeam@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddTelekinesis@36
_TEXT	SEGMENT
_id$ = 28
@AddTelekinesis@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3257
	imul	ecx, 176				; 000000b0H
	push	esi
; Line 3258
	mov	esi, DWORD PTR _id$[esp]
	push	33					; 00000021H
	mov	DWORD PTR _missile[ecx+52], 1
	pop	edx
	mov	ecx, esi
	call	@UseMana@8
; Line 3259
	cmp	esi, DWORD PTR _myplr
	pop	esi
	jne	SHORT $L87484
; Line 3260
	push	7
	pop	ecx
	call	@SetCursor_@4
$L87484:
; Line 3261
	ret	28					; 0000001cH
@AddTelekinesis@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddBoneSpirit@36
_TEXT	SEGMENT
_mi$ = -8
_sx$ = -4
_sy$ = 8
_dx$ = 12
_dy$ = 16
_midir$ = 20
_mienemy$ = 24
_id$ = 28
@AddBoneSpirit@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3264
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
; Line 3265
	mov	ebx, DWORD PTR _dx$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _dy$[ebp]
	cmp	edx, ebx
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _mi$[ebp], ecx
	jne	SHORT $L87504
	cmp	DWORD PTR _sy$[ebp], edi
	jne	SHORT $L87504
; Line 3266
	mov	eax, DWORD PTR _midir$[ebp]
	shl	eax, 2
	add	ebx, DWORD PTR _XDirAdd[eax]
; Line 3267
	add	edi, DWORD PTR _YDirAdd[eax]
$L87504:
; Line 3269
	mov	esi, ecx
; Line 3270
	push	16					; 00000010H
	imul	esi, 176				; 000000b0H
	push	edi
	push	ebx
	push	DWORD PTR _sy$[ebp]
	and	DWORD PTR _missile[esi+124], 0
	call	@GetMissileVel@24
; Line 3271
	mov	edx, DWORD PTR _sy$[ebp]
	mov	ecx, DWORD PTR _sx$[ebp]
	push	edi
	push	ebx
	call	@GetDirection8@16
	mov	ecx, DWORD PTR _mi$[ebp]
	mov	edx, eax
	call	@SetMissDir@8
; Line 3273
	mov	ecx, DWORD PTR _sx$[ebp]
; Line 3274
	mov	edx, DWORD PTR _sy$[ebp]
; Line 3275
	and	DWORD PTR _missile[esi+152], 0
; Line 3278
	push	8
	mov	DWORD PTR _missile[esi+112], 256	; 00000100H
	mov	DWORD PTR _missile[esi+144], ecx
	mov	DWORD PTR _missile[esi+148], edx
	mov	DWORD PTR _missile[esi+156], ebx
	mov	DWORD PTR _missile[esi+160], edi
	call	@AddLight@12
; Line 3279
	cmp	BYTE PTR _mienemy$[ebp], 0
	mov	DWORD PTR _missile[esi+136], eax
	pop	edi
	pop	esi
	pop	ebx
	jne	SHORT $L87507
; Line 3280
	mov	ecx, DWORD PTR _id$[ebp]
	push	36					; 00000024H
	pop	edx
	call	@UseMana@8
; Line 3282
	mov	eax, DWORD PTR _id$[ebp]
	mov	edx, -384				; fffffe80H
	imul	eax, 21720				; 000054d8H
	mov	DWORD PTR _drawhpflag, 1
; Line 3283
	add	DWORD PTR _plr[eax+400], edx
	lea	ecx, DWORD PTR _plr[eax+408]
	add	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [ecx]
; Line 3284
	test	ecx, ecx
	jg	SHORT $L87507
; Line 3285
	mov	ecx, DWORD PTR _id$[ebp]
	xor	edx, edx
	call	@SyncPlrKill@8
$L87507:
; Line 3287
	leave
	ret	28					; 0000001cH
@AddBoneSpirit@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddRportal@36
_TEXT	SEGMENT
_sy$ = 8
@AddRportal@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3295
	mov	eax, ecx
	push	esi
	imul	eax, 176				; 000000b0H
; Line 3300
	mov	esi, DWORD PTR _sy$[esp]
	push	100					; 00000064H
	and	DWORD PTR _missile[eax+148], 0
	mov	DWORD PTR _missile[eax+4], edx
	mov	DWORD PTR _missile[eax+28], edx
	pop	edx
	mov	DWORD PTR _missile[eax+112], edx
	sub	edx, DWORD PTR _missile[eax+72]
	mov	DWORD PTR _missile[eax+8], esi
; Line 3301
	mov	DWORD PTR _missile[eax+32], esi
; Line 3302
	mov	DWORD PTR _missile[eax+144], edx
; Line 3303
	call	@PutMissile@4
	pop	esi
; Line 3304
	ret	28					; 0000001cH
@AddRportal@36 ENDP
_TEXT	ENDS
PUBLIC	@AddMissile@40
EXTRN	_gbMaxPlayers:BYTE
; Function compile flags: /Ogsy
;	COMDAT @AddDiabApoca@36
_TEXT	SEGMENT
_mi$ = -4
_sx$ = -8
_sy$ = 8
_mienemy$ = 24
_id$ = 28
_dam$ = 32
@AddDiabApoca@36 PROC NEAR				; COMDAT
; _mi$ = ecx
; _sx$ = edx
; Line 3307
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	edi
; Line 3310
	xor	edi, edi
	cmp	BYTE PTR _gbMaxPlayers, 0
	mov	DWORD PTR _sx$[ebp], edx
	mov	DWORD PTR _mi$[ebp], ecx
	jbe	SHORT $L87551
	push	esi
	mov	esi, OFFSET FLAT:_plr+68
$L87549:
; Line 3311
	cmp	BYTE PTR [esi-39], 0
	je	SHORT $L87550
; Line 3312
	push	DWORD PTR [esi]
	mov	edx, DWORD PTR _sy$[ebp]
	mov	ecx, DWORD PTR _sx$[ebp]
	push	DWORD PTR [esi-4]
	call	@LineClear@16
	test	eax, eax
	je	SHORT $L89284
; Line 3313
	push	0
	xor	edx, edx
	push	DWORD PTR _dam$[ebp]
	xor	ecx, ecx
	push	DWORD PTR _id$[ebp]
	push	DWORD PTR _mienemy$[ebp]
	push	66					; 00000042H
	push	0
	push	DWORD PTR [esi]
	push	DWORD PTR [esi-4]
	call	@AddMissile@40
$L89284:
	mov	ecx, DWORD PTR _mi$[ebp]
$L87550:
; Line 3310
	movzx	eax, BYTE PTR _gbMaxPlayers
	inc	edi
	add	esi, 21720				; 000054d8H
	cmp	edi, eax
	jl	SHORT $L87549
	pop	esi
$L87551:
; Line 3317
	imul	ecx, 176				; 000000b0H
	pop	edi
	mov	DWORD PTR _missile[ecx+52], 1
; Line 3318
	leave
	ret	28					; 0000001cH
@AddDiabApoca@36 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @AddMissile@40
_TEXT	SEGMENT
_sx$ = -4
_sy$ = -8
_dx$ = 8
_dy$ = 12
_midir$ = 16
_mitype$ = 20
_micaster$ = 24
_id$ = 28
_midam$ = 32
_spllvl$ = 36
@AddMissile@40 PROC NEAR				; COMDAT
; _sx$ = ecx
; _sy$ = edx
; Line 3322
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 3325
	mov	eax, DWORD PTR _nummissiles
	push	esi
	cmp	eax, 125				; 0000007dH
	push	edi
	mov	DWORD PTR _sy$[ebp], edx
	mov	DWORD PTR _sx$[ebp], ecx
; Line 3326
	jge	$L89289
; Line 3328
	mov	edi, DWORD PTR _mitype$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	cmp	edi, 13					; 0000000dH
	jne	SHORT $L87582
	mov	ecx, edx
	imul	ecx, 21720				; 000054d8H
	cmp	BYTE PTR _plr[ecx+21628], 0
	je	SHORT $L87582
; Line 3329
	movzx	esi, BYTE PTR _currlevel
	cmp	esi, DWORD PTR _plr[ecx+52]
; Line 3330
	jne	$L89289
; Line 3332
	xor	esi, esi
	test	eax, eax
	jle	SHORT $L87582
$L87580:
; Line 3333
	mov	ecx, DWORD PTR _missileactive[esi*4]
; Line 3334
	imul	ecx, 176				; 000000b0H
	cmp	DWORD PTR _missile[ecx], 13		; 0000000dH
	jne	SHORT $L87581
	cmp	DWORD PTR _missile[ecx+116], edx
	je	$L89289
$L87581:
; Line 3332
	inc	esi
	cmp	esi, eax
	jl	SHORT $L87580
$L87582:
; Line 3341
	mov	ecx, eax
	mov	esi, OFFSET FLAT:_missileavail+496
	shl	ecx, 2
	sub	esi, ecx
	push	ebx
	mov	ebx, DWORD PTR _missileavail
; Line 3343
	inc	eax
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR _nummissiles, eax
	mov	DWORD PTR _missileavail, esi
; Line 3345
	mov	esi, ebx
	imul	esi, 176				; 000000b0H
; Line 3346
	movsx	eax, BYTE PTR _micaster$[ebp]
	mov	DWORD PTR _missile[esi], edi
; Line 3348
	imul	edi, 28					; 0000001cH
	mov	DWORD PTR _missileactive[ecx], ebx
; Line 3349
	mov	ecx, DWORD PTR _missiledata[edi+12]
	mov	DWORD PTR _missile[esi+120], eax
	mov	al, BYTE PTR _missiledata[edi+18]
	mov	DWORD PTR _missile[esi+116], edx
; Line 3350
	mov	edx, DWORD PTR _midir$[ebp]
	mov	DWORD PTR _missile[esi+96], ecx
; Line 3351
	mov	ecx, DWORD PTR _spllvl$[ebp]
; Line 3353
	cmp	al, 255					; 000000ffH
	mov	BYTE PTR _missile[esi+56], al
	mov	DWORD PTR _missile[esi+44], edx
	mov	DWORD PTR _missile[esi+48], ecx
	je	SHORT $L87586
	movzx	eax, al
	imul	eax, 236				; 000000ecH
	cmp	BYTE PTR _misfiledata[eax+1], 8
; Line 3356
	jae	SHORT $L89293
$L87586:
; Line 3354
	xor	edx, edx
$L89293:
	mov	ecx, ebx
	call	@SetMissDir@8
; Line 3358
	mov	edx, DWORD PTR _sx$[ebp]
; Line 3359
	mov	ecx, DWORD PTR _sy$[ebp]
; Line 3374
	or	DWORD PTR _missile[esi+136], -1
	xor	eax, eax
	mov	DWORD PTR _missile[esi+12], eax
	mov	DWORD PTR _missile[esi+16], eax
	mov	DWORD PTR _missile[esi+36], eax
	mov	DWORD PTR _missile[esi+40], eax
	mov	DWORD PTR _missile[esi+52], eax
	mov	DWORD PTR _missile[esi+100], eax
	mov	DWORD PTR _missile[esi+104], eax
	mov	DWORD PTR _missile[esi+108], eax
	mov	DWORD PTR _missile[esi+128], eax
	mov	DWORD PTR _missile[esi+132], eax
; Line 3375
	mov	DWORD PTR _missile[esi+140], eax
; Line 3377
	mov	eax, DWORD PTR _missiledata[edi+20]
	mov	DWORD PTR _missile[esi+4], edx
	mov	DWORD PTR _missile[esi+28], edx
	mov	edx, DWORD PTR _midam$[ebp]
	cmp	eax, -1
	mov	DWORD PTR _missile[esi+8], ecx
	mov	DWORD PTR _missile[esi+32], ecx
	mov	DWORD PTR _missile[esi+88], 1
	mov	DWORD PTR _missile[esi+124], edx
	je	SHORT $L87588
; Line 3378
	mov	edx, DWORD PTR _sx$[ebp]
	push	ecx
	mov	ecx, eax
	call	@PlaySfxLoc@12
	mov	ecx, DWORD PTR _sy$[ebp]
$L87588:
; Line 3381
	push	DWORD PTR _midam$[ebp]
	mov	edx, DWORD PTR _sx$[ebp]
	push	DWORD PTR _id$[ebp]
	push	DWORD PTR _micaster$[ebp]
	push	DWORD PTR _midir$[ebp]
	push	DWORD PTR _dy$[ebp]
	push	DWORD PTR _dx$[ebp]
	push	ecx
	mov	ecx, ebx
	call	DWORD PTR _missiledata[edi+4]
; Line 3383
	mov	eax, ebx
	pop	ebx
$L87574:
	pop	edi
	pop	esi
; Line 3384
	leave
	ret	32					; 00000020H
$L89289:
; Line 3335
	or	eax, -1
	jmp	SHORT $L87574
@AddMissile@40 ENDP
_TEXT	ENDS
PUBLIC	@Sentfire@12
; Function compile flags: /Ogsy
;	COMDAT @Sentfire@12
_TEXT	SEGMENT
_i$ = -8
_sy$ = 8
_v8$ = -4
@Sentfire@12 PROC NEAR					; COMDAT
; _i$ = ecx
; _sx$ = edx
; Line 3387
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _i$[ebp], esi
; Line 3406
	imul	esi, 176				; 000000b0H
	push	DWORD PTR _sy$[ebp]
	mov	ecx, DWORD PTR _missile[esi+4]
	mov	ebx, edx
	mov	edx, DWORD PTR _missile[esi+8]
	push	ebx
	xor	edi, edi
	call	@LineClear@16
	test	eax, eax
	je	$L87607
; Line 3407
	mov	eax, ebx
	imul	eax, 112				; 00000070H
	add	eax, DWORD PTR _sy$[ebp]
	mov	eax, DWORD PTR _dMonster[eax*4]
; Line 3408
	test	eax, eax
	jle	$L87607
	mov	ecx, eax
	imul	ecx, 228				; 000000e4H
	test	DWORD PTR _monster[ecx-80], -64		; ffffffc0H
	jle	SHORT $L87607
	dec	eax
	cmp	eax, 3
	jle	SHORT $L87607
; Line 3410
	push	DWORD PTR _sy$[ebp]
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	ebx
	call	@GetDirection@16
; Line 3413
	mov	edi, DWORD PTR _missile[esi+116]
	mov	DWORD PTR _v8$[ebp], eax
; Line 3414
	mov	eax, DWORD PTR _missileavail
; Line 3415
	xor	edx, edx
	inc	edx
	mov	ecx, edi
	mov	DWORD PTR _missile[esi+152], eax
	call	@GetSpellLevel@8
; Line 3416
	mov	ecx, DWORD PTR _missile[esi+4]
	push	eax
	push	DWORD PTR _missile[esi+124]
	push	edi
	push	0
	push	edx
	mov	edx, DWORD PTR _missile[esi+8]
	push	DWORD PTR _v8$[ebp]
	push	DWORD PTR _sy$[ebp]
	push	ebx
	call	@AddMissile@40
; Line 3418
	mov	ecx, DWORD PTR _i$[ebp]
	or	edi, -1
	push	2
	pop	edx
	call	@SetMissDir@8
; Line 3419
	mov	DWORD PTR _missile[esi+148], 3
$L87607:
; Line 3422
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 3423
	leave
	ret	4
@Sentfire@12 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Dummy@4
_TEXT	SEGMENT
@MI_Dummy@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3428
	ret	0
@MI_Dummy@4 ENDP
_TEXT	ENDS
EXTRN	@SpawnGolum@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MI_Golem@4
_TEXT	SEGMENT
_i$ = -20
_v2$ = -32
_v7$ = -12
_v8$ = -28
_v9$ = -24
_CrawlNum$ = -56
_v17$ = -16
_v20$ = -8
_v21$ = -4
@MI_Golem@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3431
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _i$[ebp], edi
; Line 3455
	imul	edi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[edi+116]
; Line 3459
	xor	ecx, ecx
	mov	DWORD PTR _v2$[ebp], eax
	imul	eax, 228				; 000000e4H
	cmp	DWORD PTR _monster[eax+32], 1
	mov	DWORD PTR _CrawlNum$[ebp], ecx
; Line 3460
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
; Line 3461
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
; Line 3462
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
; Line 3463
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
; Line 3464
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
; Line 3465
	jne	$LABEL_17$87636
	cmp	DWORD PTR _monster[eax+36], ecx
	jne	$LABEL_17$87636
	push	ebx
	push	esi
; Line 3467
	mov	DWORD PTR _v21$[ebp], ecx
$L87637:
; Line 3469
	mov	eax, DWORD PTR _v21$[ebp]
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax*4]
; Line 3471
	mov	cl, BYTE PTR _CrawlTable[eax]
	movzx	edx, cl
; Line 3472
	test	cl, cl
	mov	DWORD PTR _v20$[ebp], edx
	jbe	$LABEL_16$87643
; Line 3474
	lea	ecx, DWORD PTR _CrawlTable[eax+2]
	mov	DWORD PTR _v7$[ebp], ecx
$L87645:
; Line 3477
	movsx	eax, BYTE PTR [ecx-1]
; Line 3478
	movsx	edx, BYTE PTR [ecx]
	add	eax, DWORD PTR _missile[edi+156]
	add	edx, DWORD PTR _missile[edi+160]
; Line 3479
	test	eax, eax
	mov	DWORD PTR _v8$[ebp], eax
	mov	DWORD PTR _v9$[ebp], edx
	jle	SHORT $LABEL_13$87651
	cmp	eax, 112				; 00000070H
	jge	SHORT $LABEL_13$87651
	test	edx, edx
	jle	SHORT $LABEL_13$87651
	cmp	edx, 112				; 00000070H
	jge	SHORT $LABEL_13$87651
; Line 3483
	mov	esi, eax
; Line 3486
	push	edx
	imul	esi, 112				; 00000070H
	add	esi, edx
	mov	edx, DWORD PTR _missile[edi+148]
	mov	ebx, esi
	push	eax
	shl	ebx, 2
	mov	ecx, DWORD PTR _dPiece[ebx]
	mov	DWORD PTR _v17$[ebp], ecx
	mov	ecx, DWORD PTR _missile[edi+144]
	call	@LineClear@16
	test	eax, eax
	je	SHORT $L89305
; Line 3487
	mov	eax, DWORD PTR _v17$[ebp]
	shr	ebx, 2
	movzx	eax, BYTE PTR _nSolidTable[eax]
; Line 3504
	mov	ecx, DWORD PTR _dMonster[ebx*4]
	or	ecx, eax
	movsx	eax, BYTE PTR _dObject[esi]
	or	ecx, eax
	je	SHORT $L87646
$L89305:
; Line 3487
	mov	ecx, DWORD PTR _v7$[ebp]
$LABEL_13$87651:
; Line 3492
	inc	ecx
	inc	ecx
; Line 3493
	dec	DWORD PTR _v20$[ebp]
; Line 3495
	cmp	DWORD PTR _v20$[ebp], 0
	mov	DWORD PTR _v7$[ebp], ecx
	jg	$L87645
; Line 3476
	jmp	SHORT $LABEL_16$87643
$L87646:
; Line 3499
	push	DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _v8$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]
	mov	DWORD PTR _v21$[ebp], 6
	push	DWORD PTR _v9$[ebp]
	call	@SpawnGolum@16
$LABEL_16$87643:
; Line 3501
	inc	DWORD PTR _v21$[ebp]
; Line 3502
	cmp	DWORD PTR _v21$[ebp], 6
	jl	$L87637
	pop	esi
	pop	ebx
$LABEL_17$87636:
; Line 3504
	mov	DWORD PTR _missile[edi+52], 1
	pop	edi
; Line 3505
	leave
	ret	0
@MI_Golem@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_SetManashield@4
_TEXT	SEGMENT
@MI_SetManashield@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 3509
	mov	DWORD PTR _ManashieldFlag, 1
; Line 3510
	ret	0
@MI_SetManashield@4 ENDP
_TEXT	ENDS
EXTRN	@AddUnLight@4:NEAR
EXTRN	@ChangeLight@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MI_LArrow@4
_TEXT	SEGMENT
_i$ = -8
_v32$ = -1
@MI_LArrow@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3513
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
; Line 3547
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _i$[ebp], ecx
	mov	al, BYTE PTR _missile[esi+56]
; Line 3548
	dec	DWORD PTR _missile[esi+112]
; Line 3549
	mov	ebx, DWORD PTR _missile[esi+116]
; Line 3550
	cmp	al, 26					; 0000001aH
	je	$L87692
	cmp	al, 5
	je	$L87692
; Line 3586
	mov	eax, DWORD PTR _missile[esi+20]
	inc	DWORD PTR _missile[esi+132]
	add	DWORD PTR _missile[esi+36], eax
; Line 3587
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
; Line 3588
	call	@GetMissilePos@4
; Line 3589
	cmp	ebx, -1
	jne	SHORT $L87700
; Line 3590
	push	10					; 0000000aH
	mov	cl, 68					; 00000044H
	pop	edx
	call	@random@8
; Line 3592
	movzx	ecx, BYTE PTR _currlevel
; Line 3593
	push	10					; 0000000aH
	lea	edi, DWORD PTR [ecx+eax+1]
	pop	edx
	mov	cl, 68					; 00000044H
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	lea	ecx, DWORD PTR [eax+ecx*2+1]
; Line 3594
	jmp	SHORT $L87705
$L87700:
	cmp	DWORD PTR _missile[esi+120], 0
; Line 3595
	mov	eax, ebx
	je	SHORT $L87702
	imul	eax, 228				; 000000e4H
	movzx	edi, BYTE PTR _monster[eax+197]
; Line 3596
	movzx	ecx, BYTE PTR _monster[eax+198]
; Line 3597
	jmp	SHORT $L87705
$L87702:
; Line 3598
	imul	eax, 21720				; 000054d8H
	mov	edi, DWORD PTR _plr[eax+21544]
; Line 3599
	mov	ecx, DWORD PTR _plr[eax+21548]
$L87705:
; Line 3601
	mov	edx, DWORD PTR _missile[esi+4]
; Line 3602
	cmp	edx, DWORD PTR _missile[esi+28]
	jne	SHORT $L87707
	mov	eax, DWORD PTR _missile[esi+8]
	cmp	eax, DWORD PTR _missile[esi+32]
	je	SHORT $L87706
$L87707:
; Line 3604
	mov	eax, DWORD PTR _missile[esi]
; Line 3607
	push	0
	imul	eax, 28					; 0000001cH
	push	DWORD PTR _missile[esi+8]
	add	eax, OFFSET FLAT:_missiledata+17
	mov	bl, BYTE PTR [eax]
	and	BYTE PTR [eax], 0
	push	edx
	push	0
	push	ecx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, edi
	call	@CheckMissileCol@28
; Line 3608
	mov	eax, DWORD PTR _missile[esi]
	imul	eax, 28					; 0000001cH
	mov	BYTE PTR _missiledata[eax+17], bl
$L87706:
; Line 3610
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L87708
; Line 3611
	mov	edx, DWORD PTR _missile[esi+4]
; Line 3612
	lea	eax, DWORD PTR _missile[esi+144]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $L87710
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+148]
	je	$L87711
$L87710:
; Line 3617
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _missile[esi+8]
	push	5
	push	eax
	mov	DWORD PTR _missile[esi+148], eax
	call	@ChangeLight@16
; Line 3619
	jmp	$L87711
$L87708:
; Line 3620
	mov	eax, DWORD PTR _missile[esi+20]
; Line 3624
	mov	ecx, DWORD PTR _i$[ebp]
	sub	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	and	DWORD PTR _missile[esi+44], 0
	sub	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 3625
	cmp	DWORD PTR _missile[esi], 56		; 00000038H
; Line 3626
	mov	ecx, DWORD PTR _i$[ebp]
	jne	SHORT $L87712
	push	26					; 0000001aH
; Line 3627
	jmp	SHORT $L89316
$L87712:
; Line 3628
	push	5
$L89316:
	pop	edx
	call	@SetMissAnim@8
; Line 3629
	mov	eax, DWORD PTR _missile[esi+72]
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
	jmp	$L87711
$L87692:
; Line 3551
	mov	eax, DWORD PTR _missile[esi+92]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	add	eax, 5
	push	eax
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 3553
	mov	eax, DWORD PTR _missile[esi]
	mov	ecx, eax
	imul	ecx, 28					; 0000001cH
; Line 3554
	cmp	eax, 56					; 00000038H
	mov	cl, BYTE PTR _missiledata[ecx+17]
	mov	BYTE PTR _v32$[ebp], cl
	jne	SHORT $L87693
; Line 3555
	cmp	ebx, -1
	jne	SHORT $L87694
; Line 3556
	push	10					; 0000000aH
	mov	cl, 68					; 00000044H
	pop	edx
	call	@random@8
; Line 3558
	movzx	ecx, BYTE PTR _currlevel
; Line 3559
	push	10					; 0000000aH
	lea	edi, DWORD PTR [ecx+eax+1]
	pop	edx
	mov	cl, 68					; 00000044H
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	lea	eax, DWORD PTR [eax+ecx*2+1]
; Line 3560
	jmp	SHORT $L87695
$L87694:
; Line 3561
	mov	eax, ebx
	imul	eax, 21720				; 000054d8H
	mov	edi, DWORD PTR _plr[eax+21612]
; Line 3562
	mov	eax, DWORD PTR _plr[eax+21616]
$L87695:
; Line 3566
	push	1
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _missile[esi+8]
	mov	edx, edi
	mov	BYTE PTR _missiledata+1585, 2
	push	DWORD PTR _missile[esi+4]
	push	0
	push	eax
	call	@CheckMissileCol@28
$L87693:
; Line 3568
	cmp	DWORD PTR _missile[esi], 27		; 0000001bH
	jne	SHORT $L87696
; Line 3569
	cmp	ebx, -1
	jne	SHORT $L87697
; Line 3570
	push	10					; 0000000aH
	mov	cl, 68					; 00000044H
	pop	edx
	call	@random@8
; Line 3572
	movzx	ecx, BYTE PTR _currlevel
; Line 3573
	push	10					; 0000000aH
	lea	edi, DWORD PTR [ecx+eax+1]
	pop	edx
	mov	cl, 68					; 00000044H
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	lea	eax, DWORD PTR [eax+ecx*2+1]
; Line 3574
	jmp	SHORT $L87698
$L87697:
; Line 3575
	mov	eax, ebx
	imul	eax, 21720				; 000054d8H
	mov	edi, DWORD PTR _plr[eax+21604]
; Line 3576
	mov	eax, DWORD PTR _plr[eax+21608]
$L87698:
; Line 3580
	push	1
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _missile[esi+8]
	mov	edx, edi
	mov	BYTE PTR _missiledata+773, 1
	push	DWORD PTR _missile[esi+4]
	push	0
	push	eax
	call	@CheckMissileCol@28
$L87696:
; Line 3582
	mov	eax, DWORD PTR _missile[esi]
	mov	cl, BYTE PTR _v32$[ebp]
	imul	eax, 28					; 0000001cH
	mov	BYTE PTR _missiledata[eax+17], cl
$L87711:
; Line 3632
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87714
; Line 3635
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
$L87714:
; Line 3637
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 3638
	leave
	ret	0
@MI_LArrow@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Arrow@4
_TEXT	SEGMENT
@MI_Arrow@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3641
	push	esi
	push	edi
	mov	edi, ecx
; Line 3655
	mov	esi, edi
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+20]
; Line 3656
	dec	DWORD PTR _missile[esi+112]
; Line 3657
	add	DWORD PTR _missile[esi+36], eax
; Line 3658
	mov	eax, DWORD PTR _missile[esi+24]
; Line 3659
	inc	DWORD PTR _missile[esi+132]
; Line 3660
	add	DWORD PTR _missile[esi+40], eax
; Line 3661
	call	@GetMissilePos@4
; Line 3662
	mov	eax, DWORD PTR _missile[esi+116]
; Line 3663
	cmp	eax, -1
	jne	SHORT $L87728
; Line 3664
	movzx	edx, BYTE PTR _currlevel
; Line 3665
	lea	eax, DWORD PTR [edx+edx]
; Line 3666
	jmp	SHORT $L87733
$L87728:
	cmp	DWORD PTR _missile[esi+120], 0
	je	SHORT $L87730
; Line 3668
	imul	eax, 228				; 000000e4H
	movzx	edx, BYTE PTR _monster[eax+197]
; Line 3669
	movzx	eax, BYTE PTR _monster[eax+198]
; Line 3670
	jmp	SHORT $L87733
$L87730:
; Line 3672
	imul	eax, 21720				; 000054d8H
	mov	edx, DWORD PTR _plr[eax+21544]
; Line 3673
	mov	eax, DWORD PTR _plr[eax+21548]
$L87733:
; Line 3675
	mov	ecx, DWORD PTR _missile[esi+4]
; Line 3676
	cmp	ecx, DWORD PTR _missile[esi+28]
	jne	SHORT $L87735
	push	ebx
	mov	ebx, DWORD PTR _missile[esi+8]
	cmp	ebx, DWORD PTR _missile[esi+32]
	pop	ebx
	je	SHORT $L87734
$L87735:
; Line 3677
	push	0
	push	DWORD PTR _missile[esi+8]
	push	ecx
	push	0
	push	eax
	mov	ecx, edi
	call	@CheckMissileCol@28
$L87734:
; Line 3678
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87736
; Line 3679
	mov	DWORD PTR _missile[esi+52], 1
$L87736:
; Line 3680
	mov	ecx, edi
	pop	edi
	pop	esi
	jmp	@PutMissile@4
@MI_Arrow@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Firebolt@4
_TEXT	SEGMENT
_i$ = -4
_v6$ = -8
_v15$ = -8
_v22$ = -12
@MI_Firebolt@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 3684
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _i$[ebp], esi
; Line 3710
	imul	esi, 176				; 000000b0H
	dec	DWORD PTR _missile[esi+112]
; Line 3711
	cmp	DWORD PTR _missile[esi], 63		; 0000003fH
	jne	SHORT $L87761
	cmp	DWORD PTR _missile[esi+44], 8
	jne	SHORT $L87761
; Line 3712
	cmp	DWORD PTR _missile[esi+112], 0
	jne	$LABEL_39$87764
; Line 3713
	mov	ecx, DWORD PTR _missile[esi+136]
; Line 3714
	test	ecx, ecx
	jl	SHORT $L87763
; Line 3715
	call	@AddUnLight@4
$L87763:
; Line 3719
	push	DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	DWORD PTR _missile[esi+52], 1
	push	94					; 0000005eH
	pop	ecx
	call	@PlaySfxLoc@12
; Line 3721
	jmp	$LABEL_39$87764
$L87761:
; Line 3724
	mov	ecx, DWORD PTR _missile[esi+36]
; Line 3727
	mov	edx, DWORD PTR _missile[esi+20]
	mov	eax, DWORD PTR _missile[esi+40]
	mov	DWORD PTR _v22$[ebp], ecx
	add	edx, ecx
	mov	ecx, DWORD PTR _missile[esi+24]
	add	ecx, eax
	mov	DWORD PTR _v6$[ebp], eax
; Line 3728
	mov	DWORD PTR _missile[esi+40], ecx
; Line 3729
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _missile[esi+36], edx
	call	@GetMissilePos@4
; Line 3730
	mov	edi, DWORD PTR _missile[esi+116]
; Line 3731
	cmp	edi, -1
	jne	SHORT $L87765
; Line 3732
	movzx	edx, BYTE PTR _currlevel
	add	edx, edx
	mov	cl, 78					; 0000004eH
	call	@random@8
; Line 3733
	movzx	edx, BYTE PTR _currlevel
; Line 3734
	jmp	SHORT $LABEL_17$87766
$L87765:
; Line 3736
	xor	ebx, ebx
	cmp	DWORD PTR _missile[esi+120], ebx
	je	SHORT $L87767
; Line 3738
	imul	edi, 228				; 000000e4H
	mov	cl, 77					; 0000004dH
	movzx	edx, BYTE PTR _monster[edi+198]
	lea	ebx, DWORD PTR _monster[edi+197]
	movzx	eax, BYTE PTR [ebx]
	sub	edx, eax
	inc	edx
	call	@random@8
; Line 3739
	movzx	edx, BYTE PTR [ebx]
$LABEL_17$87766:
; Line 3741
	add	edx, eax
; Line 3742
	xor	ebx, ebx
	jmp	SHORT $LABEL_19$87771
$L87767:
; Line 3744
	mov	eax, DWORD PTR _missile[esi]
	dec	eax
	je	SHORT $L87776
	sub	eax, 23					; 00000017H
	je	SHORT $L87777
	sub	eax, 39					; 00000027H
	je	SHORT $L87778
; Line 3755
	mov	edx, DWORD PTR _v6$[ebp]
; Line 3756
	jmp	SHORT $LABEL_19$87771
$L87778:
; Line 3752
	xor	edx, edx
; Line 3753
	jmp	SHORT $LABEL_19$87771
$L87777:
; Line 3749
	imul	edi, 21720				; 000054d8H
	mov	eax, DWORD PTR _missile[esi+48]
	mov	edi, DWORD PTR _plr[edi+364]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, edi
	sar	eax, 3
	sub	edx, eax
	sar	edi, 1
	add	edx, edi
; Line 3750
	jmp	SHORT $LABEL_19$87771
$L87776:
; Line 3746
	push	10					; 0000000aH
	mov	cl, 75					; 0000004bH
	pop	edx
	call	@random@8
	imul	edi, 21720				; 000054d8H
	mov	ecx, DWORD PTR _plr[edi+364]
	sar	ecx, 3
	add	eax, ecx
	mov	ecx, DWORD PTR _missile[esi+48]
	lea	edx, DWORD PTR [eax+ecx+1]
$LABEL_19$87771:
; Line 3759
	mov	eax, DWORD PTR _missile[esi+4]
; Line 3760
	cmp	eax, DWORD PTR _missile[esi+28]
	jne	SHORT $L87780
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+32]
; Line 3762
	je	SHORT $L87781
$L87780:
; Line 3764
	mov	ecx, DWORD PTR _i$[ebp]
	push	ebx
	push	DWORD PTR _missile[esi+8]
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
$L87781:
; Line 3766
	cmp	DWORD PTR _missile[esi+112], ebx
	je	SHORT $L87782
; Line 3767
	mov	edx, DWORD PTR _missile[esi+4]
; Line 3768
	lea	eax, DWORD PTR _missile[esi+144]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $L87784
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+148]
	je	$LABEL_39$87764
$L87784:
; Line 3769
	mov	DWORD PTR [eax], edx
; Line 3770
	mov	eax, DWORD PTR _missile[esi+8]
; Line 3771
	mov	DWORD PTR _missile[esi+148], eax
; Line 3772
	mov	esi, DWORD PTR _missile[esi+136]
; Line 3773
	cmp	esi, ebx
	jl	$LABEL_39$87764
; Line 3774
	push	8
	push	eax
	mov	ecx, esi
	call	@ChangeLight@16
; Line 3776
	jmp	$LABEL_39$87764
$L87782:
; Line 3777
	mov	eax, DWORD PTR _v22$[ebp]
; Line 3780
	mov	ecx, DWORD PTR _i$[ebp]
	xor	edi, edi
	mov	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _v6$[ebp]
	inc	edi
	mov	DWORD PTR _missile[esi+52], edi
	mov	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 3781
	mov	eax, DWORD PTR _missile[esi]
; Line 3782
	cmp	eax, edi
	lea	ecx, DWORD PTR [eax-1]
	mov	DWORD PTR _v15$[ebp], ecx
	je	SHORT $L87788
	lea	ecx, DWORD PTR [eax-21]
	cmp	eax, 21					; 00000015H
	mov	DWORD PTR _v15$[ebp], ecx
	je	SHORT $L87788
; Line 3796
	cmp	eax, 24					; 00000018H
	je	SHORT $L87795
	cmp	eax, 57					; 00000039H
	je	SHORT $L87797
	cmp	eax, 63					; 0000003fH
	jne	SHORT $L87792
; Line 3824
	mov	ecx, DWORD PTR _i$[ebp]
	push	8
	pop	edx
	call	@SetMissDir@8
; Line 3825
	mov	DWORD PTR _missile[esi+112], 7
; Line 3826
	mov	DWORD PTR _missile[esi+52], ebx
; Line 3827
	jmp	SHORT $LABEL_39$87764
$L87797:
; Line 3821
	movzx	eax, BYTE PTR _missile[esi+120]
	push	ebx
	push	ebx
	push	DWORD PTR _missile[esi+116]
	push	eax
	push	58					; 0000003aH
; Line 3822
	jmp	SHORT $L89326
$L87795:
; Line 3808
	movzx	eax, BYTE PTR _missile[esi+120]
	push	ebx
	push	ebx
	push	DWORD PTR _missile[esi+116]
	push	eax
	push	25					; 00000019H
; Line 3809
	jmp	SHORT $L89326
$L87788:
; Line 3783
	mov	al, BYTE PTR _missile[esi+120]
; Line 3794
	push	ebx
	push	ebx
	mov	BYTE PTR _v15$[ebp], al
	push	DWORD PTR _missile[esi+116]
	push	DWORD PTR _v15$[ebp]
	push	9
$L89326:
	push	DWORD PTR _missile[esi+44]
	mov	ecx, DWORD PTR _missile[esi+4]
	mov	edx, DWORD PTR _missile[esi+8]
	push	ebx
	push	DWORD PTR _i$[ebp]
	call	@AddMissile@40
$L87792:
; Line 3830
	mov	esi, DWORD PTR _missile[esi+136]
; Line 3831
	cmp	esi, ebx
	jl	SHORT $LABEL_39$87764
; Line 3832
	mov	ecx, esi
	call	@AddUnLight@4
$LABEL_39$87764:
; Line 3835
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 3836
	leave
	ret	0
@MI_Firebolt@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Lightball@4
_TEXT	SEGMENT
_i$ = -8
_v10$ = -4
@MI_Lightball@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 3839
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
	push	esi
; Line 3852
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _i$[ebp], ecx
; Line 3853
	mov	eax, DWORD PTR _missile[esi+20]
	mov	ebx, DWORD PTR _missile[esi+144]
	add	DWORD PTR _missile[esi+36], eax
; Line 3854
	mov	eax, DWORD PTR _missile[esi+24]
; Line 3855
	mov	edi, DWORD PTR _missile[esi+148]
; Line 3856
	dec	DWORD PTR _missile[esi+112]
; Line 3857
	add	DWORD PTR _missile[esi+40], eax
; Line 3858
	call	@GetMissilePos@4
; Line 3860
	mov	edx, DWORD PTR _missile[esi+124]
	mov	eax, DWORD PTR _missile[esi+112]
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _missile[esi+8]
	mov	DWORD PTR _v10$[ebp], eax
	push	DWORD PTR _missile[esi+4]
	push	0
	push	edx
	call	@CheckMissileCol@28
; Line 3861
	cmp	DWORD PTR _missile[esi+128], 0
	je	SHORT $L87813
; Line 3862
	mov	eax, DWORD PTR _v10$[ebp]
	mov	DWORD PTR _missile[esi+112], eax
$L87813:
; Line 3863
	mov	eax, ebx
	imul	eax, 112				; 00000070H
	mov	al, BYTE PTR _dObject[eax+edi]
; Line 3864
	test	al, al
	je	SHORT $L87815
	cmp	ebx, DWORD PTR _missile[esi+4]
	jne	SHORT $L87815
	cmp	edi, DWORD PTR _missile[esi+8]
	jne	SHORT $L87815
; Line 3865
	test	al, al
	jg	SHORT $L89329
	movsx	ecx, al
	or	eax, -1
	sub	eax, ecx
	jmp	SHORT $L89330
$L89329:
	movsx	eax, al
	dec	eax
$L89330:
; Line 3866
	imul	eax, 120				; 00000078H
	mov	eax, DWORD PTR _object[eax]
; Line 3867
	cmp	eax, 59					; 0000003bH
	je	SHORT $L87816
	cmp	eax, 60					; 0000003cH
	jne	SHORT $L87815
$L87816:
; Line 3868
	mov	eax, DWORD PTR _v10$[ebp]
	mov	DWORD PTR _missile[esi+112], eax
$L87815:
; Line 3870
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87817
; Line 3871
	mov	DWORD PTR _missile[esi+52], 1
$L87817:
; Line 3872
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 3873
	leave
	ret	0
@MI_Lightball@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @mi_null_33@4
_TEXT	SEGMENT
@mi_null_33@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3876
	push	esi
	push	edi
	mov	edi, ecx
; Line 3883
	mov	esi, edi
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+20]
; Line 3884
	dec	DWORD PTR _missile[esi+112]
; Line 3885
	add	DWORD PTR _missile[esi+36], eax
; Line 3886
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
; Line 3887
	call	@GetMissilePos@4
; Line 3888
	mov	edx, DWORD PTR _missile[esi+124]
	mov	ecx, edi
	push	0
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	0
	push	edx
	call	@CheckMissileCol@28
; Line 3889
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87824
; Line 3890
	mov	DWORD PTR _missile[esi+52], 1
$L87824:
; Line 3891
	mov	ecx, edi
	pop	edi
	pop	esi
	jmp	@PutMissile@4
@mi_null_33@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Acidpud@4
_TEXT	SEGMENT
@MI_Acidpud@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 3895
	push	ebx
	mov	ebx, ecx
	push	esi
; Line 3904
	mov	esi, ebx
	imul	esi, 176				; 000000b0H
	push	edi
; Line 3908
	push	0
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	dec	DWORD PTR _missile[esi+112]
	mov	edi, DWORD PTR _missile[esi+112]
	push	eax
	push	DWORD PTR _missile[esi+4]
	push	1
	push	edx
	call	@CheckMissileCol@28
; Line 3910
	test	edi, edi
	mov	DWORD PTR _missile[esi+112], edi
	jne	SHORT $L87835
; Line 3911
	cmp	DWORD PTR _missile[esi+44], edi
	je	SHORT $L87834
; Line 3912
	mov	DWORD PTR _missile[esi+52], 1
; Line 3913
	jmp	SHORT $L87835
$L87834:
; Line 3914
	xor	edx, edx
	mov	ecx, ebx
	inc	edx
	call	@SetMissDir@8
; Line 3915
	mov	eax, DWORD PTR _missile[esi+72]
	mov	DWORD PTR _missile[esi+112], eax
$L87835:
	pop	edi
; Line 3918
	mov	ecx, ebx
	pop	esi
	pop	ebx
	jmp	@PutMissile@4
@MI_Acidpud@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Firewall@4
_TEXT	SEGMENT
_i$ = -4
_ExpLight$ = -60
@MI_Firewall@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 3922
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
; Line 3934
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	push	5
; Line 3945
	and	DWORD PTR _ExpLight$[ebp+52], 0
	dec	DWORD PTR _missile[esi+112]
	pop	eax
	push	12					; 0000000cH
	mov	DWORD PTR _ExpLight$[ebp+12], eax
	pop	edi
	mov	DWORD PTR _ExpLight$[ebp+16], eax
; Line 3946
	mov	eax, DWORD PTR _missile[esi+112]
	push	11					; 0000000bH
	cmp	eax, DWORD PTR _missile[esi+144]
	pop	ebx
	mov	DWORD PTR _i$[ebp], ecx
	mov	DWORD PTR _ExpLight$[ebp+44], edi
	mov	DWORD PTR _ExpLight$[ebp+48], edi
	mov	DWORD PTR _ExpLight$[ebp], 2
	mov	DWORD PTR _ExpLight$[ebp+4], 3
	mov	DWORD PTR _ExpLight$[ebp+8], 4
	mov	DWORD PTR _ExpLight$[ebp+20], 6
	mov	DWORD PTR _ExpLight$[ebp+24], 7
	mov	DWORD PTR _ExpLight$[ebp+28], 8
	mov	DWORD PTR _ExpLight$[ebp+32], 9
	mov	DWORD PTR _ExpLight$[ebp+36], 10	; 0000000aH
	mov	DWORD PTR _ExpLight$[ebp+40], ebx
	jne	SHORT $L87844
; Line 3947
	xor	edx, edx
	inc	edx
	call	@SetMissDir@8
; Line 3948
	mov	edx, ebx
	mov	cl, 83					; 00000053H
	call	@random@8
	inc	eax
	mov	DWORD PTR _missile[esi+92], eax
$L87844:
; Line 3950
	mov	eax, DWORD PTR _missile[esi+72]
	dec	eax
	cmp	DWORD PTR _missile[esi+112], eax
	jne	SHORT $L87845
; Line 3951
	mov	ecx, DWORD PTR _i$[ebp]
	xor	edx, edx
	call	@SetMissDir@8
; Line 3952
	or	DWORD PTR _missile[esi+88], -1
; Line 3953
	mov	DWORD PTR _missile[esi+92], 13		; 0000000dH
$L87845:
; Line 3955
	xor	ebx, ebx
	mov	edx, DWORD PTR _missile[esi+124]
	inc	ebx
	mov	ecx, DWORD PTR _i$[ebp]
	push	ebx
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 3956
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87846
; Line 3959
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], ebx
	call	@AddUnLight@4
$L87846:
; Line 3961
	cmp	DWORD PTR _missile[esi+44], 0
	je	SHORT $L87850
; Line 3962
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L87850
; Line 3963
	cmp	DWORD PTR _missile[esi+88], -1
	je	SHORT $L87850
; Line 3964
	mov	eax, DWORD PTR _missile[esi+148]
; Line 3965
	cmp	eax, edi
	jge	SHORT $L87850
; Line 3966
	test	eax, eax
	jne	SHORT $L87851
; Line 3967
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	2
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
$L87851:
; Line 3968
	mov	eax, DWORD PTR _missile[esi+148]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _ExpLight$[ebp+eax*4]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 3969
	inc	DWORD PTR _missile[esi+148]
$L87850:
; Line 3974
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 3975
	leave
	ret	0
@MI_Firewall@4 ENDP
_TEXT	ENDS
EXTRN	_dung_map:BYTE
EXTRN	_TransList:BYTE
; Function compile flags: /Ogsy
;	COMDAT @MI_Fireball@4
_TEXT	SEGMENT
_i$ = -12
_px$ = -20
_py$ = -16
_my$ = -8
@MI_Fireball@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 3978
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	esi, ecx
; Line 3985
	xor	ebx, ebx
	mov	DWORD PTR _i$[ebp], esi
	imul	esi, 176				; 000000b0H
	dec	DWORD PTR _missile[esi+112]
	cmp	DWORD PTR _missile[esi+120], ebx
	mov	eax, DWORD PTR _missile[esi+116]
	mov	ecx, DWORD PTR _missile[esi+112]
	push	edi
	mov	edi, DWORD PTR _missile[esi+124]
	jne	SHORT $L87861
; Line 3986
	imul	eax, 21720				; 000054d8H
	mov	edx, DWORD PTR _plr[eax+56]
; Line 3987
	mov	eax, DWORD PTR _plr[eax+60]
; Line 3988
	jmp	SHORT $L89349
$L87861:
; Line 3989
	imul	eax, 228				; 000000e4H
	mov	edx, DWORD PTR _monster[eax+32]
; Line 3990
	mov	eax, DWORD PTR _monster[eax+36]
$L89349:
; Line 3993
	cmp	BYTE PTR _missile[esi+56], 19		; 00000013H
	mov	DWORD PTR _px$[ebp], edx
	mov	DWORD PTR _py$[ebp], eax
	jne	SHORT $L87863
; Line 3994
	cmp	ecx, ebx
	jne	$L87889
; Line 3996
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
; Line 3998
	jmp	$L87889
$L87863:
; Line 3999
	mov	eax, DWORD PTR _missile[esi+20]
; Line 4001
	mov	ecx, DWORD PTR _i$[ebp]
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 4002
	mov	eax, DWORD PTR _missile[esi+4]
	cmp	eax, DWORD PTR _missile[esi+28]
	jne	SHORT $L87867
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+32]
	je	SHORT $L87866
$L87867:
; Line 4003
	mov	ecx, DWORD PTR _i$[ebp]
	push	ebx
	push	DWORD PTR _missile[esi+8]
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87866:
; Line 4004
	cmp	DWORD PTR _missile[esi+112], ebx
; Line 4005
	mov	edx, DWORD PTR _missile[esi+4]
	jne	$L87868
; Line 4007
	push	DWORD PTR _missile[esi+92]
	mov	eax, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR -4+[ebp], edx
	push	eax
	mov	DWORD PTR _my$[ebp], eax
	call	@ChangeLight@16
; Line 4008
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	push	DWORD PTR _my$[ebp]
	push	DWORD PTR -4+[ebp]
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87869
; Line 4009
	push	1
	mov	ecx, DWORD PTR _i$[ebp]
	push	DWORD PTR _my$[ebp]
	mov	edx, edi
	push	DWORD PTR -4+[ebp]
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87869:
; Line 4010
	mov	eax, DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	inc	eax
	push	eax
	push	DWORD PTR -4+[ebp]
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87870
; Line 4011
	mov	eax, DWORD PTR _my$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	inc	eax
	push	1
	push	eax
	mov	edx, edi
	push	DWORD PTR -4+[ebp]
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87870:
; Line 4012
	mov	eax, DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	dec	eax
	push	eax
	push	DWORD PTR -4+[ebp]
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87871
; Line 4013
	mov	eax, DWORD PTR _my$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	dec	eax
	push	1
	push	eax
	mov	edx, edi
	push	DWORD PTR -4+[ebp]
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87871:
; Line 4014
	mov	eax, DWORD PTR -4+[ebp]
	push	DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	inc	eax
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87872
; Line 4015
	mov	eax, DWORD PTR -4+[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	inc	eax
	push	DWORD PTR _my$[ebp]
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87872:
; Line 4016
	mov	eax, DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	dec	eax
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	inc	eax
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87873
; Line 4017
	mov	eax, DWORD PTR _my$[ebp]
	push	1
	dec	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	inc	eax
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87873:
; Line 4018
	mov	eax, DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	inc	eax
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	inc	eax
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87874
; Line 4019
	mov	eax, DWORD PTR _my$[ebp]
	push	1
	inc	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	inc	eax
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87874:
; Line 4020
	mov	eax, DWORD PTR -4+[ebp]
	push	DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	dec	eax
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87875
; Line 4021
	mov	eax, DWORD PTR -4+[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	dec	eax
	push	DWORD PTR _my$[ebp]
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87875:
; Line 4022
	mov	eax, DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	inc	eax
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	dec	eax
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87876
; Line 4023
	mov	eax, DWORD PTR _my$[ebp]
	push	1
	inc	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	dec	eax
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87876:
; Line 4024
	mov	eax, DWORD PTR _my$[ebp]
	mov	edx, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	dec	eax
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	dec	eax
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L87877
; Line 4025
	mov	eax, DWORD PTR _my$[ebp]
	push	1
	dec	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	eax
	mov	eax, DWORD PTR -4+[ebp]
	dec	eax
	mov	edx, edi
	push	eax
	push	ebx
	push	edi
	call	@CheckMissileCol@28
$L87877:
; Line 4027
	mov	ecx, DWORD PTR -4+[ebp]
	mov	edx, DWORD PTR _my$[ebp]
	imul	ecx, 112				; 00000070H
	lea	eax, DWORD PTR [ecx+edx]
	movsx	edi, BYTE PTR _dung_map[eax]
	cmp	BYTE PTR _TransList[edi], bl
	je	SHORT $L87880
	cmp	DWORD PTR _missile[esi+20], ebx
	jge	SHORT $L87878
	movsx	edi, BYTE PTR _dung_map[eax+1]
	cmp	BYTE PTR _TransList[edi], bl
	je	SHORT $L87881
	mov	edi, DWORD PTR _dPiece[eax*4+4]
	cmp	BYTE PTR _nSolidTable[edi], bl
	jne	SHORT $L87880
$L87881:
	movsx	edi, BYTE PTR _dung_map[eax-1]
	cmp	BYTE PTR _TransList[edi], bl
	je	SHORT $L87878
	mov	edi, DWORD PTR _dPiece[eax*4-4]
	cmp	BYTE PTR _nSolidTable[edi], bl
	je	SHORT $L87878
$L87880:
; Line 4028
	inc	DWORD PTR _missile[esi+4]
; Line 4029
	inc	DWORD PTR _missile[esi+8]
; Line 4030
	add	DWORD PTR _missile[esi+16], -32		; ffffffe0H
$L87878:
; Line 4034
	cmp	DWORD PTR _missile[esi+24], ebx
	jle	SHORT $L87882
	movsx	ecx, BYTE PTR _dung_map[ecx+edx+112]
	cmp	BYTE PTR _TransList[ecx], bl
	je	SHORT $L87884
	mov	ecx, DWORD PTR _dPiece[eax*4+448]
	cmp	BYTE PTR _nSolidTable[ecx], bl
	jne	SHORT $L87883
$L87884:
	movsx	ecx, BYTE PTR _dung_map[eax-112]
	cmp	BYTE PTR _TransList[ecx], bl
	je	SHORT $L87882
	mov	ecx, DWORD PTR _dPiece[eax*4-448]
	cmp	BYTE PTR _nSolidTable[ecx], bl
	je	SHORT $L87882
$L87883:
; Line 4035
	add	DWORD PTR _missile[esi+16], -32		; ffffffe0H
$L87882:
; Line 4039
	cmp	DWORD PTR _missile[esi+20], ebx
	jle	SHORT $L87885
	movsx	ecx, BYTE PTR _dung_map[eax+1]
	cmp	BYTE PTR _TransList[ecx], bl
	je	SHORT $L87887
	mov	ecx, DWORD PTR _dPiece[eax*4+4]
	cmp	BYTE PTR _nSolidTable[ecx], bl
	jne	SHORT $L87886
$L87887:
	movsx	ecx, BYTE PTR _dung_map[eax-1]
	cmp	BYTE PTR _TransList[ecx], bl
	je	SHORT $L87885
	mov	eax, DWORD PTR _dPiece[eax*4-4]
	cmp	BYTE PTR _nSolidTable[eax], bl
	je	SHORT $L87885
$L87886:
; Line 4040
	add	DWORD PTR _missile[esi+12], -32		; ffffffe0H
$L87885:
; Line 4043
	mov	ecx, DWORD PTR _i$[ebp]
	push	19					; 00000013H
	pop	edx
	mov	DWORD PTR _missile[esi+44], ebx
	call	@SetMissAnim@8
; Line 4044
	mov	eax, DWORD PTR _missile[esi+72]
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
; Line 4045
	jmp	SHORT $L87889
$L87868:
	lea	eax, DWORD PTR _missile[esi+144]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $L87890
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+148]
	je	SHORT $L87889
$L87890:
; Line 4048
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _missile[esi+8]
	push	8
	push	eax
	mov	DWORD PTR _missile[esi+148], eax
	call	@ChangeLight@16
$L87889:
; Line 4052
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 4053
	leave
	ret	0
@MI_Fireball@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Lightctrl@4
_TEXT	SEGMENT
_i$ = -8
_v9$ = -4
_v10$ = -12
@MI_Lightctrl@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4056
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _i$[ebp], esi
; Line 4073
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+116]
; Line 4074
	dec	DWORD PTR _missile[esi+112]
; Line 4075
	cmp	eax, -1
	jne	SHORT $L87907
; Line 4076
	movzx	edx, BYTE PTR _currlevel
	mov	cl, 81					; 00000051H
	call	@random@8
	movzx	ecx, BYTE PTR _currlevel
	lea	ebx, DWORD PTR [eax+ecx*2]
; Line 4077
	jmp	SHORT $L87913
$L87907:
	cmp	DWORD PTR _missile[esi+120], 0
	je	SHORT $L87909
; Line 4080
	imul	eax, 228				; 000000e4H
	mov	cl, 80					; 00000050H
	movzx	edx, BYTE PTR _monster[eax+198]
	lea	edi, DWORD PTR _monster[eax+197]
	movzx	eax, BYTE PTR [edi]
	sub	edx, eax
	inc	edx
	call	@random@8
	mov	ebx, eax
	movzx	eax, BYTE PTR [edi]
	add	ebx, eax
	add	ebx, ebx
; Line 4081
	jmp	SHORT $L87913
$L87909:
; Line 4082
	imul	eax, 21720				; 000054d8H
	mov	cl, 79					; 0000004fH
	movsx	edx, BYTE PTR _plr[eax+440]
	call	@random@8
; Line 4083
	mov	cl, 79					; 0000004fH
	mov	edi, eax
	push	2
	pop	edx
	call	@random@8
	lea	ebx, DWORD PTR [eax+edi+2]
	shl	ebx, 6
$L87913:
; Line 4085
	mov	eax, DWORD PTR _missile[esi+20]
; Line 4087
	mov	ecx, DWORD PTR _i$[ebp]
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 4088
	mov	ecx, DWORD PTR _missile[esi+4]
; Line 4089
	mov	edi, DWORD PTR _missile[esi+8]
; Line 4092
	mov	eax, ecx
	mov	edx, DWORD PTR _missile[esi+116]
	imul	eax, 112				; 00000070H
	add	eax, edi
; Line 4093
	cmp	edx, -1
	mov	DWORD PTR -16+[ebp], ecx
	mov	eax, DWORD PTR _dPiece[eax*4]
	mov	DWORD PTR _v9$[ebp], eax
	jne	SHORT $L87915
	cmp	ecx, DWORD PTR _missile[esi+28]
	jne	SHORT $L87915
	cmp	edi, DWORD PTR _missile[esi+32]
	je	SHORT $L87914
$L87915:
; Line 4094
	cmp	BYTE PTR _nMissileTable[eax], 0
	je	SHORT $LABEL_12$87917
; Line 4096
	and	DWORD PTR _missile[esi+112], 0
$L87914:
; Line 4098
	cmp	BYTE PTR _nMissileTable[eax], 0
	jne	$LABEL_27$87922
$LABEL_12$87917:
; Line 4100
	cmp	ecx, DWORD PTR _missile[esi+144]
	jne	SHORT $L87921
	cmp	edi, DWORD PTR _missile[esi+148]
	je	$LABEL_27$87922
$L87921:
	test	ecx, ecx
	jle	$LABEL_27$87922
	test	edi, edi
	jle	$LABEL_27$87922
	cmp	ecx, 112				; 00000070H
	jge	$LABEL_27$87922
	cmp	edi, 112				; 00000070H
	jge	$LABEL_27$87922
; Line 4102
	cmp	edx, -1
	jne	SHORT $L87923
; Line 4105
	or	DWORD PTR _v10$[ebp], edx
; Line 4106
	jmp	SHORT $L89356
$L87923:
; Line 4107
	cmp	DWORD PTR _missile[esi+120], 1
	jne	SHORT $L87931
; Line 4108
	mov	eax, edx
	imul	eax, 228				; 000000e4H
	mov	eax, DWORD PTR _monster[eax+220]
	mov	DWORD PTR _v9$[ebp], eax
; Line 4109
	mov	al, BYTE PTR [eax]
; Line 4110
	cmp	al, 76					; 0000004cH
	jb	SHORT $L87931
	cmp	al, 79					; 0000004fH
	ja	SHORT $L87931
; Line 4112
	push	DWORD PTR _missile[esi+48]
	mov	al, BYTE PTR _missile[esi+120]
	mov	BYTE PTR _v9$[ebp], al
	push	ebx
	push	edx
	push	DWORD PTR _v9$[ebp]
	push	23					; 00000017H
	jmp	SHORT $L89357
$L87931:
; Line 4122
	mov	DWORD PTR _v10$[ebp], edx
$L89356:
; Line 4120
	mov	eax, DWORD PTR _missile[esi+48]
; Line 4124
	mov	dl, BYTE PTR _missile[esi+120]
; Line 4125
	push	eax
	push	ebx
	push	DWORD PTR _v10$[ebp]
	mov	BYTE PTR _v9$[ebp], dl
	push	DWORD PTR _v9$[ebp]
	push	8
$L89357:
	push	DWORD PTR _i$[ebp]
	mov	edx, edi
	push	DWORD PTR _missile[esi+32]
	push	DWORD PTR _missile[esi+28]
	call	@AddMissile@40
	mov	eax, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR -16+[ebp]
	mov	DWORD PTR _missile[esi+144], eax
	mov	eax, DWORD PTR _missile[esi+8]
$LABEL_26$87933:
	mov	DWORD PTR _missile[esi+148], eax
$LABEL_27$87922:
; Line 4129
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L87936
	test	ecx, ecx
	jle	SHORT $L87936
	test	edi, edi
	jle	SHORT $L87936
	cmp	ecx, 112				; 00000070H
	jge	SHORT $L87936
	cmp	edi, 112				; 00000070H
	jle	SHORT $L87935
$L87936:
; Line 4130
	mov	DWORD PTR _missile[esi+52], 1
$L87935:
	pop	edi
	pop	esi
	pop	ebx
; Line 4131
	leave
	ret	0
@MI_Lightctrl@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Lightning@4
_TEXT	SEGMENT
@MI_Lightning@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4134
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 4143
	mov	esi, edi
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+4]
; Line 4144
	dec	DWORD PTR _missile[esi+112]
; Line 4146
	cmp	eax, DWORD PTR _missile[esi+28]
	mov	ebx, DWORD PTR _missile[esi+112]
	jne	SHORT $L87946
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+32]
	je	SHORT $L87945
$L87946:
; Line 4147
	mov	edx, DWORD PTR _missile[esi+124]
	push	0
	push	DWORD PTR _missile[esi+8]
	mov	ecx, edi
	push	eax
	push	1
	push	edx
	call	@CheckMissileCol@28
$L87945:
; Line 4148
	cmp	DWORD PTR _missile[esi+128], 0
	je	SHORT $L87947
; Line 4149
	mov	DWORD PTR _missile[esi+112], ebx
$L87947:
; Line 4150
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87948
; Line 4153
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
$L87948:
; Line 4155
	mov	ecx, edi
	pop	edi
	pop	esi
	pop	ebx
	jmp	@PutMissile@4
@MI_Lightning@4 ENDP
_TEXT	ENDS
EXTRN	@ClrPlrPath@4:NEAR
EXTRN	@NetSendCmdParam1@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MI_Town@4
_TEXT	SEGMENT
_i$ = -8
_ExpLight$ = -76
_arglist$ = -4
@MI_Town@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4159
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
; Line 4172
	mov	esi, ecx
	push	15					; 0000000fH
	imul	esi, 176				; 000000b0H
	pop	eax
; Line 4174
	xor	ebx, ebx
	mov	DWORD PTR _ExpLight$[ebp+56], eax
	mov	DWORD PTR _ExpLight$[ebp+60], eax
	mov	DWORD PTR _ExpLight$[ebp+64], eax
	mov	eax, DWORD PTR _missile[esi+112]
	inc	ebx
	mov	DWORD PTR _i$[ebp], ecx
; Line 4188
	cmp	eax, ebx
	mov	DWORD PTR _ExpLight$[ebp], ebx
	mov	DWORD PTR _ExpLight$[ebp+4], 2
	mov	DWORD PTR _ExpLight$[ebp+8], 3
	mov	DWORD PTR _ExpLight$[ebp+12], 4
	mov	DWORD PTR _ExpLight$[ebp+16], 5
	mov	DWORD PTR _ExpLight$[ebp+20], 6
	mov	DWORD PTR _ExpLight$[ebp+24], 7
	mov	DWORD PTR _ExpLight$[ebp+28], 8
	mov	DWORD PTR _ExpLight$[ebp+32], 9
	mov	DWORD PTR _ExpLight$[ebp+36], 10	; 0000000aH
	mov	DWORD PTR _ExpLight$[ebp+40], 11	; 0000000bH
	mov	DWORD PTR _ExpLight$[ebp+44], 12	; 0000000cH
	mov	DWORD PTR _ExpLight$[ebp+48], 13	; 0000000dH
	mov	DWORD PTR _ExpLight$[ebp+52], 14	; 0000000eH
	jle	SHORT $L87959
; Line 4189
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
$L87959:
; Line 4190
	mov	eax, DWORD PTR _missile[esi+112]
	cmp	eax, DWORD PTR _missile[esi+144]
	jne	SHORT $L87960
; Line 4191
	mov	edx, ebx
	call	@SetMissDir@8
$L87960:
; Line 4192
	cmp	BYTE PTR _currlevel, 0
	je	SHORT $L87961
	cmp	DWORD PTR _missile[esi+44], ebx
	je	SHORT $L87961
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L87961
; Line 4193
	cmp	DWORD PTR _missile[esi+148], 0
	jne	SHORT $L87962
; Line 4194
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	ebx
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
$L87962:
; Line 4195
	mov	eax, DWORD PTR _missile[esi+148]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _ExpLight$[ebp+eax*4]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 4196
	inc	DWORD PTR _missile[esi+148]
$L87961:
; Line 4198
	and	DWORD PTR _arglist$[ebp], 0
	push	edi
	mov	edi, OFFSET FLAT:_plr+319
$L87963:
; Line 4201
	cmp	BYTE PTR [edi-290], 0
	je	SHORT $L87970
; Line 4206
	movzx	eax, BYTE PTR _currlevel
	cmp	eax, DWORD PTR [edi-267]
	jne	SHORT $L87970
	cmp	BYTE PTR [edi], 0
	jne	SHORT $L87970
	cmp	DWORD PTR [edi-319], 0
	jne	SHORT $L87970
	mov	eax, DWORD PTR [edi-263]
	cmp	eax, DWORD PTR _missile[esi+4]
	jne	SHORT $L87970
	mov	eax, DWORD PTR [edi-259]
	cmp	eax, DWORD PTR _missile[esi+8]
	jne	SHORT $L87970
; Line 4207
	mov	ecx, DWORD PTR _arglist$[ebp]
	call	@ClrPlrPath@4
; Line 4208
	mov	eax, DWORD PTR _arglist$[ebp]
	cmp	eax, DWORD PTR _myplr
	jne	SHORT $L87970
; Line 4209
	mov	ax, WORD PTR _missile[esi+116]
	mov	dl, 31					; 0000001fH
	push	eax
	mov	ecx, ebx
	call	@NetSendCmdParam1@12
; Line 4210
	mov	DWORD PTR [edi-319], 10			; 0000000aH
$L87970:
; Line 4214
	inc	DWORD PTR _arglist$[ebp]
; Line 4215
	add	edi, 21720				; 000054d8H
; Line 4216
	lea	eax, DWORD PTR [edi-267]
	cmp	eax, OFFSET FLAT:_plr+86932
	jl	$L87963
; Line 4217
	cmp	DWORD PTR _missile[esi+112], 0
	pop	edi
	jne	SHORT $L87973
; Line 4220
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], ebx
	call	@AddUnLight@4
$L87973:
; Line 4222
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	esi
	pop	ebx
; Line 4223
	leave
	ret	0
@MI_Town@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Flash@4
_TEXT	SEGMENT
@MI_Flash@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4226
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 4236
	mov	esi, edi
	xor	ebx, ebx
	imul	esi, 176				; 000000b0H
	inc	ebx
	cmp	DWORD PTR _missile[esi+120], 0
	jne	SHORT $L87984
; Line 4237
	mov	eax, DWORD PTR _missile[esi+116]
; Line 4238
	cmp	eax, -1
	je	SHORT $L87984
; Line 4239
	imul	eax, 21720				; 000054d8H
	mov	BYTE PTR _plr[eax+317], bl
$L87984:
; Line 4243
	mov	eax, DWORD PTR _missile[esi+4]
	dec	DWORD PTR _missile[esi+112]
	mov	edx, DWORD PTR _missile[esi+124]
	push	ebx
	push	DWORD PTR _missile[esi+8]
	dec	eax
	mov	ecx, edi
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4244
	mov	edx, DWORD PTR _missile[esi+124]
	mov	ecx, edi
	push	ebx
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4245
	mov	eax, DWORD PTR _missile[esi+4]
	mov	edx, DWORD PTR _missile[esi+124]
	push	ebx
	inc	eax
	push	DWORD PTR _missile[esi+8]
	mov	ecx, edi
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4246
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	inc	eax
	push	ebx
	push	eax
	mov	eax, DWORD PTR _missile[esi+4]
	dec	eax
	mov	ecx, edi
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4247
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	inc	eax
	push	ebx
	push	eax
	mov	ecx, edi
	push	DWORD PTR _missile[esi+4]
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4248
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	inc	eax
	push	ebx
	push	eax
	mov	eax, DWORD PTR _missile[esi+4]
	inc	eax
	mov	ecx, edi
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4249
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L87987
; Line 4250
	cmp	DWORD PTR _missile[esi+120], 0
; Line 4251
	mov	DWORD PTR _missile[esi+52], ebx
; Line 4252
	jne	SHORT $L87987
; Line 4253
	mov	esi, DWORD PTR _missile[esi+116]
; Line 4254
	cmp	esi, -1
	je	SHORT $L87987
; Line 4255
	imul	esi, 21720				; 000054d8H
	and	BYTE PTR _plr[esi+317], 0
$L87987:
; Line 4258
	mov	ecx, edi
	pop	edi
	pop	esi
	pop	ebx
	jmp	@PutMissile@4
@MI_Flash@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Flash2@4
_TEXT	SEGMENT
@MI_Flash2@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4262
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 4272
	mov	esi, edi
	xor	ebx, ebx
	imul	esi, 176				; 000000b0H
	inc	ebx
	cmp	DWORD PTR _missile[esi+120], 0
	jne	SHORT $L87998
; Line 4273
	mov	eax, DWORD PTR _missile[esi+116]
; Line 4274
	cmp	eax, -1
	je	SHORT $L87998
; Line 4275
	imul	eax, 21720				; 000054d8H
	mov	BYTE PTR _plr[eax+317], bl
$L87998:
; Line 4279
	mov	eax, DWORD PTR _missile[esi+8]
	dec	DWORD PTR _missile[esi+112]
	mov	edx, DWORD PTR _missile[esi+124]
	dec	eax
	push	ebx
	push	eax
	mov	eax, DWORD PTR _missile[esi+4]
	mov	ecx, edi
	dec	eax
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4280
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	dec	eax
	push	ebx
	push	eax
	mov	ecx, edi
	push	DWORD PTR _missile[esi+4]
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4281
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	dec	eax
	push	ebx
	push	eax
	mov	eax, DWORD PTR _missile[esi+4]
	inc	eax
	mov	ecx, edi
	push	eax
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4282
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L88001
; Line 4283
	cmp	DWORD PTR _missile[esi+120], 0
; Line 4284
	mov	DWORD PTR _missile[esi+52], ebx
; Line 4285
	jne	SHORT $L88001
; Line 4286
	mov	esi, DWORD PTR _missile[esi+116]
; Line 4287
	cmp	esi, -1
	je	SHORT $L88001
; Line 4288
	imul	esi, 21720				; 000054d8H
	and	BYTE PTR _plr[esi+317], 0
$L88001:
; Line 4291
	mov	ecx, edi
	pop	edi
	pop	esi
	pop	ebx
	jmp	@PutMissile@4
@MI_Flash2@4 ENDP
_TEXT	ENDS
PUBLIC	@MI_Manashield@4
EXTRN	@SetPlayerHitPoints@8:NEAR
EXTRN	_drawmanaflag:DWORD
; Function compile flags: /Ogsy
;	COMDAT @MI_Manashield@4
_TEXT	SEGMENT
_i$ = -8
_v8$ = -12
_arglist$ = -4
@MI_Manashield@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4295
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _i$[ebp], edi
; Line 4315
	imul	edi, 176				; 000000b0H
	mov	ebx, DWORD PTR _missile[edi+116]
; Line 4318
	mov	esi, ebx
	mov	DWORD PTR _arglist$[ebp], ebx
	imul	esi, 21720				; 000054d8H
; Line 4321
	mov	edx, DWORD PTR _plr[esi+96]
	mov	eax, DWORD PTR _plr[esi+56]
	mov	ecx, DWORD PTR _plr[esi+60]
	mov	DWORD PTR _missile[edi+4], eax
	shl	edx, 16					; 00000010H
	mov	DWORD PTR _missile[edi+36], edx
; Line 4322
	mov	edx, DWORD PTR _plr[esi+100]
	shl	edx, 16					; 00000010H
; Line 4323
	cmp	DWORD PTR _plr[esi], 3
; Line 4324
	mov	DWORD PTR _missile[edi+8], ecx
; Line 4325
	mov	DWORD PTR _missile[edi+40], edx
; Line 4326
	jne	SHORT $L88021
; Line 4327
	mov	eax, DWORD PTR _plr[esi+64]
	mov	DWORD PTR _missile[edi+28], eax
; Line 4328
	mov	eax, DWORD PTR _plr[esi+68]
	mov	DWORD PTR _missile[edi+32], eax
; Line 4329
	jmp	SHORT $L88022
$L88021:
; Line 4330
	mov	DWORD PTR _missile[edi+28], eax
; Line 4331
	mov	DWORD PTR _missile[edi+32], ecx
$L88022:
; Line 4333
	mov	ecx, DWORD PTR _i$[ebp]
	call	@GetMissilePos@4
; Line 4334
	cmp	DWORD PTR _plr[esi], 3
	jne	SHORT $L88025
; Line 4335
	cmp	DWORD PTR _plr[esi+112], 2
	jne	SHORT $L88024
; Line 4336
	inc	DWORD PTR _missile[edi+4]
; Line 4337
	jmp	SHORT $L88025
$L88024:
; Line 4338
	inc	DWORD PTR _missile[edi+8]
$L88025:
; Line 4340
	cmp	ebx, DWORD PTR _myplr
	je	SHORT $L88026
; Line 4341
	movzx	eax, BYTE PTR _currlevel
	cmp	eax, DWORD PTR _plr[esi+52]
	je	$LABEL_33$88028
; Line 4342
	mov	DWORD PTR _missile[edi+52], 1
; Line 4343
	jmp	$LABEL_33$88028
$L88026:
; Line 4345
	mov	edx, DWORD PTR _plr[esi+428]
; Line 4347
	test	edx, edx
	mov	DWORD PTR _v8$[ebp], edx
	jle	SHORT $L88030
	cmp	BYTE PTR _plr[esi+29], 0
	jne	SHORT $L88029
$L88030:
; Line 4348
	and	DWORD PTR _missile[edi+112], 0
$L88029:
; Line 4349
	mov	ecx, DWORD PTR _missile[edi+144]
; Line 4350
	mov	ebx, DWORD PTR _plr[esi+408]
	cmp	ebx, ecx
	jge	$L89382
; Line 4352
	mov	eax, ecx
	sub	eax, ebx
; Line 4353
	cmp	DWORD PTR _missile[edi+48], 0
	jle	SHORT $L88033
; Line 4354
	push	3
	cdq
	pop	ebx
	idiv	ebx
	mov	edx, ecx
	sub	edx, eax
	sub	edx, DWORD PTR _plr[esi+408]
	mov	eax, edx
; Line 4355
	mov	edx, DWORD PTR _v8$[ebp]
$L88033:
; Line 4357
	test	eax, eax
	jge	SHORT $L88034
; Line 4358
	xor	eax, eax
$L88034:
; Line 4359
	xor	ebx, ebx
	inc	ebx
; Line 4361
	cmp	edx, eax
	mov	DWORD PTR _drawmanaflag, ebx
	mov	DWORD PTR _drawhpflag, ebx
	jl	SHORT $L88035
; Line 4364
	sub	DWORD PTR _plr[esi+420], eax
	mov	DWORD PTR _plr[esi+408], ecx
; Line 4365
	mov	ecx, DWORD PTR _missile[edi+148]
; Line 4366
	sub	edx, eax
	mov	DWORD PTR _plr[esi+400], ecx
	mov	DWORD PTR _plr[esi+428], edx
	jmp	SHORT $LABEL_26$88032
$L88035:
; Line 4380
	and	DWORD PTR _plr[esi+428], 0
; Line 4381
	and	DWORD PTR _missile[edi+112], 0
	mov	DWORD PTR _missile[edi+52], ebx
	mov	ebx, DWORD PTR _missile[edi+148]
	sub	ecx, eax
	sub	ebx, eax
	mov	eax, DWORD PTR _plr[esi+424]
	add	ecx, edx
	sub	eax, DWORD PTR _plr[esi+432]
	add	ebx, edx
	test	ecx, ecx
	mov	DWORD PTR _plr[esi+408], ecx
	mov	DWORD PTR _plr[esi+400], ebx
; Line 4382
	mov	DWORD PTR _plr[esi+420], eax
; Line 4383
	jge	SHORT $L88038
; Line 4384
	mov	ecx, DWORD PTR _arglist$[ebp]
	xor	edx, edx
	call	@SetPlayerHitPoints@8
$L88038:
; Line 4385
	test	DWORD PTR _plr[esi+408], -64		; ffffffc0H
	jne	SHORT $L89382
; Line 4387
	mov	ecx, DWORD PTR _arglist$[ebp]
	cmp	ecx, DWORD PTR _myplr
	jne	SHORT $L89381
; Line 4388
	mov	edx, DWORD PTR _missile[edi+172]
	call	@SyncPlrKill@8
$L89382:
	xor	ebx, ebx
	inc	ebx
$LABEL_26$88032:
	mov	ecx, DWORD PTR _arglist$[ebp]
	cmp	ecx, DWORD PTR _myplr
	jne	SHORT $LABEL_31$88037
	xor	eax, eax
	cmp	DWORD PTR _plr[esi+408], eax
	jne	SHORT $LABEL_31$88037
; Line 4368
	cmp	DWORD PTR _missile[edi+144], eax
	jne	SHORT $LABEL_31$88037
	cmp	DWORD PTR _plr[esi], 8
	je	SHORT $LABEL_31$88037
; Line 4371
	or	edx, -1
	mov	DWORD PTR _missile[edi+112], eax
	mov	DWORD PTR _missile[edi+52], ebx
	call	@SyncPlrKill@8
	jmp	SHORT $LABEL_31$88037
$L89381:
	xor	ebx, ebx
	inc	ebx
$LABEL_31$88037:
; Line 4393
	mov	eax, DWORD PTR _plr[esi+408]
	cmp	DWORD PTR _missile[edi+112], 0
	mov	DWORD PTR _missile[edi+144], eax
; Line 4394
	mov	eax, DWORD PTR _plr[esi+400]
	mov	DWORD PTR _missile[edi+148], eax
; Line 4395
	jne	SHORT $LABEL_33$88028
; Line 4397
	mov	dl, 89					; 00000059H
	mov	ecx, ebx
	mov	DWORD PTR _missile[edi+52], ebx
	call	@NetSendCmd@8
$LABEL_33$88028:
; Line 4400
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 4401
	leave
	ret	0
@MI_Manashield@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Etherealize@4
_TEXT	SEGMENT
@MI_Etherealize@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4404
	push	ebx
	mov	ebx, ecx
	push	esi
; Line 4418
	mov	esi, ebx
	imul	esi, 176				; 000000b0H
	push	edi
	mov	edi, DWORD PTR _missile[esi+116]
; Line 4419
	dec	DWORD PTR _missile[esi+112]
; Line 4422
	imul	edi, 21720				; 000054d8H
; Line 4425
	mov	edx, DWORD PTR _plr[edi+96]
	mov	eax, DWORD PTR _plr[edi+56]
	mov	ecx, DWORD PTR _plr[edi+60]
	mov	DWORD PTR _missile[esi+4], eax
	shl	edx, 16					; 00000010H
	mov	DWORD PTR _missile[esi+36], edx
; Line 4426
	mov	edx, DWORD PTR _plr[edi+100]
	shl	edx, 16					; 00000010H
; Line 4427
	cmp	DWORD PTR _plr[edi], 3
; Line 4428
	mov	DWORD PTR _missile[esi+8], ecx
; Line 4429
	mov	DWORD PTR _missile[esi+40], edx
; Line 4430
	jne	SHORT $L88055
; Line 4431
	mov	eax, DWORD PTR _plr[edi+64]
	mov	DWORD PTR _missile[esi+28], eax
; Line 4432
	mov	eax, DWORD PTR _plr[edi+68]
	mov	DWORD PTR _missile[esi+32], eax
; Line 4433
	jmp	SHORT $L88056
$L88055:
; Line 4434
	mov	DWORD PTR _missile[esi+28], eax
; Line 4435
	mov	DWORD PTR _missile[esi+32], ecx
$L88056:
; Line 4437
	mov	ecx, ebx
	call	@GetMissilePos@4
; Line 4438
	cmp	DWORD PTR _plr[edi], 3
	jne	SHORT $L88059
; Line 4439
	cmp	DWORD PTR _plr[edi+112], 2
	jne	SHORT $L88058
; Line 4440
	inc	DWORD PTR _missile[esi+4]
; Line 4441
	jmp	SHORT $L88059
$L88058:
; Line 4442
	inc	DWORD PTR _missile[esi+8]
$L88059:
; Line 4444
	xor	ecx, ecx
	inc	ecx
	or	BYTE PTR _plr[edi+288], cl
; Line 4446
	cmp	DWORD PTR _missile[esi+112], 0
	mov	al, BYTE PTR _plr[edi+288]
	je	SHORT $L88062
	cmp	DWORD PTR _plr[edi+408], 0
	jg	SHORT $L88061
$L88062:
; Line 4448
	and	al, 254					; 000000feH
	mov	DWORD PTR _missile[esi+52], ecx
	mov	BYTE PTR _plr[edi+288], al
$L88061:
	pop	edi
; Line 4450
	mov	ecx, ebx
	pop	esi
	pop	ebx
	jmp	@PutMissile@4
@MI_Etherealize@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Firemove@4
_TEXT	SEGMENT
_i$ = -4
_ExpLight$ = -60
@MI_Firemove@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4454
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
; Line 4470
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	push	5
; Line 4485
	xor	ebx, ebx
	add	DWORD PTR _missile[esi+16], 32		; 00000020H
	pop	eax
	dec	DWORD PTR _missile[esi+4]
	dec	DWORD PTR _missile[esi+8]
	push	12					; 0000000cH
	mov	DWORD PTR _ExpLight$[ebp+12], eax
	mov	DWORD PTR _ExpLight$[ebp+16], eax
	pop	eax
	mov	DWORD PTR _ExpLight$[ebp+44], eax
	mov	DWORD PTR _ExpLight$[ebp+48], eax
; Line 4486
	lea	eax, DWORD PTR _missile[esi+144]
	push	11					; 0000000bH
	pop	edi
	mov	DWORD PTR _i$[ebp], ecx
; Line 4487
	inc	DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _missile[esi+72]
	mov	DWORD PTR _ExpLight$[ebp], 2
	mov	DWORD PTR _ExpLight$[ebp+4], 3
	mov	DWORD PTR _ExpLight$[ebp+8], 4
	mov	DWORD PTR _ExpLight$[ebp+20], 6
	mov	DWORD PTR _ExpLight$[ebp+24], 7
	mov	DWORD PTR _ExpLight$[ebp+28], 8
	mov	DWORD PTR _ExpLight$[ebp+32], 9
	mov	DWORD PTR _ExpLight$[ebp+36], 10	; 0000000aH
	mov	DWORD PTR _ExpLight$[ebp+40], edi
	mov	DWORD PTR _ExpLight$[ebp+52], ebx
	jne	SHORT $L88078
; Line 4488
	xor	edx, edx
	inc	edx
	call	@SetMissDir@8
; Line 4489
	mov	edx, edi
	mov	cl, 82					; 00000052H
	call	@random@8
	inc	eax
	mov	DWORD PTR _missile[esi+92], eax
$L88078:
; Line 4492
	mov	eax, DWORD PTR _missile[esi+20]
; Line 4494
	mov	ecx, DWORD PTR _i$[ebp]
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 4496
	mov	edx, DWORD PTR _missile[esi+124]
	mov	ecx, DWORD PTR _i$[ebp]
	push	ebx
	mov	edi, DWORD PTR _missile[esi+112]
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 4497
	cmp	DWORD PTR _missile[esi+128], ebx
	je	SHORT $L88079
; Line 4498
	mov	DWORD PTR _missile[esi+112], edi
$L88079:
; Line 4499
	cmp	DWORD PTR _missile[esi+112], ebx
	jne	SHORT $L88080
; Line 4502
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
$L88080:
; Line 4504
	cmp	DWORD PTR _missile[esi+44], ebx
	jne	SHORT $L88082
	cmp	DWORD PTR _missile[esi+112], ebx
	je	SHORT $L88082
; Line 4514
	cmp	DWORD PTR _missile[esi+148], ebx
	jne	SHORT $L88086
; Line 4515
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	2
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
$L88086:
; Line 4516
	mov	eax, DWORD PTR _missile[esi+148]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _ExpLight$[ebp+eax*4]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 4517
	inc	DWORD PTR _missile[esi+148]
	jmp	SHORT $L88083
$L88082:
; Line 4505
	mov	edx, DWORD PTR _missile[esi+4]
; Line 4506
	lea	eax, DWORD PTR _missile[esi+152]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $L88084
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+156]
	je	SHORT $L88083
$L88084:
; Line 4511
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _missile[esi+8]
	push	8
	push	eax
	mov	DWORD PTR _missile[esi+156], eax
	call	@ChangeLight@16
$L88083:
; Line 4519
	inc	DWORD PTR _missile[esi+4]
; Line 4523
	mov	ecx, DWORD PTR _i$[ebp]
	inc	DWORD PTR _missile[esi+8]
	add	DWORD PTR _missile[esi+16], -32		; ffffffe0H
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 4524
	leave
	ret	0
@MI_Firemove@4 ENDP
_TEXT	ENDS
EXTRN	_vCrawlTable:BYTE
; Function compile flags: /Ogsy
;	COMDAT @MI_Guardian@4
_TEXT	SEGMENT
_i$ = -8
_v5$ = -4
_v14$ = -24
_v15$ = -20
_v16$ = -16
_v17$ = -12
@MI_Guardian@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4527
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _i$[ebp], esi
; Line 4549
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+148]
; Line 4550
	dec	DWORD PTR _missile[esi+112]
; Line 4551
	mov	ecx, DWORD PTR _missile[esi+112]
	push	edi
; Line 4552
	xor	edi, edi
; Line 4554
	cmp	eax, edi
	mov	DWORD PTR _v16$[ebp], edi
	mov	DWORD PTR _v15$[ebp], edi
	jle	SHORT $L88108
; Line 4555
	dec	eax
	mov	DWORD PTR _missile[esi+148], eax
$L88108:
; Line 4556
	cmp	ecx, DWORD PTR _missile[esi+144]
	je	SHORT $L88110
	cmp	DWORD PTR _missile[esi+44], 2
	jne	SHORT $L88109
	cmp	DWORD PTR _missile[esi+148], edi
	jne	SHORT $L88109
$L88110:
; Line 4557
	mov	ecx, DWORD PTR _i$[ebp]
	xor	edx, edx
	inc	edx
	call	@SetMissDir@8
$L88109:
; Line 4558
	mov	eax, DWORD PTR _missile[esi+112]
	push	ebx
	push	16					; 00000010H
	cdq
	pop	ecx
	idiv	ecx
	test	edx, edx
	jne	$L88114
; Line 4559
	mov	ecx, OFFSET FLAT:_vCrawlTable+1
; Line 4560
	mov	DWORD PTR _v5$[ebp], edi
	mov	eax, ecx
; Line 4561
	mov	DWORD PTR _v17$[ebp], ecx
$L88112:
; Line 4563
	cmp	DWORD PTR _v5$[ebp], -1
	je	$L88114
; Line 4565
	push	10					; 0000000aH
	pop	ecx
; Line 4566
	mov	DWORD PTR _v14$[ebp], ecx
$L88116:
; Line 4568
	lea	edi, DWORD PTR [ecx+eax]
; Line 4569
	mov	dl, BYTE PTR [edi-1]
; Line 4570
	test	dl, dl
	jne	SHORT $L88119
	cmp	BYTE PTR [edi], dl
	je	$L88118
$L88119:
; Line 4572
	movzx	edx, dl
	cmp	DWORD PTR _v16$[ebp], edx
	mov	DWORD PTR -28+[ebp], edx
	jne	SHORT $L88121
	movzx	edx, BYTE PTR [edi]
	cmp	DWORD PTR _v15$[ebp], edx
	je	$L88120
$L88121:
; Line 4574
	movzx	eax, BYTE PTR [edi]
	add	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ebx, DWORD PTR _i$[ebp]
	add	edx, DWORD PTR -28+[ebp]
	push	eax
	mov	ecx, ebx
	call	@Sentfire@12
; Line 4578
	cmp	eax, -1
	mov	DWORD PTR _v5$[ebp], eax
	je	$L88123
	movzx	eax, BYTE PTR [edi]
	mov	ecx, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+4]
	sub	ecx, eax
	movzx	eax, BYTE PTR [edi-1]
	push	ecx
	sub	edx, eax
	mov	ecx, ebx
	call	@Sentfire@12
	cmp	eax, -1
	mov	DWORD PTR _v5$[ebp], eax
	je	SHORT $L88123
	movzx	eax, BYTE PTR [edi]
	mov	ecx, DWORD PTR _missile[esi+8]
	movzx	edx, BYTE PTR [edi-1]
	add	edx, DWORD PTR _missile[esi+4]
	sub	ecx, eax
	push	ecx
	mov	ecx, ebx
	call	@Sentfire@12
	cmp	eax, -1
	mov	DWORD PTR _v5$[ebp], eax
	je	SHORT $L88123
	movzx	eax, BYTE PTR [edi]
	add	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, ebx
	push	eax
	movzx	eax, BYTE PTR [edi-1]
	sub	edx, eax
	call	@Sentfire@12
	cmp	eax, -1
	mov	DWORD PTR _v5$[ebp], eax
	je	SHORT $L88123
; Line 4582
	movzx	eax, BYTE PTR [edi-1]
; Line 4585
	movzx	ecx, BYTE PTR [edi]
	mov	DWORD PTR _v16$[ebp], eax
	mov	eax, DWORD PTR _v17$[ebp]
	mov	DWORD PTR _v15$[ebp], ecx
; Line 4586
	mov	ecx, DWORD PTR _v14$[ebp]
$L88120:
; Line 4588
	sub	ecx, 2
; Line 4589
	mov	DWORD PTR _v14$[ebp], ecx
; Line 4590
	jns	$L88116
	jmp	SHORT $L88118
$L88123:
; Line 4579
	mov	eax, DWORD PTR _v17$[ebp]
$L88118:
; Line 4591
	add	eax, 30					; 0000001eH
; Line 4593
	cmp	eax, OFFSET FLAT:_vCrawlTable+691
	mov	DWORD PTR _v17$[ebp], eax
	jl	$L88112
$L88114:
; Line 4595
	cmp	DWORD PTR _missile[esi+112], 14		; 0000000eH
	push	15					; 0000000fH
	pop	edi
	pop	ebx
	jne	SHORT $L88126
; Line 4596
	mov	ecx, DWORD PTR _i$[ebp]
	xor	edx, edx
	call	@SetMissDir@8
; Line 4597
	or	DWORD PTR _missile[esi+88], -1
; Line 4598
	mov	DWORD PTR _missile[esi+92], edi
$L88126:
; Line 4601
	mov	eax, DWORD PTR _missile[esi+88]
	add	DWORD PTR _missile[esi+152], eax
; Line 4602
	mov	eax, DWORD PTR _missile[esi+152]
; Line 4603
	cmp	eax, edi
	jg	SHORT $L88127
; Line 4604
	test	eax, eax
	jle	SHORT $L88129
; Line 4605
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	eax
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 4606
	jmp	SHORT $L88129
$L88127:
; Line 4607
	mov	DWORD PTR _missile[esi+152], edi
$L88129:
; Line 4609
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L88130
; Line 4612
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
$L88130:
; Line 4614
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
; Line 4615
	leave
	ret	0
@MI_Guardian@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Chain@4
_TEXT	SEGMENT
_v3$ = -12
_v4$ = -8
_v11$ = -24
_CrawlNum$ = -104
_v18$ = -16
_id$ = -20
_j$ = -4
@MI_Chain@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4618
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
; Line 4646
	mov	esi, ecx
	and	DWORD PTR _CrawlNum$[ebp], 0
	imul	esi, 176				; 000000b0H
	push	edi
	mov	DWORD PTR _CrawlNum$[ebp+4], 3
	mov	eax, DWORD PTR _missile[esi+148]
; Line 4650
	mov	ecx, DWORD PTR _missile[esi+144]
; Line 4668
	mov	edx, DWORD PTR _missile[esi+116]
	mov	edi, DWORD PTR _missile[esi+4]
	mov	ebx, DWORD PTR _missile[esi+8]
; Line 4671
	push	eax
	mov	DWORD PTR _id$[ebp], edx
	push	ecx
	mov	edx, ebx
	mov	ecx, edi
	mov	DWORD PTR _v3$[ebp], edi
	mov	DWORD PTR _v4$[ebp], ebx
	mov	DWORD PTR _CrawlNum$[ebp+8], 12		; 0000000cH
	mov	DWORD PTR _CrawlNum$[ebp+12], 45	; 0000002dH
	mov	DWORD PTR _CrawlNum$[ebp+16], 94	; 0000005eH
	mov	DWORD PTR _CrawlNum$[ebp+20], 159	; 0000009fH
	mov	DWORD PTR _CrawlNum$[ebp+24], 240	; 000000f0H
	mov	DWORD PTR _CrawlNum$[ebp+28], 337	; 00000151H
	mov	DWORD PTR _CrawlNum$[ebp+32], 450	; 000001c2H
	mov	DWORD PTR _CrawlNum$[ebp+36], 579	; 00000243H
	mov	DWORD PTR _CrawlNum$[ebp+40], 724	; 000002d4H
	mov	DWORD PTR _CrawlNum$[ebp+44], 885	; 00000375H
	mov	DWORD PTR _CrawlNum$[ebp+48], 1062	; 00000426H
	mov	DWORD PTR _CrawlNum$[ebp+52], 1255	; 000004e7H
	mov	DWORD PTR _CrawlNum$[ebp+56], 1464	; 000005b8H
	mov	DWORD PTR _CrawlNum$[ebp+60], 1689	; 00000699H
	mov	DWORD PTR _CrawlNum$[ebp+64], 1930	; 0000078aH
	mov	DWORD PTR _CrawlNum$[ebp+68], 2187	; 0000088bH
	mov	DWORD PTR _CrawlNum$[ebp+72], 2460	; 0000099cH
	call	@GetDirection@16
; Line 4672
	push	DWORD PTR _missile[esi+48]
	mov	edx, ebx
	mov	ecx, edi
	push	1
	push	DWORD PTR _id$[ebp]
	push	0
	push	7
	push	eax
	push	DWORD PTR _missile[esi+148]
	push	DWORD PTR _missile[esi+144]
	call	@AddMissile@40
; Line 4673
	mov	edi, DWORD PTR _missile[esi+48]
	add	edi, 3
; Line 4674
	cmp	edi, 19					; 00000013H
	jle	SHORT $L88157
; Line 4675
	push	19					; 00000013H
	pop	edi
$L88157:
; Line 4676
	xor	edx, edx
	inc	edx
	cmp	edi, edx
	mov	DWORD PTR _j$[ebp], edx
	jle	$L88160
$L88158:
; Line 4677
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _CrawlNum$[ebp+eax*4]
; Line 4678
	movzx	ecx, BYTE PTR _CrawlTable[eax]
; Line 4679
	test	ecx, ecx
	jle	$L88165
; Line 4680
	lea	eax, DWORD PTR _CrawlTable[eax+2]
; Line 4681
	mov	DWORD PTR _v18$[ebp], ecx
	mov	DWORD PTR _v11$[ebp], eax
$L88163:
; Line 4684
	movsx	ebx, BYTE PTR [eax-1]
; Line 4685
	movsx	ecx, BYTE PTR [eax]
	add	ebx, DWORD PTR _v3$[ebp]
	mov	edx, DWORD PTR _v4$[ebp]
	add	ecx, edx
; Line 4687
	test	ebx, ebx
	mov	DWORD PTR -28+[ebp], ecx
	jle	SHORT $L88169
	cmp	ebx, 112				; 00000070H
	jge	SHORT $L88169
	test	ecx, ecx
	jle	SHORT $L88169
	cmp	ecx, 112				; 00000070H
	jge	SHORT $L88169
	mov	edx, ebx
	imul	edx, 112				; 00000070H
	add	edx, ecx
	cmp	DWORD PTR _dMonster[edx*4], 0
	jle	SHORT $L88169
; Line 4688
	mov	edx, DWORD PTR _v4$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _v3$[ebp]
	push	ebx
	call	@GetDirection@16
; Line 4689
	push	DWORD PTR _missile[esi+48]
	mov	edx, DWORD PTR _v4$[ebp]
	mov	ecx, DWORD PTR _v3$[ebp]
	push	1
	push	DWORD PTR _id$[ebp]
	push	0
	push	7
	push	eax
	push	DWORD PTR -28+[ebp]
	push	ebx
	call	@AddMissile@40
	mov	eax, DWORD PTR _v11$[ebp]
$L88169:
; Line 4693
	mov	ecx, DWORD PTR _v18$[ebp]
	inc	eax
	inc	eax
	dec	DWORD PTR _v18$[ebp]
	cmp	ecx, 1
	mov	DWORD PTR _v11$[ebp], eax
	jne	SHORT $L88163
	xor	edx, edx
	inc	edx
$L88165:
	inc	DWORD PTR _j$[ebp]
	cmp	DWORD PTR _j$[ebp], edi
	jl	$L88158
$L88160:
; Line 4698
	lea	eax, DWORD PTR _missile[esi+112]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, edx
	lea	edi, DWORD PTR [ecx-1]
	mov	DWORD PTR [eax], edi
	jne	SHORT $L88170
; Line 4700
	mov	DWORD PTR _missile[esi+52], edx
$L88170:
	pop	edi
	pop	esi
	pop	ebx
; Line 4701
	leave
	ret	0
@MI_Chain@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @mi_null_11@4
_TEXT	SEGMENT
@mi_null_11@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4709
	mov	eax, ecx
	push	ebx
	imul	eax, 176				; 000000b0H
	push	esi
	xor	esi, esi
	lea	edx, DWORD PTR _missile[eax+112]
	inc	esi
	cmp	DWORD PTR [edx], esi
	sete	bl
; Line 4710
	dec	DWORD PTR [edx]
; Line 4711
	test	bl, bl
	je	SHORT $L88176
; Line 4712
	mov	DWORD PTR _missile[eax+52], esi
$L88176:
; Line 4713
	mov	edx, DWORD PTR _missile[eax+92]
	cmp	edx, DWORD PTR _missile[eax+72]
	jne	SHORT $L88177
; Line 4714
	mov	DWORD PTR _missile[eax+104], esi
$L88177:
	pop	esi
	pop	ebx
; Line 4715
	jmp	@PutMissile@4
@mi_null_11@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Weapexp@4
_TEXT	SEGMENT
_i$ = -4
_ExpLight$ = -44
@MI_Weapexp@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4719
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _i$[ebp], esi
; Line 4734
	imul	esi, 176				; 000000b0H
	dec	DWORD PTR _missile[esi+112]
; Line 4736
	push	10					; 0000000aH
; Line 4741
	mov	ecx, DWORD PTR _missile[esi+116]
	pop	eax
	push	11					; 0000000bH
	mov	DWORD PTR _ExpLight$[ebp+4], eax
	mov	DWORD PTR _ExpLight$[ebp+20], eax
	pop	eax
	mov	DWORD PTR _ExpLight$[ebp+8], eax
	mov	DWORD PTR _ExpLight$[ebp+16], eax
; Line 4742
	mov	eax, DWORD PTR _missile[esi]
; Line 4750
	imul	ecx, 21720				; 000054d8H
; Line 4752
	imul	eax, 28					; 0000001cH
	cmp	DWORD PTR _missile[esi+148], 1
	mov	DWORD PTR _ExpLight$[ebp], 9
	mov	DWORD PTR _ExpLight$[ebp+12], 12	; 0000000cH
	mov	DWORD PTR _ExpLight$[ebp+24], 8
	mov	DWORD PTR _ExpLight$[ebp+28], 6
	mov	DWORD PTR _ExpLight$[ebp+32], 4
	mov	DWORD PTR _ExpLight$[ebp+36], 2
	jne	SHORT $L88192
	mov	edx, DWORD PTR _plr[ecx+21604]
	mov	ecx, DWORD PTR _plr[ecx+21608]
	mov	BYTE PTR _missiledata[eax+17], 1
; Line 4753
	jmp	SHORT $L88193
$L88192:
; Line 4754
	mov	edx, DWORD PTR _plr[ecx+21612]
; Line 4755
	mov	ecx, DWORD PTR _plr[ecx+21616]
; Line 4756
	mov	BYTE PTR _missiledata[eax+17], 2
$L88193:
; Line 4758
	push	0
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	0
	push	ecx
	mov	ecx, DWORD PTR _i$[ebp]
	call	@CheckMissileCol@28
; Line 4759
	mov	eax, DWORD PTR _missile[esi+144]
; Line 4760
	test	eax, eax
	je	SHORT $L88194
; Line 4761
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L88196
; Line 4762
	push	DWORD PTR _ExpLight$[ebp+eax*4]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 4763
	jmp	SHORT $L88196
$L88194:
; Line 4764
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	9
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
$L88196:
; Line 4766
	inc	DWORD PTR _missile[esi+144]
; Line 4767
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L88197
; Line 4768
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
; Line 4769
	jmp	SHORT $L88198
$L88197:
; Line 4772
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
$L88198:
	pop	esi
; Line 4774
	leave
	ret	0
@MI_Weapexp@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Misexp@4
_TEXT	SEGMENT
_i$ = -4
_ExpLight$ = -44
@MI_Misexp@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4777
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	mov	esi, ecx
; Line 4787
	push	9
	mov	DWORD PTR _i$[ebp], esi
; Line 4788
	imul	esi, 176				; 000000b0H
	pop	edx
	lea	eax, DWORD PTR _missile[esi+112]
; Line 4790
	push	10					; 0000000aH
	mov	DWORD PTR _ExpLight$[ebp], edx
	cmp	DWORD PTR [eax], 1
	pop	ecx
; Line 4792
	push	11					; 0000000bH
	mov	DWORD PTR _ExpLight$[ebp+4], ecx
	sete	bl
	dec	DWORD PTR [eax]
	pop	eax
; Line 4799
	test	bl, bl
	mov	DWORD PTR _ExpLight$[ebp+12], 12	; 0000000cH
	mov	DWORD PTR _ExpLight$[ebp+8], eax
	mov	DWORD PTR _ExpLight$[ebp+16], eax
	mov	DWORD PTR _ExpLight$[ebp+20], ecx
	mov	DWORD PTR _ExpLight$[ebp+24], 8
	mov	DWORD PTR _ExpLight$[ebp+28], 6
	mov	DWORD PTR _ExpLight$[ebp+32], 4
	mov	DWORD PTR _ExpLight$[ebp+36], 2
	je	SHORT $L88208
; Line 4802
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
; Line 4803
	jmp	SHORT $L88209
$L88208:
; Line 4804
	mov	eax, DWORD PTR _missile[esi+144]
; Line 4805
	test	eax, eax
	je	SHORT $L88210
; Line 4806
	push	DWORD PTR _ExpLight$[ebp+eax*4]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 4807
	jmp	SHORT $L88211
$L88210:
; Line 4808
	mov	ecx, DWORD PTR _missile[esi+4]
	push	edx
	mov	edx, DWORD PTR _missile[esi+8]
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
$L88211:
; Line 4810
	mov	ecx, DWORD PTR _i$[ebp]
	inc	DWORD PTR _missile[esi+144]
	call	@PutMissile@4
$L88209:
	pop	esi
	pop	ebx
; Line 4812
	leave
	ret	0
@MI_Misexp@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Acidsplat@4
_TEXT	SEGMENT
@MI_Acidsplat@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4815
	push	edi
	mov	edi, ecx
; Line 4823
	mov	eax, edi
	imul	eax, 176				; 000000b0H
	mov	edx, DWORD PTR _missile[eax+112]
; Line 4824
	cmp	edx, DWORD PTR _missile[eax+72]
	jne	SHORT $L88220
; Line 4825
	inc	DWORD PTR _missile[eax+4]
; Line 4826
	inc	DWORD PTR _missile[eax+8]
; Line 4827
	add	DWORD PTR _missile[eax+16], -32		; ffffffe0H
$L88220:
; Line 4829
	dec	edx
; Line 4831
	test	edx, edx
	mov	DWORD PTR _missile[eax+112], edx
	je	SHORT $L88221
; Line 4832
	mov	ecx, edi
	pop	edi
	jmp	@PutMissile@4
$L88221:
; Line 4834
	mov	edx, DWORD PTR _missile[eax+116]
	push	ebx
; Line 4847
	mov	ecx, edx
	push	DWORD PTR _missile[eax+48]
	imul	ecx, 228				; 000000e4H
	mov	DWORD PTR _missile[eax+52], 1
	xor	ebx, ebx
	mov	ecx, DWORD PTR _monster[ecx+224]
	cmp	BYTE PTR [ecx+86], 2
	mov	ecx, DWORD PTR _missile[eax+4]
	setge	bl
	inc	ebx
	push	ebx
	push	edx
	mov	edx, DWORD PTR _missile[eax+8]
	push	1
	push	59					; 0000003bH
	push	DWORD PTR _missile[eax+44]
	push	0
	push	edi
	call	@AddMissile@40
	pop	ebx
	pop	edi
; Line 4849
	ret	0
@MI_Acidsplat@4 ENDP
_TEXT	ENDS
EXTRN	_ViewX:DWORD
EXTRN	_ViewY:DWORD
EXTRN	@ChangeLightXY@12:NEAR
EXTRN	@ChangeVisionXY@12:NEAR
EXTRN	@PlrClrTrans@8:NEAR
EXTRN	@PlrDoTrans@8:NEAR
EXTRN	_ScrollInfo:BYTE
; Function compile flags: /Ogsy
;	COMDAT @MI_Teleport@4
_TEXT	SEGMENT
@MI_Teleport@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 4852
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 4866
	imul	edi, 176				; 000000b0H
	mov	ebx, DWORD PTR _missile[edi+116]
; Line 4867
	lea	eax, DWORD PTR _missile[edi+112]
; Line 4868
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jle	$L88237
; Line 4871
	mov	esi, ebx
	imul	esi, 21720				; 000054d8H
; Line 4872
	mov	ecx, DWORD PTR _plr[esi+56]
	mov	edx, DWORD PTR _plr[esi+60]
	mov	eax, ecx
	imul	eax, 112				; 00000070H
	and	BYTE PTR _dPlayer[eax+edx], 0
; Line 4873
	call	@PlrClrTrans@8
; Line 4874
	mov	ecx, DWORD PTR _missile[edi+4]
; Line 4875
	mov	edx, DWORD PTR _missile[edi+8]
; Line 4876
	mov	DWORD PTR _plr[esi+56], ecx
; Line 4877
	mov	DWORD PTR _plr[esi+60], edx
; Line 4878
	mov	DWORD PTR _plr[esi+64], ecx
; Line 4879
	mov	DWORD PTR _plr[esi+68], edx
; Line 4880
	mov	DWORD PTR _plr[esi+88], ecx
; Line 4881
	mov	DWORD PTR _plr[esi+92], edx
; Line 4882
	call	@PlrDoTrans@8
; Line 4883
	mov	edx, DWORD PTR _plr[esi+56]
; Line 4884
	mov	DWORD PTR _missile[edi+144], 1
; Line 4887
	mov	edi, edx
	mov	eax, DWORD PTR _plr[esi+60]
	imul	edi, 112				; 00000070H
	mov	cl, bl
	inc	cl
	cmp	BYTE PTR _leveltype, 0
	mov	BYTE PTR _dPlayer[edi+eax], cl
; Line 4888
	je	SHORT $L88238
; Line 4889
	mov	ecx, DWORD PTR _plr[esi+156]
	push	eax
	call	@ChangeLightXY@12
; Line 4890
	push	DWORD PTR _plr[esi+60]
	mov	edx, DWORD PTR _plr[esi+56]
	mov	ecx, DWORD PTR _plr[esi+160]
	call	@ChangeVisionXY@12
$L88238:
; Line 4892
	cmp	ebx, DWORD PTR _myplr
	jne	SHORT $L88240
; Line 4893
	mov	eax, DWORD PTR _plr[esi+56]
	sub	eax, DWORD PTR _ScrollInfo+8
	mov	DWORD PTR _ViewX, eax
; Line 4894
	mov	eax, DWORD PTR _plr[esi+60]
	sub	eax, DWORD PTR _ScrollInfo+12
	mov	DWORD PTR _ViewY, eax
; Line 4896
	jmp	SHORT $L88240
$L88237:
; Line 4897
	mov	DWORD PTR _missile[edi+52], 1
$L88240:
	pop	edi
	pop	esi
	pop	ebx
; Line 4899
	ret	0
@MI_Teleport@4 ENDP
_TEXT	ENDS
EXTRN	_stonendx:DWORD
EXTRN	@AddDead@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MI_Stone@4
_TEXT	SEGMENT
_i$ = -4
@MI_Stone@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4902
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 4912
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _i$[ebp], ecx
	mov	edi, DWORD PTR _missile[esi+148]
; Line 4913
	dec	DWORD PTR _missile[esi+112]
; Line 4915
	imul	edi, 228				; 000000e4H
	mov	ebx, DWORD PTR _monster[edi+148]
	test	ebx, ebx
	jne	SHORT $L88251
	cmp	BYTE PTR _missile[esi+56], 24		; 00000018H
	je	SHORT $L88251
; Line 4916
	and	DWORD PTR _missile[esi+44], ebx
; Line 4918
	push	18					; 00000012H
	pop	edx
	mov	DWORD PTR _missile[esi+96], 1
	call	@SetMissAnim@8
; Line 4919
	mov	DWORD PTR _missile[esi+112], 11		; 0000000bH
$L88251:
; Line 4921
	cmp	DWORD PTR _monster[edi+4], 15		; 0000000fH
	jne	SHORT $L88252
; Line 4922
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L88257
; Line 4924
	test	ebx, ebx
; Line 4925
	mov	DWORD PTR _missile[esi+52], 1
; Line 4926
	jl	SHORT $L88255
	je	SHORT $L88255
; Line 4929
	mov	eax, DWORD PTR _missile[esi+144]
	mov	DWORD PTR _monster[edi+4], eax
	jmp	SHORT $L88257
$L88255:
; Line 4927
	push	DWORD PTR _monster[edi+72]
	mov	al, BYTE PTR _stonendx
	mov	edx, DWORD PTR _monster[edi+36]
	mov	ecx, DWORD PTR _monster[edi+32]
	push	eax
	call	@AddDead@16
$L88257:
; Line 4931
	cmp	BYTE PTR _missile[esi+56], 24		; 00000018H
	jne	SHORT $L88260
; Line 4932
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
; Line 4933
	jmp	SHORT $L88260
$L88252:
; Line 4934
	mov	DWORD PTR _missile[esi+52], 1
$L88260:
	pop	edi
	pop	esi
	pop	ebx
; Line 4936
	leave
	ret	0
@MI_Stone@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Boom@4
_TEXT	SEGMENT
@MI_Boom@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4939
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 4945
	mov	esi, edi
; Line 4946
	xor	ebx, ebx
	imul	esi, 176				; 000000b0H
	inc	ebx
	dec	DWORD PTR _missile[esi+112]
	cmp	DWORD PTR _missile[esi+144], 0
	jne	SHORT $L88266
; Line 4947
	mov	edx, DWORD PTR _missile[esi+124]
	push	ebx
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	0
	push	edx
	call	@CheckMissileCol@28
$L88266:
; Line 4948
	cmp	DWORD PTR _missile[esi+128], 0
	je	SHORT $L88267
; Line 4949
	mov	DWORD PTR _missile[esi+144], ebx
$L88267:
; Line 4950
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L88268
; Line 4951
	mov	DWORD PTR _missile[esi+52], ebx
$L88268:
; Line 4952
	mov	ecx, edi
	pop	edi
	pop	esi
	pop	ebx
	jmp	@PutMissile@4
@MI_Boom@4 ENDP
_TEXT	ENDS
EXTRN	@MissToMonst@12:NEAR
; Function compile flags: /Ogsy
;	COMDAT @MI_Rhino@4
_TEXT	SEGMENT
_i$ = -8
_v3$ = -4
_v5$ = -28
_v10$ = -24
_a2$ = -16
_a3$ = -12
@MI_Rhino@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 4956
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	mov	ebx, ecx
	push	esi
; Line 4976
	mov	esi, ebx
	imul	esi, 176				; 000000b0H
	push	edi
	mov	DWORD PTR _i$[ebp], ebx
	mov	edi, DWORD PTR _missile[esi+116]
	mov	DWORD PTR _v3$[ebp], edi
; Line 4979
	imul	edi, 228				; 000000e4H
	cmp	DWORD PTR _monster[edi+4], 14		; 0000000eH
	jne	$LABEL_12$88288
; Line 4981
	call	@GetMissilePos@4
; Line 4982
	mov	eax, DWORD PTR _missile[esi+4]
; Line 4984
	mov	ecx, DWORD PTR _missile[esi+8]
	mov	DWORD PTR _v5$[ebp], eax
; Line 4985
	imul	eax, 112				; 00000070H
	add	eax, ecx
	mov	DWORD PTR _v10$[ebp], ecx
	and	DWORD PTR _dMonster[eax*4], 0
; Line 4987
	cmp	BYTE PTR _monster[edi+152], 24		; 00000018H
	mov	eax, DWORD PTR _missile[esi+20]
	jne	SHORT $L88289
; Line 4988
	add	eax, eax
; Line 4990
	mov	ecx, ebx
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	eax, eax
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 4991
	mov	eax, DWORD PTR _missile[esi+4]
	mov	DWORD PTR _a2$[ebp], eax
; Line 4992
	mov	eax, DWORD PTR _missile[esi+8]
	mov	DWORD PTR _a3$[ebp], eax
; Line 4993
	mov	eax, DWORD PTR _missile[esi+20]
	sub	DWORD PTR _missile[esi+36], eax
; Line 4994
	mov	eax, DWORD PTR _missile[esi+24]
	sub	DWORD PTR _missile[esi+40], eax
; Line 4995
	jmp	SHORT $L88290
$L88289:
; Line 4996
	add	DWORD PTR _missile[esi+36], eax
; Line 4997
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
$L88290:
; Line 4999
	mov	ecx, ebx
	call	@GetMissilePos@4
; Line 5000
	mov	ebx, DWORD PTR _missile[esi+4]
; Line 5001
	mov	eax, DWORD PTR _missile[esi+8]
; Line 5002
	mov	ecx, DWORD PTR _v3$[ebp]
	push	eax
	mov	edx, ebx
	mov	DWORD PTR -20+[ebp], eax
	call	@PosOkMonst@12
	test	eax, eax
	je	SHORT $L88292
	cmp	BYTE PTR _monster[edi+152], 24		; 00000018H
	jne	SHORT $L88291
	push	DWORD PTR _a3$[ebp]
	mov	edx, DWORD PTR _a2$[ebp]
	mov	ecx, DWORD PTR _v3$[ebp]
	call	@PosOkMonst@12
	test	eax, eax
	je	SHORT $L88292
$L88291:
; Line 5011
	mov	edx, ebx
	mov	eax, DWORD PTR -20+[ebp]
	imul	edx, 112				; 00000070H
	or	ecx, -1
	add	edx, eax
	sub	ecx, DWORD PTR _v3$[ebp]
	cmp	BYTE PTR _monster[edi+188], 0
	mov	DWORD PTR _monster[edi+40], ebx
	mov	DWORD PTR _monster[edi+48], ebx
	mov	DWORD PTR _dMonster[edx*4], ecx
; Line 5012
	mov	DWORD PTR _monster[edi+32], ebx
; Line 5013
	mov	DWORD PTR _monster[edi+44], eax
; Line 5014
	mov	DWORD PTR _monster[edi+52], eax
; Line 5015
	mov	DWORD PTR _monster[edi+36], eax
; Line 5016
	je	SHORT $L88293
; Line 5017
	mov	ecx, DWORD PTR _missile[esi+136]
	push	eax
	mov	edx, ebx
	call	@ChangeLightXY@12
$L88293:
; Line 5018
	mov	ecx, DWORD PTR _i$[ebp]
	call	@MoveMissilePos@4
; Line 5019
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	jmp	SHORT $L88271
$L88292:
; Line 5003
	push	DWORD PTR _v10$[ebp]
	mov	edx, DWORD PTR _v5$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	call	@MissToMonst@12
$LABEL_12$88288:
; Line 5005
	mov	DWORD PTR _missile[esi+52], 1
$L88271:
	pop	edi
	pop	esi
	pop	ebx
; Line 5020
	leave
	ret	0
@MI_Rhino@4 ENDP
_TEXT	ENDS
EXTRN	@PosOkMissile@8:NEAR
EXTRN	_opposite:BYTE
; Function compile flags: /Ogsy
;	COMDAT @mi_null_32@4
_TEXT	SEGMENT
_i$ = -20
_v8$ = -12
_y$ = -8
_a3$ = -4
@mi_null_32@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5023
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _i$[ebp], edi
; Line 5047
	call	@GetMissilePos@4
; Line 5049
	mov	esi, edi
; Line 5053
	mov	ecx, edi
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+8]
	mov	ebx, DWORD PTR _missile[esi+4]
	mov	DWORD PTR _a3$[ebp], eax
	mov	eax, DWORD PTR _missile[esi+20]
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 5054
	mov	edi, DWORD PTR _missile[esi+116]
; Line 5055
	mov	eax, DWORD PTR _missile[esi+8]
; Line 5056
	imul	edi, 228				; 000000e4H
; Line 5057
	mov	edx, DWORD PTR _missile[esi+4]
	mov	DWORD PTR _y$[ebp], eax
; Line 5058
	test	BYTE PTR _monster[edi+156], 16		; 00000010H
	mov	eax, DWORD PTR _monster[edi+76]
	mov	DWORD PTR -16+[ebp], edx
	je	SHORT $L88316
; Line 5060
	imul	eax, 228				; 000000e4H
	mov	ecx, DWORD PTR _monster[eax+32]
; Line 5061
	mov	eax, DWORD PTR _monster[eax+36]
; Line 5062
	jmp	SHORT $L89446
$L88316:
; Line 5064
	imul	eax, 21720				; 000054d8H
	mov	ecx, DWORD PTR _plr[eax+56]
; Line 5065
	mov	eax, DWORD PTR _plr[eax+60]
$L89446:
; Line 5070
	cmp	edx, ebx
	mov	DWORD PTR _v8$[ebp], eax
	jne	SHORT $L88319
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _a3$[ebp]
	je	SHORT $L88318
$L88319:
	test	BYTE PTR _missile[esi+144], 1
	je	SHORT $L88321
	mov	eax, ebx
	sub	eax, ecx
	push	eax
	call	_abs
	cmp	eax, 4
	pop	ecx
	jge	SHORT $L88320
	mov	eax, DWORD PTR _a3$[ebp]
	sub	eax, DWORD PTR _v8$[ebp]
	push	eax
	call	_abs
	cmp	eax, 4
	pop	ecx
	jge	SHORT $L88320
$L88321:
	cmp	DWORD PTR _missile[esi+148], 1
	jle	SHORT $L88318
$L88320:
	push	DWORD PTR _a3$[ebp]
	mov	ecx, DWORD PTR _missile[esi+116]
	mov	edx, ebx
	call	@PosOkMonst@12
	test	eax, eax
	je	SHORT $L88318
; Line 5071
	push	DWORD PTR _a3$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, ebx
	call	@MissToMonst@12
; Line 5072
	mov	ebx, DWORD PTR _v8$[ebp]
; Line 5073
	mov	DWORD PTR _missile[esi+52], 1
; Line 5074
	jmp	SHORT $L88324
$L88318:
; Line 5077
	mov	eax, DWORD PTR -16+[ebp]
	imul	eax, 112				; 00000070H
	test	BYTE PTR _monster[edi+156], 16		; 00000010H
	je	SHORT $L88323
	add	eax, DWORD PTR _y$[ebp]
	mov	ebx, DWORD PTR _dMonster[eax*4]
; Line 5078
	jmp	SHORT $L88324
$L88323:
; Line 5079
	mov	ecx, DWORD PTR _y$[ebp]
	movsx	ebx, BYTE PTR _dPlayer[eax+ecx]
$L88324:
; Line 5082
	mov	edx, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR -16+[ebp]
	call	@PosOkMissile@8
	test	eax, eax
	je	SHORT $L88326
	test	ebx, ebx
	jle	SHORT $L88327
	test	BYTE PTR _missile[esi+144], 1
	jne	SHORT $L88327
$L88326:
; Line 5084
	lea	eax, DWORD PTR _missile[esi+44]
	neg	DWORD PTR _missile[esi+20]
; Line 5086
	mov	ecx, DWORD PTR [eax]
	neg	DWORD PTR _missile[esi+24]
	mov	ecx, DWORD PTR _opposite[ecx*4]
; Line 5087
	mov	DWORD PTR [eax], ecx
; Line 5088
	mov	eax, DWORD PTR _monster[edi+220]
	mov	ecx, DWORD PTR [eax+ecx*4+52]
; Line 5089
	inc	DWORD PTR _missile[esi+148]
; Line 5091
	test	ebx, ebx
	mov	DWORD PTR _missile[esi+64], ecx
	jle	SHORT $L88327
; Line 5092
	or	DWORD PTR _missile[esi+144], 1
$L88327:
; Line 5094
	mov	ecx, DWORD PTR _i$[ebp]
	call	@MoveMissilePos@4
; Line 5095
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 5096
	leave
	ret	0
@mi_null_32@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_FirewallC@4
_TEXT	SEGMENT
_v2$ = -4
@MI_FirewallC@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 5099
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 5114
	imul	esi, 176				; 000000b0H
; Line 5115
	xor	edi, edi
	mov	edx, DWORD PTR _missile[esi+116]
	lea	eax, DWORD PTR _missile[esi+112]
	inc	edi
	mov	DWORD PTR _v2$[ebp], edx
	cmp	DWORD PTR [eax], edi
	sete	cl
; Line 5116
	dec	DWORD PTR [eax]
; Line 5118
	test	cl, cl
	je	SHORT $L88343
; Line 5119
	mov	DWORD PTR _missile[esi+52], edi
; Line 5120
	jmp	$L88350
$L88343:
; Line 5121
	mov	eax, DWORD PTR _missile[esi+152]
; Line 5122
	mov	ecx, DWORD PTR _missile[esi+144]
	shl	eax, 2
	mov	edi, DWORD PTR _XDirAdd[eax]
; Line 5124
	mov	ebx, DWORD PTR _YDirAdd[eax]
; Line 5130
	mov	eax, DWORD PTR _missile[esi+144]
	add	edi, ecx
	imul	eax, 112				; 00000070H
	mov	ecx, DWORD PTR _missile[esi+148]
	add	eax, ecx
	add	ebx, ecx
	mov	eax, DWORD PTR _dPiece[eax*4]
	cmp	BYTE PTR _nMissileTable[eax], 0
	jne	SHORT $L88346
	xor	eax, eax
	cmp	DWORD PTR _missile[esi+172], eax
	jne	SHORT $L88346
	cmp	edi, eax
	jle	SHORT $L88346
	cmp	edi, 112				; 00000070H
	jge	SHORT $L88346
	cmp	ebx, eax
	jle	SHORT $L88346
	cmp	ebx, 112				; 00000070H
	jge	SHORT $L88346
; Line 5143
	push	DWORD PTR _missile[esi+48]
	push	eax
	push	edx
	imul	edx, 21720				; 000054d8H
	push	eax
	mov	eax, DWORD PTR _missile[esi+144]
	push	5
	push	DWORD PTR _plr[edx+112]
	mov	edx, ecx
	push	ecx
	push	eax
	mov	ecx, eax
	call	@AddMissile@40
; Line 5146
	mov	edx, DWORD PTR _v2$[ebp]
	mov	DWORD PTR _missile[esi+144], edi
	mov	DWORD PTR _missile[esi+148], ebx
	jmp	SHORT $L88347
$L88346:
; Line 5131
	mov	DWORD PTR _missile[esi+172], 1
$L88347:
; Line 5148
	mov	eax, DWORD PTR _missile[esi+156]
; Line 5149
	mov	ecx, DWORD PTR _missile[esi+160]
	shl	eax, 2
	mov	edi, DWORD PTR _XDirAdd[eax]
; Line 5151
	mov	ebx, DWORD PTR _YDirAdd[eax]
; Line 5157
	mov	eax, DWORD PTR _missile[esi+160]
	add	edi, ecx
	imul	eax, 112				; 00000070H
	mov	ecx, DWORD PTR _missile[esi+164]
	add	eax, ecx
	add	ebx, ecx
	mov	eax, DWORD PTR _dPiece[eax*4]
	cmp	BYTE PTR _nMissileTable[eax], 0
	jne	SHORT $L88349
	xor	eax, eax
	cmp	DWORD PTR _missile[esi+168], eax
	jne	SHORT $L88349
	cmp	edi, eax
	jle	SHORT $L88349
	cmp	edi, 112				; 00000070H
	jge	SHORT $L88349
	cmp	ebx, eax
	jle	SHORT $L88349
	cmp	ebx, 112				; 00000070H
	jge	SHORT $L88349
; Line 5170
	push	DWORD PTR _missile[esi+48]
	push	eax
	push	edx
	imul	edx, 21720				; 000054d8H
	push	eax
	mov	eax, DWORD PTR _missile[esi+160]
	push	5
	push	DWORD PTR _plr[edx+112]
	mov	edx, ecx
	push	ecx
	push	eax
	mov	ecx, eax
	call	@AddMissile@40
; Line 5171
	mov	DWORD PTR _missile[esi+160], edi
; Line 5172
	mov	DWORD PTR _missile[esi+164], ebx
	jmp	SHORT $L88350
$L88349:
; Line 5158
	mov	DWORD PTR _missile[esi+168], 1
$L88350:
	pop	edi
	pop	esi
	pop	ebx
; Line 5175
	leave
	ret	0
@MI_FirewallC@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Infra@4
_TEXT	SEGMENT
@MI_Infra@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5178
	mov	eax, ecx
	push	esi
; Line 5185
	imul	eax, 176				; 000000b0H
	push	edi
; Line 5188
	xor	edx, edx
	lea	ecx, DWORD PTR _missile[eax+112]
	inc	edx
	dec	DWORD PTR [ecx]
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _missile[eax+116]
	mov	edi, ecx
	imul	edi, 21720				; 000054d8H
; Line 5189
	test	esi, esi
	mov	DWORD PTR _plr[edi+464], edx
	pop	edi
	pop	esi
	jne	SHORT $L88358
; Line 5190
	mov	DWORD PTR _missile[eax+52], edx
; Line 5191
	jmp	@CalcPlrItemVals@8
$L88358:
; Line 5193
	ret	0
@MI_Infra@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Apoca@4
_TEXT	SEGMENT
_id$ = -8
_v7$ = -4
@MI_Apoca@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5196
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	esi
	mov	esi, ecx
; Line 5206
	imul	esi, 176				; 000000b0H
	push	edi
; Line 5208
	xor	edx, edx
	mov	edi, DWORD PTR _missile[esi+148]
	mov	eax, DWORD PTR _missile[esi+116]
; Line 5209
	cmp	edi, DWORD PTR _missile[esi+152]
	mov	DWORD PTR _id$[ebp], eax
	jge	$LABEL_18$88370
	push	ebx
$L88371:
; Line 5212
	test	edx, edx
	jne	$L88373
; Line 5214
	mov	ecx, DWORD PTR _missile[esi+156]
; Line 5216
	cmp	ecx, DWORD PTR _missile[esi+160]
	mov	DWORD PTR _v7$[ebp], ecx
	jge	SHORT $LABEL_11$88376
; Line 5220
	mov	eax, ecx
	imul	eax, 112				; 00000070H
	add	eax, edi
; Line 5221
	mov	ebx, eax
	shl	ebx, 2
$L88379:
; Line 5222
	cmp	DWORD PTR _dMonster[ebx], 3
	jle	SHORT $L88381
	mov	eax, DWORD PTR _dPiece[ebx]
	cmp	BYTE PTR _nSolidTable[eax], 0
	jne	SHORT $L88381
; Line 5223
	mov	eax, DWORD PTR _id$[ebp]
	push	0
	push	DWORD PTR _missile[esi+124]
	imul	eax, 21720				; 000054d8H
	push	DWORD PTR _id$[ebp]
	mov	edx, edi
	push	0
	push	36					; 00000024H
	push	DWORD PTR _plr[eax+112]
	push	edi
	push	ecx
	call	@AddMissile@40
; Line 5224
	mov	ecx, DWORD PTR _v7$[ebp]
; Line 5225
	xor	edx, edx
	inc	edx
$L88381:
; Line 5227
	inc	ecx
	add	ebx, 448				; 000001c0H
; Line 5230
	cmp	ecx, DWORD PTR _missile[esi+160]
	mov	DWORD PTR _v7$[ebp], ecx
	jge	SHORT $L89458
; Line 5221
	test	edx, edx
	je	SHORT $L88379
; Line 5238
	jmp	SHORT $L88380
$L89458:
; Line 5231
	test	edx, edx
	jne	SHORT $L88380
$LABEL_11$88376:
; Line 5218
	mov	eax, DWORD PTR _missile[esi+164]
	mov	DWORD PTR _missile[esi+156], eax
$L88380:
; Line 5237
	inc	edi
; Line 5238
	cmp	edi, DWORD PTR _missile[esi+152]
	jl	$L88371
$L88373:
; Line 5239
	cmp	edx, 1
	pop	ebx
	je	SHORT $L88384
$LABEL_18$88370:
; Line 5241
	mov	DWORD PTR _missile[esi+52], 1
; Line 5242
	jmp	SHORT $L88385
$L88384:
; Line 5244
	mov	eax, DWORD PTR _v7$[ebp]
	dec	edi
	mov	DWORD PTR _missile[esi+148], edi
	mov	DWORD PTR _missile[esi+156], eax
$L88385:
	pop	edi
	pop	esi
; Line 5246
	leave
	ret	0
@MI_Apoca@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Wave@4
_TEXT	SEGMENT
_v7$ = -8
_v17$ = -32
_v19$ = -24
_v20$ = -40
_v21$ = -20
_v22$ = -4
_j$ = -16
_id$ = -12
_sx$ = -8
_sy$ = -20
_sya$ = -4
_v2$ = -16
@MI_Wave@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5249
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
; Line 5281
	mov	esi, ecx
	and	DWORD PTR _v19$[ebp], 0
	imul	esi, 176				; 000000b0H
	and	DWORD PTR _v17$[ebp], 0
	push	edi
; Line 5285
	push	DWORD PTR _missile[esi+148]
	mov	edi, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	mov	eax, DWORD PTR _missile[esi+116]
	push	DWORD PTR _missile[esi+144]
	mov	edx, edi
	mov	DWORD PTR _v2$[ebp], ecx
	mov	DWORD PTR _id$[ebp], eax
	mov	DWORD PTR _v20$[ebp], edi
	call	@GetDirection@16
; Line 5286
	movzx	ecx, al
	mov	DWORD PTR -36+[ebp], ecx
	add	ecx, -2					; fffffffeH
; Line 5289
	mov	ebx, eax
	and	ecx, 7
	shl	ebx, 2
	mov	DWORD PTR _v22$[ebp], ecx
; Line 5291
	mov	ecx, DWORD PTR _v2$[ebp]
	mov	edx, DWORD PTR _XDirAdd[ebx]
	mov	eax, DWORD PTR _YDirAdd[ebx]
	add	ecx, edx
	mov	DWORD PTR -28+[ebp], ebx
	mov	DWORD PTR _v7$[ebp], ecx
; Line 5292
	lea	ecx, DWORD PTR [eax+edi]
	mov	DWORD PTR _sy$[ebp], ecx
; Line 5293
	mov	ecx, DWORD PTR _v7$[ebp]
	imul	ecx, 112				; 00000070H
	add	ecx, eax
	add	ecx, edi
	mov	ecx, DWORD PTR _dPiece[ecx*4]
	cmp	BYTE PTR _nMissileTable[ecx], 0
	jne	$L88421
; Line 5294
	mov	edi, DWORD PTR _id$[ebp]
; Line 5295
	push	DWORD PTR _missile[esi+48]
	imul	edi, 21720				; 000054d8H
	mov	ecx, DWORD PTR _sy$[ebp]
	push	0
	push	DWORD PTR _id$[ebp]
	add	edi, OFFSET FLAT:_plr+112
	add	eax, ecx
	push	0
	push	14					; 0000000eH
	push	DWORD PTR [edi]
	push	eax
	mov	eax, DWORD PTR _v7$[ebp]
	add	edx, eax
	push	edx
	mov	edx, ecx
	mov	ecx, eax
	call	@AddMissile@40
; Line 5297
	mov	eax, DWORD PTR _v22$[ebp]
	mov	ecx, eax
	shl	ecx, 2
	mov	DWORD PTR -44+[ebp], ecx
	mov	eax, DWORD PTR _YDirAdd[ecx]
; Line 5299
	mov	edx, DWORD PTR _XDirAdd[ecx]
	add	eax, DWORD PTR _sy$[ebp]
	add	edx, DWORD PTR _v7$[ebp]
; Line 5304
	and	DWORD PTR _v21$[ebp], 0
	mov	DWORD PTR _sya$[ebp], eax
	mov	eax, DWORD PTR -36+[ebp]
	add	eax, 2
	mov	DWORD PTR _sx$[ebp], edx
	and	eax, 7
	mov	ecx, eax
	shl	ecx, 2
	mov	DWORD PTR -36+[ebp], ecx
	mov	eax, DWORD PTR _YDirAdd[ecx]
	add	eax, DWORD PTR _v20$[ebp]
	add	eax, DWORD PTR _YDirAdd[ebx]
; Line 5326
	mov	ebx, DWORD PTR _XDirAdd[ebx]
	add	ebx, DWORD PTR _XDirAdd[ecx]
	mov	ecx, DWORD PTR _missile[esi+48]
	sar	ecx, 1
	add	ebx, DWORD PTR _v2$[ebp]
	inc	ecx
	inc	ecx
	mov	DWORD PTR _j$[ebp], eax
	test	ecx, ecx
	jle	$L88421
; Line 5305
	jmp	SHORT $L88419
$L89473:
	mov	edx, DWORD PTR _sx$[ebp]
$L88419:
; Line 5306
	imul	edx, 112				; 00000070H
	add	edx, DWORD PTR _sya$[ebp]
	mov	ecx, DWORD PTR _dPiece[edx*4]
	cmp	BYTE PTR _nMissileTable[ecx], 0
	jne	SHORT $L88423
	cmp	DWORD PTR _v19$[ebp], 0
	jne	SHORT $L88423
	mov	ecx, DWORD PTR _sx$[ebp]
	test	ecx, ecx
	jle	SHORT $L88423
	cmp	ecx, 112				; 00000070H
	jge	SHORT $L88423
	cmp	DWORD PTR _sya$[ebp], 0
	jle	SHORT $L88423
	cmp	DWORD PTR _sya$[ebp], 112		; 00000070H
	jge	SHORT $L88423
; Line 5309
	push	DWORD PTR _missile[esi+48]
	mov	eax, DWORD PTR -28+[ebp]
	mov	edx, DWORD PTR _YDirAdd[eax]
	push	0
	push	DWORD PTR _id$[ebp]
	add	edx, DWORD PTR _sya$[ebp]
	mov	eax, DWORD PTR _XDirAdd[eax]
	push	0
	push	14					; 0000000eH
	push	DWORD PTR [edi]
	add	eax, ecx
	push	edx
	mov	edx, DWORD PTR _sya$[ebp]
	push	eax
	call	@AddMissile@40
; Line 5310
	mov	eax, DWORD PTR -44+[ebp]
	mov	ecx, DWORD PTR _XDirAdd[eax]
; Line 5311
	mov	eax, DWORD PTR _YDirAdd[eax]
	add	DWORD PTR _sx$[ebp], ecx
	add	DWORD PTR _sya$[ebp], eax
; Line 5312
	mov	eax, DWORD PTR _j$[ebp]
	jmp	SHORT $L88424
$L88423:
; Line 5307
	mov	DWORD PTR _v19$[ebp], 1
$L88424:
; Line 5314
	mov	ecx, ebx
	imul	ecx, 112				; 00000070H
	add	ecx, eax
	mov	ecx, DWORD PTR _dPiece[ecx*4]
	cmp	BYTE PTR _nMissileTable[ecx], 0
	jne	SHORT $L88426
	xor	ecx, ecx
	cmp	DWORD PTR _v17$[ebp], ecx
	jne	SHORT $L88426
	cmp	ebx, ecx
	jle	SHORT $L88426
	cmp	ebx, 112				; 00000070H
	jge	SHORT $L88426
	cmp	eax, ecx
	jle	SHORT $L88426
	cmp	eax, 112				; 00000070H
	jge	SHORT $L88426
; Line 5317
	push	DWORD PTR _missile[esi+48]
	push	ecx
	push	DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR -28+[ebp]
	push	14					; 0000000eH
	mov	edx, DWORD PTR _YDirAdd[ecx]
	push	DWORD PTR [edi]
	mov	ecx, DWORD PTR _XDirAdd[ecx]
	add	edx, eax
	add	ecx, ebx
	push	edx
	push	ecx
	mov	edx, eax
	mov	ecx, ebx
	call	@AddMissile@40
; Line 5318
	mov	ecx, DWORD PTR -36+[ebp]
; Line 5319
	mov	eax, DWORD PTR _j$[ebp]
	add	ebx, DWORD PTR _XDirAdd[ecx]
	add	eax, DWORD PTR _YDirAdd[ecx]
	mov	DWORD PTR _j$[ebp], eax
; Line 5320
	jmp	SHORT $L88420
$L88426:
; Line 5315
	mov	DWORD PTR _v17$[ebp], 1
$L88420:
; Line 5305
	mov	ecx, DWORD PTR _missile[esi+48]
	inc	DWORD PTR _v21$[ebp]
	sar	ecx, 1
	inc	ecx
	inc	ecx
	cmp	DWORD PTR _v21$[ebp], ecx
	jl	$L89473
$L88421:
; Line 5324
	lea	eax, DWORD PTR _missile[esi+112]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx-1]
	mov	DWORD PTR [eax], edx
	xor	eax, eax
	inc	eax
	cmp	ecx, eax
; Line 5325
	jne	SHORT $L88432
; Line 5326
	mov	DWORD PTR _missile[esi+52], eax
$L88432:
	pop	edi
	pop	esi
	pop	ebx
; Line 5327
	leave
	ret	0
@MI_Wave@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Nova@4
_TEXT	SEGMENT
_v8$ = -24
_sy$ = -20
_v3$ = -12
_midir$ = -8
_micaster$ = -4
@MI_Nova@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5330
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
; Line 5347
	mov	edi, ecx
	imul	edi, 176				; 000000b0H
	xor	edx, edx
; Line 5349
	mov	ecx, DWORD PTR _missile[edi+124]
	mov	eax, DWORD PTR _missile[edi+116]
	mov	ebx, DWORD PTR _missile[edi+4]
	mov	DWORD PTR _v3$[ebp], ecx
; Line 5352
	mov	ecx, DWORD PTR _missile[edi+8]
; Line 5353
	cmp	eax, -1
	mov	DWORD PTR -16+[ebp], eax
	mov	DWORD PTR _v8$[ebp], edx
	mov	DWORD PTR _sy$[ebp], ecx
	jne	SHORT $L88449
; Line 5354
	mov	DWORD PTR _midir$[ebp], edx
; Line 5355
	mov	DWORD PTR _micaster$[ebp], 1
; Line 5356
	jmp	SHORT $L88450
$L88449:
; Line 5358
	imul	eax, 21720				; 000054d8H
	mov	DWORD PTR _micaster$[ebp], edx
	mov	eax, DWORD PTR _plr[eax+112]
	mov	DWORD PTR _midir$[ebp], eax
$L88450:
; Line 5360
	mov	esi, OFFSET FLAT:_vCrawlTable+7
$L88451:
; Line 5362
	movzx	eax, BYTE PTR [esi-1]
; Line 5363
	cmp	edx, eax
	jne	SHORT $L88455
	movzx	ecx, BYTE PTR [esi]
	cmp	DWORD PTR _v8$[ebp], ecx
	je	$L88454
$L88455:
; Line 5364
	push	DWORD PTR _missile[edi+48]
	mov	edx, DWORD PTR _sy$[ebp]
	movzx	ecx, BYTE PTR [esi]
	push	DWORD PTR _v3$[ebp]
	add	ecx, edx
	add	eax, ebx
	push	DWORD PTR -16+[ebp]
	push	DWORD PTR _micaster$[ebp]
	push	4
	push	DWORD PTR _midir$[ebp]
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@AddMissile@40
; Line 5365
	push	DWORD PTR _missile[edi+48]
	mov	edx, DWORD PTR _sy$[ebp]
	movzx	eax, BYTE PTR [esi]
	push	DWORD PTR _v3$[ebp]
	mov	ecx, edx
	sub	ecx, eax
	push	DWORD PTR -16+[ebp]
	movzx	eax, BYTE PTR [esi-1]
	push	DWORD PTR _micaster$[ebp]
	push	4
	push	DWORD PTR _midir$[ebp]
	push	ecx
	mov	ecx, ebx
	sub	ecx, eax
	push	ecx
	mov	ecx, ebx
	call	@AddMissile@40
; Line 5366
	push	DWORD PTR _missile[edi+48]
	mov	edx, DWORD PTR _sy$[ebp]
	movzx	eax, BYTE PTR [esi]
	push	DWORD PTR _v3$[ebp]
	add	eax, edx
	mov	ecx, ebx
	push	DWORD PTR -16+[ebp]
	push	DWORD PTR _micaster$[ebp]
	push	4
	push	DWORD PTR _midir$[ebp]
	push	eax
	movzx	eax, BYTE PTR [esi-1]
	sub	ecx, eax
	push	ecx
	mov	ecx, ebx
	call	@AddMissile@40
; Line 5367
	push	DWORD PTR _missile[edi+48]
	mov	edx, DWORD PTR _sy$[ebp]
	movzx	eax, BYTE PTR [esi]
	push	DWORD PTR _v3$[ebp]
	mov	ecx, edx
	sub	ecx, eax
	push	DWORD PTR -16+[ebp]
	movzx	eax, BYTE PTR [esi-1]
	push	DWORD PTR _micaster$[ebp]
	add	eax, ebx
	push	4
	push	DWORD PTR _midir$[ebp]
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@AddMissile@40
; Line 5369
	movzx	eax, BYTE PTR [esi]
	movzx	edx, BYTE PTR [esi-1]
	mov	DWORD PTR _v8$[ebp], eax
$L88454:
; Line 5371
	add	esi, 30					; 0000001eH
; Line 5372
	cmp	esi, OFFSET FLAT:_vCrawlTable+697
	jl	$L88451
; Line 5373
	lea	eax, DWORD PTR _missile[edi+112]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx-1]
	mov	DWORD PTR [eax], edx
	xor	eax, eax
	inc	eax
	cmp	ecx, eax
	jne	SHORT $L88458
; Line 5375
	mov	DWORD PTR _missile[edi+52], eax
$L88458:
	pop	edi
	pop	esi
	pop	ebx
; Line 5376
	leave
	ret	0
@MI_Nova@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Blodboil@4
_TEXT	SEGMENT
@MI_Blodboil@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 5380
	imul	ecx, 176				; 000000b0H
	mov	DWORD PTR _missile[ecx+52], 1
; Line 5381
	ret	0
@MI_Blodboil@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Flame@4
_TEXT	SEGMENT
@MI_Flame@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5384
	push	ebx
	push	ebp
	mov	ebx, ecx
	push	esi
; Line 5397
	mov	esi, ebx
; Line 5403
	xor	ebp, ebp
	imul	esi, 176				; 000000b0H
	push	edi
	push	ebp
	mov	eax, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _missile[esi+124]
	dec	DWORD PTR _missile[esi+112]
	mov	ecx, DWORD PTR _missile[esi+4]
	mov	edi, DWORD PTR _missile[esi+112]
	dec	DWORD PTR _missile[esi+148]
	push	eax
	push	ecx
	push	1
	push	edx
	mov	ecx, ebx
	call	@CheckMissileCol@28
; Line 5404
	cmp	DWORD PTR _missile[esi+112], ebp
	jne	SHORT $L88474
	cmp	DWORD PTR _missile[esi+128], ebp
	je	SHORT $L88474
; Line 5405
	mov	DWORD PTR _missile[esi+112], edi
$L88474:
; Line 5406
	mov	eax, DWORD PTR _missile[esi+148]
; Line 5407
	cmp	eax, ebp
	jne	SHORT $L89488
; Line 5408
	mov	DWORD PTR _missile[esi+92], 20		; 00000014H
$L89488:
; Line 5409
	jg	SHORT $L88476
; Line 5410
	mov	eax, DWORD PTR _missile[esi+92]
; Line 5411
	cmp	eax, 11					; 0000000bH
	jle	SHORT $L88477
; Line 5412
	push	24					; 00000018H
	pop	ecx
	sub	ecx, eax
	mov	eax, ecx
$L88477:
; Line 5413
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	eax
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
$L88476:
; Line 5415
	cmp	DWORD PTR _missile[esi+112], ebp
	jne	SHORT $L88478
; Line 5418
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
$L88478:
; Line 5420
	cmp	DWORD PTR _missile[esi+148], ebp
	pop	edi
	pop	esi
	pop	ebp
	jg	SHORT $L88479
; Line 5421
	mov	ecx, ebx
	pop	ebx
	jmp	@PutMissile@4
$L88479:
	pop	ebx
; Line 5422
	ret	0
@MI_Flame@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Flamec@4
_TEXT	SEGMENT
_v7$ = -4
@MI_Flamec@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5425
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 5437
	mov	esi, edi
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi+20]
; Line 5438
	dec	DWORD PTR _missile[esi+112]
; Line 5439
	add	DWORD PTR _missile[esi+36], eax
; Line 5441
	mov	eax, DWORD PTR _missile[esi+24]
	mov	ebx, DWORD PTR _missile[esi+116]
	add	DWORD PTR _missile[esi+40], eax
; Line 5442
	call	@GetMissilePos@4
; Line 5443
	mov	ecx, DWORD PTR _missile[esi+4]
; Line 5444
	cmp	ecx, DWORD PTR _missile[esi+144]
	jne	SHORT $L88492
	mov	eax, DWORD PTR _missile[esi+8]
	cmp	eax, DWORD PTR _missile[esi+148]
	je	SHORT $L88491
$L88492:
; Line 5446
	mov	eax, ecx
	mov	edx, DWORD PTR _missile[esi+8]
	imul	eax, 112				; 00000070H
	add	eax, edx
	mov	eax, DWORD PTR _dPiece[eax*4]
	mov	DWORD PTR _v7$[ebp], eax
; Line 5447
	cmp	BYTE PTR _nMissileTable[eax], 0
	je	SHORT $L88493
; Line 5448
	and	DWORD PTR _missile[esi+112], 0
; Line 5449
	jmp	SHORT $L88494
$L88493:
; Line 5461
	push	DWORD PTR _missile[esi+48]
	mov	al, BYTE PTR _missile[esi+120]
	mov	BYTE PTR _v7$[ebp], al
	push	DWORD PTR _missile[esi+152]
	push	ebx
	push	DWORD PTR _v7$[ebp]
	push	48					; 00000030H
	push	edi
	push	DWORD PTR _missile[esi+32]
	push	DWORD PTR _missile[esi+28]
	call	@AddMissile@40
$L88494:
; Line 5465
	mov	eax, DWORD PTR _missile[esi+4]
	inc	DWORD PTR _missile[esi+152]
	mov	DWORD PTR _missile[esi+144], eax
; Line 5466
	mov	eax, DWORD PTR _missile[esi+8]
	mov	DWORD PTR _missile[esi+148], eax
$L88491:
; Line 5468
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L88497
	cmp	DWORD PTR _missile[esi+152], 3
	jne	SHORT $L88496
$L88497:
; Line 5469
	mov	DWORD PTR _missile[esi+52], 1
$L88496:
	pop	edi
	pop	esi
	pop	ebx
; Line 5470
	leave
	ret	0
@MI_Flamec@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Cbolt@4
_TEXT	SEGMENT
_i$ = -4
_bpath$ = -68
@MI_Cbolt@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5473
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _i$[ebp], esi
; Line 5488
	imul	esi, 176				; 000000b0H
	dec	DWORD PTR _missile[esi+112]
; Line 5492
	xor	edi, edi
	or	eax, -1
	xor	ebx, ebx
	inc	edi
	cmp	BYTE PTR _missile[esi+56], 3
	mov	DWORD PTR _bpath$[ebp], eax
	mov	DWORD PTR _bpath$[ebp+4], ebx
	mov	DWORD PTR _bpath$[ebp+8], edi
; Line 5493
	mov	DWORD PTR _bpath$[ebp+12], eax
; Line 5494
	mov	DWORD PTR _bpath$[ebp+16], ebx
; Line 5495
	mov	DWORD PTR _bpath$[ebp+20], edi
; Line 5496
	mov	DWORD PTR _bpath$[ebp+24], eax
; Line 5497
	mov	DWORD PTR _bpath$[ebp+28], eax
; Line 5498
	mov	DWORD PTR _bpath$[ebp+32], ebx
; Line 5499
	mov	DWORD PTR _bpath$[ebp+36], ebx
; Line 5500
	mov	DWORD PTR _bpath$[ebp+40], edi
; Line 5501
	mov	DWORD PTR _bpath$[ebp+44], edi
; Line 5502
	mov	DWORD PTR _bpath$[ebp+48], ebx
; Line 5503
	mov	DWORD PTR _bpath$[ebp+52], edi
; Line 5504
	mov	DWORD PTR _bpath$[ebp+56], eax
; Line 5505
	mov	DWORD PTR _bpath$[ebp+60], ebx
; Line 5506
	je	$L88513
; Line 5507
	mov	eax, DWORD PTR _missile[esi+152]
; Line 5508
	cmp	eax, ebx
	je	SHORT $L88514
; Line 5509
	dec	eax
	mov	DWORD PTR _missile[esi+152], eax
; Line 5510
	jmp	SHORT $L88515
$L88514:
; Line 5511
	lea	edx, DWORD PTR _missile[esi+140]
; Line 5520
	push	8
	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _bpath$[ebp+ecx*4]
	add	eax, DWORD PTR _missile[esi+148]
	and	eax, 7
	inc	ecx
	and	ecx, 15					; 0000000fH
	shl	eax, 2
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _YDirAdd[eax]
	mov	eax, DWORD PTR _XDirAdd[eax]
	add	edx, ecx
	push	edx
	mov	edx, DWORD PTR _missile[esi+4]
	add	eax, edx
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _i$[ebp]
	call	@GetMissileVel@24
; Line 5521
	mov	DWORD PTR _missile[esi+152], 16		; 00000010H
$L88515:
; Line 5524
	mov	eax, DWORD PTR _missile[esi+20]
; Line 5526
	mov	ecx, DWORD PTR _i$[ebp]
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 5527
	mov	edx, DWORD PTR _missile[esi+124]
	mov	ecx, DWORD PTR _i$[ebp]
	push	ebx
	push	DWORD PTR _missile[esi+8]
	push	DWORD PTR _missile[esi+4]
	push	ebx
	push	edx
	call	@CheckMissileCol@28
; Line 5528
	cmp	DWORD PTR _missile[esi+128], ebx
	je	SHORT $L88517
; Line 5534
	mov	ecx, DWORD PTR _i$[ebp]
	push	3
	pop	edx
	mov	DWORD PTR _missile[esi+144], 8
	mov	DWORD PTR _missile[esi+44], ebx
	mov	DWORD PTR _missile[esi+12], ebx
	mov	DWORD PTR _missile[esi+16], ebx
	call	@SetMissAnim@8
; Line 5536
	mov	eax, DWORD PTR _missile[esi+72]
; Line 5537
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _missile[esi+112], eax
	call	@GetMissilePos@4
$L88517:
; Line 5539
	push	DWORD PTR _missile[esi+144]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
$L88513:
; Line 5541
	cmp	DWORD PTR _missile[esi+112], ebx
	jne	SHORT $L88518
; Line 5544
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], edi
	call	@AddUnLight@4
$L88518:
; Line 5546
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 5547
	leave
	ret	0
@MI_Cbolt@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Hbolt@4
_TEXT	SEGMENT
@MI_Hbolt@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5550
	push	esi
	push	edi
	mov	edi, ecx
; Line 5561
	mov	esi, edi
	imul	esi, 176				; 000000b0H
	dec	DWORD PTR _missile[esi+112]
; Line 5562
	cmp	BYTE PTR _missile[esi+56], 28		; 0000001cH
	jne	SHORT $L88530
; Line 5563
	mov	eax, DWORD PTR _missile[esi+92]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	add	eax, 7
	push	eax
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 5564
	cmp	DWORD PTR _missile[esi+112], 0
	jne	$L88538
; Line 5567
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
; Line 5569
	jmp	$L88538
$L88530:
; Line 5570
	mov	eax, DWORD PTR _missile[esi+20]
; Line 5572
	mov	ecx, edi
	add	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 5573
	mov	eax, DWORD PTR _missile[esi+4]
; Line 5574
	cmp	eax, DWORD PTR _missile[esi+28]
	jne	SHORT $L88534
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+32]
	je	SHORT $L88533
$L88534:
; Line 5575
	mov	edx, DWORD PTR _missile[esi+124]
	push	0
	push	DWORD PTR _missile[esi+8]
	mov	ecx, edi
	push	eax
	push	0
	push	edx
	call	@CheckMissileCol@28
$L88533:
; Line 5576
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $L88535
; Line 5577
	mov	edx, DWORD PTR _missile[esi+4]
; Line 5578
	lea	eax, DWORD PTR _missile[esi+144]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $L88537
	mov	ecx, DWORD PTR _missile[esi+8]
	cmp	ecx, DWORD PTR _missile[esi+148]
	je	SHORT $L88538
$L88537:
; Line 5583
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _missile[esi+8]
	push	8
	push	eax
	mov	DWORD PTR _missile[esi+148], eax
	call	@ChangeLight@16
; Line 5585
	jmp	SHORT $L88538
$L88535:
; Line 5586
	mov	eax, DWORD PTR _missile[esi+20]
; Line 5588
	mov	ecx, edi
	sub	DWORD PTR _missile[esi+36], eax
	mov	eax, DWORD PTR _missile[esi+24]
	sub	DWORD PTR _missile[esi+40], eax
	call	@GetMissilePos@4
; Line 5589
	and	DWORD PTR _missile[esi+44], 0
; Line 5590
	mov	ecx, edi
	push	28					; 0000001cH
	pop	edx
	call	@SetMissAnim@8
; Line 5591
	mov	eax, DWORD PTR _missile[esi+72]
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
$L88538:
; Line 5594
	mov	ecx, edi
	pop	edi
	pop	esi
	jmp	@PutMissile@4
@MI_Hbolt@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Element@4
_TEXT	SEGMENT
_i$ = -4
_fx$ = -12
_fy$ = -8
_y$ = -16
_ya$ = -16
@MI_Element@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5598
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
; Line 5626
	mov	esi, ecx
	push	edi
	imul	esi, 176				; 000000b0H
	mov	DWORD PTR _i$[ebp], ecx
	dec	DWORD PTR _missile[esi+112]
; Line 5628
	mov	eax, DWORD PTR _missile[esi+116]
; Line 5629
	cmp	BYTE PTR _missile[esi+56], 25		; 00000019H
	mov	edi, DWORD PTR _missile[esi+124]
	mov	DWORD PTR -24+[ebp], eax
	jne	$L88563
; Line 5633
	imul	eax, 21720				; 000054d8H
; Line 5635
	push	DWORD PTR _missile[esi+92]
	mov	ecx, DWORD PTR _missile[esi+8]
	mov	edx, DWORD PTR _plr[eax+56]
	mov	ebx, DWORD PTR _missile[esi+4]
	mov	eax, DWORD PTR _plr[eax+60]
	mov	DWORD PTR _y$[ebp], ecx
	mov	DWORD PTR _fx$[ebp], edx
	push	ecx
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	edx, ebx
	mov	DWORD PTR _fy$[ebp], eax
	call	@ChangeLight@16
; Line 5636
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	push	DWORD PTR _y$[ebp]
	push	ebx
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88564
; Line 5637
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR _y$[ebp]
	mov	edx, edi
	push	ebx
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88564:
; Line 5638
	mov	eax, DWORD PTR _y$[ebp]
; Line 5639
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	inc	eax
	push	eax
	push	ebx
	mov	DWORD PTR -20+[ebp], eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88565
; Line 5640
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR -20+[ebp]
	mov	edx, edi
	push	ebx
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88565:
; Line 5641
	mov	eax, DWORD PTR _y$[ebp]
; Line 5642
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	dec	eax
	push	eax
	push	ebx
	mov	DWORD PTR -24+[ebp], eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88566
; Line 5643
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR -24+[ebp]
	mov	edx, edi
	push	ebx
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88566:
; Line 5644
	push	DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88567
; Line 5645
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR _y$[ebp]
	lea	eax, DWORD PTR [ebx+1]
	mov	edx, edi
	push	eax
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88567:
; Line 5646
	push	DWORD PTR -24+[ebp]
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88568
; Line 5647
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR -24+[ebp]
	lea	eax, DWORD PTR [ebx+1]
	mov	edx, edi
	push	eax
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88568:
; Line 5648
	push	DWORD PTR -20+[ebp]
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88569
; Line 5649
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR -20+[ebp]
	lea	eax, DWORD PTR [ebx+1]
	mov	edx, edi
	push	eax
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88569:
; Line 5651
	push	DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	dec	ebx
	push	ebx
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88570
; Line 5652
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR _y$[ebp]
	mov	edx, edi
	push	ebx
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88570:
; Line 5653
	push	DWORD PTR -20+[ebp]
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	push	ebx
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88571
; Line 5654
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR -20+[ebp]
	mov	edx, edi
	push	ebx
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88571:
; Line 5655
	push	DWORD PTR -24+[ebp]
	mov	edx, DWORD PTR _fy$[ebp]
	mov	ecx, DWORD PTR _fx$[ebp]
	push	ebx
	call	@CheckBlock@16
	test	eax, eax
	jne	SHORT $L88572
; Line 5656
	mov	ecx, DWORD PTR _i$[ebp]
	push	1
	push	DWORD PTR -24+[ebp]
	mov	edx, edi
	push	ebx
	push	1
	push	edi
	call	@CheckMissileCol@28
$L88572:
; Line 5657
	cmp	DWORD PTR _missile[esi+112], 0
	jne	$L88581
; Line 5660
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
; Line 5662
	jmp	$L88581
$L88563:
; Line 5663
	mov	eax, DWORD PTR _missile[esi+20]
	add	DWORD PTR _missile[esi+36], eax
; Line 5664
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
; Line 5665
	call	@GetMissilePos@4
; Line 5667
	mov	eax, DWORD PTR _missile[esi+8]
	mov	ebx, DWORD PTR _missile[esi+4]
; Line 5668
	mov	ecx, DWORD PTR _i$[ebp]
	push	0
	push	eax
	push	ebx
	push	0
	push	edi
	mov	edx, edi
	mov	DWORD PTR _ya$[ebp], eax
	call	@CheckMissileCol@28
; Line 5669
	cmp	DWORD PTR _missile[esi+152], 0
	jne	SHORT $L88575
	cmp	ebx, DWORD PTR _missile[esi+156]
	jne	SHORT $L88575
	mov	eax, DWORD PTR _ya$[ebp]
	cmp	eax, DWORD PTR _missile[esi+160]
	jne	SHORT $L88575
; Line 5670
	mov	DWORD PTR _missile[esi+152], 1
$L88575:
; Line 5671
	cmp	DWORD PTR _missile[esi+152], 1
	jne	$L88578
; Line 5674
	mov	edx, DWORD PTR _ya$[ebp]
	push	19					; 00000013H
	mov	ecx, ebx
	mov	DWORD PTR _missile[esi+152], 2
	mov	DWORD PTR _missile[esi+112], 255	; 000000ffH
	call	@FindClosest@12
; Line 5675
	test	eax, eax
	jg	SHORT $L88577
; Line 5676
	mov	eax, DWORD PTR -24+[ebp]
; Line 5677
	mov	ecx, DWORD PTR _i$[ebp]
	imul	eax, 21720				; 000054d8H
	mov	edi, DWORD PTR _plr[eax+112]
	mov	edx, edi
	call	@SetMissDir@8
; Line 5678
	mov	eax, edi
	shl	eax, 2
	push	16					; 00000010H
	mov	ecx, DWORD PTR _YDirAdd[eax]
	mov	eax, DWORD PTR _XDirAdd[eax]
	add	ecx, DWORD PTR _ya$[ebp]
	add	eax, ebx
	push	ecx
	push	eax
; Line 5679
	jmp	SHORT $L89508
$L88577:
; Line 5681
	mov	edi, eax
	mov	edx, DWORD PTR _ya$[ebp]
	imul	edi, 228				; 000000e4H
	mov	ecx, ebx
	push	DWORD PTR _monster[edi+36]
	push	DWORD PTR _monster[edi+32]
	call	@GetDirection8@16
; Line 5682
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, eax
	call	@SetMissDir@8
; Line 5683
	push	16					; 00000010H
	push	DWORD PTR _monster[edi+36]
	push	DWORD PTR _monster[edi+32]
$L89508:
	push	DWORD PTR _ya$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, ebx
	call	@GetMissileVel@24
$L88578:
; Line 5686
	mov	ecx, DWORD PTR _ya$[ebp]
	lea	eax, DWORD PTR _missile[esi+144]
	cmp	ebx, DWORD PTR [eax]
	jne	SHORT $L88580
	cmp	ecx, DWORD PTR _missile[esi+148]
	je	SHORT $L88579
$L88580:
; Line 5690
	push	8
	mov	DWORD PTR _missile[esi+148], ecx
	push	ecx
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	edx, ebx
	mov	DWORD PTR [eax], ebx
	call	@ChangeLight@16
$L88579:
; Line 5692
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $L88581
; Line 5694
	mov	ecx, DWORD PTR _i$[ebp]
	and	DWORD PTR _missile[esi+44], 0
	push	19					; 00000013H
	pop	edx
	call	@SetMissAnim@8
; Line 5695
	mov	eax, DWORD PTR _missile[esi+72]
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
$L88581:
; Line 5698
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
	pop	ebx
; Line 5699
	leave
	ret	0
@MI_Element@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Bonespirit@4
_TEXT	SEGMENT
_i$ = -4
_v3$ = -12
_v13$ = -16
_v16$ = -16
@MI_Bonespirit@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 5702
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 5725
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	push	edi
	mov	DWORD PTR _i$[ebp], ecx
	mov	eax, DWORD PTR _missile[esi+124]
; Line 5726
	dec	DWORD PTR _missile[esi+112]
; Line 5729
	cmp	DWORD PTR _missile[esi+44], 8
	mov	DWORD PTR _v3$[ebp], eax
	mov	eax, DWORD PTR _missile[esi+116]
	mov	DWORD PTR _v16$[ebp], eax
	jne	SHORT $L88603
; Line 5730
	push	DWORD PTR _missile[esi+92]
	mov	edx, DWORD PTR _missile[esi+4]
	lea	edi, DWORD PTR _missile[esi+136]
	push	DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR [edi]
	call	@ChangeLight@16
; Line 5731
	cmp	DWORD PTR _missile[esi+112], 0
	jne	$L88612
; Line 5734
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _missile[esi+52], 1
	call	@AddUnLight@4
; Line 5737
	jmp	$L88612
$L88603:
; Line 5738
	mov	eax, DWORD PTR _missile[esi+20]
	push	ebx
	add	DWORD PTR _missile[esi+36], eax
; Line 5739
	mov	eax, DWORD PTR _missile[esi+24]
	add	DWORD PTR _missile[esi+40], eax
; Line 5740
	call	@GetMissilePos@4
; Line 5741
	mov	ebx, DWORD PTR _missile[esi+8]
; Line 5742
	mov	edi, DWORD PTR _missile[esi+4]
; Line 5744
	mov	edx, DWORD PTR _v3$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	push	0
	push	ebx
	push	edi
	push	0
	push	edx
	mov	DWORD PTR -8+[ebp], edi
	call	@CheckMissileCol@28
; Line 5745
	xor	eax, eax
	inc	eax
	cmp	DWORD PTR _missile[esi+152], 0
	jne	SHORT $L88606
	cmp	edi, DWORD PTR _missile[esi+156]
	jne	SHORT $L88606
	cmp	ebx, DWORD PTR _missile[esi+160]
	jne	SHORT $L88606
; Line 5746
	mov	DWORD PTR _missile[esi+152], eax
$L88606:
; Line 5747
	cmp	DWORD PTR _missile[esi+152], eax
	jne	$L88609
; Line 5750
	push	19					; 00000013H
	mov	edx, ebx
	mov	ecx, edi
	mov	DWORD PTR _missile[esi+152], 2
	mov	DWORD PTR _missile[esi+112], 255	; 000000ffH
	call	@FindClosest@12
; Line 5751
	test	eax, eax
	jg	SHORT $L88608
; Line 5752
	mov	eax, DWORD PTR _v16$[ebp]
; Line 5753
	mov	ecx, DWORD PTR _i$[ebp]
	imul	eax, 21720				; 000054d8H
	mov	eax, DWORD PTR _plr[eax+112]
	mov	edx, eax
	mov	DWORD PTR _v13$[ebp], eax
	call	@SetMissDir@8
; Line 5754
	mov	eax, DWORD PTR _v13$[ebp]
	mov	edx, edi
	shl	eax, 2
	push	16					; 00000010H
	mov	ecx, DWORD PTR _YDirAdd[eax]
	mov	eax, DWORD PTR _XDirAdd[eax]
	add	ecx, ebx
	add	eax, edi
	push	ecx
	mov	ecx, DWORD PTR _i$[ebp]
	push	eax
	push	ebx
	call	@GetMissileVel@24
; Line 5755
	jmp	SHORT $L88609
$L88608:
; Line 5757
	mov	edi, eax
	imul	edi, 228				; 000000e4H
; Line 5759
	mov	edx, DWORD PTR _monster[edi+148]
	mov	eax, DWORD PTR _monster[edi+36]
	mov	ecx, DWORD PTR _monster[edi+32]
; Line 5760
	push	eax
	sar	edx, 7
	mov	DWORD PTR _missile[esi+124], edx
	push	ecx
	mov	ecx, DWORD PTR -8+[ebp]
	mov	edx, ebx
	call	@GetDirection8@16
; Line 5761
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, eax
	call	@SetMissDir@8
; Line 5762
	mov	edx, DWORD PTR -8+[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	push	16					; 00000010H
	push	DWORD PTR _monster[edi+36]
	push	DWORD PTR _monster[edi+32]
	push	ebx
	call	@GetMissileVel@24
; Line 5763
	mov	edi, DWORD PTR -8+[ebp]
$L88609:
; Line 5766
	lea	eax, DWORD PTR _missile[esi+144]
	cmp	edi, DWORD PTR [eax]
	jne	SHORT $L88611
	cmp	ebx, DWORD PTR _missile[esi+148]
	je	SHORT $L88610
$L88611:
; Line 5770
	mov	ecx, DWORD PTR _missile[esi+136]
	push	8
	push	ebx
	mov	edx, edi
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR _missile[esi+148], ebx
	call	@ChangeLight@16
$L88610:
; Line 5772
	cmp	DWORD PTR _missile[esi+112], 0
	pop	ebx
	jne	SHORT $L88612
; Line 5773
	mov	ecx, DWORD PTR _i$[ebp]
	push	8
	pop	edx
	call	@SetMissDir@8
; Line 5774
	mov	DWORD PTR _missile[esi+112], 7
$L88612:
; Line 5778
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
; Line 5779
	leave
	ret	0
@MI_Bonespirit@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_ResurrectBeam@4
_TEXT	SEGMENT
@MI_ResurrectBeam@4 PROC NEAR				; COMDAT
; _i$ = ecx
; Line 5782
	push	esi
	mov	esi, ecx
; Line 5787
	mov	edx, esi
	imul	edx, 176				; 000000b0H
	lea	eax, DWORD PTR _missile[edx+112]
	cmp	DWORD PTR [eax], 1
	sete	cl
; Line 5788
	dec	DWORD PTR [eax]
; Line 5789
	test	cl, cl
	je	SHORT $L88618
; Line 5790
	mov	DWORD PTR _missile[edx+52], 1
$L88618:
; Line 5791
	mov	ecx, esi
	pop	esi
	jmp	@PutMissile@4
@MI_ResurrectBeam@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @MI_Rportal@4
_TEXT	SEGMENT
_i$ = -4
_ExpLight$ = -72
@MI_Rportal@4 PROC NEAR					; COMDAT
; _i$ = ecx
; Line 5795
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
; Line 5806
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	push	edi
	push	15					; 0000000fH
	pop	eax
; Line 5808
	xor	edi, edi
	mov	DWORD PTR _ExpLight$[ebp+56], eax
	mov	DWORD PTR _ExpLight$[ebp+60], eax
	mov	DWORD PTR _ExpLight$[ebp+64], eax
	mov	eax, DWORD PTR _missile[esi+112]
	inc	edi
	mov	DWORD PTR _i$[ebp], ecx
; Line 5822
	cmp	eax, edi
	mov	DWORD PTR _ExpLight$[ebp], edi
	mov	DWORD PTR _ExpLight$[ebp+4], 2
	mov	DWORD PTR _ExpLight$[ebp+8], 3
	mov	DWORD PTR _ExpLight$[ebp+12], 4
	mov	DWORD PTR _ExpLight$[ebp+16], 5
	mov	DWORD PTR _ExpLight$[ebp+20], 6
	mov	DWORD PTR _ExpLight$[ebp+24], 7
	mov	DWORD PTR _ExpLight$[ebp+28], 8
	mov	DWORD PTR _ExpLight$[ebp+32], 9
	mov	DWORD PTR _ExpLight$[ebp+36], 10	; 0000000aH
	mov	DWORD PTR _ExpLight$[ebp+40], 11	; 0000000bH
	mov	DWORD PTR _ExpLight$[ebp+44], 12	; 0000000cH
	mov	DWORD PTR _ExpLight$[ebp+48], 13	; 0000000dH
	mov	DWORD PTR _ExpLight$[ebp+52], 14	; 0000000eH
	jle	SHORT $L88627
; Line 5823
	dec	eax
	mov	DWORD PTR _missile[esi+112], eax
$L88627:
; Line 5824
	mov	eax, DWORD PTR _missile[esi+112]
	cmp	eax, DWORD PTR _missile[esi+144]
	jne	SHORT $L88628
; Line 5825
	mov	edx, edi
	call	@SetMissDir@8
$L88628:
; Line 5826
	cmp	BYTE PTR _currlevel, 0
	je	SHORT $L88629
	cmp	DWORD PTR _missile[esi+44], edi
	je	SHORT $L88629
; Line 5827
	cmp	DWORD PTR _missile[esi+112], 0
	je	SHORT $LABEL_12$88631
; Line 5834
	cmp	DWORD PTR _missile[esi+148], 0
	jne	SHORT $L88633
; Line 5835
	mov	edx, DWORD PTR _missile[esi+8]
	mov	ecx, DWORD PTR _missile[esi+4]
	push	edi
	call	@AddLight@12
	mov	DWORD PTR _missile[esi+136], eax
$L88633:
; Line 5836
	mov	eax, DWORD PTR _missile[esi+148]
	mov	edx, DWORD PTR _missile[esi+4]
	mov	ecx, DWORD PTR _missile[esi+136]
	push	DWORD PTR _ExpLight$[ebp+eax*4]
	push	DWORD PTR _missile[esi+8]
	call	@ChangeLight@16
; Line 5837
	inc	DWORD PTR _missile[esi+148]
$L88629:
; Line 5839
	cmp	DWORD PTR _missile[esi+112], 0
	jne	SHORT $LABEL_13$88632
$LABEL_12$88631:
; Line 5831
	mov	ecx, DWORD PTR _missile[esi+136]
	mov	DWORD PTR _missile[esi+52], edi
	call	@AddUnLight@4
$LABEL_13$88632:
; Line 5842
	mov	ecx, DWORD PTR _i$[ebp]
	call	@PutMissile@4
	pop	edi
	pop	esi
; Line 5843
	leave
	ret	0
@MI_Rportal@4 ENDP
_TEXT	ENDS
PUBLIC	_ProcessMissiles
; Function compile flags: /Ogsy
;	COMDAT _ProcessMissiles
_TEXT	SEGMENT
_ProcessMissiles PROC NEAR				; COMDAT
; Line 5849
	mov	eax, DWORD PTR _nummissiles
	push	ebx
	xor	ebx, ebx
	xor	edx, edx
	cmp	eax, ebx
	push	esi
	jle	SHORT $L88640
$L88638:
; Line 5850
	mov	ecx, DWORD PTR _missileactive[edx*4]
	imul	ecx, 176				; 000000b0H
	mov	esi, DWORD PTR _missile[ecx+4]
	mov	ecx, DWORD PTR _missile[ecx+8]
	imul	esi, 112				; 00000070H
	add	ecx, esi
	and	BYTE PTR _dFlags[ecx], -2		; fffffffeH
	inc	edx
	cmp	edx, eax
; Line 5851
	mov	BYTE PTR _dMissile[ecx], bl
	jl	SHORT $L88638
$L88640:
; Line 5854
	xor	edx, edx
; Line 5855
	cmp	eax, ebx
	jle	SHORT $L88643
$L88642:
; Line 5856
	mov	ecx, DWORD PTR _missileactive[edx*4]
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	cmp	DWORD PTR _missile[esi+52], ebx
	je	SHORT $L88644
; Line 5857
	call	@DeleteMissile@8
; Line 5859
	mov	eax, DWORD PTR _nummissiles
	xor	edx, edx
	jmp	SHORT $L88645
$L88644:
; Line 5860
	inc	edx
$L88645:
; Line 5855
	cmp	edx, eax
	jl	SHORT $L88642
$L88643:
	push	edi
; Line 5867
	xor	edi, edi
	cmp	eax, ebx
	mov	DWORD PTR _MissilePreFlag, ebx
	mov	DWORD PTR _ManashieldFlag, ebx
	jle	$L88656
$L88646:
; Line 5868
	mov	ecx, DWORD PTR _missileactive[edi*4]
	mov	esi, ecx
; Line 5869
	imul	esi, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[esi]
	imul	eax, 28					; 0000001cH
	call	DWORD PTR _missiledata[eax+8]
; Line 5870
	test	BYTE PTR _missile[esi+60], 2
	jne	SHORT $L88647
; Line 5871
	lea	eax, DWORD PTR _missile[esi+84]
	inc	DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
; Line 5872
	cmp	ecx, DWORD PTR _missile[esi+68]
	jl	SHORT $L88647
; Line 5874
	mov	ecx, DWORD PTR _missile[esi+88]
	mov	DWORD PTR [eax], ebx
	lea	eax, DWORD PTR _missile[esi+92]
; Line 5875
	mov	esi, DWORD PTR _missile[esi+72]
	add	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, esi
	jle	SHORT $L88651
; Line 5876
	mov	DWORD PTR [eax], 1
$L88651:
; Line 5877
	cmp	DWORD PTR [eax], 1
	jge	SHORT $L88647
; Line 5878
	mov	DWORD PTR [eax], esi
$L88647:
; Line 5867
	mov	eax, DWORD PTR _nummissiles
	inc	edi
	cmp	edi, eax
	jl	SHORT $L88646
; Line 5883
	cmp	DWORD PTR _ManashieldFlag, ebx
	je	SHORT $L88656
; Line 5884
	xor	esi, esi
	cmp	eax, ebx
	jle	SHORT $L88656
$L88654:
; Line 5885
	mov	ecx, DWORD PTR _missileactive[esi*4]
	mov	edx, ecx
	imul	edx, 176				; 000000b0H
	cmp	DWORD PTR _missile[edx], 13		; 0000000dH
	jne	SHORT $L88655
; Line 5886
	call	@MI_Manashield@4
	mov	eax, DWORD PTR _nummissiles
$L88655:
	inc	esi
	cmp	esi, eax
	jl	SHORT $L88654
$L88656:
; Line 5891
	xor	edx, edx
; Line 5892
	cmp	eax, ebx
	pop	edi
	jle	SHORT $L88660
$L88659:
; Line 5893
	mov	ecx, DWORD PTR _missileactive[edx*4]
	mov	esi, ecx
	imul	esi, 176				; 000000b0H
	cmp	DWORD PTR _missile[esi+52], ebx
	je	SHORT $L88661
; Line 5894
	call	@DeleteMissile@8
; Line 5896
	mov	eax, DWORD PTR _nummissiles
	xor	edx, edx
	jmp	SHORT $L88662
$L88661:
; Line 5897
	inc	edx
$L88662:
; Line 5892
	cmp	edx, eax
	jl	SHORT $L88659
$L88660:
	pop	esi
	pop	ebx
; Line 5900
	ret	0
_ProcessMissiles ENDP
_TEXT	ENDS
PUBLIC	_missiles_process_charge
; Function compile flags: /Ogsy
;	COMDAT _missiles_process_charge
_TEXT	SEGMENT
_missiles_process_charge PROC NEAR			; COMDAT
; Line 5904
	push	ebx
; Line 5914
	mov	ebx, DWORD PTR _nummissiles
	push	edi
; Line 5915
	xor	edi, edi
	test	ebx, ebx
	jle	SHORT $L88674
	push	esi
$L88672:
; Line 5916
	mov	eax, DWORD PTR _missileactive[edi*4]
; Line 5917
	imul	eax, 176				; 000000b0H
; Line 5919
	movzx	ecx, BYTE PTR _missile[eax+56]
	imul	ecx, 59					; 0000003bH
	mov	esi, DWORD PTR _missile[eax+44]
	add	ecx, esi
	cmp	DWORD PTR _missile[eax], 20		; 00000014H
	mov	ecx, DWORD PTR _misfiledata[ecx*4+12]
	mov	DWORD PTR _missile[eax+64], ecx
; Line 5920
	jne	SHORT $L88673
; Line 5921
	mov	ecx, DWORD PTR _missile[eax+116]
	imul	ecx, 228				; 000000e4H
	mov	ecx, DWORD PTR _monster[ecx+220]
; Line 5922
	mov	dl, BYTE PTR [ecx]
; Line 5923
	cmp	dl, 64					; 00000040H
	jb	SHORT $L88678
	cmp	dl, 67					; 00000043H
	jg	SHORT $L88678
; Line 5929
	add	ecx, 224				; 000000e0H
	jmp	SHORT $L88681
$L88678:
; Line 5924
	cmp	dl, 89					; 00000059H
	jl	SHORT $L88680
	cmp	dl, 92					; 0000005cH
	jg	SHORT $L88680
; Line 5927
	add	ecx, 92					; 0000005cH
	jmp	SHORT $L88681
$L88680:
; Line 5925
	add	ecx, 48					; 00000030H
$L88681:
; Line 5931
	mov	ecx, DWORD PTR [ecx+esi*4+4]
	mov	DWORD PTR _missile[eax+64], ecx
$L88673:
	inc	edi
	cmp	edi, ebx
	jl	SHORT $L88672
	pop	esi
$L88674:
	pop	edi
	pop	ebx
; Line 5934
	ret	0
_missiles_process_charge ENDP
_TEXT	ENDS
PUBLIC	@ClearMissileSpot@4
; Function compile flags: /Ogsy
;	COMDAT @ClearMissileSpot@4
_TEXT	SEGMENT
@ClearMissileSpot@4 PROC NEAR				; COMDAT
; _mi$ = ecx
; Line 5938
	imul	ecx, 176				; 000000b0H
	mov	eax, DWORD PTR _missile[ecx+4]
	mov	ecx, DWORD PTR _missile[ecx+8]
	imul	eax, 112				; 00000070H
	add	eax, ecx
	and	BYTE PTR _dFlags[eax], -2		; fffffffeH
; Line 5939
	and	BYTE PTR _dMissile[eax], 0
; Line 5940
	ret	0
@ClearMissileSpot@4 ENDP
_TEXT	ENDS
END
