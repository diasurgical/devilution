; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/doom.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BH@KLAK@Items?2Map?2MapZDoom?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BI@DIMH@Items?2Map?2MapZ000?$CFi?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@JIIE@Items?2Map?2MapZ00?$CFi?4CEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _doom_get_frame_from_time
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _doom_alloc_cel
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _doom_cleanup
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _doom_load_graphics
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _doom_init
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _doom_close
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _doom_draw
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_doom_quest_time:DWORD
COMM	_doom_stars_drawn:DWORD
COMM	_pDoomCel:DWORD
COMM	_doomflag:DWORD
COMM	_DoomQuestState:DWORD
_DATA	ENDS
PUBLIC	_doom_get_frame_from_time
; Function compile flags: /Ogsy
;	COMDAT _doom_get_frame_from_time
_TEXT	SEGMENT
_doom_get_frame_from_time PROC NEAR			; COMDAT
; File Source/doom.cpp
; Line 33
	mov	eax, DWORD PTR _DoomQuestState
	cmp	eax, 36001				; 00008ca1H
	jne	SHORT $L84983
; Line 34
	push	31					; 0000001fH
	pop	eax
; Line 38
	ret	0
$L84983:
; Line 37
	cdq
	mov	ecx, 1200				; 000004b0H
	idiv	ecx
; Line 38
	ret	0
_doom_get_frame_from_time ENDP
_TEXT	ENDS
PUBLIC	_doom_alloc_cel
EXTRN	@DiabloAllocPtr@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _doom_alloc_cel
_TEXT	SEGMENT
_doom_alloc_cel PROC NEAR				; COMDAT
; Line 42
	mov	ecx, 229376				; 00038000H
	call	@DiabloAllocPtr@4
	mov	DWORD PTR _pDoomCel, eax
; Line 43
	ret	0
_doom_alloc_cel ENDP
_TEXT	ENDS
PUBLIC	_doom_cleanup
EXTRN	@mem_free_dbg@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT _doom_cleanup
_TEXT	SEGMENT
_doom_cleanup PROC NEAR					; COMDAT
; Line 47
	mov	ecx, DWORD PTR _pDoomCel
; Line 48
	and	DWORD PTR _pDoomCel, 0
; Line 49
	jmp	@mem_free_dbg@4
_doom_cleanup ENDP
_TEXT	ENDS
PUBLIC	_doom_load_graphics
PUBLIC	??_C@_0BH@KLAK@Items?2Map?2MapZDoom?4CEL?$AA@	; `string'
PUBLIC	??_C@_0BI@DIMH@Items?2Map?2MapZ000?$CFi?4CEL?$AA@ ; `string'
PUBLIC	??_C@_0BH@JIIE@Items?2Map?2MapZ00?$CFi?4CEL?$AA@ ; `string'
EXTRN	_sprintf:NEAR
EXTRN	@LoadFileWithMem@8:NEAR
EXTRN	_tempstr:BYTE
EXTRN	_strcpy:NEAR
;	COMDAT ??_C@_0BH@KLAK@Items?2Map?2MapZDoom?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BH@KLAK@Items?2Map?2MapZDoom?4CEL?$AA@ DB 'Items\Map\MapZDoom.CEL', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BI@DIMH@Items?2Map?2MapZ000?$CFi?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BI@DIMH@Items?2Map?2MapZ000?$CFi?4CEL?$AA@ DB 'Items\Map\MapZ000%i'
	DB	'.CEL', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@JIIE@Items?2Map?2MapZ00?$CFi?4CEL?$AA@
_DATA	SEGMENT
??_C@_0BH@JIIE@Items?2Map?2MapZ00?$CFi?4CEL?$AA@ DB 'Items\Map\MapZ00%i.C'
	DB	'EL', 00H					; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _doom_load_graphics
_TEXT	SEGMENT
_doom_load_graphics PROC NEAR				; COMDAT
; Line 54
	mov	eax, DWORD PTR _doom_quest_time
	cmp	eax, 31					; 0000001fH
	jne	SHORT $L84989
; Line 55
	push	OFFSET FLAT:??_C@_0BH@KLAK@Items?2Map?2MapZDoom?4CEL?$AA@ ; `string'
	push	OFFSET FLAT:_tempstr
	call	_strcpy
	pop	ecx
	pop	ecx
; Line 56
	jmp	SHORT $L84994
$L84989:
	cmp	eax, 10					; 0000000aH
; Line 57
	push	eax
	jge	SHORT $L84992
	push	OFFSET FLAT:??_C@_0BI@DIMH@Items?2Map?2MapZ000?$CFi?4CEL?$AA@ ; `string'
; Line 58
	jmp	SHORT $L85028
$L84992:
; Line 59
	push	OFFSET FLAT:??_C@_0BH@JIIE@Items?2Map?2MapZ00?$CFi?4CEL?$AA@ ; `string'
$L85028:
	push	OFFSET FLAT:_tempstr
	call	_sprintf
	add	esp, 12					; 0000000cH
$L84994:
; Line 61
	mov	edx, DWORD PTR _pDoomCel
	mov	ecx, OFFSET FLAT:_tempstr
	jmp	@LoadFileWithMem@8
_doom_load_graphics ENDP
_TEXT	ENDS
PUBLIC	_doom_init
; Function compile flags: /Ogsy
;	COMDAT _doom_init
_TEXT	SEGMENT
_doom_init PROC NEAR					; COMDAT
; Line 66
	mov	DWORD PTR _doomflag, 1
; Line 67
	call	_doom_alloc_cel
; Line 68
	call	_doom_get_frame_from_time
	sub	eax, 31					; 0000001fH
	neg	eax
	sbb	eax, eax
	and	al, -31					; ffffffe1H
	add	eax, 31					; 0000001fH
	mov	DWORD PTR _doom_quest_time, eax
; Line 69
	jmp	_doom_load_graphics
_doom_init ENDP
_TEXT	ENDS
PUBLIC	_doom_close
; Function compile flags: /Ogsy
;	COMDAT _doom_close
_TEXT	SEGMENT
_doom_close PROC NEAR					; COMDAT
; Line 74
	cmp	DWORD PTR _doomflag, 0
	je	SHORT $L84998
; Line 75
	and	DWORD PTR _doomflag, 0
; Line 76
	jmp	_doom_cleanup
$L84998:
; Line 78
	ret	0
_doom_close ENDP
_TEXT	ENDS
PUBLIC	_doom_draw
EXTRN	@CelDecodeOnly@20:NEAR
; Function compile flags: /Ogsy
;	COMDAT _doom_draw
_TEXT	SEGMENT
_doom_draw PROC NEAR					; COMDAT
; Line 82
	cmp	DWORD PTR _doomflag, 0
	je	SHORT $L84999
; Line 86
	cmp	DWORD PTR _doom_quest_time, 31		; 0000001fH
	je	SHORT $L85002
; Line 87
	inc	DWORD PTR _doom_stars_drawn
; Line 88
	cmp	DWORD PTR _doom_stars_drawn, 5
	jl	SHORT $L85002
; Line 89
	and	DWORD PTR _doom_stars_drawn, 0
; Line 90
	inc	DWORD PTR _doom_quest_time
; Line 91
	call	_doom_get_frame_from_time
	cmp	DWORD PTR _doom_quest_time, eax
	jle	SHORT $L85003
; Line 92
	and	DWORD PTR _doom_quest_time, 0
$L85003:
; Line 94
	call	_doom_load_graphics
$L85002:
; Line 98
	push	640					; 00000280H
	push	1
	push	DWORD PTR _pDoomCel
	mov	edx, 511				; 000001ffH
	push	64					; 00000040H
	pop	ecx
	call	@CelDecodeOnly@20
$L84999:
; Line 99
	ret	0
_doom_draw ENDP
_TEXT	ENDS
END
