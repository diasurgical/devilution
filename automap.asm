; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/automap.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BF@OBEF@Levels?2L1Data?2L1?4AMP?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@LHBF@Levels?2L2Data?2L2?4AMP?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@HKNK@Levels?2L3Data?2L3?4AMP?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@BLLF@Levels?2L4Data?2L4?4AMP?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FFNC@game?3?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@ENFA@password?3?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09EIMB@Level?3?5?$CFi?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _InitAutomapOnce
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _InitAutomap
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _StartAutomap
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapUp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapDown
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapLeft
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapRight
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapZoomIn
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapZoomOut
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DrawAutomap
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @DrawAutomapType@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DrawAutomapPlr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @GetAutomapType@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _DrawAutomapGame
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetAutomapView@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AutomapZoomReset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_automaptype:WORD:0200H
COMM	_automapflag:DWORD
COMM	_AmShiftTab:BYTE:020H
COMM	_automapview:BYTE:0640H
COMM	_AutoMapScale:DWORD
COMM	_AutoMapXOfs:DWORD
COMM	_AutoMapYOfs:DWORD
COMM	_AutoMapPosBits:DWORD
COMM	_AutoMapXPos:DWORD
COMM	_AutoMapYPos:DWORD
COMM	_AMPlayerX:DWORD
COMM	_AMPlayerY:DWORD
_DATA	ENDS
PUBLIC	_InitAutomapOnce
; Function compile flags: /Ogsy
;	COMDAT _InitAutomapOnce
_TEXT	SEGMENT
_InitAutomapOnce PROC NEAR				; COMDAT
; File Source/automap.cpp
; Line 41
	and	DWORD PTR _automapflag, 0
; Line 42
	mov	DWORD PTR _AutoMapScale, 50		; 00000032H
; Line 43
	mov	DWORD PTR _AutoMapPosBits, 32		; 00000020H
; Line 44
	mov	DWORD PTR _AutoMapXPos, 16		; 00000010H
; Line 45
	mov	DWORD PTR _AutoMapYPos, 8
; Line 46
	mov	DWORD PTR _AMPlayerX, 4
; Line 47
	mov	DWORD PTR _AMPlayerY, 2
; Line 48
	ret	0
_InitAutomapOnce ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@OBEF@Levels?2L1Data?2L1?4AMP?$AA@	; `string'
PUBLIC	??_C@_0BF@LHBF@Levels?2L2Data?2L2?4AMP?$AA@	; `string'
PUBLIC	??_C@_0BF@HKNK@Levels?2L3Data?2L3?4AMP?$AA@	; `string'
PUBLIC	??_C@_0BF@BLLF@Levels?2L4Data?2L4?4AMP?$AA@	; `string'
PUBLIC	_InitAutomap
EXTRN	_dFlags:BYTE
EXTRN	@mem_free_dbg@4:NEAR
EXTRN	@LoadFileInMem@8:NEAR
EXTRN	_memset:NEAR
EXTRN	_leveltype:BYTE
;	COMDAT ??_C@_0BF@BLLF@Levels?2L4Data?2L4?4AMP?$AA@
_DATA	SEGMENT
??_C@_0BF@BLLF@Levels?2L4Data?2L4?4AMP?$AA@ DB 'Levels\L4Data\L4.AMP', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@HKNK@Levels?2L3Data?2L3?4AMP?$AA@
_DATA	SEGMENT
??_C@_0BF@HKNK@Levels?2L3Data?2L3?4AMP?$AA@ DB 'Levels\L3Data\L3.AMP', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@LHBF@Levels?2L2Data?2L2?4AMP?$AA@
_DATA	SEGMENT
??_C@_0BF@LHBF@Levels?2L2Data?2L2?4AMP?$AA@ DB 'Levels\L2Data\L2.AMP', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BF@OBEF@Levels?2L1Data?2L1?4AMP?$AA@
_DATA	SEGMENT
??_C@_0BF@OBEF@Levels?2L1Data?2L1?4AMP?$AA@ DB 'Levels\L1Data\L1.AMP', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _InitAutomap
_TEXT	SEGMENT
_dwTiles$ = -4
_InitAutomap PROC NEAR					; COMDAT
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 59
	push	50					; 00000032H
	pop	edi
; Line 61
	xor	ecx, ecx
$L84996:
; Line 62
	mov	eax, edi
	push	100					; 00000064H
	shl	eax, 6
	cdq
	pop	esi
	idiv	esi
	mov	esi, eax
; Line 63
	mov	eax, 320				; 00000140H
	cdq
	idiv	esi
	add	al, al
	mov	esi, edx
	inc	al
; Line 64
	test	esi, esi
	mov	BYTE PTR _AmShiftTab[ecx], al
	je	SHORT $L84999
; Line 65
	inc	al
	mov	BYTE PTR _AmShiftTab[ecx], al
$L84999:
; Line 66
	mov	eax, edi
	push	100					; 00000064H
	shl	eax, 5
	cdq
	pop	ebx
	idiv	ebx
	cmp	esi, eax
	jl	SHORT $L85000
; Line 67
	inc	BYTE PTR _AmShiftTab[ecx]
$L85000:
; Line 68
	add	edi, 5
	inc	ecx
	cmp	ecx, 31					; 0000001fH
	jl	SHORT $L84996
; Line 71
	push	1024					; 00000400H
	push	0
	push	OFFSET FLAT:_automaptype
	call	_memset
; Line 73
	movzx	eax, BYTE PTR _leveltype
	add	esp, 12					; 0000000cH
	dec	eax
	je	SHORT $L85005
	dec	eax
	je	SHORT $L85008
	dec	eax
	je	SHORT $L85011
	dec	eax
	jne	$L85023
; Line 87
	mov	ecx, OFFSET FLAT:??_C@_0BF@BLLF@Levels?2L4Data?2L4?4AMP?$AA@ ; `string'
; Line 89
	jmp	SHORT $L85270
$L85011:
; Line 83
	mov	ecx, OFFSET FLAT:??_C@_0BF@HKNK@Levels?2L3Data?2L3?4AMP?$AA@ ; `string'
; Line 85
	jmp	SHORT $L85270
$L85008:
; Line 79
	mov	ecx, OFFSET FLAT:??_C@_0BF@LHBF@Levels?2L2Data?2L2?4AMP?$AA@ ; `string'
; Line 81
	jmp	SHORT $L85270
$L85005:
; Line 75
	mov	ecx, OFFSET FLAT:??_C@_0BF@OBEF@Levels?2L1Data?2L1?4AMP?$AA@ ; `string'
$L85270:
	lea	edx, DWORD PTR _dwTiles$[ebp]
	call	@LoadFileInMem@8
; Line 76
	shr	DWORD PTR _dwTiles$[ebp], 1
; Line 96
	xor	esi, esi
	mov	edx, eax
	inc	esi
	cmp	DWORD PTR _dwTiles$[ebp], esi
	jb	SHORT $L85020
$L85018:
; Line 97
	mov	bl, BYTE PTR [edx]
	inc	edx
; Line 99
	movzx	di, bl
	mov	cl, BYTE PTR [edx]
	inc	edx
	movzx	cx, cl
	shl	ecx, 8
	add	ecx, edi
	mov	WORD PTR _automaptype[esi*2], cx
	inc	esi
	cmp	esi, DWORD PTR _dwTiles$[ebp]
	jbe	SHORT $L85018
$L85020:
; Line 102
	mov	ecx, eax
	call	@mem_free_dbg@4
; Line 103
	push	1600					; 00000640H
	push	0
	push	OFFSET FLAT:_automapview
	call	_memset
	add	esp, 12					; 0000000cH
; Line 105
	xor	ecx, ecx
$L85021:
; Line 106
	push	112					; 00000070H
	lea	eax, DWORD PTR _dFlags[ecx]
	pop	edx
$L85024:
; Line 107
	and	BYTE PTR [eax], 127			; 0000007fH
	add	eax, 112				; 00000070H
	dec	edx
	jne	SHORT $L85024
	inc	ecx
	cmp	ecx, 112				; 00000070H
	jl	SHORT $L85021
$L85023:
	pop	edi
	pop	esi
	pop	ebx
; Line 109
	leave
	ret	0
_InitAutomap ENDP
_TEXT	ENDS
PUBLIC	_StartAutomap
; Function compile flags: /Ogsy
;	COMDAT _StartAutomap
_TEXT	SEGMENT
_StartAutomap PROC NEAR					; COMDAT
; Line 113
	and	DWORD PTR _AutoMapXOfs, 0
; Line 114
	and	DWORD PTR _AutoMapYOfs, 0
; Line 115
	mov	DWORD PTR _automapflag, 1
; Line 116
	ret	0
_StartAutomap ENDP
_TEXT	ENDS
PUBLIC	_AutomapUp
; Function compile flags: /Ogsy
;	COMDAT _AutomapUp
_TEXT	SEGMENT
_AutomapUp PROC NEAR					; COMDAT
; Line 120
	dec	DWORD PTR _AutoMapXOfs
; Line 121
	dec	DWORD PTR _AutoMapYOfs
; Line 122
	ret	0
_AutomapUp ENDP
_TEXT	ENDS
PUBLIC	_AutomapDown
; Function compile flags: /Ogsy
;	COMDAT _AutomapDown
_TEXT	SEGMENT
_AutomapDown PROC NEAR					; COMDAT
; Line 126
	inc	DWORD PTR _AutoMapXOfs
; Line 127
	inc	DWORD PTR _AutoMapYOfs
; Line 128
	ret	0
_AutomapDown ENDP
_TEXT	ENDS
PUBLIC	_AutomapLeft
; Function compile flags: /Ogsy
;	COMDAT _AutomapLeft
_TEXT	SEGMENT
_AutomapLeft PROC NEAR					; COMDAT
; Line 132
	dec	DWORD PTR _AutoMapXOfs
; Line 133
	inc	DWORD PTR _AutoMapYOfs
; Line 134
	ret	0
_AutomapLeft ENDP
_TEXT	ENDS
PUBLIC	_AutomapRight
; Function compile flags: /Ogsy
;	COMDAT _AutomapRight
_TEXT	SEGMENT
_AutomapRight PROC NEAR					; COMDAT
; Line 138
	inc	DWORD PTR _AutoMapXOfs
; Line 139
	dec	DWORD PTR _AutoMapYOfs
; Line 140
	ret	0
_AutomapRight ENDP
_TEXT	ENDS
PUBLIC	_AutomapZoomIn
; Function compile flags: /Ogsy
;	COMDAT _AutomapZoomIn
_TEXT	SEGMENT
_AutomapZoomIn PROC NEAR				; COMDAT
; Line 144
	mov	eax, DWORD PTR _AutoMapScale
	cmp	eax, 200				; 000000c8H
	jge	SHORT $L85033
; Line 145
	add	eax, 5
; Line 146
	push	100					; 00000064H
	mov	DWORD PTR _AutoMapScale, eax
	pop	ecx
	shl	eax, 6
	cdq
	idiv	ecx
	mov	DWORD PTR _AutoMapPosBits, eax
; Line 147
	sar	eax, 1
	mov	DWORD PTR _AutoMapXPos, eax
; Line 148
	sar	eax, 1
	mov	DWORD PTR _AutoMapYPos, eax
; Line 149
	sar	eax, 1
	mov	DWORD PTR _AMPlayerX, eax
; Line 150
	sar	eax, 1
	mov	DWORD PTR _AMPlayerY, eax
$L85033:
; Line 152
	ret	0
_AutomapZoomIn ENDP
_TEXT	ENDS
PUBLIC	_AutomapZoomOut
; Function compile flags: /Ogsy
;	COMDAT _AutomapZoomOut
_TEXT	SEGMENT
_AutomapZoomOut PROC NEAR				; COMDAT
; Line 156
	mov	eax, DWORD PTR _AutoMapScale
	cmp	eax, 50					; 00000032H
	jle	SHORT $L85035
; Line 157
	sub	eax, 5
; Line 158
	push	100					; 00000064H
	mov	DWORD PTR _AutoMapScale, eax
	pop	ecx
	shl	eax, 6
	cdq
	idiv	ecx
	mov	DWORD PTR _AutoMapPosBits, eax
; Line 159
	sar	eax, 1
	mov	DWORD PTR _AutoMapXPos, eax
; Line 160
	sar	eax, 1
	mov	DWORD PTR _AutoMapYPos, eax
; Line 161
	sar	eax, 1
	mov	DWORD PTR _AMPlayerX, eax
; Line 162
	sar	eax, 1
	mov	DWORD PTR _AMPlayerY, eax
$L85035:
; Line 164
	ret	0
_AutomapZoomOut ENDP
_TEXT	ENDS
PUBLIC	_DrawAutomap
PUBLIC	@DrawAutomapType@12
PUBLIC	_DrawAutomapPlr
PUBLIC	@GetAutomapType@12
PUBLIC	_DrawAutomapGame
EXTRN	_ViewX:DWORD
EXTRN	_ViewY:DWORD
EXTRN	_gpBuffer:DWORD
EXTRN	_questlog:DWORD
EXTRN	_gpBufEnd:DWORD
EXTRN	_invflag:DWORD
EXTRN	_sbookflag:DWORD
EXTRN	_chrflag:DWORD
EXTRN	_ScrollInfo:BYTE
_BSS	SEGMENT
_MapX	DD	01H DUP (?)
_MapY	DD	01H DUP (?)
; Function compile flags: /Ogsy
_BSS	ENDS
;	COMDAT _DrawAutomap
_TEXT	SEGMENT
_j$ = -20
_mapx$ = -16
_mapy$ = -24
_x$85070 = -20
_y$85071 = -4
_DrawAutomap PROC NEAR					; COMDAT
; Line 167
	sub	esp, 24					; 00000018H
; Line 173
	cmp	BYTE PTR _leveltype, 0
	jne	SHORT $L85044
; Line 249
	add	esp, 24					; 00000018H
; Line 174
	jmp	_DrawAutomapGame
$L85044:
; Line 178
	mov	eax, DWORD PTR _gpBuffer
	add	eax, 393216				; 00060000H
	mov	DWORD PTR _gpBufEnd, eax
; Line 180
	mov	eax, DWORD PTR _ViewX
	lea	ecx, DWORD PTR [eax-16]
; Line 181
	mov	eax, DWORD PTR _AutoMapXOfs
	sar	ecx, 1
	lea	edx, DWORD PTR [eax+ecx]
	test	edx, edx
	jge	SHORT $L85295
$L85047:
; Line 182
	inc	eax
	inc	edx
	js	SHORT $L85047
	mov	DWORD PTR _AutoMapXOfs, eax
$L85295:
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 183
	push	40					; 00000028H
	lea	edx, DWORD PTR [eax+ecx]
	pop	edi
	cmp	edx, edi
	jl	SHORT $L85051
$L85050:
; Line 184
	dec	eax
	dec	edx
	cmp	edx, edi
	jge	SHORT $L85050
	mov	DWORD PTR _AutoMapXOfs, eax
$L85051:
; Line 185
	add	ecx, eax
; Line 187
	mov	eax, DWORD PTR _ViewY
	mov	DWORD PTR _MapX, ecx
	lea	esi, DWORD PTR [eax-16]
; Line 188
	mov	eax, DWORD PTR _AutoMapYOfs
	sar	esi, 1
	lea	edx, DWORD PTR [eax+esi]
	test	edx, edx
	jge	SHORT $L85297
$L85053:
; Line 189
	inc	eax
	inc	edx
	js	SHORT $L85053
	mov	DWORD PTR _AutoMapYOfs, eax
$L85297:
; Line 190
	lea	edx, DWORD PTR [eax+esi]
	cmp	edx, edi
	jl	SHORT $L85057
$L85056:
; Line 191
	dec	eax
	dec	edx
	cmp	edx, edi
	jge	SHORT $L85056
	mov	DWORD PTR _AutoMapYOfs, eax
$L85057:
; Line 194
	mov	ebp, DWORD PTR _AutoMapScale
	add	esi, eax
	push	5
	mov	DWORD PTR _MapY, esi
	lea	eax, DWORD PTR [ebp-50]
	pop	edi
	cdq
	idiv	edi
; Line 195
	mov	edx, DWORD PTR _ScrollInfo+4
	movsx	ebx, BYTE PTR _AmShiftTab[eax]
	mov	eax, DWORD PTR _ScrollInfo
	add	edx, eax
	test	edx, edx
	je	SHORT $L85058
; Line 196
	inc	ebx
$L85058:
; Line 197
	sub	ecx, ebx
; Line 198
	dec	esi
; Line 200
	test	bl, 1
	mov	DWORD PTR _mapx$[esp+40], ecx
	mov	DWORD PTR _mapy$[esp+40], esi
	je	SHORT $L85059
; Line 201
	lea	ecx, DWORD PTR [ebx-1]
	mov	edi, 384				; 00000180H
	sar	ecx, 1
	imul	ecx, DWORD PTR _AutoMapPosBits
	sub	edi, ecx
; Line 202
	lea	ecx, DWORD PTR [ebx+1]
	sar	ecx, 1
	imul	ecx, DWORD PTR _AutoMapXPos
	mov	esi, 336				; 00000150H
	sub	esi, ecx
; Line 203
	jmp	SHORT $L85060
$L85059:
; Line 204
	mov	edx, DWORD PTR _AutoMapXPos
	mov	ecx, ebx
	sar	ecx, 1
	mov	esi, ecx
; Line 205
	imul	ecx, edx
	imul	esi, DWORD PTR _AutoMapPosBits
	mov	edi, edx
	sub	edi, esi
	mov	esi, 336				; 00000150H
	sub	esi, ecx
	add	edi, 384				; 00000180H
	sub	esi, DWORD PTR _AutoMapYPos
$L85060:
; Line 207
	test	BYTE PTR _ViewX, 1
	mov	ecx, DWORD PTR _AMPlayerX
	je	SHORT $L85061
; Line 208
	sub	edi, DWORD PTR _AutoMapYPos
; Line 209
	sub	esi, ecx
$L85061:
; Line 211
	test	BYTE PTR _ViewY, 1
	je	SHORT $L85062
; Line 212
	add	edi, DWORD PTR _AutoMapYPos
; Line 213
	sub	esi, ecx
$L85062:
; Line 216
	imul	eax, ebp
	push	100					; 00000064H
	cdq
	pop	ecx
	idiv	ecx
	sar	eax, 1
	add	edi, eax
; Line 217
	mov	eax, DWORD PTR _ScrollInfo+4
	imul	eax, ebp
	cdq
	idiv	ecx
; Line 218
	xor	ecx, ecx
	sar	eax, 1
	add	esi, eax
	cmp	DWORD PTR _invflag, ecx
	mov	eax, 160				; 000000a0H
	jne	SHORT $L85064
	cmp	DWORD PTR _sbookflag, ecx
	je	SHORT $L85063
$L85064:
; Line 219
	sub	edi, eax
$L85063:
; Line 221
	cmp	DWORD PTR _chrflag, ecx
	jne	SHORT $L85066
	cmp	DWORD PTR _questlog, ecx
	je	SHORT $L85065
$L85066:
; Line 222
	add	edi, eax
$L85065:
; Line 225
	lea	eax, DWORD PTR [ebx+1]
	cmp	eax, ecx
	jl	$L85069
	inc	eax
	mov	DWORD PTR -8+[esp+40], eax
$L85067:
; Line 229
	xor	ebp, ebp
	mov	DWORD PTR _x$85070[esp+40], edi
	test	ebx, ebx
	jle	SHORT $L85074
	mov	eax, DWORD PTR _mapy$[esp+40]
	mov	DWORD PTR -12+[esp+40], eax
$L85072:
; Line 230
	mov	eax, DWORD PTR _mapx$[esp+40]
	mov	edx, DWORD PTR -12+[esp+40]
	push	1
	lea	ecx, DWORD PTR [eax+ebp]
	call	@GetAutomapType@12
; Line 231
	test	ax, ax
	je	SHORT $L85076
; Line 232
	mov	ecx, DWORD PTR _x$85070[esp+40]
	push	eax
	mov	edx, esi
	call	@DrawAutomapType@12
$L85076:
; Line 233
	mov	eax, DWORD PTR _AutoMapPosBits
	add	DWORD PTR _x$85070[esp+40], eax
	inc	ebp
	dec	DWORD PTR -12+[esp+40]
	cmp	ebp, ebx
	jl	SHORT $L85072
$L85074:
; Line 237
	mov	eax, DWORD PTR _AutoMapYPos
	inc	DWORD PTR _mapy$[esp+40]
; Line 238
	and	DWORD PTR _j$[esp+40], 0
	mov	ebp, edi
	sub	ebp, DWORD PTR _AutoMapXPos
	add	eax, esi
	test	ebx, ebx
	mov	DWORD PTR _y$85071[esp+40], eax
	jl	SHORT $L85079
	mov	eax, DWORD PTR _mapy$[esp+40]
	mov	DWORD PTR -12+[esp+40], eax
$L85077:
; Line 239
	mov	eax, DWORD PTR _mapx$[esp+40]
	mov	ecx, DWORD PTR _j$[esp+40]
	mov	edx, DWORD PTR -12+[esp+40]
	push	1
	add	ecx, eax
	call	@GetAutomapType@12
; Line 240
	test	ax, ax
	je	SHORT $L85081
; Line 241
	mov	edx, DWORD PTR _y$85071[esp+40]
	push	eax
	mov	ecx, ebp
	call	@DrawAutomapType@12
$L85081:
; Line 242
	add	ebp, DWORD PTR _AutoMapPosBits
	inc	DWORD PTR _j$[esp+40]
	dec	DWORD PTR -12+[esp+40]
	cmp	DWORD PTR _j$[esp+40], ebx
	jle	SHORT $L85077
$L85079:
; Line 244
	inc	DWORD PTR _mapx$[esp+40]
; Line 245
	add	esi, DWORD PTR _AutoMapXPos
	dec	DWORD PTR -8+[esp+40]
	jne	$L85067
$L85069:
; Line 247
	call	_DrawAutomapPlr
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 249
	add	esp, 24					; 00000018H
	jmp	_DrawAutomapGame
_DrawAutomap ENDP
_TEXT	ENDS
EXTRN	@ENG_set_pixel@12:NEAR
EXTRN	@DrawLine@20:NEAR
; Function compile flags: /Ogsy
;	COMDAT @DrawAutomapType@12
_TEXT	SEGMENT
_automap_type$ = 8
_do_horz$ = -24
_do_cave_horz$ = -28
_do_cave_vert$ = -20
_x1$ = -12
_y1$ = -16
_x2$ = -8
_y2$ = 8
_flags$ = -1
@DrawAutomapType@12 PROC NEAR				; COMDAT
; _sx$ = ecx
; _sy$ = edx
; Line 255
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 262
	mov	eax, DWORD PTR _automap_type$[ebp]
	push	ebx
	mov	ebx, ecx
	xor	ecx, ecx
	mov	cl, ah
	push	esi
	push	edi
	mov	edi, edx
; Line 264
	test	cl, 64					; 00000040H
	mov	BYTE PTR _flags$[ebp], cl
	mov	esi, 200				; 000000c8H
	je	$L85098
; Line 265
	push	esi
	mov	ecx, ebx
	call	@ENG_set_pixel@12
; Line 266
	mov	edx, edi
	mov	ecx, ebx
	sub	edx, DWORD PTR _AMPlayerY
	sub	ecx, DWORD PTR _AMPlayerX
	push	esi
	call	@ENG_set_pixel@12
; Line 267
	mov	eax, DWORD PTR _AMPlayerY
	mov	ecx, ebx
	sub	ecx, DWORD PTR _AMPlayerX
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	call	@ENG_set_pixel@12
; Line 268
	mov	eax, DWORD PTR _AMPlayerX
	mov	edx, edi
	sub	edx, DWORD PTR _AMPlayerY
	push	esi
	lea	ecx, DWORD PTR [eax+ebx]
	call	@ENG_set_pixel@12
; Line 269
	mov	eax, DWORD PTR _AMPlayerY
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	mov	eax, DWORD PTR _AMPlayerX
	lea	ecx, DWORD PTR [eax+ebx]
	call	@ENG_set_pixel@12
; Line 270
	mov	ecx, ebx
	mov	edx, edi
	sub	ecx, DWORD PTR _AutoMapYPos
	push	esi
	call	@ENG_set_pixel@12
; Line 271
	mov	eax, DWORD PTR _AutoMapYPos
	mov	edx, edi
	push	esi
	lea	ecx, DWORD PTR [eax+ebx]
	call	@ENG_set_pixel@12
; Line 272
	mov	edx, edi
	mov	ecx, ebx
	sub	edx, DWORD PTR _AMPlayerX
	push	esi
	call	@ENG_set_pixel@12
; Line 273
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, ebx
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	call	@ENG_set_pixel@12
; Line 274
	mov	ecx, DWORD PTR _AMPlayerX
	mov	eax, DWORD PTR _AMPlayerY
	sub	ecx, DWORD PTR _AutoMapXPos
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	add	ecx, ebx
	call	@ENG_set_pixel@12
; Line 275
	mov	ecx, DWORD PTR _AutoMapXPos
	mov	eax, DWORD PTR _AMPlayerY
	sub	ecx, DWORD PTR _AMPlayerX
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	add	ecx, ebx
	call	@ENG_set_pixel@12
; Line 276
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, ebx
	sub	ecx, DWORD PTR _AutoMapYPos
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	call	@ENG_set_pixel@12
; Line 277
	mov	eax, DWORD PTR _AMPlayerX
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	mov	eax, DWORD PTR _AutoMapYPos
	lea	ecx, DWORD PTR [eax+ebx]
	call	@ENG_set_pixel@12
; Line 278
	mov	edx, DWORD PTR _AutoMapYPos
	mov	ecx, ebx
	sub	edx, DWORD PTR _AMPlayerY
	sub	ecx, DWORD PTR _AMPlayerX
	push	esi
	add	edx, edi
	call	@ENG_set_pixel@12
; Line 279
	push	esi
	mov	edx, DWORD PTR _AutoMapYPos
	mov	eax, DWORD PTR _AMPlayerX
	sub	edx, DWORD PTR _AMPlayerY
	lea	ecx, DWORD PTR [eax+ebx]
	add	edx, edi
	call	@ENG_set_pixel@12
; Line 280
	mov	eax, DWORD PTR _AutoMapYPos
	mov	ecx, ebx
	push	esi
	lea	edx, DWORD PTR [eax+edi]
	call	@ENG_set_pixel@12
	mov	eax, DWORD PTR _automap_type$[ebp]
$L85098:
; Line 283
	test	BYTE PTR _flags$[ebp], 128		; 00000080H
	je	$L85099
; Line 284
	mov	ecx, DWORD PTR _AMPlayerY
	mov	edx, DWORD PTR _AutoMapYPos
	push	144					; 00000090H
	lea	eax, DWORD PTR [ecx+edi]
	push	eax
	mov	eax, DWORD PTR _AMPlayerX
	add	edx, eax
	add	edx, ebx
	push	edx
	mov	edx, edi
	sub	edx, eax
	sub	edx, ecx
	mov	ecx, ebx
	sub	ecx, eax
	call	@DrawLine@20
; Line 285
	mov	ecx, DWORD PTR _AMPlayerX
	push	144					; 00000090H
	lea	eax, DWORD PTR [ecx+edi]
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	edx, DWORD PTR [eax+ebx]
	push	edx
	mov	edx, edi
	sub	edx, ecx
	mov	ecx, ebx
	sub	ecx, eax
	call	@DrawLine@20
; Line 286
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, DWORD PTR _AMPlayerY
	push	144					; 00000090H
	lea	edx, DWORD PTR [eax+ecx]
	add	edx, edi
	push	edx
	lea	edx, DWORD PTR [eax+ebx]
	push	edx
	mov	edx, edi
	sub	edx, ecx
	mov	ecx, ebx
	sub	ecx, DWORD PTR _AutoMapYPos
	sub	ecx, eax
	call	@DrawLine@20
; Line 287
	mov	eax, DWORD PTR _AutoMapYPos
	mov	ecx, ebx
	sub	ecx, DWORD PTR _AutoMapXPos
	add	eax, edi
	push	144					; 00000090H
	push	eax
	push	ebx
	mov	edx, edi
	call	@DrawLine@20
	mov	eax, DWORD PTR _automap_type$[ebp]
$L85099:
; Line 294
	and	eax, 15					; 0000000fH
	xor	ecx, ecx
	dec	eax
	mov	DWORD PTR _do_horz$[ebp], ecx
	cmp	eax, 11					; 0000000bH
	mov	DWORD PTR _do_cave_horz$[ebp], ecx
	mov	DWORD PTR _do_cave_vert$[ebp], ecx
	ja	$L85128
	jmp	DWORD PTR $L85324[eax*4]
$L85104:
; Line 296
	mov	ecx, DWORD PTR _AutoMapYPos
	mov	eax, ebx
; Line 297
	mov	edx, edi
	sub	eax, ecx
	sub	edx, ecx
; Line 298
	mov	ecx, DWORD PTR _AutoMapXPos
	add	ecx, eax
; Line 300
	push	esi
	mov	DWORD PTR _x2$[ebp], ecx
	mov	ecx, edi
	sub	ecx, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x1$[ebp], eax
	mov	DWORD PTR _y1$[ebp], edx
	mov	DWORD PTR _y2$[ebp], ecx
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
; Line 301
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
; Line 302
	mov	edx, edi
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 303
	mov	edx, edi
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
; Line 304
	jmp	$L85321
$L85106:
; Line 311
	mov	DWORD PTR _do_horz$[ebp], 1
$L85317:
; Line 338
	test	BYTE PTR _flags$[ebp], 1
	je	$L85114
; Line 340
	mov	ecx, DWORD PTR _AutoMapYPos
	mov	eax, ebx
	sub	eax, DWORD PTR _AutoMapXPos
; Line 341
	mov	edx, edi
	sub	edx, ecx
; Line 344
	push	esi
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, ebx
	sub	eax, ecx
	mov	ecx, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x2$[ebp], eax
	mov	eax, edi
	sub	eax, ecx
	mov	DWORD PTR _y1$[ebp], edx
	mov	DWORD PTR _y2$[ebp], eax
	mov	eax, DWORD PTR _AMPlayerY
	add	eax, edx
	push	eax
	mov	eax, ebx
	sub	eax, ecx
	mov	ecx, ebx
	push	eax
	call	@DrawLine@20
; Line 345
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	eax, edi
	sub	eax, DWORD PTR _AMPlayerY
	push	esi
	mov	edx, edi
	push	eax
	mov	eax, DWORD PTR _AMPlayerX
	add	eax, ecx
	push	eax
	call	@DrawLine@20
; Line 346
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x2$[ebp]
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 347
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x2$[ebp]
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
; Line 348
	mov	ecx, DWORD PTR _x2$[ebp]
	mov	edx, edi
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 349
	mov	ecx, DWORD PTR _x2$[ebp]
	mov	edx, edi
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
$L85114:
; Line 351
	test	BYTE PTR _flags$[ebp], 16		; 00000010H
	je	SHORT $L85115
; Line 352
	mov	eax, ebx
	mov	edx, edi
	sub	eax, DWORD PTR _AutoMapXPos
	sub	edx, DWORD PTR _AMPlayerX
	mov	ecx, ebx
	push	esi
	sub	ecx, DWORD PTR _AutoMapYPos
	push	edi
	push	eax
	call	@DrawLine@20
; Line 353
	or	BYTE PTR _flags$[ebp], 4
$L85115:
; Line 355
	test	BYTE PTR _flags$[ebp], 4
	je	SHORT $L85116
; Line 356
	mov	ecx, DWORD PTR _AutoMapYPos
	mov	eax, ebx
; Line 357
	mov	edx, edi
	sub	eax, ecx
	sub	edx, ecx
; Line 358
	mov	ecx, DWORD PTR _AutoMapXPos
	add	ecx, eax
; Line 361
	push	esi
	mov	DWORD PTR _x2$[ebp], ecx
	mov	ecx, edi
	sub	ecx, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x1$[ebp], eax
	mov	DWORD PTR _y1$[ebp], edx
	mov	DWORD PTR _y2$[ebp], ecx
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
; Line 362
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
; Line 363
	mov	edx, edi
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 364
	mov	edx, edi
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
$L85116:
; Line 366
	test	BYTE PTR _flags$[ebp], 21		; 00000015H
	jne	SHORT $L85117
; Line 367
	mov	eax, ebx
	mov	edx, edi
	sub	eax, DWORD PTR _AutoMapXPos
	sub	edx, DWORD PTR _AutoMapYPos
	push	esi
	push	edi
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
$L85117:
; Line 370
	cmp	DWORD PTR _do_horz$[ebp], 0
	je	$L85122
$L85318:
; Line 371
	test	BYTE PTR _flags$[ebp], 2
	je	$L85119
; Line 372
	mov	eax, DWORD PTR _AutoMapYPos
; Line 374
	mov	edx, edi
	sub	edx, eax
; Line 377
	push	esi
	lea	ecx, DWORD PTR [eax+ebx]
	mov	eax, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x1$[ebp], ecx
	mov	ecx, DWORD PTR _AutoMapXPos
	add	ecx, ebx
	mov	DWORD PTR _y1$[ebp], edx
	mov	DWORD PTR _x2$[ebp], ecx
	mov	ecx, edi
	sub	ecx, eax
	add	eax, ebx
	mov	DWORD PTR _y2$[ebp], ecx
	mov	ecx, DWORD PTR _AMPlayerY
	add	ecx, edx
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
; Line 378
	mov	ecx, DWORD PTR _x2$[ebp]
	mov	eax, edi
	sub	eax, DWORD PTR _AMPlayerY
	push	esi
	mov	edx, edi
	push	eax
	mov	eax, ecx
	sub	eax, DWORD PTR _AMPlayerX
	push	eax
	call	@DrawLine@20
; Line 379
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
; Line 380
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
; Line 381
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	edx, edi
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
; Line 382
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	edx, edi
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
$L85119:
; Line 384
	test	BYTE PTR _flags$[ebp], 32		; 00000020H
	je	SHORT $L85120
; Line 385
	mov	eax, DWORD PTR _AutoMapXPos
	push	esi
	add	eax, ebx
	push	edi
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	mov	edx, edi
	sub	edx, DWORD PTR _AMPlayerX
	lea	ecx, DWORD PTR [eax+ebx]
	call	@DrawLine@20
; Line 386
	or	BYTE PTR _flags$[ebp], 8
$L85120:
; Line 388
	test	BYTE PTR _flags$[ebp], 8
	je	SHORT $L85121
; Line 389
	mov	ecx, DWORD PTR _AutoMapYPos
	mov	eax, ebx
; Line 390
	mov	edx, edi
	sub	eax, ecx
	sub	edx, ecx
; Line 391
	mov	ecx, DWORD PTR _AutoMapXPos
	add	ecx, eax
; Line 394
	push	esi
	mov	DWORD PTR _x2$[ebp], ecx
	mov	ecx, edi
	sub	ecx, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x1$[ebp], eax
	mov	DWORD PTR _y1$[ebp], edx
	mov	DWORD PTR _y2$[ebp], ecx
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
; Line 395
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
; Line 396
	mov	edx, edi
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 397
	mov	edx, edi
	mov	ecx, ebx
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
$L85121:
; Line 399
	test	BYTE PTR _flags$[ebp], 42		; 0000002aH
	jne	SHORT $L85122
; Line 400
	mov	eax, DWORD PTR _AutoMapXPos
	mov	edx, edi
	sub	edx, DWORD PTR _AutoMapYPos
	push	esi
	add	eax, ebx
	push	edi
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
$L85122:
; Line 404
	cmp	DWORD PTR _do_cave_horz$[ebp], 0
	je	$L85125
$L85319:
; Line 406
	mov	eax, ebx
; Line 411
	push	esi
	sub	eax, DWORD PTR _AutoMapXPos
	mov	ecx, ebx
	test	BYTE PTR _flags$[ebp], 1
	je	$L85124
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _AutoMapYPos
	sub	ecx, eax
	lea	edx, DWORD PTR [eax+edi]
	mov	eax, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x2$[ebp], ecx
	mov	DWORD PTR _y1$[ebp], edx
	lea	ecx, DWORD PTR [eax+edi]
	mov	DWORD PTR _y2$[ebp], ecx
	mov	ecx, edx
	sub	ecx, DWORD PTR _AMPlayerY
	push	ecx
	mov	ecx, ebx
	sub	ecx, eax
	push	ecx
	mov	ecx, ebx
	call	@DrawLine@20
; Line 412
	mov	eax, DWORD PTR _AMPlayerY
	mov	ecx, DWORD PTR _x1$[ebp]
	add	eax, edi
	push	esi
	push	eax
	mov	eax, DWORD PTR _AMPlayerX
	add	eax, ecx
	mov	edx, edi
	push	eax
	call	@DrawLine@20
; Line 413
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x2$[ebp]
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 414
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x2$[ebp]
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
; Line 415
	mov	ecx, DWORD PTR _x2$[ebp]
	mov	edx, edi
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x1$[ebp]
	call	@DrawLine@20
; Line 416
	mov	ecx, DWORD PTR _x2$[ebp]
	mov	edx, edi
	push	144					; 00000090H
	push	DWORD PTR _y2$[ebp]
	push	ebx
; Line 417
	jmp	SHORT $L85322
$L85108:
; Line 319
	mov	DWORD PTR _do_cave_horz$[ebp], 1
; Line 320
	jmp	$L85317
$L85109:
; Line 323
	mov	DWORD PTR _do_cave_vert$[ebp], 1
; Line 324
	jmp	$L85318
$L85112:
; Line 333
	mov	DWORD PTR _do_cave_vert$[ebp], 1
; Line 337
	jmp	$L85319
$L85124:
; Line 418
	push	edi
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	edx, DWORD PTR [eax+edi]
$L85322:
	call	@DrawLine@20
$L85125:
; Line 421
	cmp	DWORD PTR _do_cave_vert$[ebp], 0
	je	$L85128
$L85320:
; Line 422
	test	BYTE PTR _flags$[ebp], 2
; Line 428
	push	esi
	je	$L85127
	mov	eax, DWORD PTR _AutoMapYPos
	lea	ecx, DWORD PTR [eax+ebx]
	lea	edx, DWORD PTR [eax+edi]
	mov	eax, DWORD PTR _AMPlayerX
	mov	DWORD PTR _x1$[ebp], ecx
	mov	ecx, DWORD PTR _AutoMapXPos
	mov	DWORD PTR _y1$[ebp], edx
	add	ecx, ebx
	mov	DWORD PTR _x2$[ebp], ecx
	lea	ecx, DWORD PTR [eax+edi]
	mov	DWORD PTR _y2$[ebp], ecx
	mov	ecx, edx
	sub	ecx, DWORD PTR _AMPlayerY
	add	eax, ebx
	push	ecx
	push	eax
	mov	ecx, ebx
	call	@DrawLine@20
; Line 429
	mov	eax, DWORD PTR _AMPlayerY
	mov	ecx, DWORD PTR _x2$[ebp]
	add	eax, edi
	push	esi
	push	eax
	mov	eax, ecx
	sub	eax, DWORD PTR _AMPlayerX
	mov	edx, edi
	push	eax
	call	@DrawLine@20
; Line 430
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	esi, 144				; 00000090H
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
; Line 431
	mov	edx, DWORD PTR _y1$[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
	call	@DrawLine@20
; Line 432
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	edx, edi
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	ebx
	call	@DrawLine@20
; Line 433
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	edx, edi
	push	esi
	push	DWORD PTR _y2$[ebp]
	push	DWORD PTR _x2$[ebp]
; Line 434
	jmp	SHORT $L85323
$L85127:
; Line 435
	mov	eax, DWORD PTR _AutoMapXPos
	push	edi
	add	eax, ebx
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	edx, DWORD PTR [eax+edi]
$L85321:
	mov	ecx, ebx
$L85323:
	call	@DrawLine@20
$L85128:
	pop	edi
	pop	esi
	pop	ebx
; Line 437
	leave
	ret	4
$L85324:
	DD	$L85104
	DD	$L85317
	DD	$L85318
	DD	$L85106
	DD	$L85317
	DD	$L85318
	DD	$L85122
	DD	$L85108
	DD	$L85109
	DD	$L85319
	DD	$L85320
	DD	$L85112
@DrawAutomapType@12 ENDP
_TEXT	ENDS
EXTRN	_myplr:DWORD
EXTRN	_plr:BYTE
; Function compile flags: /Ogsy
;	COMDAT _DrawAutomapPlr
_TEXT	SEGMENT
_px$ = -8
_py$ = -4
_DrawAutomapPlr PROC NEAR				; COMDAT
; Line 440
	push	ecx
	push	ecx
	push	ebx
; Line 444
	mov	ebx, DWORD PTR _myplr
	imul	ebx, 21720				; 000054d8H
	push	esi
	push	edi
	cmp	DWORD PTR _plr[ebx], 3
	jne	SHORT $L85134
; Line 447
	cmp	DWORD PTR _plr[ebx+112], 2
	mov	eax, DWORD PTR _plr[ebx+64]
	mov	ecx, DWORD PTR _plr[ebx+68]
	jne	SHORT $L85135
; Line 448
	inc	eax
; Line 449
	jmp	SHORT $L85137
$L85135:
; Line 450
	inc	ecx
; Line 451
	jmp	SHORT $L85137
$L85134:
; Line 452
	mov	eax, DWORD PTR _plr[ebx+56]
; Line 453
	mov	ecx, DWORD PTR _plr[ebx+60]
$L85137:
; Line 455
	mov	edx, DWORD PTR _AutoMapXOfs
; Line 458
	mov	edi, DWORD PTR _AutoMapScale
	add	edx, edx
	push	ebp
	sub	eax, edx
	push	100					; 00000064H
	sub	eax, DWORD PTR _ViewX
	pop	esi
	push	100					; 00000064H
	mov	DWORD PTR _px$[esp+28], eax
	mov	eax, DWORD PTR _AutoMapYOfs
	add	eax, eax
	pop	ebp
	sub	ecx, eax
	mov	eax, DWORD PTR _plr[ebx+96]
	imul	eax, edi
	cdq
	idiv	esi
	sub	ecx, DWORD PTR _ViewY
; Line 459
	push	100					; 00000064H
	mov	DWORD PTR _py$[esp+28], ecx
	mov	esi, eax
	mov	eax, DWORD PTR _ScrollInfo
	imul	eax, edi
	cdq
	idiv	ebp
	sar	esi, 1
	sar	eax, 1
	add	esi, eax
	mov	eax, DWORD PTR _px$[esp+28]
	sub	eax, ecx
	mov	ecx, DWORD PTR _AutoMapYPos
	imul	eax, ecx
	lea	esi, DWORD PTR [esi+eax+384]
	mov	eax, DWORD PTR _plr[ebx+100]
	imul	eax, edi
	cdq
	idiv	ebp
	mov	ebp, eax
	mov	eax, DWORD PTR _ScrollInfo+4
	imul	eax, edi
	cdq
	pop	edi
	idiv	edi
	mov	edx, DWORD PTR _px$[esp+24]
	sar	ebp, 1
	sar	eax, 1
	add	ebp, eax
	mov	eax, DWORD PTR _py$[esp+24]
	add	edx, eax
	mov	eax, DWORD PTR _AMPlayerX
	imul	edx, eax
	lea	edi, DWORD PTR [edx+ebp+336]
; Line 461
	xor	edx, edx
	cmp	DWORD PTR _invflag, edx
	mov	ebp, 160				; 000000a0H
	jne	SHORT $L85139
	cmp	DWORD PTR _sbookflag, edx
	je	SHORT $L85138
$L85139:
; Line 462
	sub	esi, ebp
$L85138:
; Line 463
	cmp	DWORD PTR _chrflag, edx
	jne	SHORT $L85141
	cmp	DWORD PTR _questlog, edx
	je	SHORT $L85140
$L85141:
; Line 464
	add	esi, ebp
$L85140:
; Line 467
	mov	ebx, DWORD PTR _plr[ebx+112]
	sub	edi, eax
	cmp	ebx, 7
	pop	ebp
	ja	$L85143
	jmp	DWORD PTR $L85332[ebx*4]
$L85146:
; Line 469
	mov	eax, edi
	mov	ebx, 153				; 00000099H
	sub	eax, ecx
	push	ebx
	push	eax
	push	esi
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 470
	mov	eax, edi
	push	ebx
	sub	eax, DWORD PTR _AMPlayerX
	mov	edx, edi
	sub	edx, DWORD PTR _AutoMapYPos
	mov	ecx, esi
	push	eax
	mov	eax, esi
	sub	eax, DWORD PTR _AMPlayerY
	push	eax
	call	@DrawLine@20
; Line 471
	mov	eax, edi
	push	ebx
	sub	eax, DWORD PTR _AMPlayerX
	mov	edx, edi
	push	eax
	mov	eax, DWORD PTR _AMPlayerY
	add	eax, esi
	sub	edx, DWORD PTR _AutoMapYPos
	push	eax
; Line 472
	jmp	$L85330
$L85147:
; Line 474
	mov	edx, edi
	mov	ebx, 153				; 00000099H
	sub	edx, eax
	push	ebx
	add	ecx, esi
	push	edx
	push	ecx
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 475
	mov	eax, DWORD PTR _AMPlayerX
	mov	edx, edi
	sub	edx, eax
	push	ebx
	add	eax, esi
	push	edx
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	ecx, DWORD PTR [eax+esi]
	call	@DrawLine@20
; Line 476
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, DWORD PTR _AMPlayerY
	add	ecx, eax
	push	ebx
	add	ecx, esi
	mov	edx, edi
	push	edi
	push	ecx
	sub	edx, eax
; Line 477
	jmp	$L85331
$L85148:
; Line 479
	mov	ebx, 153				; 00000099H
	add	ecx, esi
	push	ebx
	push	edi
	push	ecx
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 480
	mov	eax, edi
	push	ebx
	sub	eax, DWORD PTR _AMPlayerY
	mov	edx, edi
	push	eax
	mov	eax, DWORD PTR _AMPlayerX
	add	eax, esi
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	ecx, DWORD PTR [eax+esi]
	call	@DrawLine@20
; Line 481
	mov	eax, DWORD PTR _AMPlayerY
	push	ebx
	add	eax, edi
	mov	edx, edi
	push	eax
	mov	eax, DWORD PTR _AMPlayerX
	add	eax, esi
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	ecx, DWORD PTR [eax+esi]
; Line 482
	jmp	$L85327
$L85149:
; Line 484
	mov	ebx, 153				; 00000099H
	add	eax, edi
	push	ebx
	add	ecx, esi
	push	eax
	push	ecx
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 485
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, DWORD PTR _AMPlayerY
	add	ecx, eax
	push	ebx
	lea	edx, DWORD PTR [eax+edi]
	mov	eax, DWORD PTR _AutoMapYPos
	add	ecx, esi
	push	edi
	push	ecx
	lea	ecx, DWORD PTR [eax+esi]
	call	@DrawLine@20
; Line 486
	mov	eax, DWORD PTR _AMPlayerX
	push	ebx
	lea	edx, DWORD PTR [eax+edi]
	add	eax, esi
	push	edx
	push	eax
$L85331:
	mov	eax, DWORD PTR _AutoMapYPos
	lea	ecx, DWORD PTR [eax+esi]
; Line 487
	jmp	$L85327
$L85150:
; Line 489
	mov	ebx, 153				; 00000099H
	add	ecx, edi
	push	ebx
	push	ecx
	push	esi
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 490
	mov	eax, DWORD PTR _AMPlayerX
	push	ebx
	add	eax, edi
	mov	ecx, esi
	push	eax
	mov	eax, DWORD PTR _AMPlayerY
	add	eax, esi
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	edx, DWORD PTR [eax+edi]
	call	@DrawLine@20
; Line 491
	mov	eax, DWORD PTR _AMPlayerX
	push	ebx
	add	eax, edi
	push	eax
	mov	eax, esi
	sub	eax, DWORD PTR _AMPlayerY
	push	eax
	mov	eax, DWORD PTR _AutoMapYPos
	lea	edx, DWORD PTR [eax+edi]
$L85330:
	mov	ecx, esi
; Line 492
	jmp	$L85327
$L85151:
; Line 494
	mov	ebx, 153				; 00000099H
	add	eax, edi
	push	ebx
	push	eax
	mov	eax, esi
	mov	edx, edi
	sub	eax, ecx
	mov	ecx, esi
	push	eax
	call	@DrawLine@20
; Line 495
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, esi
	sub	ecx, DWORD PTR _AMPlayerY
	push	ebx
	push	edi
	lea	edx, DWORD PTR [eax+edi]
	sub	ecx, eax
	push	ecx
	mov	ecx, esi
	sub	ecx, DWORD PTR _AutoMapYPos
	call	@DrawLine@20
; Line 496
	mov	eax, DWORD PTR _AMPlayerX
	push	ebx
	mov	ecx, esi
	lea	edx, DWORD PTR [eax+edi]
	push	edx
; Line 497
	jmp	$L85328
$L85152:
; Line 499
	mov	ebx, 153				; 00000099H
	mov	eax, esi
	push	ebx
	sub	eax, ecx
	push	edi
	push	eax
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 500
	mov	eax, edi
	push	ebx
	sub	eax, DWORD PTR _AMPlayerY
	mov	ecx, esi
	sub	ecx, DWORD PTR _AutoMapYPos
	mov	edx, edi
	push	eax
	mov	eax, esi
	sub	eax, DWORD PTR _AMPlayerX
	push	eax
	call	@DrawLine@20
; Line 501
	mov	eax, DWORD PTR _AMPlayerY
	push	ebx
	add	eax, edi
	mov	edx, edi
	push	eax
	mov	eax, esi
	sub	eax, DWORD PTR _AMPlayerX
	push	eax
; Line 502
	jmp	SHORT $L85329
$L85153:
; Line 504
	mov	edx, edi
	mov	ebx, 153				; 00000099H
	sub	edx, eax
	mov	eax, esi
	push	ebx
	sub	eax, ecx
	push	edx
	push	eax
	mov	edx, edi
	mov	ecx, esi
	call	@DrawLine@20
; Line 505
	mov	eax, DWORD PTR _AMPlayerX
	mov	edx, edi
	mov	ecx, esi
	sub	edx, eax
	push	ebx
	sub	ecx, eax
	push	edx
	push	ecx
	mov	ecx, esi
	sub	ecx, DWORD PTR _AutoMapYPos
	call	@DrawLine@20
; Line 506
	mov	eax, DWORD PTR _AMPlayerX
	mov	ecx, esi
	sub	ecx, DWORD PTR _AMPlayerY
	mov	edx, edi
	push	ebx
	push	edi
	sub	edx, eax
$L85328:
	sub	ecx, eax
	push	ecx
$L85329:
	mov	ecx, esi
	sub	ecx, DWORD PTR _AutoMapYPos
$L85327:
	call	@DrawLine@20
$L85143:
	pop	edi
	pop	esi
	pop	ebx
; Line 508
	pop	ecx
	pop	ecx
	ret	0
$L85332:
	DD	$L85150
	DD	$L85151
	DD	$L85152
	DD	$L85153
	DD	$L85146
	DD	$L85147
	DD	$L85148
	DD	$L85149
_DrawAutomapPlr ENDP
_TEXT	ENDS
EXTRN	_dungeon:BYTE
; Function compile flags: /Ogsy
;	COMDAT @GetAutomapType@12
_TEXT	SEGMENT
_view$ = 8
@GetAutomapType@12 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 511
	push	ebx
	push	esi
	push	edi
; Line 512
	xor	ebx, ebx
	cmp	DWORD PTR _view$[esp+8], ebx
	push	40					; 00000028H
	mov	edi, edx
	mov	esi, ecx
	pop	eax
	je	SHORT $L85165
; Line 513
	cmp	esi, -1
	jne	SHORT $L85162
	cmp	edi, ebx
	jl	SHORT $L85162
	cmp	edi, eax
	jge	SHORT $L85162
	cmp	BYTE PTR _automapview[edi], bl
	je	SHORT $L85162
; Line 514
	xor	ecx, ecx
	jmp	SHORT $L85337
$L85162:
; Line 515
	cmp	edi, -1
	jne	SHORT $L85165
; Line 516
	cmp	esi, ebx
; Line 517
	jl	$L85167
; Line 518
	cmp	esi, eax
	jge	SHORT $L85165
	lea	ecx, DWORD PTR [esi+esi*4]
	cmp	BYTE PTR _automapview[ecx*8], bl
	je	SHORT $L85165
; Line 519
	xor	edx, edx
	mov	ecx, esi
$L85337:
	push	ebx
	call	@GetAutomapType@12
	not	eax
	and	ax, 16384				; 00004000H
	jmp	SHORT $L85160
$L85165:
; Line 523
	cmp	esi, ebx
	jl	SHORT $L85167
	cmp	esi, eax
	jge	SHORT $L85167
	cmp	edi, ebx
	jl	SHORT $L85167
	cmp	edi, eax
	jge	SHORT $L85167
; Line 524
	lea	eax, DWORD PTR [esi+esi*4]
	lea	eax, DWORD PTR [edi+eax*8]
	cmp	BYTE PTR _automapview[eax], bl
	jne	SHORT $L85168
	cmp	DWORD PTR _view$[esp+8], ebx
	jne	SHORT $L85167
$L85168:
; Line 525
	movzx	eax, BYTE PTR _dungeon[eax]
	push	ebp
	mov	bp, WORD PTR _automaptype[eax*2]
; Line 527
	cmp	bp, 7
	jne	SHORT $L85171
	push	ebx
	lea	ecx, DWORD PTR [esi-1]
	mov	edx, edi
	call	@GetAutomapType@12
	test	ah, 8
	je	SHORT $L85171
	push	ebx
	lea	edx, DWORD PTR [edi-1]
	mov	ecx, esi
	call	@GetAutomapType@12
	test	ah, 4
	je	SHORT $L85171
; Line 528
	xor	ebp, ebp
	inc	ebp
$L85171:
; Line 530
	mov	ax, bp
	pop	ebp
	jmp	SHORT $L85160
$L85167:
; Line 533
	xor	ax, ax
$L85160:
	pop	edi
	pop	esi
	pop	ebx
; Line 534
	ret	4
@GetAutomapType@12 ENDP
_TEXT	ENDS
PUBLIC	??_C@_06FFNC@game?3?5?$AA@			; `string'
PUBLIC	??_C@_0L@ENFA@password?3?5?$AA@			; `string'
PUBLIC	??_C@_09EIMB@Level?3?5?$CFi?$AA@		; `string'
EXTRN	_setlvlnum:BYTE
EXTRN	_setlevel:BYTE
EXTRN	@PrintGameStr@16:NEAR
EXTRN	_sprintf:NEAR
EXTRN	_szPlayerDescript:BYTE
EXTRN	_gbMaxPlayers:BYTE
EXTRN	_szPlayerName:BYTE
EXTRN	_quest_level_names:BYTE
EXTRN	_strcpy:NEAR
EXTRN	_strcat:NEAR
EXTRN	_currlevel:BYTE
;	COMDAT ??_C@_06FFNC@game?3?5?$AA@
_DATA	SEGMENT
??_C@_06FFNC@game?3?5?$AA@ DB 'game: ', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0L@ENFA@password?3?5?$AA@
_DATA	SEGMENT
??_C@_0L@ENFA@password?3?5?$AA@ DB 'password: ', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_09EIMB@Level?3?5?$CFi?$AA@
_DATA	SEGMENT
??_C@_09EIMB@Level?3?5?$CFi?$AA@ DB 'Level: %i', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _DrawAutomapGame
_TEXT	SEGMENT
_desc$ = -256
_DrawAutomapGame PROC NEAR				; COMDAT
; Line 537
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
; Line 541
	cmp	BYTE PTR _gbMaxPlayers, 1
	push	esi
	push	20					; 00000014H
	pop	esi
	jbe	SHORT $L85177
; Line 542
	push	OFFSET FLAT:_szPlayerName
	lea	eax, DWORD PTR _desc$[ebp]
	push	OFFSET FLAT:??_C@_06FFNC@game?3?5?$AA@	; `string'
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
	push	eax
	call	_strcat
	pop	ecx
; Line 543
	lea	eax, DWORD PTR _desc$[ebp]
	pop	ecx
	mov	edx, esi
	push	3
	push	eax
	push	8
	pop	ecx
	call	@PrintGameStr@16
; Line 545
	cmp	BYTE PTR _szPlayerDescript, 0
	push	35					; 00000023H
	pop	esi
	je	SHORT $L85177
; Line 546
	push	OFFSET FLAT:_szPlayerDescript
	lea	eax, DWORD PTR _desc$[ebp]
	push	OFFSET FLAT:??_C@_0L@ENFA@password?3?5?$AA@ ; `string'
	push	eax
	call	_strcpy
	pop	ecx
	pop	ecx
	push	eax
	call	_strcat
	pop	ecx
; Line 547
	lea	eax, DWORD PTR _desc$[ebp]
	pop	ecx
	mov	edx, esi
	push	3
	push	eax
	push	8
	pop	ecx
	call	@PrintGameStr@16
; Line 548
	push	50					; 00000032H
	pop	esi
$L85177:
; Line 551
	cmp	BYTE PTR _setlevel, 0
	je	SHORT $L85179
; Line 552
	movzx	eax, BYTE PTR _setlvlnum
	push	3
	push	DWORD PTR _quest_level_names[eax*4]
; Line 553
	jmp	SHORT $L85341
$L85179:
	mov	al, BYTE PTR _currlevel
	test	al, al
	je	SHORT $L85182
; Line 554
	movzx	eax, al
	push	eax
	lea	eax, DWORD PTR _desc$[ebp]
	push	OFFSET FLAT:??_C@_09EIMB@Level?3?5?$CFi?$AA@ ; `string'
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 555
	lea	eax, DWORD PTR _desc$[ebp]
	push	3
	push	eax
$L85341:
	push	8
	mov	edx, esi
	pop	ecx
	call	@PrintGameStr@16
$L85182:
	pop	esi
; Line 557
	leave
	ret	0
_DrawAutomapGame ENDP
_TEXT	ENDS
PUBLIC	@SetAutomapView@8
; Function compile flags: /Ogsy
;	COMDAT @SetAutomapView@8
_TEXT	SEGMENT
@SetAutomapView@8 PROC NEAR				; COMDAT
; _x$ = ecx
; _y$ = edx
; Line 560
	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 564
	lea	esi, DWORD PTR [ecx-16]
; Line 565
	lea	edi, DWORD PTR [edx-16]
	sar	esi, 1
	sar	edi, 1
; Line 567
	test	esi, esi
	jl	$L85203
	cmp	esi, 40					; 00000028H
	jge	$L85203
	test	edi, edi
	jl	$L85203
	cmp	edi, 40					; 00000028H
	jge	$L85203
; Line 571
	lea	eax, DWORD PTR [esi+esi*4]
; Line 573
	push	0
	mov	edx, edi
	mov	ecx, esi
	lea	ebx, DWORD PTR [edi+eax*8]
	mov	BYTE PTR _automapview[ebx], 1
	call	@GetAutomapType@12
; Line 574
	mov	ecx, eax
	mov	ebp, 16384				; 00004000H
; Line 576
	and	eax, 15					; 0000000fH
	and	ecx, ebp
	dec	eax
	dec	eax
	je	$L85199
	dec	eax
	je	$L85204
	dec	eax
	je	$L85209
	dec	eax
	je	SHORT $L85217
	dec	eax
	jne	$L85203
; Line 619
	test	cx, cx
; Line 620
	push	0
	je	SHORT $L85224
	lea	ecx, DWORD PTR [esi-1]
	mov	edx, edi
	call	@GetAutomapType@12
	test	ax, bp
	je	SHORT $L85225
; Line 621
	mov	BYTE PTR _automapview[ebx-40], 1
$L85225:
; Line 622
	push	0
; Line 624
	jmp	$L85344
$L85224:
	lea	edx, DWORD PTR [edi-1]
	mov	ecx, esi
	call	@GetAutomapType@12
	test	ax, bp
	je	$L85203
; Line 625
	mov	BYTE PTR _automapview[ebx-1], 1
; Line 627
	jmp	$L85203
$L85217:
; Line 609
	test	cx, cx
; Line 610
	push	0
	je	$L85218
	lea	edx, DWORD PTR [edi-1]
	mov	ecx, esi
	call	@GetAutomapType@12
	test	ax, bp
	je	SHORT $L85219
; Line 611
	mov	BYTE PTR _automapview[ebx-1], 1
$L85219:
; Line 612
	push	0
$L85345:
	lea	edx, DWORD PTR [edi+1]
	mov	ecx, esi
	call	@GetAutomapType@12
	cmp	ax, 16391				; 00004007H
	jne	$L85203
; Line 613
	mov	BYTE PTR _automapview[ebx+1], 1
; Line 614
	jmp	$L85203
$L85209:
; Line 594
	test	cx, cx
; Line 595
	push	0
	je	SHORT $L85210
	lea	edx, DWORD PTR [edi+1]
	mov	ecx, esi
	call	@GetAutomapType@12
	cmp	ax, 16391				; 00004007H
	jne	SHORT $L85225
; Line 596
	mov	BYTE PTR _automapview[ebx+1], 1
; Line 599
	jmp	$L85225
$L85210:
; Line 600
	lea	ecx, DWORD PTR [esi-1]
	mov	edx, edi
	mov	DWORD PTR -4+[esp+24], ecx
	call	@GetAutomapType@12
	test	ax, bp
	je	SHORT $L85214
; Line 601
	mov	BYTE PTR _automapview[ebx-40], 1
$L85214:
; Line 602
	dec	edi
	push	0
	mov	edx, edi
	mov	ecx, esi
	call	@GetAutomapType@12
	test	ax, bp
	je	SHORT $L85215
; Line 603
	mov	BYTE PTR _automapview[ebx-1], 1
$L85215:
; Line 604
	mov	ecx, DWORD PTR -4+[esp+20]
	push	0
	mov	edx, edi
	call	@GetAutomapType@12
	test	ax, bp
	je	SHORT $L85203
; Line 605
	mov	BYTE PTR _automapview[ebx-41], 1
; Line 607
	jmp	SHORT $L85203
$L85204:
; Line 586
	test	cx, cx
; Line 587
	push	0
	je	$L85224
$L85344:
	lea	ecx, DWORD PTR [esi+1]
	mov	edx, edi
	call	@GetAutomapType@12
	cmp	ax, 16391				; 00004007H
	jne	SHORT $L85203
; Line 588
	mov	BYTE PTR _automapview[ebx+40], 1
; Line 589
	jmp	SHORT $L85203
$L85199:
; Line 578
	test	cx, cx
; Line 579
	push	0
; Line 581
	jne	$L85345
$L85218:
	lea	ecx, DWORD PTR [esi-1]
	mov	edx, edi
	call	@GetAutomapType@12
	test	ax, bp
	je	SHORT $L85203
; Line 582
	mov	BYTE PTR _automapview[ebx-40], 1
$L85203:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 629
	pop	ecx
	ret	0
@SetAutomapView@8 ENDP
_TEXT	ENDS
PUBLIC	_AutomapZoomReset
; Function compile flags: /Ogsy
;	COMDAT _AutomapZoomReset
_TEXT	SEGMENT
_AutomapZoomReset PROC NEAR				; COMDAT
; Line 635
	mov	eax, DWORD PTR _AutoMapScale
	push	100					; 00000064H
	shl	eax, 6
	cdq
	pop	ecx
	and	DWORD PTR _AutoMapXOfs, 0
	idiv	ecx
	and	DWORD PTR _AutoMapYOfs, 0
	mov	DWORD PTR _AutoMapPosBits, eax
; Line 636
	sar	eax, 1
	mov	DWORD PTR _AutoMapXPos, eax
; Line 637
	sar	eax, 1
	mov	DWORD PTR _AutoMapYPos, eax
; Line 638
	sar	eax, 1
	mov	DWORD PTR _AMPlayerX, eax
; Line 639
	sar	eax, 1
	mov	DWORD PTR _AMPlayerY, eax
; Line 640
	ret	0
_AutomapZoomReset ENDP
_TEXT	ENDS
END
