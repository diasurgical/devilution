; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/msgcmd.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06IDPA@delete?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT _msgcmd_c_init
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _msgcmd_init_event
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _msgcmd_cleanup_chatcmd_atexit
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _msgcmd_cleanup_chatcmd
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _msgcmd_cmd_cleanup
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _msgcmd_send_chat
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_add_server_cmd_W@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_add_server_cmd@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_init_chatcmd@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_free_event@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_delete_server_cmd_W@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_alloc_event@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_remove_event@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_event_type@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_cleanup_chatcmd_1@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @msgcmd_cleanup_extern_msg@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_msgcmd_c_init_funcs
_DATA	SEGMENT
COMM	_sgChat_Cmd:BYTE:0cH
COMM	_sgdwMsgCmdTimer:DWORD
_DATA	ENDS
CRT$XCU	SEGMENT
_msgcmd_c_init_funcs DD FLAT:_msgcmd_c_init
CRT$XCU	ENDS
EXTRN	_exception_install_filter:NEAR
EXTRN	_j_exception_init_filter:NEAR
; Function compile flags: /Ogsy
;	COMDAT _msgcmd_c_init
_TEXT	SEGMENT
_msgcmd_c_init PROC NEAR				; COMDAT
; File Source/msgcmd.cpp
; Line 16
	call	_exception_install_filter
; Line 17
	jmp	_j_exception_init_filter
_msgcmd_c_init ENDP
_TEXT	ENDS
PUBLIC	_msgcmd_init_event
PUBLIC	@msgcmd_init_chatcmd@4
; Function compile flags: /Ogsy
;	COMDAT _msgcmd_init_event
_TEXT	SEGMENT
_msgcmd_init_event PROC NEAR				; COMDAT
; Line 25
	mov	ecx, OFFSET FLAT:_sgChat_Cmd
	jmp	@msgcmd_init_chatcmd@4
_msgcmd_init_event ENDP
_TEXT	ENDS
PUBLIC	_msgcmd_cleanup_chatcmd_atexit
PUBLIC	_msgcmd_cleanup_chatcmd
EXTRN	_atexit:NEAR
; Function compile flags: /Ogsy
;	COMDAT _msgcmd_cleanup_chatcmd_atexit
_TEXT	SEGMENT
_msgcmd_cleanup_chatcmd_atexit PROC NEAR		; COMDAT
; Line 30
	push	OFFSET FLAT:_msgcmd_cleanup_chatcmd
	call	_atexit
	pop	ecx
; Line 31
	ret	0
_msgcmd_cleanup_chatcmd_atexit ENDP
_TEXT	ENDS
PUBLIC	@msgcmd_cleanup_chatcmd_1@4
PUBLIC	@msgcmd_cleanup_extern_msg@4
; Function compile flags: /Ogsy
;	COMDAT _msgcmd_cleanup_chatcmd
_TEXT	SEGMENT
_msgcmd_cleanup_chatcmd PROC NEAR			; COMDAT
; Line 35
	mov	ecx, OFFSET FLAT:_sgChat_Cmd
	call	@msgcmd_cleanup_chatcmd_1@4
; Line 36
	mov	ecx, OFFSET FLAT:_sgChat_Cmd+4
	jmp	@msgcmd_cleanup_extern_msg@4
_msgcmd_cleanup_chatcmd ENDP
_TEXT	ENDS
PUBLIC	_msgcmd_cmd_cleanup
PUBLIC	@msgcmd_free_event@4
; Function compile flags: /Ogsy
;	COMDAT _msgcmd_cmd_cleanup
_TEXT	SEGMENT
_msgcmd_cmd_cleanup PROC NEAR				; COMDAT
; Line 41
	mov	ecx, OFFSET FLAT:_sgChat_Cmd
	jmp	@msgcmd_free_event@4
_msgcmd_cmd_cleanup ENDP
_TEXT	ENDS
PUBLIC	_msgcmd_send_chat
PUBLIC	@msgcmd_delete_server_cmd_W@8
EXTRN	_SNetSendServerChatCommand@4:NEAR
EXTRN	__imp__GetTickCount@0:NEAR
; Function compile flags: /Ogsy
;	COMDAT _msgcmd_send_chat
_TEXT	SEGMENT
_msgcmd_send_chat PROC NEAR				; COMDAT
; Line 45
	push	esi
; Line 49
	mov	esi, DWORD PTR _sgChat_Cmd+8
	test	esi, esi
	jle	SHORT $L84999
; Line 51
	call	DWORD PTR __imp__GetTickCount@0
; Line 52
	mov	ecx, eax
	sub	ecx, DWORD PTR _sgdwMsgCmdTimer
	cmp	ecx, 2000				; 000007d0H
	jb	SHORT $L84999
; Line 53
	mov	DWORD PTR _sgdwMsgCmdTimer, eax
; Line 54
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_SNetSendServerChatCommand@4
; Line 55
	mov	edx, esi
	mov	ecx, OFFSET FLAT:_sgChat_Cmd
	pop	esi
	jmp	@msgcmd_delete_server_cmd_W@8
$L84999:
	pop	esi
; Line 58
	ret	0
_msgcmd_send_chat ENDP
_TEXT	ENDS
PUBLIC	@msgcmd_add_server_cmd_W@4
PUBLIC	@msgcmd_add_server_cmd@4
; Function compile flags: /Ogsy
;	COMDAT @msgcmd_add_server_cmd_W@4
_TEXT	SEGMENT
@msgcmd_add_server_cmd_W@4 PROC NEAR			; COMDAT
; _chat_message$ = ecx
; Line 62
	cmp	BYTE PTR [ecx], 47			; 0000002fH
	je	SHORT $L85003
; Line 63
	xor	al, al
; Line 66
	ret	0
$L85003:
; Line 64
	call	@msgcmd_add_server_cmd@4
; Line 65
	mov	al, 1
; Line 66
	ret	0
@msgcmd_add_server_cmd_W@4 ENDP
_TEXT	ENDS
PUBLIC	@msgcmd_alloc_event@20
EXTRN	_memcpy:NEAR
EXTRN	_strlen:NEAR
; Function compile flags: /Ogsy
;	COMDAT @msgcmd_add_server_cmd@4
_TEXT	SEGMENT
_v3$ = -4
@msgcmd_add_server_cmd@4 PROC NEAR			; COMDAT
; _command$ = ecx
; Line 69
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
; Line 77
	push	edi
	call	_strlen
; Line 78
	test	eax, eax
	pop	ecx
	je	SHORT $L85013
; Line 80
	lea	esi, DWORD PTR [eax+1]
	cmp	esi, 128				; 00000080H
	ja	SHORT $L85013
; Line 81
	mov	edx, DWORD PTR _v3$[esp+12]
	push	0
	push	0
	push	2
	mov	ecx, OFFSET FLAT:_sgChat_Cmd
	call	@msgcmd_alloc_event@20
; Line 82
	add	eax, 8
	push	esi
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$L85013:
	pop	edi
	pop	esi
; Line 85
	pop	ecx
	ret	0
@msgcmd_add_server_cmd@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @msgcmd_init_chatcmd@4
_TEXT	SEGMENT
@msgcmd_init_chatcmd@4 PROC NEAR			; COMDAT
; _chat_cmd$ = ecx
; Line 91
	lea	eax, DWORD PTR [ecx+4]
; Line 93
	and	DWORD PTR [eax+4], 0
; Line 94
	mov	DWORD PTR [eax], eax
; Line 95
	and	DWORD PTR [ecx], 0
; Line 96
	not	eax
	mov	DWORD PTR [ecx+8], eax
; Line 97
	ret	0
@msgcmd_init_chatcmd@4 ENDP
_TEXT	ENDS
PUBLIC	@msgcmd_remove_event@8
PUBLIC	??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@ ; `string'
EXTRN	_SMemFree@16:NEAR
;	COMDAT ??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@
_DATA	SEGMENT
??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@ DB '.?AUEXTERNMESSAGE@@'
	DB	00H						; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @msgcmd_free_event@4
_TEXT	SEGMENT
_v1$ = -4
@msgcmd_free_event@4 PROC NEAR				; COMDAT
; _a1$ = ecx
; Line 100
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
$L85028:
; Line 107
	mov	esi, DWORD PTR [edi+8]
; Line 108
	test	esi, esi
	jle	SHORT $L85206
; Line 110
	mov	edx, DWORD PTR _v1$[esp+12]
	mov	ecx, esi
	call	@msgcmd_remove_event@8
; Line 111
	push	0
	push	-2					; fffffffeH
	push	OFFSET FLAT:??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@ ; `string'
	push	esi
	call	_SMemFree@16
	jmp	SHORT $L85028
$L85206:
	pop	edi
	pop	esi
; Line 113
	pop	ecx
	ret	0
@msgcmd_free_event@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @msgcmd_delete_server_cmd_W@8
_TEXT	SEGMENT
_ptr$ = -4
@msgcmd_delete_server_cmd_W@8 PROC NEAR			; COMDAT
; _cmd$ = ecx
; _extern_msg$ = edx
; Line 116
	push	ecx
	push	ebx
	push	esi
; Line 122
	mov	esi, DWORD PTR _ptr$[esp+12]
; Line 123
	test	esi, esi
	mov	eax, esi
	jne	SHORT $L85044
; Line 124
	lea	eax, DWORD PTR [ecx+4]
$L85044:
; Line 125
	mov	eax, DWORD PTR [eax+4]
; Line 130
	mov	ecx, esi
	test	eax, eax
	setle	bl
	dec	bl
	and	ebx, eax
	call	@msgcmd_remove_event@8
; Line 131
	push	0
	push	-2					; fffffffeH
	push	OFFSET FLAT:??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@ ; `string'
	push	esi
	call	_SMemFree@16
; Line 132
	mov	al, bl
	pop	esi
	pop	ebx
; Line 133
	pop	ecx
	ret	0
@msgcmd_delete_server_cmd_W@8 ENDP
_TEXT	ENDS
PUBLIC	@msgcmd_event_type@20
EXTRN	_SMemAlloc@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT @msgcmd_alloc_event@20
_TEXT	SEGMENT
_a3$ = 8
_a4$ = 12
_a5$ = 16
_v8$ = 8
@msgcmd_alloc_event@20 PROC NEAR			; COMDAT
; _a1$ = ecx
; _a2$ = edx
; Line 136
	push	ebp
	mov	ebp, esp
; Line 144
	mov	al, BYTE PTR _a5$[ebp]
	push	esi
	or	al, 8
	push	edi
; Line 146
	push	eax
	mov	eax, DWORD PTR _a4$[ebp]
	push	-2					; fffffffeH
	add	eax, 136				; 00000088H
	push	OFFSET FLAT:??_C@_0BE@IAHN@?4?$DPAUEXTERNMESSAGE?$EA?$EA?$AA@ ; `string'
	push	eax
	mov	edi, ecx
	call	_SMemAlloc@16
; Line 147
	xor	ecx, ecx
	cmp	eax, ecx
	je	SHORT $L85071
; Line 148
	mov	DWORD PTR [eax], ecx
; Line 149
	mov	DWORD PTR [eax+4], ecx
; Line 150
	mov	esi, eax
; Line 151
	jmp	SHORT $L85072
$L85071:
; Line 152
	xor	esi, esi
$L85072:
; Line 154
	cmp	DWORD PTR _a3$[ebp], ecx
	je	SHORT $L85073
; Line 155
	mov	edx, DWORD PTR _v8$[ebp]
	push	ecx
	push	DWORD PTR _a3$[ebp]
	mov	ecx, edi
	push	esi
	call	@msgcmd_event_type@20
$L85073:
; Line 156
	mov	eax, esi
	pop	edi
	pop	esi
; Line 157
	pop	ebp
	ret	12					; 0000000cH
@msgcmd_alloc_event@20 ENDP
_TEXT	ENDS
PUBLIC	??_C@_06IDPA@delete?$AA@			; `string'
;	COMDAT ??_C@_06IDPA@delete?$AA@
_DATA	SEGMENT
??_C@_06IDPA@delete?$AA@ DB 'delete', 00H		; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @msgcmd_remove_event@8
_TEXT	SEGMENT
@msgcmd_remove_event@8 PROC NEAR			; COMDAT
; _a1$ = ecx
; _a2$ = edx
; Line 160
	push	ebx
	push	esi
	mov	ebx, edx
	mov	esi, ecx
; Line 164
	call	@msgcmd_cleanup_extern_msg@4
; Line 165
	mov	ecx, esi
	call	@msgcmd_cleanup_extern_msg@4
; Line 166
	test	bl, 1
	je	SHORT $L85084
; Line 167
	test	esi, esi
	je	SHORT $L85084
; Line 168
	push	0
	push	-1
	push	OFFSET FLAT:??_C@_06IDPA@delete?$AA@	; `string'
	push	esi
	call	_SMemFree@16
$L85084:
	pop	esi
	pop	ebx
; Line 170
	ret	0
@msgcmd_remove_event@8 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @msgcmd_event_type@20
_TEXT	SEGMENT
_a3$ = 8
_a4$ = 12
_a5$ = 16
@msgcmd_event_type@20 PROC NEAR				; COMDAT
; _a1$ = ecx
; _a2$ = edx
; Line 173
	push	ebx
; Line 183
	mov	ebx, DWORD PTR _a3$[esp]
	push	esi
	push	edi
; Line 184
	test	ebx, ebx
	mov	edi, ecx
	mov	esi, ebx
	jne	SHORT $L85104
; Line 185
	lea	esi, DWORD PTR [edi+4]
$L85104:
; Line 186
	cmp	DWORD PTR [esi], 0
	je	SHORT $L85106
; Line 187
	mov	ecx, esi
	call	@msgcmd_cleanup_extern_msg@4
$L85106:
; Line 188
	mov	eax, DWORD PTR _a5$[esp+8]
; Line 189
	test	eax, eax
	jne	SHORT $L85109
; Line 190
	lea	eax, DWORD PTR [edi+4]
$L85109:
; Line 191
	cmp	DWORD PTR _a4$[esp+8], 1
	jne	SHORT $L85111
; Line 192
	mov	DWORD PTR [esi], eax
; Line 193
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], ecx
; Line 194
	mov	edx, DWORD PTR [eax+4]
; Line 195
	mov	ecx, DWORD PTR [edi]
; Line 196
	test	edx, edx
	jle	SHORT $L85114
; Line 197
	test	ecx, ecx
	jge	SHORT $L85115
; Line 198
	mov	edi, DWORD PTR [eax]
	mov	ecx, eax
	sub	ecx, DWORD PTR [edi+4]
$L85115:
; Line 199
	add	edx, ecx
; Line 200
	jmp	SHORT $L85118
$L85114:
; Line 201
	not	edx
$L85118:
; Line 203
	mov	DWORD PTR [edx], esi
; Line 204
	mov	DWORD PTR [eax+4], ebx
; Line 205
	jmp	SHORT $L85123
$L85111:
	cmp	DWORD PTR _a4$[esp+8], 2
	jne	SHORT $L85123
; Line 206
	mov	ecx, DWORD PTR [eax]
; Line 207
	mov	DWORD PTR [esi], ecx
; Line 208
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+4], edx
; Line 209
	mov	DWORD PTR [ecx+4], ebx
; Line 210
	mov	DWORD PTR [eax], esi
$L85123:
	pop	edi
	pop	esi
	pop	ebx
; Line 212
	ret	12					; 0000000cH
@msgcmd_event_type@20 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @msgcmd_cleanup_chatcmd_1@4
_TEXT	SEGMENT
@msgcmd_cleanup_chatcmd_1@4 PROC NEAR			; COMDAT
; _a1$ = ecx
; Line 215
	push	esi
	mov	esi, ecx
$L85134:
; Line 221
	mov	ecx, DWORD PTR [esi+8]
; Line 222
	test	ecx, ecx
	jle	SHORT $L85223
; Line 224
	call	@msgcmd_cleanup_extern_msg@4
; Line 220
	jmp	SHORT $L85134
$L85223:
	pop	esi
; Line 226
	ret	0
@msgcmd_cleanup_chatcmd_1@4 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @msgcmd_cleanup_extern_msg@4
_TEXT	SEGMENT
@msgcmd_cleanup_extern_msg@4 PROC NEAR			; COMDAT
; _extern_msgs$ = ecx
; Line 234
	mov	edx, DWORD PTR [ecx]
; Line 235
	test	edx, edx
	je	SHORT $L85145
; Line 236
	mov	eax, DWORD PTR [ecx+4]
; Line 237
	test	eax, eax
	jle	SHORT $L85147
; Line 238
	sub	eax, DWORD PTR [edx+4]
	add	eax, ecx
; Line 239
	jmp	SHORT $L85149
$L85147:
; Line 240
	not	eax
$L85149:
; Line 241
	mov	DWORD PTR [eax], edx
; Line 242
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 243
	and	DWORD PTR [ecx], 0
; Line 244
	and	DWORD PTR [ecx+4], 0
$L85145:
; Line 246
	ret	0
@msgcmd_cleanup_extern_msg@4 ENDP
_TEXT	ENDS
END
