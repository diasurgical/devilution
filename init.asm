; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.9044.0 

	TITLE	Source/init.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_01FDHG@?$CK?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02HMIE@?2?$CK?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PJCK@?4?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02OOND@?4?4?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06KCPA@?$CFs?2?$CFs?2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05GEGG@?$CFs?$CFs?2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CC@MAIM@Microsoft?5Office?5Shortcut?5Bar?4ln@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04KHOB@open?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BG@EBPD@Control?5Panel?2Desktop?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KMNA@ScreenSaveActive?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06CHEE@DIABLO?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CA@HMAI@Unable?5to?5register?5window?5class?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BN@KDEC@Unable?5to?5create?5main?5window?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@OLPJ@MOM?5Parent?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08DEJA@DiabloCD?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@KCJN@?2diabdat?4mpq?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NLMJ@ui_art?2title?4pcx?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CC@DHPO@Main?5program?5archive?3?5diabdat?4mp@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@INKO@DiabloInstall?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@LLKF@?2patch_rt?4mpq?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@PHBJ@Can?8t?5get?5program?5path?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OFIA@SFileSetBasePath?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@MKGA@Can?8t?5get?5program?5name?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_08IHGG@Archives?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PCFE@?2?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EDGH@version?5?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC ''
CRT$XCU	ENDS
;	COMDAT @init_cleanup@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _init_run_office_from_start_menu
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_run_office@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_disable_screensaver@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_create_window@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _init_kill_mom_parent
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _init_find_mom_parent
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _init_await_mom_parent_exit
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _init_archives
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_test_access@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_strip_trailing_slash@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_read_test_file@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _init_get_file_info
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _MainWndProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @init_activate_window@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WindowProc@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @SetWindowProc@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_gszVersionNumber
PUBLIC	_gszProductName
_DATA	SEGMENT
COMM	_fileinfo:BYTE:014H
COMM	_gbActive:DWORD
COMM	_diablo_exe_path:BYTE:0104H
COMM	_unused_mpq:DWORD
COMM	_patch_rt_mpq_path:BYTE:0104H
COMM	_CurrentProc:DWORD
COMM	_diabdat_mpq:DWORD
COMM	_diabdat_mpq_path:BYTE:0104H
COMM	_patch_rt_mpq:DWORD
COMM	_killed_mom_parent:DWORD
COMM	_screensaver_enabled_prev:BYTE
_gszVersionNumber DB 'internal version unknown', 00H
	ORG $+235
	ORG $+4
_gszProductName DB 'Diablo v1.09', 00H
	ORG $+247
_DATA	ENDS
PUBLIC	@init_cleanup@4
PUBLIC	_init_run_office_from_start_menu
PUBLIC	@init_disable_screensaver@4
EXTRN	_dx_cleanup:NEAR
EXTRN	_effects_cleanup_sfx:NEAR
EXTRN	_StormDestroy:NEAR
EXTRN	_UiDestroy:NEAR
EXTRN	_pfile_flush_W:NEAR
EXTRN	_SFileCloseArchive@4:NEAR
EXTRN	_NetClose:NEAR
EXTRN	_sound_cleanup:NEAR
EXTRN	@MI_Dummy@4:NEAR
EXTRN	__imp__ShowCursor@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @init_cleanup@4
_TEXT	SEGMENT
@init_cleanup@4 PROC NEAR				; COMDAT
; _show_cursor$ = ecx
; File Source/init.cpp
; Line 23
	push	edi
	mov	edi, ecx
; Line 24
	call	_pfile_flush_W
; Line 25
	xor	cl, cl
	call	@init_disable_screensaver@4
; Line 26
	call	_init_run_office_from_start_menu
; Line 28
	mov	eax, DWORD PTR _diabdat_mpq
	test	eax, eax
	je	SHORT $L84985
; Line 29
	push	eax
	call	_SFileCloseArchive@4
; Line 30
	and	DWORD PTR _diabdat_mpq, 0
$L84985:
; Line 32
	mov	eax, DWORD PTR _patch_rt_mpq
	test	eax, eax
	je	SHORT $L84987
; Line 33
	push	eax
	call	_SFileCloseArchive@4
; Line 34
	and	DWORD PTR _patch_rt_mpq, 0
$L84987:
; Line 36
	mov	eax, DWORD PTR _unused_mpq
	test	eax, eax
	je	SHORT $L84989
; Line 37
	push	eax
	call	_SFileCloseArchive@4
; Line 38
	and	DWORD PTR _unused_mpq, 0
$L84989:
; Line 41
	call	_UiDestroy
; Line 42
	call	_effects_cleanup_sfx
; Line 43
	call	_sound_cleanup
; Line 44
	call	_NetClose
; Line 45
	call	_dx_cleanup
; Line 46
	mov	ecx, edi
	call	@MI_Dummy@4
; Line 47
	call	_StormDestroy
; Line 49
	test	edi, edi
	pop	edi
	je	SHORT $L84991
; Line 50
	push	1
	call	DWORD PTR __imp__ShowCursor@4
$L84991:
; Line 51
	ret	0
@init_cleanup@4 ENDP
_TEXT	ENDS
PUBLIC	@init_run_office@4
EXTRN	__imp__GetDesktopWindow@0:NEAR
EXTRN	__imp__SHGetPathFromIDListA@8:NEAR
EXTRN	__imp__SHGetSpecialFolderLocation@12:NEAR
EXTRN	_memset:NEAR
; Function compile flags: /Ogsy
;	COMDAT _init_run_office_from_start_menu
_TEXT	SEGMENT
_pszPath$ = -260
_ppidl$ = -4
_init_run_office_from_start_menu PROC NEAR		; COMDAT
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
; Line 59
	cmp	DWORD PTR _killed_mom_parent, 0
	je	SHORT $L84997
; Line 61
	and	DWORD PTR _killed_mom_parent, 0
; Line 62
	push	256					; 00000100H
	lea	eax, DWORD PTR _pszPath$[ebp]
	push	0
	push	eax
	call	_memset
; Line 65
	and	DWORD PTR _ppidl$[ebp], 0
	add	esp, 12					; 0000000cH
; Line 66
	call	DWORD PTR __imp__GetDesktopWindow@0
; Line 67
	lea	ecx, DWORD PTR _ppidl$[ebp]
	push	ecx
	push	11					; 0000000bH
	push	eax
	call	DWORD PTR __imp__SHGetSpecialFolderLocation@12
	test	eax, eax
	jne	SHORT $L84997
; Line 68
	lea	eax, DWORD PTR _pszPath$[ebp]
	push	eax
	push	DWORD PTR _ppidl$[ebp]
	call	DWORD PTR __imp__SHGetPathFromIDListA@8
; Line 69
	lea	ecx, DWORD PTR _pszPath$[ebp]
	call	@init_run_office@4
$L84997:
; Line 72
	leave
	ret	0
_init_run_office_from_start_menu ENDP
_TEXT	ENDS
PUBLIC	??_C@_01FDHG@?$CK?$AA@				; `string'
PUBLIC	??_C@_02HMIE@?2?$CK?$AA@			; `string'
PUBLIC	??_C@_01PJCK@?4?$AA@				; `string'
PUBLIC	??_C@_02OOND@?4?4?$AA@				; `string'
PUBLIC	??_C@_06KCPA@?$CFs?2?$CFs?2?$AA@		; `string'
PUBLIC	??_C@_05GEGG@?$CFs?$CFs?2?$AA@			; `string'
PUBLIC	??_C@_0CC@MAIM@Microsoft?5Office?5Shortcut?5Bar?4ln@ ; `string'
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	??_C@_04KHOB@open?$AA@				; `string'
EXTRN	_sprintf:NEAR
EXTRN	__imp__FindFirstFileA@8:NEAR
EXTRN	__imp__FindNextFileA@8:NEAR
EXTRN	__imp__FindClose@4:NEAR
EXTRN	_strcpy:NEAR
EXTRN	_strcat:NEAR
EXTRN	_strcmp:NEAR
EXTRN	_strlen:NEAR
EXTRN	__imp__ShellExecuteA@24:NEAR
EXTRN	__strcmpi:NEAR
;	COMDAT ??_C@_00A@?$AA@
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??_C@_01FDHG@?$CK?$AA@
_DATA	SEGMENT
??_C@_01FDHG@?$CK?$AA@ DB '*', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_02HMIE@?2?$CK?$AA@
_DATA	SEGMENT
??_C@_02HMIE@?2?$CK?$AA@ DB '\*', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_01PJCK@?4?$AA@
_DATA	SEGMENT
??_C@_01PJCK@?4?$AA@ DB '.', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_02OOND@?4?4?$AA@
_DATA	SEGMENT
??_C@_02OOND@?4?4?$AA@ DB '..', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_05GEGG@?$CFs?$CFs?2?$AA@
_DATA	SEGMENT
??_C@_05GEGG@?$CFs?$CFs?2?$AA@ DB '%s%s\', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_06KCPA@?$CFs?2?$CFs?2?$AA@
_DATA	SEGMENT
??_C@_06KCPA@?$CFs?2?$CFs?2?$AA@ DB '%s\%s\', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CC@MAIM@Microsoft?5Office?5Shortcut?5Bar?4ln@
_DATA	SEGMENT
??_C@_0CC@MAIM@Microsoft?5Office?5Shortcut?5Bar?4ln@ DB 'Microsoft Office'
	DB	' Shortcut Bar.lnk', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_04KHOB@open?$AA@
_DATA	SEGMENT
??_C@_04KHOB@open?$AA@ DB 'open', 00H			; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @init_run_office@4
_TEXT	SEGMENT
_Directory$ = -840
_FileName$ = -580
_FindFileData$ = -320
@init_run_office@4 PROC NEAR				; COMDAT
; _dir$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 840				; 00000348H
	push	esi
	mov	esi, ecx
	push	edi
; Line 86
	lea	eax, DWORD PTR _FileName$[ebp]
	push	esi
	push	eax
	call	_strcpy
; Line 87
	cmp	BYTE PTR _FileName$[ebp], 0
	pop	ecx
	pop	ecx
	je	SHORT $L85008
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	_strlen
	cmp	BYTE PTR _Directory$[ebp+eax+259], 92	; 0000005cH
	pop	ecx
	jne	SHORT $L85008
; Line 88
	push	OFFSET FLAT:??_C@_01FDHG@?$CK?$AA@	; `string'
; Line 89
	jmp	SHORT $L85329
$L85008:
; Line 90
	push	OFFSET FLAT:??_C@_02HMIE@?2?$CK?$AA@	; `string'
$L85329:
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	_strcat
	pop	ecx
; Line 91
	lea	eax, DWORD PTR _FindFileData$[ebp]
	pop	ecx
	push	eax
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	edi, eax
; Line 92
	cmp	edi, -1
	je	$L85013
$L85014:
; Line 94
	test	BYTE PTR _FindFileData$[ebp], 16	; 00000010H
; Line 95
	lea	eax, DWORD PTR _FindFileData$[ebp+44]
	je	$L85017
	push	OFFSET FLAT:??_C@_01PJCK@?4?$AA@	; `string'
	push	eax
	call	_strcmp
	pop	ecx
	test	eax, eax
	pop	ecx
	je	$L85015
	lea	eax, DWORD PTR _FindFileData$[ebp+44]
	push	OFFSET FLAT:??_C@_02OOND@?4?4?$AA@	; `string'
	push	eax
	call	_strcmp
	pop	ecx
	test	eax, eax
	pop	ecx
	je	$L85015
; Line 97
	push	260					; 00000104H
	lea	eax, DWORD PTR _Directory$[ebp]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 98
	cmp	BYTE PTR [esi], 0
; Line 101
	je	SHORT $L85022
	push	esi
	call	_strlen
	cmp	BYTE PTR [eax+esi-1], 92		; 0000005cH
	pop	ecx
	jne	SHORT $L85022
; Line 104
	lea	eax, DWORD PTR _FindFileData$[ebp+44]
	push	eax
	push	esi
	push	OFFSET FLAT:??_C@_05GEGG@?$CFs?$CFs?2?$AA@ ; `string'
	jmp	SHORT $L85330
$L85022:
; Line 102
	lea	eax, DWORD PTR _FindFileData$[ebp+44]
	push	eax
	push	esi
	push	OFFSET FLAT:??_C@_06KCPA@?$CFs?2?$CFs?2?$AA@ ; `string'
$L85330:
	lea	eax, DWORD PTR _Directory$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 105
	lea	ecx, DWORD PTR _Directory$[ebp]
	call	@init_run_office@4
; Line 107
	jmp	SHORT $L85015
$L85017:
	push	OFFSET FLAT:??_C@_0CC@MAIM@Microsoft?5Office?5Shortcut?5Bar?4ln@ ; `string'
	push	eax
	call	__strcmpi
	pop	ecx
	test	eax, eax
	pop	ecx
	jne	SHORT $L85015
; Line 108
	call	DWORD PTR __imp__GetDesktopWindow@0
; Line 109
	lea	ecx, DWORD PTR _FindFileData$[ebp+44]
	push	1
	push	esi
	push	OFFSET FLAT:??_C@_00A@?$AA@		; `string'
	push	ecx
	push	OFFSET FLAT:??_C@_04KHOB@open?$AA@	; `string'
	push	eax
	call	DWORD PTR __imp__ShellExecuteA@24
$L85015:
; Line 111
	lea	eax, DWORD PTR _FindFileData$[ebp]
	push	eax
	push	edi
	call	DWORD PTR __imp__FindNextFileA@8
	test	eax, eax
	jne	$L85014
; Line 112
	push	edi
	call	DWORD PTR __imp__FindClose@4
$L85013:
	pop	edi
	pop	esi
; Line 114
	leave
	ret	0
@init_run_office@4 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@EBPD@Control?5Panel?2Desktop?$AA@	; `string'
PUBLIC	??_C@_0BB@KMNA@ScreenSaveActive?$AA@		; `string'
EXTRN	__imp__RegCloseKey@4:NEAR
EXTRN	__imp__RegOpenKeyExA@20:NEAR
EXTRN	__imp__RegQueryValueExA@24:NEAR
EXTRN	__imp__RegSetValueExA@24:NEAR
;	COMDAT ??_C@_0BG@EBPD@Control?5Panel?2Desktop?$AA@
_DATA	SEGMENT
??_C@_0BG@EBPD@Control?5Panel?2Desktop?$AA@ DB 'Control Panel\Desktop', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@KMNA@ScreenSaveActive?$AA@
_DATA	SEGMENT
??_C@_0BB@KMNA@ScreenSaveActive?$AA@ DB 'ScreenSaveActive', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @init_disable_screensaver@4
_TEXT	SEGMENT
_disable$ = -4
_Data$ = -32
_Type$ = -16
_cbData$ = -12
_phkResult$ = -8
@init_disable_screensaver@4 PROC NEAR			; COMDAT
; _disable$ = cl
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; Line 129
	lea	eax, DWORD PTR _phkResult$[ebp]
	push	ebx
	push	eax
	xor	ebx, ebx
	push	131103					; 0002001fH
	push	ebx
	push	OFFSET FLAT:??_C@_0BG@EBPD@Control?5Panel?2Desktop?$AA@ ; `string'
	push	-2147483647				; 80000001H
	mov	BYTE PTR _disable$[ebp], cl
	call	DWORD PTR __imp__RegOpenKeyExA@20
	test	eax, eax
	jne	SHORT $L85042
; Line 130
	cmp	BYTE PTR _disable$[ebp], bl
	push	esi
	mov	esi, OFFSET FLAT:??_C@_0BB@KMNA@ScreenSaveActive?$AA@ ; `string'
	je	SHORT $L85044
; Line 132
	lea	eax, DWORD PTR _cbData$[ebp]
	mov	DWORD PTR _cbData$[ebp], 16		; 00000010H
	push	eax
	lea	eax, DWORD PTR _Data$[ebp]
	push	eax
	lea	eax, DWORD PTR _Type$[ebp]
	push	eax
	push	ebx
	push	esi
	push	DWORD PTR _phkResult$[ebp]
	call	DWORD PTR __imp__RegQueryValueExA@24
	test	eax, eax
	jne	SHORT $L85046
; Line 133
	cmp	BYTE PTR _Data$[ebp], 48		; 00000030H
	setne	al
	mov	BYTE PTR _screensaver_enabled_prev, al
$L85046:
; Line 134
	xor	al, al
; Line 135
	jmp	SHORT $L85048
$L85044:
; Line 136
	mov	al, BYTE PTR _screensaver_enabled_prev
$L85048:
; Line 139
	cmp	al, bl
; Line 140
	push	2
	setne	al
	add	al, 48					; 00000030H
	mov	BYTE PTR _Data$[ebp+1], bl
	mov	BYTE PTR _Data$[ebp], al
	lea	eax, DWORD PTR _Data$[ebp]
	push	eax
	push	1
	push	ebx
	push	esi
	push	DWORD PTR _phkResult$[ebp]
	call	DWORD PTR __imp__RegSetValueExA@24
; Line 141
	push	DWORD PTR _phkResult$[ebp]
	call	DWORD PTR __imp__RegCloseKey@4
	pop	esi
$L85042:
	pop	ebx
; Line 143
	leave
	ret	0
@init_disable_screensaver@4 ENDP
_TEXT	ENDS
PUBLIC	@init_create_window@4
PUBLIC	_init_kill_mom_parent
PUBLIC	_init_await_mom_parent_exit
PUBLIC	_init_archives
PUBLIC	_WindowProc@16
PUBLIC	??_C@_06CHEE@DIABLO?$AA@			; `string'
PUBLIC	??_C@_0CA@HMAI@Unable?5to?5register?5window?5class?$AA@ ; `string'
PUBLIC	??_C@_0BN@KDEC@Unable?5to?5create?5main?5window?$AA@ ; `string'
EXTRN	__imp__RegisterClassExA@4:NEAR
EXTRN	__imp__CreateWindowExA@48:NEAR
EXTRN	__imp__ShowWindow@8:NEAR
EXTRN	@dx_init@4:NEAR
EXTRN	_ghInst:DWORD
EXTRN	__imp__LoadCursorA@8:NEAR
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	__imp__GetStockObject@4:NEAR
EXTRN	_BlackPalette:NEAR
EXTRN	__imp__LoadImageA@24:NEAR
EXTRN	__imp__UpdateWindow@4:NEAR
EXTRN	_pfile_init_save_directory:NEAR
EXTRN	_TermMsg:NEAR
EXTRN	@snd_init@4:NEAR
EXTRN	__imp__GetSystemMetrics@4:NEAR
;	COMDAT ??_C@_06CHEE@DIABLO?$AA@
_DATA	SEGMENT
??_C@_06CHEE@DIABLO?$AA@ DB 'DIABLO', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CA@HMAI@Unable?5to?5register?5window?5class?$AA@
_DATA	SEGMENT
??_C@_0CA@HMAI@Unable?5to?5register?5window?5class?$AA@ DB 'Unable to reg'
	DB	'ister window class', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BN@KDEC@Unable?5to?5create?5main?5window?$AA@
_DATA	SEGMENT
??_C@_0BN@KDEC@Unable?5to?5create?5main?5window?$AA@ DB 'Unable to create'
	DB	' main window', 00H				; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @init_create_window@4
_TEXT	SEGMENT
_wcex$ = -52
_nWidth$ = -4
@init_create_window@4 PROC NEAR				; COMDAT
; _nCmdShow$ = ecx
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
; Line 152
	call	_init_kill_mom_parent
; Line 153
	call	_pfile_init_save_directory
; Line 154
	push	48					; 00000030H
	xor	edi, edi
	pop	esi
	lea	eax, DWORD PTR _wcex$[ebp]
	push	esi
	push	edi
	push	eax
	call	_memset
; Line 158
	mov	eax, DWORD PTR _ghInst
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _wcex$[ebp], esi
	mov	DWORD PTR _wcex$[ebp+4], 3
; Line 159
	push	101					; 00000065H
	push	eax
	mov	DWORD PTR _wcex$[ebp+8], OFFSET FLAT:_WindowProc@16
	mov	DWORD PTR _wcex$[ebp+20], eax
	call	DWORD PTR __imp__LoadIconA@8
	mov	DWORD PTR _wcex$[ebp+24], eax
; Line 160
	push	32512					; 00007f00H
	push	edi
	call	DWORD PTR __imp__LoadCursorA@8
	mov	DWORD PTR _wcex$[ebp+28], eax
; Line 161
	push	4
	call	DWORD PTR __imp__GetStockObject@4
; Line 162
	mov	esi, OFFSET FLAT:??_C@_06CHEE@DIABLO?$AA@ ; `string'
	mov	DWORD PTR _wcex$[ebp+32], eax
; Line 164
	push	edi
	push	16					; 00000010H
	push	16					; 00000010H
	push	1
	push	101					; 00000065H
	mov	DWORD PTR _wcex$[ebp+36], esi
	push	DWORD PTR _ghInst
	mov	DWORD PTR _wcex$[ebp+40], esi
	call	DWORD PTR __imp__LoadImageA@24
	mov	DWORD PTR _wcex$[ebp+44], eax
; Line 165
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExA@4
	test	ax, ax
	jne	SHORT $L85069
; Line 166
	push	OFFSET FLAT:??_C@_0CA@HMAI@Unable?5to?5register?5window?5class?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85069:
	push	ebx
; Line 167
	mov	ebx, DWORD PTR __imp__GetSystemMetrics@4
	push	edi
	call	ebx
	mov	ecx, 640				; 00000280H
	cmp	eax, ecx
	jl	SHORT $L85071
; Line 168
	push	edi
	call	ebx
	mov	DWORD PTR _nWidth$[ebp], eax
; Line 169
	jmp	SHORT $L85072
$L85071:
; Line 170
	mov	DWORD PTR _nWidth$[ebp], ecx
$L85072:
; Line 171
	push	1
	call	ebx
	mov	ecx, 480				; 000001e0H
	cmp	eax, ecx
	jl	SHORT $L85073
; Line 172
	push	1
	call	ebx
; Line 173
	jmp	SHORT $L85074
$L85073:
; Line 174
	mov	eax, ecx
$L85074:
; Line 175
	push	edi
	push	DWORD PTR _ghInst
	push	edi
	push	edi
	push	eax
	push	DWORD PTR _nWidth$[ebp]
	push	edi
	push	edi
	push	-2147483648				; 80000000H
	push	esi
	push	esi
	push	edi
	call	DWORD PTR __imp__CreateWindowExA@48
	mov	esi, eax
; Line 176
	cmp	esi, edi
	pop	ebx
	jne	SHORT $L85078
; Line 177
	push	OFFSET FLAT:??_C@_0BN@KDEC@Unable?5to?5create?5main?5window?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85078:
; Line 178
	push	1
	push	esi
	call	DWORD PTR __imp__ShowWindow@8
; Line 179
	push	esi
	call	DWORD PTR __imp__UpdateWindow@4
; Line 180
	call	_init_await_mom_parent_exit
; Line 181
	mov	ecx, esi
	call	@dx_init@4
; Line 182
	call	_BlackPalette
; Line 183
	mov	ecx, esi
	call	@snd_init@4
; Line 184
	call	_init_archives
; Line 185
	mov	cl, 1
	call	@init_disable_screensaver@4
	pop	edi
	pop	esi
; Line 186
	leave
	ret	0
@init_create_window@4 ENDP
_TEXT	ENDS
PUBLIC	_init_find_mom_parent
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT _init_kill_mom_parent
_TEXT	SEGMENT
_init_kill_mom_parent PROC NEAR				; COMDAT
; Line 192
	call	_init_find_mom_parent
; Line 193
	test	eax, eax
	je	SHORT $L85082
; Line 194
	push	0
	push	0
	push	16					; 00000010H
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
; Line 195
	mov	DWORD PTR _killed_mom_parent, 1
$L85082:
; Line 197
	ret	0
_init_kill_mom_parent ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@OLPJ@MOM?5Parent?$AA@			; `string'
EXTRN	__imp__GetClassNameA@12:NEAR
EXTRN	__imp__GetWindow@8:NEAR
EXTRN	__imp__GetForegroundWindow@0:NEAR
;	COMDAT ??_C@_0L@OLPJ@MOM?5Parent?$AA@
_DATA	SEGMENT
??_C@_0L@OLPJ@MOM?5Parent?$AA@ DB 'MOM Parent', 00H	; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _init_find_mom_parent
_TEXT	SEGMENT
_ClassName$ = -256
_init_find_mom_parent PROC NEAR				; COMDAT
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	esi
; Line 206
	call	DWORD PTR __imp__GetForegroundWindow@0
	jmp	SHORT $L85347
$L85087:
; Line 210
	lea	eax, DWORD PTR _ClassName$[ebp]
	push	255					; 000000ffH
	push	eax
	push	esi
	call	DWORD PTR __imp__GetClassNameA@12
; Line 211
	lea	eax, DWORD PTR _ClassName$[ebp]
	push	OFFSET FLAT:??_C@_0L@OLPJ@MOM?5Parent?$AA@ ; `string'
	push	eax
	call	__strcmpi
	pop	ecx
	test	eax, eax
	pop	ecx
	je	SHORT $L85343
	push	2
	push	esi
	call	DWORD PTR __imp__GetWindow@8
$L85347:
	mov	esi, eax
	test	esi, esi
	jne	SHORT $L85087
$L85343:
; Line 214
	mov	eax, esi
	pop	esi
; Line 215
	leave
	ret	0
_init_find_mom_parent ENDP
_TEXT	ENDS
EXTRN	__imp__Sleep@4:NEAR
EXTRN	__imp__GetTickCount@0:NEAR
; Function compile flags: /Ogsy
;	COMDAT _init_await_mom_parent_exit
_TEXT	SEGMENT
_init_await_mom_parent_exit PROC NEAR			; COMDAT
; Line 218
	push	esi
; Line 221
	mov	esi, DWORD PTR __imp__GetTickCount@0
	push	edi
	call	esi
	mov	edi, eax
$L85095:
; Line 223
	call	_init_find_mom_parent
	test	eax, eax
	je	SHORT $L85097
; Line 225
	push	250					; 000000faH
	call	DWORD PTR __imp__Sleep@4
; Line 226
	call	esi
	sub	eax, edi
	cmp	eax, 4000				; 00000fa0H
	jbe	SHORT $L85095
$L85097:
	pop	edi
	pop	esi
; Line 227
	ret	0
_init_await_mom_parent_exit ENDP
_TEXT	ENDS
PUBLIC	@init_test_access@20
PUBLIC	_init_get_file_info
PUBLIC	??_C@_08DEJA@DiabloCD?$AA@			; `string'
PUBLIC	??_C@_0N@KCJN@?2diabdat?4mpq?$AA@		; `string'
PUBLIC	??_C@_0BB@NLMJ@ui_art?2title?4pcx?$AA@		; `string'
PUBLIC	??_C@_0CC@DHPO@Main?5program?5archive?3?5diabdat?4mp@ ; `string'
PUBLIC	??_C@_0O@INKO@DiabloInstall?$AA@		; `string'
PUBLIC	??_C@_0O@LLKF@?2patch_rt?4mpq?$AA@		; `string'
EXTRN	@WCloseFile@4:NEAR
EXTRN	@WOpenFile@12:NEAR
EXTRN	@FileErrDlg@4:NEAR
;	COMDAT ??_C@_08DEJA@DiabloCD?$AA@
_DATA	SEGMENT
??_C@_08DEJA@DiabloCD?$AA@ DB 'DiabloCD', 00H		; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@KCJN@?2diabdat?4mpq?$AA@
_DATA	SEGMENT
??_C@_0N@KCJN@?2diabdat?4mpq?$AA@ DB '\diabdat.mpq', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NLMJ@ui_art?2title?4pcx?$AA@
_DATA	SEGMENT
??_C@_0BB@NLMJ@ui_art?2title?4pcx?$AA@ DB 'ui_art\title.pcx', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CC@DHPO@Main?5program?5archive?3?5diabdat?4mp@
_DATA	SEGMENT
??_C@_0CC@DHPO@Main?5program?5archive?3?5diabdat?4mp@ DB 'Main program ar'
	DB	'chive: diabdat.mpq', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@INKO@DiabloInstall?$AA@
_DATA	SEGMENT
??_C@_0O@INKO@DiabloInstall?$AA@ DB 'DiabloInstall', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0O@LLKF@?2patch_rt?4mpq?$AA@
_DATA	SEGMENT
??_C@_0O@LLKF@?2patch_rt?4mpq?$AA@ DB '\patch_rt.mpq', 00H ; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _init_archives
_TEXT	SEGMENT
_a1$ = -4
_init_archives PROC NEAR				; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 239
	mov	esi, OFFSET FLAT:_diabdat_mpq_path
; Line 240
	mov	edi, OFFSET FLAT:_patch_rt_mpq_path
	mov	DWORD PTR _fileinfo, 20			; 00000014H
	mov	DWORD PTR _fileinfo+4, OFFSET FLAT:_gszVersionNumber
	mov	DWORD PTR _fileinfo+8, OFFSET FLAT:_diablo_exe_path
	mov	DWORD PTR _fileinfo+12, esi
	mov	DWORD PTR _fileinfo+16, edi
; Line 241
	call	_init_get_file_info
; Line 245
	push	1
	push	1000					; 000003e8H
	push	OFFSET FLAT:??_C@_08DEJA@DiabloCD?$AA@	; `string'
	mov	edx, OFFSET FLAT:??_C@_0N@KCJN@?2diabdat?4mpq?$AA@ ; `string'
	mov	ecx, esi
	call	@init_test_access@20
; Line 254
	push	1
	lea	edx, DWORD PTR _a1$[ebp]
	mov	ecx, OFFSET FLAT:??_C@_0BB@NLMJ@ui_art?2title?4pcx?$AA@ ; `string'
	mov	DWORD PTR _diabdat_mpq, eax
	call	@WOpenFile@12
	test	eax, eax
	jne	SHORT $L85103
; Line 255
	mov	ecx, OFFSET FLAT:??_C@_0CC@DHPO@Main?5program?5archive?3?5diabdat?4mp@ ; `string'
	call	@FileErrDlg@4
$L85103:
; Line 256
	mov	ecx, DWORD PTR _a1$[ebp]
	call	@WCloseFile@4
; Line 257
	push	0
	push	2000					; 000007d0H
	push	OFFSET FLAT:??_C@_0O@INKO@DiabloInstall?$AA@ ; `string'
	mov	edx, OFFSET FLAT:??_C@_0O@LLKF@?2patch_rt?4mpq?$AA@ ; `string'
	mov	ecx, edi
	call	@init_test_access@20
	pop	edi
	mov	DWORD PTR _patch_rt_mpq, eax
	pop	esi
; Line 258
	leave
	ret	0
_init_archives ENDP
_TEXT	ENDS
PUBLIC	@init_strip_trailing_slash@4
PUBLIC	@init_read_test_file@16
PUBLIC	??_C@_0BH@PHBJ@Can?8t?5get?5program?5path?$AA@	; `string'
PUBLIC	??_C@_0BB@OFIA@SFileSetBasePath?$AA@		; `string'
PUBLIC	??_C@_0BH@MKGA@Can?8t?5get?5program?5name?$AA@	; `string'
PUBLIC	??_C@_08IHGG@Archives?$AA@			; `string'
EXTRN	_strrchr:NEAR
EXTRN	_SRegLoadString@20:NEAR
EXTRN	__imp__GetCurrentDirectoryA@8:NEAR
EXTRN	_SFileSetBasePath@4:NEAR
EXTRN	_SFileOpenArchive@16:NEAR
EXTRN	__imp__GetModuleFileNameA@12:NEAR
;	COMDAT ??_C@_0BH@PHBJ@Can?8t?5get?5program?5path?$AA@
_DATA	SEGMENT
??_C@_0BH@PHBJ@Can?8t?5get?5program?5path?$AA@ DB 'Can''t get program pat'
	DB	'h', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BB@OFIA@SFileSetBasePath?$AA@
_DATA	SEGMENT
??_C@_0BB@OFIA@SFileSetBasePath?$AA@ DB 'SFileSetBasePath', 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BH@MKGA@Can?8t?5get?5program?5name?$AA@
_DATA	SEGMENT
??_C@_0BH@MKGA@Can?8t?5get?5program?5name?$AA@ DB 'Can''t get program nam'
	DB	'e', 00H					; `string'
_DATA	ENDS
;	COMDAT ??_C@_08IHGG@Archives?$AA@
_DATA	SEGMENT
??_C@_08IHGG@Archives?$AA@ DB 'Archives', 00H		; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT @init_test_access@20
_TEXT	SEGMENT
_mpq_name$ = -8
_reg_loc$ = 8
_flags$ = 12
_fs$ = 16
_Filename$ = -788
_Buffer$ = -528
_v15$ = -268
_archive$ = -4
@init_test_access@20 PROC NEAR				; COMDAT
; _mpq_path$ = ecx
; _mpq_name$ = edx
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 788				; 00000314H
	push	ebx
	push	esi
	push	edi
; Line 272
	lea	eax, DWORD PTR _Buffer$[ebp]
	mov	edi, 260				; 00000104H
	push	eax
	push	edi
	mov	DWORD PTR _mpq_name$[ebp], edx
	mov	esi, ecx
	call	DWORD PTR __imp__GetCurrentDirectoryA@8
	test	eax, eax
	jne	SHORT $L85126
; Line 273
	push	OFFSET FLAT:??_C@_0BH@PHBJ@Can?8t?5get?5program?5path?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85126:
; Line 274
	lea	ecx, DWORD PTR _Buffer$[ebp]
	call	@init_strip_trailing_slash@4
; Line 275
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	call	_SFileSetBasePath@4
	test	al, al
	jne	SHORT $L85128
; Line 276
	push	OFFSET FLAT:??_C@_0BB@OFIA@SFileSetBasePath?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85128:
; Line 277
	lea	eax, DWORD PTR _Filename$[ebp]
	push	edi
	push	eax
	push	DWORD PTR _ghInst
	call	DWORD PTR __imp__GetModuleFileNameA@12
	test	eax, eax
	jne	SHORT $L85130
; Line 278
	push	OFFSET FLAT:??_C@_0BH@MKGA@Can?8t?5get?5program?5name?$AA@ ; `string'
	call	_TermMsg
	pop	ecx
$L85130:
; Line 279
	lea	eax, DWORD PTR _Filename$[ebp]
	push	92					; 0000005cH
	push	eax
	call	_strrchr
; Line 280
	xor	ebx, ebx
	pop	ecx
	cmp	eax, ebx
	pop	ecx
	je	SHORT $L85132
; Line 281
	mov	BYTE PTR [eax], bl
$L85132:
; Line 282
	lea	ecx, DWORD PTR _Filename$[ebp]
	call	@init_strip_trailing_slash@4
; Line 283
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	push	esi
	call	_strcpy
; Line 284
	push	DWORD PTR _mpq_name$[ebp]
	push	esi
	call	_strcat
	add	esp, 16					; 00000010H
; Line 288
	lea	eax, DWORD PTR _archive$[ebp]
	push	eax
	push	ebx
	push	DWORD PTR _flags$[ebp]
	push	esi
	call	_SFileOpenArchive@16
	test	eax, eax
; Line 290
	jne	$L85358
; Line 291
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	lea	eax, DWORD PTR _Filename$[ebp]
	push	eax
	call	_strcmp
	pop	ecx
	test	eax, eax
	pop	ecx
	je	SHORT $L85135
; Line 292
	lea	eax, DWORD PTR _Filename$[ebp]
	push	eax
	push	esi
	call	_strcpy
; Line 293
	push	DWORD PTR _mpq_name$[ebp]
	push	esi
	call	_strcat
	add	esp, 16					; 00000010H
; Line 297
	lea	eax, DWORD PTR _archive$[ebp]
	push	eax
	push	ebx
	push	DWORD PTR _flags$[ebp]
	push	esi
	call	_SFileOpenArchive@16
	test	eax, eax
; Line 299
	jne	$L85358
$L85135:
; Line 302
	cmp	DWORD PTR _reg_loc$[ebp], ebx
	mov	BYTE PTR _v15$[ebp], bl
	je	SHORT $L85140
; Line 303
	lea	eax, DWORD PTR _v15$[ebp]
	push	edi
	push	eax
	push	ebx
	push	DWORD PTR _reg_loc$[ebp]
	push	OFFSET FLAT:??_C@_08IHGG@Archives?$AA@	; `string'
	call	_SRegLoadString@20
	test	eax, eax
	je	SHORT $L85140
; Line 304
	lea	ecx, DWORD PTR _v15$[ebp]
	call	@init_strip_trailing_slash@4
; Line 305
	lea	eax, DWORD PTR _v15$[ebp]
	push	eax
	push	esi
	call	_strcpy
; Line 306
	push	DWORD PTR _mpq_name$[ebp]
	push	esi
	call	_strcat
	add	esp, 16					; 00000010H
; Line 310
	lea	eax, DWORD PTR _archive$[ebp]
	push	eax
	push	ebx
	push	DWORD PTR _flags$[ebp]
	push	esi
	call	_SFileOpenArchive@16
	test	eax, eax
; Line 312
	jne	SHORT $L85358
$L85140:
; Line 315
	cmp	DWORD PTR _fs$[ebp], 1
	jne	SHORT $L85141
	mov	edx, DWORD PTR _mpq_name$[ebp]
	lea	eax, DWORD PTR _archive$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v15$[ebp]
	push	DWORD PTR _flags$[ebp]
	call	@init_read_test_file@16
	test	eax, eax
	je	SHORT $L85141
; Line 316
	lea	eax, DWORD PTR _v15$[ebp]
	push	eax
	push	esi
	call	_strcpy
	pop	ecx
	pop	ecx
$L85358:
; Line 317
	mov	eax, DWORD PTR _archive$[ebp]
	jmp	SHORT $L85118
$L85141:
; Line 319
	xor	eax, eax
$L85118:
	pop	edi
	pop	esi
	pop	ebx
; Line 320
	leave
	ret	12					; 0000000cH
@init_test_access@20 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT @init_strip_trailing_slash@4
_TEXT	SEGMENT
@init_strip_trailing_slash@4 PROC NEAR			; COMDAT
; _path$ = ecx
; Line 326
	push	92					; 0000005cH
	push	ecx
	call	_strrchr
	pop	ecx
; Line 327
	test	eax, eax
	pop	ecx
	je	SHORT $L85147
; Line 328
	cmp	BYTE PTR [eax+1], 0
	jne	SHORT $L85147
; Line 329
	and	BYTE PTR [eax], 0
$L85147:
; Line 332
	ret	0
@init_strip_trailing_slash@4 ENDP
_TEXT	ENDS
EXTRN	__imp__GetDriveTypeA@4:NEAR
EXTRN	__imp__GetLogicalDriveStringsA@8:NEAR
; Function compile flags: /Ogsy
;	COMDAT @init_read_test_file@16
_TEXT	SEGMENT
_flags$ = 8
_archive$ = 12
_v4$ = -4
_Buffer$ = -264
@init_read_test_file@16 PROC NEAR			; COMDAT
; _mpq_path$ = ecx
; _mpq_name$ = edx
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
; Line 345
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	edi
	mov	esi, 260				; 00000104H
	mov	edi, edx
	push	eax
	push	esi
	mov	ebx, ecx
	mov	DWORD PTR _v4$[ebp], edi
	call	DWORD PTR __imp__GetLogicalDriveStringsA@8
; Line 346
	test	eax, eax
	je	SHORT $L85164
	cmp	eax, esi
	ja	SHORT $L85164
; Line 348
	cmp	BYTE PTR [edi], 92			; 0000005cH
	jne	SHORT $L85167
$L85166:
; Line 349
	inc	DWORD PTR _v4$[ebp]
	mov	eax, DWORD PTR _v4$[ebp]
	cmp	BYTE PTR [eax], 92			; 0000005cH
	je	SHORT $L85166
$L85167:
; Line 351
	cmp	BYTE PTR _Buffer$[ebp], 0
	lea	esi, DWORD PTR _Buffer$[ebp]
; Line 352
	je	SHORT $L85164
$L85170:
; Line 355
	push	esi
	mov	edi, esi
	call	_strlen
	pop	ecx
	lea	esi, DWORD PTR [esi+eax+1]
; Line 356
	push	edi
	call	DWORD PTR __imp__GetDriveTypeA@4
	cmp	eax, 5
	jne	SHORT $L85173
; Line 357
	push	edi
	push	ebx
	call	_strcpy
; Line 358
	push	DWORD PTR _v4$[ebp]
	push	ebx
	call	_strcat
	add	esp, 16					; 00000010H
; Line 359
	push	DWORD PTR _archive$[ebp]
	push	1
	push	DWORD PTR _flags$[ebp]
	push	ebx
	call	_SFileOpenArchive@16
	test	eax, eax
	jne	SHORT $L85171
$L85173:
; Line 362
	cmp	BYTE PTR [esi], 0
; Line 353
	jne	SHORT $L85170
$L85164:
; Line 347
	xor	eax, eax
$L85156:
	pop	edi
	pop	esi
	pop	ebx
; Line 366
	leave
	ret	8
$L85171:
; Line 365
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85156
@init_read_test_file@16 ENDP
_TEXT	ENDS
PUBLIC	??_C@_01PCFE@?2?$AA@				; `string'
PUBLIC	??_C@_0BE@EDGH@version?5?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@ ; `string'
EXTRN	_GetFileVersionInfoSizeA@8:NEAR
EXTRN	_GetFileVersionInfoA@16:NEAR
EXTRN	_VerQueryValueA@16:NEAR
EXTRN	@DiabloAllocPtr@4:NEAR
EXTRN	@mem_free_dbg@4:NEAR
;	COMDAT ??_C@_01PCFE@?2?$AA@
_DATA	SEGMENT
??_C@_01PCFE@?2?$AA@ DB '\', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0BE@EDGH@version?5?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@
_DATA	SEGMENT
??_C@_0BE@EDGH@version?5?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@ DB 'version %d.%d'
	DB	'.%d.%d', 00H				; `string'
; Function compile flags: /Ogsy
_DATA	ENDS
;	COMDAT _init_get_file_info
_TEXT	SEGMENT
_uBytes$ = -12
_dwHandle$ = -8
_lpBuffer$ = -4
_init_get_file_info PROC NEAR				; COMDAT
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
; Line 377
	mov	esi, OFFSET FLAT:_diablo_exe_path
	push	260					; 00000104H
	push	esi
	push	DWORD PTR _ghInst
	call	DWORD PTR __imp__GetModuleFileNameA@12
	test	eax, eax
	je	SHORT $L85183
; Line 378
	lea	eax, DWORD PTR _dwHandle$[ebp]
	push	eax
	push	esi
	call	_GetFileVersionInfoSizeA@8
	mov	edi, eax
; Line 380
	test	edi, edi
	je	SHORT $L85183
	push	ebx
; Line 381
	mov	ecx, edi
	call	@DiabloAllocPtr@4
	mov	ebx, eax
; Line 382
	push	ebx
	push	edi
	push	0
	push	esi
	call	_GetFileVersionInfoA@16
	test	eax, eax
	je	SHORT $L85186
; Line 383
	lea	eax, DWORD PTR _uBytes$[ebp]
	push	eax
	lea	eax, DWORD PTR _lpBuffer$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_01PCFE@?2?$AA@	; `string'
	push	ebx
	call	_VerQueryValueA@16
	test	eax, eax
	je	SHORT $L85186
; Line 390
	mov	eax, DWORD PTR _lpBuffer$[ebp]
	mov	ecx, 65535				; 0000ffffH
	mov	edx, DWORD PTR [eax+20]
	and	edx, ecx
	push	edx
	movzx	edx, WORD PTR [eax+22]
	push	edx
	mov	edx, DWORD PTR [eax+16]
	movzx	eax, WORD PTR [eax+18]
	and	edx, ecx
	push	edx
	push	eax
	push	OFFSET FLAT:??_C@_0BE@EDGH@version?5?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@ ; `string'
	push	OFFSET FLAT:_gszVersionNumber
	call	_sprintf
	add	esp, 24					; 00000018H
$L85186:
; Line 392
	mov	ecx, ebx
	call	@mem_free_dbg@4
	pop	ebx
$L85183:
	pop	edi
	pop	esi
; Line 395
	leave
	ret	0
_init_get_file_info ENDP
_TEXT	ENDS
PUBLIC	_MainWndProc@16
PUBLIC	@init_activate_window@8
EXTRN	__imp__PostQuitMessage@4:NEAR
EXTRN	_ghMainWnd:DWORD
EXTRN	_drawpanflag:DWORD
EXTRN	_SDrawRealizePalette:NEAR
EXTRN	__imp__DefWindowProcA@16:NEAR
; Function compile flags: /Ogsy
;	COMDAT _MainWndProc@16
_TEXT	SEGMENT
_hWnd$ = 8
_Msg$ = 12
_wParam$ = 16
_lParam$ = 20
_MainWndProc@16 PROC NEAR				; COMDAT
; Line 398
	push	ebp
	mov	ebp, esp
	push	esi
; Line 399
	mov	esi, DWORD PTR _Msg$[ebp]
	push	edi
	mov	edi, DWORD PTR _hWnd$[ebp]
	cmp	esi, 20					; 00000014H
	jbe	SHORT $L85198
; Line 400
	cmp	esi, 28					; 0000001cH
	jne	SHORT $L85199
; Line 401
	mov	dl, BYTE PTR _wParam$[ebp]
	mov	ecx, edi
	call	@init_activate_window@8
; Line 402
	jmp	SHORT $L85206
$L85199:
; Line 403
	cmp	esi, 783				; 0000030fH
	jne	SHORT $L85201
; Line 404
	call	_SDrawRealizePalette
; Line 405
	xor	eax, eax
	inc	eax
	jmp	SHORT $L85197
$L85201:
; Line 407
	cmp	esi, 785				; 00000311H
	jne	SHORT $L85206
	cmp	DWORD PTR _wParam$[ebp], edi
	je	SHORT $L85206
; Line 408
	call	_SDrawRealizePalette
; Line 410
	jmp	SHORT $L85206
$L85198:
; Line 411
	mov	eax, esi
	dec	eax
	je	SHORT $L85210
	dec	eax
	je	SHORT $L85211
	sub	eax, 13					; 0000000dH
	je	SHORT $L85212
	dec	eax
	je	SHORT $L85213
	sub	eax, 4
	jne	SHORT $L85206
$L85213:
; Line 426
	xor	eax, eax
	jmp	SHORT $L85197
$L85212:
; Line 423
	mov	DWORD PTR _drawpanflag, 255		; 000000ffH
; Line 424
	jmp	SHORT $L85206
$L85211:
; Line 418
	xor	ecx, ecx
	inc	ecx
	call	@init_cleanup@4
; Line 419
	and	DWORD PTR _ghMainWnd, 0
; Line 420
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
; Line 421
	jmp	SHORT $L85206
$L85210:
; Line 415
	mov	DWORD PTR _ghMainWnd, edi
$L85206:
; Line 429
	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	esi
	push	edi
	call	DWORD PTR __imp__DefWindowProcA@16
$L85197:
	pop	edi
	pop	esi
; Line 430
	pop	ebp
	ret	16					; 00000010H
_MainWndProc@16 ENDP
_TEXT	ENDS
EXTRN	__imp__GetWindowLongA@8:NEAR
EXTRN	__imp__SetWindowLongA@12:NEAR
EXTRN	_fullscreen:DWORD
EXTRN	_ResetPal:NEAR
EXTRN	_UiAppActivate@4:NEAR
; Function compile flags: /Ogsy
;	COMDAT @init_activate_window@8
_TEXT	SEGMENT
@init_activate_window@8 PROC NEAR			; COMDAT
; _hWnd$ = ecx
; _bActive$ = dl
; Line 437
	movzx	eax, dl
	push	esi
; Line 438
	push	eax
	mov	esi, ecx
	mov	DWORD PTR _gbActive, eax
	call	_UiAppActivate@4
; Line 439
	push	-16					; fffffff0H
	push	esi
	call	DWORD PTR __imp__GetWindowLongA@8
; Line 441
	cmp	DWORD PTR _gbActive, 0
	je	SHORT $L85220
	cmp	DWORD PTR _fullscreen, 0
	je	SHORT $L85220
; Line 442
	and	eax, -524289				; fff7ffffH
; Line 443
	jmp	SHORT $L85221
$L85220:
; Line 444
	or	eax, 524288				; 00080000H
$L85221:
; Line 446
	push	eax
	push	-16					; fffffff0H
	push	esi
	call	DWORD PTR __imp__SetWindowLongA@12
; Line 448
	cmp	DWORD PTR _gbActive, 0
	pop	esi
	je	SHORT $L85222
; Line 449
	mov	DWORD PTR _drawpanflag, 255		; 000000ffH
; Line 450
	jmp	_ResetPal
$L85222:
; Line 452
	ret	0
@init_activate_window@8 ENDP
; Function compile flags: /Ogsy
_TEXT	ENDS
;	COMDAT _WindowProc@16
_TEXT	SEGMENT
_hWnd$ = 8
_Msg$ = 12
_wParam$ = 16
_lParam$ = 20
_WindowProc@16 PROC NEAR				; COMDAT
; Line 457
	push	ebp
	mov	ebp, esp
; Line 461
	push	DWORD PTR _lParam$[ebp]
	mov	eax, DWORD PTR _CurrentProc
	test	eax, eax
	push	DWORD PTR _wParam$[ebp]
	push	DWORD PTR _Msg$[ebp]
	push	DWORD PTR _hWnd$[ebp]
	je	SHORT $L85233
	call	eax
; Line 462
	jmp	SHORT $L85234
$L85233:
; Line 463
	call	_MainWndProc@16
$L85234:
; Line 465
	pop	ebp
	ret	16					; 00000010H
_WindowProc@16 ENDP
_TEXT	ENDS
PUBLIC	@SetWindowProc@4
; Function compile flags: /Ogsy
;	COMDAT @SetWindowProc@4
_TEXT	SEGMENT
@SetWindowProc@4 PROC NEAR				; COMDAT
; _NewProc$ = ecx
; Line 471
	mov	eax, DWORD PTR _CurrentProc
; Line 472
	mov	DWORD PTR _CurrentProc, ecx
; Line 474
	ret	0
@SetWindowProc@4 ENDP
_TEXT	ENDS
END
